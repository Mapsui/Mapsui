{
  "api/ConcurrentCollections.ConcurrentHashSet-1.html": {
    "href": "api/ConcurrentCollections.ConcurrentHashSet-1.html",
    "title": "Class ConcurrentHashSet<T>",
    "keywords": "Class ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection. Inheritance System.Object ConcurrentHashSet<T> Implements System.Collections.Generic.IReadOnlyCollection <T> System.Collections.Generic.ICollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ConcurrentCollections Assembly : Mapsui.dll Syntax public class ConcurrentHashSet<T> : IReadOnlyCollection<T>, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of the items in the collection. Remarks All public members of ConcurrentHashSet<T> are thread-safe and may be used concurrently from multiple threads. Constructors | Improve this Doc View Source ConcurrentHashSet() Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet() | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable{T} , has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . Exceptions Type Condition System.ArgumentNullException collection is a null reference. | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable , has the default concurrency level, has the default initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . System.Collections.Generic.IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentNullException collection is a null reference (Nothing in Visual Basic). | Improve this Doc View Source ConcurrentHashSet(IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEqualityComparer<T> comparer) Parameters Type Name Description System.Collections.Generic.IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. | Improve this Doc View Source ConcurrentHashSet(Int32, IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable , has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. System.Collections.Generic.IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . System.Collections.Generic.IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentNullException collection is a null reference. System.ArgumentOutOfRangeException concurrencyLevel is less than 1. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. System.Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. Exceptions Type Condition System.ArgumentOutOfRangeException concurrencyLevel is less than 1. System.ArgumentOutOfRangeException capacity is less than 0. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. System.Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. System.Collections.Generic.IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentOutOfRangeException concurrencyLevel is less than 1. -or- capacity is less than 0. Properties | Improve this Doc View Source Count Gets the number of items contained in the ConcurrentHashSet<T> . Declaration public int Count { get; } Property Value Type Description System.Int32 The number of items contained in the ConcurrentHashSet<T> . Remarks Count has snapshot semantics and represents the number of items in the ConcurrentHashSet<T> at the moment when Count was accessed. | Improve this Doc View Source IsEmpty Gets a value that indicates whether the ConcurrentHashSet<T> is empty. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean true if the ConcurrentHashSet<T> is empty; otherwise, false. Methods | Improve this Doc View Source Add(T) Adds the specified item to the ConcurrentHashSet<T> . Declaration public bool Add(T item) Parameters Type Name Description T item The item to add. Returns Type Description System.Boolean true if the items was added to the ConcurrentHashSet<T> successfully; false if it already exists. Exceptions Type Condition System.OverflowException The ConcurrentHashSet<T> contains too many items. | Improve this Doc View Source Clear() Removes all items from the ConcurrentHashSet<T> . Declaration public void Clear() | Improve this Doc View Source Contains(T) Determines whether the ConcurrentHashSet<T> contains the specified item. Declaration public bool Contains(T item) Parameters Type Name Description T item The item to locate in the ConcurrentHashSet<T> . Returns Type Description System.Boolean true if the ConcurrentHashSet<T> contains the item; otherwise, false. | Improve this Doc View Source GetEnumerator() Returns an enumerator that iterates through the ConcurrentHashSet<T> . Declaration public IEnumerator<T> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator <T> An enumerator for the ConcurrentHashSet<T> . Remarks The enumerator returned from the collection is safe to use concurrently with reads and writes to the collection, however it does not represent a moment-in-time snapshot of the collection. The contents exposed through the enumerator may contain modifications made to the collection after GetEnumerator() was called. | Improve this Doc View Source TryRemove(T) Attempts to remove the item from the ConcurrentHashSet<T> . Declaration public bool TryRemove(T item) Parameters Type Name Description T item The item to remove. Returns Type Description System.Boolean true if an item was removed successfully; otherwise, false. Explicit Interface Implementations | Improve this Doc View Source ICollection<T>.Add(T) Declaration void ICollection<T>.Add(T item) Parameters Type Name Description T item | Improve this Doc View Source ICollection<T>.CopyTo(T[], Int32) Declaration void ICollection<T>.CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array System.Int32 arrayIndex | Improve this Doc View Source ICollection<T>.IsReadOnly Declaration bool ICollection<T>.IsReadOnly { get; } Returns Type Description System.Boolean | Improve this Doc View Source ICollection<T>.Remove(T) Declaration bool ICollection<T>.Remove(T item) Parameters Type Name Description T item Returns Type Description System.Boolean | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/ConcurrentCollections.html": {
    "href": "api/ConcurrentCollections.html",
    "title": "Namespace ConcurrentCollections",
    "keywords": "Namespace ConcurrentCollections Classes ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Mapsui API",
    "keywords": "Mapsui API This is the API description of Mapsui"
  },
  "api/Mapsui.Animations.html": {
    "href": "api/Mapsui.Animations.html",
    "title": "Namespace Mapsui.Animations",
    "keywords": "Namespace Mapsui.Animations Interfaces IAnimatable"
  },
  "api/Mapsui.Animations.IAnimatable.html": {
    "href": "api/Mapsui.Animations.IAnimatable.html",
    "title": "Interface IAnimatable",
    "keywords": "Interface IAnimatable Namespace : Mapsui.Animations Assembly : Mapsui.dll Syntax public interface IAnimatable Methods | Improve this Doc View Source UpdateAnimations() Declaration bool UpdateAnimations() Returns Type Description System.Boolean Returns true if animations are running and a graphics update is needed."
  },
  "api/Mapsui.ChangeType.html": {
    "href": "api/Mapsui.ChangeType.html",
    "title": "Enum ChangeType",
    "keywords": "Enum ChangeType Namespace : Mapsui Assembly : Mapsui.dll Syntax public enum ChangeType Fields Name Description Continuous Continuous changes in Viewport state. Examples: Dragging the map During animations Mouse wheel changes Discrete Discrete changes in Viewport state. Examples: Plus and minus buttons. Map Initialization. Final change in an animation Touch-up after dragging. Final mouse wheel change"
  },
  "api/Mapsui.CoordinateSetter.html": {
    "href": "api/Mapsui.CoordinateSetter.html",
    "title": "Delegate CoordinateSetter",
    "keywords": "Delegate CoordinateSetter Namespace : Mapsui Assembly : Mapsui.dll Syntax public delegate void CoordinateSetter(double x, double y); Parameters Type Name Description System.Double x System.Double y"
  },
  "api/Mapsui.Extensions.AssemblyExtensions.html": {
    "href": "api/Mapsui.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions",
    "keywords": "Class AssemblyExtensions Inheritance System.Object AssemblyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class AssemblyExtensions Methods | Improve this Doc View Source GetAssemblyName(Assembly) Declaration public static string GetAssemblyName(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly Returns Type Description System.String | Improve this Doc View Source GetFullName(Assembly, String) Declaration public static string GetFullName(this Assembly assembly, string relativePathToEmbeddedResource) Parameters Type Name Description System.Reflection.Assembly assembly System.String relativePathToEmbeddedResource Returns Type Description System.String"
  },
  "api/Mapsui.Extensions.ConcurrentQueueExtensions.html": {
    "href": "api/Mapsui.Extensions.ConcurrentQueueExtensions.html",
    "title": "Class ConcurrentQueueExtensions",
    "keywords": "Class ConcurrentQueueExtensions Inheritance System.Object ConcurrentQueueExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class ConcurrentQueueExtensions Methods | Improve this Doc View Source Add<T>(ConcurrentQueue<T>, T) Declaration public static void Add<T>(this ConcurrentQueue<T> queue, T item) Parameters Type Name Description System.Collections.Concurrent.ConcurrentQueue <T> queue T item Type Parameters Name Description T | Improve this Doc View Source AddRange<T>(ConcurrentQueue<T>, IEnumerable<T>) Declaration public static void AddRange<T>(this ConcurrentQueue<T> queue, IEnumerable<T> itemsToAdd) Parameters Type Name Description System.Collections.Concurrent.ConcurrentQueue <T> queue System.Collections.Generic.IEnumerable <T> itemsToAdd Type Parameters Name Description T | Improve this Doc View Source Clear<T>(ConcurrentQueue<T>) Declaration public static void Clear<T>(this ConcurrentQueue<T> queue) Parameters Type Name Description System.Collections.Concurrent.ConcurrentQueue <T> queue Type Parameters Name Description T"
  },
  "api/Mapsui.Extensions.DoubleExtensions.html": {
    "href": "api/Mapsui.Extensions.DoubleExtensions.html",
    "title": "Class DoubleExtensions",
    "keywords": "Class DoubleExtensions Inheritance System.Object DoubleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class DoubleExtensions Methods | Improve this Doc View Source IsNanOrInfOrZero(Double) Declaration public static bool IsNanOrInfOrZero(this double target) Parameters Type Name Description System.Double target Returns Type Description System.Boolean"
  },
  "api/Mapsui.Extensions.FeatureExtensions.html": {
    "href": "api/Mapsui.Extensions.FeatureExtensions.html",
    "title": "Class FeatureExtensions",
    "keywords": "Class FeatureExtensions Inheritance System.Object FeatureExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class FeatureExtensions Methods | Improve this Doc View Source Copy(IFeature) Declaration public static IFeature Copy(this IFeature original) Parameters Type Name Description IFeature original Returns Type Description IFeature | Improve this Doc View Source Copy(IEnumerable<IFeature>) Declaration public static IEnumerable<IFeature> Copy(this IEnumerable<IFeature> original) Parameters Type Name Description System.Collections.Generic.IEnumerable < IFeature > original Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source Copy<T>(T) Declaration public static T Copy<T>(this T original) where T : IFeature Parameters Type Name Description T original Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ToDisplayText(IFeature) Declaration public static string ToDisplayText(this IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description System.String | Improve this Doc View Source ToDisplayText(IEnumerable<KeyValuePair<String, IEnumerable<IFeature>>>) Declaration public static string ToDisplayText(this IEnumerable<KeyValuePair<string, IEnumerable<IFeature>>> featureInfos) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.Collections.Generic.IEnumerable < IFeature >>> featureInfos Returns Type Description System.String"
  },
  "api/Mapsui.Extensions.FetchInfoExtensions.html": {
    "href": "api/Mapsui.Extensions.FetchInfoExtensions.html",
    "title": "Class FetchInfoExtensions",
    "keywords": "Class FetchInfoExtensions Inheritance System.Object FetchInfoExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class FetchInfoExtensions Methods | Improve this Doc View Source ToViewport(FetchInfo) Declaration public static Viewport ToViewport(this FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Viewport"
  },
  "api/Mapsui.Extensions.html": {
    "href": "api/Mapsui.Extensions.html",
    "title": "Namespace Mapsui.Extensions",
    "keywords": "Namespace Mapsui.Extensions Classes AssemblyExtensions ConcurrentQueueExtensions DoubleExtensions FeatureExtensions FetchInfoExtensions MPointExtensions StreamExtensions TupleExtensions TypeExtensions"
  },
  "api/Mapsui.Extensions.MPointExtensions.html": {
    "href": "api/Mapsui.Extensions.MPointExtensions.html",
    "title": "Class MPointExtensions",
    "keywords": "Class MPointExtensions Inheritance System.Object MPointExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class MPointExtensions Methods | Improve this Doc View Source ToFeatures(IEnumerable<MPoint>) Declaration public static IEnumerable<PointFeature> ToFeatures(this IEnumerable<MPoint> points) Parameters Type Name Description System.Collections.Generic.IEnumerable < MPoint > points Returns Type Description System.Collections.Generic.IEnumerable < PointFeature >"
  },
  "api/Mapsui.Extensions.StreamExtensions.html": {
    "href": "api/Mapsui.Extensions.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance System.Object StreamExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class StreamExtensions Methods | Improve this Doc View Source IsSvg(Stream) Detects if stream is svg stream Declaration public static bool IsSvg(this Stream stream) Parameters Type Name Description System.IO.Stream stream stream Returns Type Description System.Boolean true if is svg stream | Improve this Doc View Source IsXml(Byte[]) true if is Xml Declaration public static bool IsXml(this byte[] buffer) Parameters Type Name Description System.Byte [] buffer buffer Returns Type Description System.Boolean true if is xml | Improve this Doc View Source IsXml(Stream) Is Xml Declaration public static bool IsXml(this Stream stream) Parameters Type Name Description System.IO.Stream stream stream Returns Type Description System.Boolean true if is xml | Improve this Doc View Source ReadOneSearch(Stream, Byte[]) https://stackoverflow.com/questions/1471975/best-way-to-find-position-in-the-stream-where-given-byte-sequence-starts Declaration public static long ReadOneSearch(this Stream haystack, byte[] needle) Parameters Type Name Description System.IO.Stream haystack stream to search System.Byte [] needle pattern to find Returns Type Description System.Int64 position | Improve this Doc View Source ReadOneSearch(Stream, String) Declaration public static long ReadOneSearch(this Stream haystack, string needle) Parameters Type Name Description System.IO.Stream haystack System.String needle Returns Type Description System.Int64 | Improve this Doc View Source ToBytes(Stream) Declaration public static byte[] ToBytes(this Stream input) Parameters Type Name Description System.IO.Stream input Returns Type Description System.Byte []"
  },
  "api/Mapsui.Extensions.TupleExtensions.html": {
    "href": "api/Mapsui.Extensions.TupleExtensions.html",
    "title": "Class TupleExtensions",
    "keywords": "Class TupleExtensions Inheritance System.Object TupleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class TupleExtensions Methods | Improve this Doc View Source ToMPoint((Double x, Double y)) Declaration public static MPoint ToMPoint(this (double x, double y) coordinate) Parameters Type Name Description System.ValueTuple < System.Double , System.Double > coordinate Returns Type Description MPoint"
  },
  "api/Mapsui.Extensions.TypeExtensions.html": {
    "href": "api/Mapsui.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions",
    "keywords": "Class TypeExtensions Inheritance System.Object TypeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source LoadBitmapId(Type, String) Declaration public static int LoadBitmapId(this Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description System.Type typeInAssemblyOfEmbeddedResource System.String relativePathToEmbeddedResource Returns Type Description System.Int32"
  },
  "api/Mapsui.Fetcher.DataChangedEventArgs.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventArgs.html",
    "title": "Class DataChangedEventArgs",
    "keywords": "Class DataChangedEventArgs Inheritance System.Object System.EventArgs DataChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class DataChangedEventArgs : EventArgs Constructors | Improve this Doc View Source DataChangedEventArgs() Declaration public DataChangedEventArgs() | Improve this Doc View Source DataChangedEventArgs(Exception, Boolean, Object) Declaration public DataChangedEventArgs(Exception error, bool cancelled, object info) Parameters Type Name Description System.Exception error System.Boolean cancelled System.Object info | Improve this Doc View Source DataChangedEventArgs(Exception, Boolean, Object, String) Declaration public DataChangedEventArgs(Exception error, bool cancelled, object info, string layerName) Parameters Type Name Description System.Exception error System.Boolean cancelled System.Object info System.String layerName Properties | Improve this Doc View Source Cancelled Declaration public bool Cancelled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Error Declaration public Exception Error { get; } Property Value Type Description System.Exception | Improve this Doc View Source Info Declaration public object Info { get; } Property Value Type Description System.Object | Improve this Doc View Source LayerName Declaration public string LayerName { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Fetcher.DataChangedEventHandler.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventHandler.html",
    "title": "Delegate DataChangedEventHandler",
    "keywords": "Delegate DataChangedEventHandler Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public delegate void DataChangedEventHandler(object sender, DataChangedEventArgs e); Parameters Type Name Description System.Object sender DataChangedEventArgs e"
  },
  "api/Mapsui.Fetcher.Delayer.html": {
    "href": "api/Mapsui.Fetcher.Delayer.html",
    "title": "Class Delayer",
    "keywords": "Class Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. Inheritance System.Object Delayer Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class Delayer : IDisposable Constructors | Improve this Doc View Source Delayer() Declaration public Delayer() Properties | Improve this Doc View Source MillisecondsToWait The delay between two calls. Declaration public int MillisecondsToWait { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StartWithDelay Declaration public bool StartWithDelay { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source ExecuteDelayed(Action) Executes the method passed as argument with a possible delay. After a previous call the next call is delayed until 'MillisecondsToWait' has passed. When ExecuteRequest is called before the previous delayed action was executed the previous one will be cancelled. Declaration public void ExecuteDelayed(Action action) Parameters Type Name Description System.Action action The action to be executed after the possible delay Remarks When the previous call was more than 'MillisecondsToWait' ago there will be no delay. Implements System.IDisposable"
  },
  "api/Mapsui.Fetcher.FetchMachine.html": {
    "href": "api/Mapsui.Fetcher.FetchMachine.html",
    "title": "Class FetchMachine",
    "keywords": "Class FetchMachine Inheritance System.Object FetchMachine Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchMachine Constructors | Improve this Doc View Source FetchMachine(IFetchDispatcher, Int32) Declaration public FetchMachine(IFetchDispatcher fetchDispatcher, int numberOfWorkers = 4) Parameters Type Name Description IFetchDispatcher fetchDispatcher System.Int32 numberOfWorkers Methods | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop()"
  },
  "api/Mapsui.Fetcher.FetchWorker.html": {
    "href": "api/Mapsui.Fetcher.FetchWorker.html",
    "title": "Class FetchWorker",
    "keywords": "Class FetchWorker Inheritance System.Object FetchWorker Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchWorker : IDisposable Constructors | Improve this Doc View Source FetchWorker(IFetchDispatcher) Declaration public FetchWorker(IFetchDispatcher fetchDispatcher) Parameters Type Name Description IFetchDispatcher fetchDispatcher Fields | Improve this Doc View Source RestartCounter Declaration public static long RestartCounter Field Value Type Description System.Int64 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() Implements System.IDisposable"
  },
  "api/Mapsui.Fetcher.html": {
    "href": "api/Mapsui.Fetcher.html",
    "title": "Namespace Mapsui.Fetcher",
    "keywords": "Namespace Mapsui.Fetcher Classes DataChangedEventArgs Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. FetchMachine FetchWorker Interfaces IAsyncDataFetcher IFetchDispatcher Delegates DataChangedEventHandler"
  },
  "api/Mapsui.Fetcher.IAsyncDataFetcher.html": {
    "href": "api/Mapsui.Fetcher.IAsyncDataFetcher.html",
    "title": "Interface IAsyncDataFetcher",
    "keywords": "Interface IAsyncDataFetcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IAsyncDataFetcher Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration void ClearCache()"
  },
  "api/Mapsui.Fetcher.IFetchDispatcher.html": {
    "href": "api/Mapsui.Fetcher.IFetchDispatcher.html",
    "title": "Interface IFetchDispatcher",
    "keywords": "Interface IFetchDispatcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IFetchDispatcher Methods | Improve this Doc View Source TryTake(out Action) Declaration bool TryTake(out Action method) Parameters Type Name Description System.Action method Returns Type Description System.Boolean Events | Improve this Doc View Source PropertyChanged Declaration event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/Mapsui.html": {
    "href": "api/Mapsui.html",
    "title": "Namespace Mapsui",
    "keywords": "Namespace Mapsui Classes LimitedViewport Map Map class MPoint A MPoint is a 0-dimensional geometry and represents a single location in 2D coordinate space. A MPoint has a x coordinate value and a y-coordinate value. MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. MRaster MReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. MRect Bounding box type with double precision Navigator Viewport Viewport holds all information about the visible part of the map. Interfaces IFeature IMap INavigator IReadOnlyViewport IViewport Enums ChangeType Delegates CoordinateSetter"
  },
  "api/Mapsui.IFeature.html": {
    "href": "api/Mapsui.IFeature.html",
    "title": "Interface IFeature",
    "keywords": "Interface IFeature Inherited Members System.IDisposable.Dispose() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IFeature : IDisposable Properties | Improve this Doc View Source Extent Declaration MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Fields Declaration IEnumerable<string> Fields { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source Item[String] Declaration object this[string key] { get; set; } Parameters Type Name Description System.String key Property Value Type Description System.Object | Improve this Doc View Source RenderedGeometry Declaration IDictionary<IStyle, object> RenderedGeometry { get; } Property Value Type Description System.Collections.Generic.IDictionary < IStyle , System.Object > | Improve this Doc View Source Styles Declaration ICollection<IStyle> Styles { get; } Property Value Type Description System.Collections.Generic.ICollection < IStyle > Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description System.Action < System.Double , System.Double , CoordinateSetter > visit Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.IMap.html": {
    "href": "api/Mapsui.IMap.html",
    "title": "Interface IMap",
    "keywords": "Interface IMap Inherited Members IAnimatable.UpdateAnimations() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IMap : IAnimatable Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Extent Gets the extent of the map based on the extent of all the layers in the layers collection Declaration MRect Extent { get; } Property Value Type Description MRect Full map extent | Improve this Doc View Source Home Declaration Action<INavigator> Home { get; set; } Property Value Type Description System.Action < INavigator > | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Double > | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration ConcurrentQueue<IWidget> Widgets { get; } Property Value Type Description System.Collections.Concurrent.ConcurrentQueue < IWidget > Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration void ClearCache() | Improve this Doc View Source RefreshData(FetchInfo) Declaration void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/Mapsui.INavigator.html": {
    "href": "api/Mapsui.INavigator.html",
    "title": "Interface INavigator",
    "keywords": "Interface INavigator Inherited Members System.IDisposable.Dispose() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface INavigator : IDisposable Properties | Improve this Doc View Source Navigated Called each time one of the navigation methods is called Declaration EventHandler<ChangeType> Navigated { get; set; } Property Value Type Description System.EventHandler < ChangeType > Methods | Improve this Doc View Source CenterOn(MPoint, Int64, Easing) Change center of viewport Declaration void CenterOn(MPoint center, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint center New center point of viewport System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source CenterOn(Double, Double, Int64, Easing) Change center of viewport to X/Y coordinates Declaration void CenterOn(double x, double y, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x X value of the new center System.Double y Y value of the new center System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source FlingWith(Double, Double, Int64) Animate Fling of viewport Declaration void FlingWith(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description System.Double velocityX Screen VelocityX from SwipedEventArgs> System.Double velocityY Screen VelocityX from SwipedEventArgs> System.Int64 maxDuration Max duration of fling deceleration, changes based on total velocity> | Improve this Doc View Source FlyTo(MPoint, Double, Int64) Declaration void FlyTo(MPoint center, double maxResolution, long duration = 2000L) Parameters Type Name Description MPoint center System.Double maxResolution System.Int64 duration | Improve this Doc View Source NavigateTo(MPoint, Double, Int64, Easing) Change both center and resolution of the viewport Declaration void NavigateTo(MPoint center, double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint center The new center System.Double resolution The new resolution System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateTo(MRect, ScaleMethod, Int64, Easing) Navigate center of viewport to center of extent and change resolution Declaration void NavigateTo(MRect extent, ScaleMethod scaleMethod = ScaleMethod.Fit, long duration = 0L, Easing easing = null) Parameters Type Name Description MRect extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determine the resolution System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod, Int64, Easing) Navigate to a resolution, so such the map uses the fill method Declaration void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill, long duration = 0L, Easing easing = null) Parameters Type Name Description ScaleMethod scaleMethod System.Int64 duration Duration of animation in millisecondsScale method to use to determine resolution Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source RotateTo(Double, Int64, Easing) Change rotation of viewport Declaration void RotateTo(double rotation, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double rotation New rotation in degrees of viewport> System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(MPoint, Int64, Easing) Zoom in about a given point Declaration void ZoomIn(MPoint centerOfZoom, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center to use for zoom in System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(Int64, Easing) Zoom in to the next resolution Declaration void ZoomIn(long duration = 0L, Easing easing = null) Parameters Type Name Description System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(MPoint, Int64, Easing) Zoom out about a given point Declaration void ZoomOut(MPoint centerOfZoom, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center to use for zoom in System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(Int64, Easing) Zoom out to the next resolution Declaration void ZoomOut(long duration = 0L, Easing easing = null) Parameters Type Name Description System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, MPoint, Int64, Easing) Change resolution of viewport about the centerOfZoom Declaration void ZoomTo(double resolution, MPoint centerOfZoom, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution New resolution to use MPoint centerOfZoom screen center point to zoom at System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, Int64, Easing) Change resolution of viewport Declaration void ZoomTo(double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution New resolution to use System.Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state"
  },
  "api/Mapsui.IReadOnlyViewport.html": {
    "href": "api/Mapsui.IReadOnlyViewport.html",
    "title": "Interface IReadOnlyViewport",
    "keywords": "Interface IReadOnlyViewport Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IReadOnlyViewport Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration double CenterX { get; } Property Value Type Description System.Double | Improve this Doc View Source CenterY Declaration double CenterY { get; } Property Value Type Description System.Double | Improve this Doc View Source Extent MRect of viewport in map coordinates respecting Rotation Declaration MRect Extent { get; } Property Value Type Description MRect Remarks This MRect is horizontally and vertically aligned, even if the viewport is rotated. So this MRect perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration double Resolution { get; } Property Value Type Description System.Double Remarks The Resolution in Mapsui is what is often called zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration double Rotation { get; } Property Value Type Description System.Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration double Width { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source ScreenToWorld(MPoint) Converts a point in screen pixels to one in map units, respecting rotation Declaration MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Coordinate in map units Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration MPoint ScreenToWorld(double x, double y) Parameters Type Name Description System.Double x Screen position x coordinate System.Double y Screen position y coordinate Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorldXY(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration (double worldX, double worldY) ScreenToWorldXY(double x, double y) Parameters Type Name Description System.Double x Screen position x coordinate System.Double y Screen position y coordinate Returns Type Description System.ValueTuple < System.Double , System.Double > Tuple of x and y in world coordintes | Improve this Doc View Source WorldToScreen(MPoint) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description System.ValueTuple < System.Double , System.Double > The x and y in screen pixels | Improve this Doc View Source WorldToScreenXY(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description System.ValueTuple < System.Double , System.Double > Tuple of x and y in screen coordinates Events | Improve this Doc View Source ViewportChanged Declaration event PropertyChangedEventHandler ViewportChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler"
  },
  "api/Mapsui.IViewport.html": {
    "href": "api/Mapsui.IViewport.html",
    "title": "Interface IViewport",
    "keywords": "Interface IViewport Inherited Members IReadOnlyViewport.ViewportChanged IReadOnlyViewport.Center IReadOnlyViewport.CenterX IReadOnlyViewport.CenterY IReadOnlyViewport.Resolution IReadOnlyViewport.Extent IReadOnlyViewport.Width IReadOnlyViewport.Height IReadOnlyViewport.Rotation IReadOnlyViewport.HasSize IReadOnlyViewport.IsRotated IReadOnlyViewport.ScreenToWorld(MPoint) IReadOnlyViewport.ScreenToWorld(Double, Double) IReadOnlyViewport.ScreenToWorldXY(Double, Double) IReadOnlyViewport.WorldToScreen(MPoint) IReadOnlyViewport.WorldToScreen(Double, Double) IReadOnlyViewport.WorldToScreenXY(Double, Double) IReadOnlyViewport.WorldToScreenUnrotated(Double, Double) IAnimatable.UpdateAnimations() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IViewport : IReadOnlyViewport, IAnimatable Methods | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description System.Collections.Generic.List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration void SetCenter(MReadOnlyPoint center, long duration = 0L, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center System.Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration void SetCenter(double x, double y, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration void SetCenterAndResolution(double x, double y, double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration void SetResolution(double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration void SetRotation(double rotation, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double rotation System.Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Moving the position of viewport to a new one Declaration void Transform(MPoint position, MPoint previousPosition, double deltaResolution = 1, double deltaRotation = 0) Parameters Type Name Description MPoint position Current center of touch MPoint previousPosition Previous center of touch System.Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) System.Double deltaRotation Change of rotation Extension Methods ViewportExtensions.ToSKMatrix(IViewport)"
  },
  "api/Mapsui.Layers.AnimatedLayers.AnimatedFeatures.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.AnimatedFeatures.html",
    "title": "Class AnimatedFeatures",
    "keywords": "Class AnimatedFeatures Inheritance System.Object AnimatedFeatures Implements IAnimatable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public class AnimatedFeatures : IAnimatable Constructors | Improve this Doc View Source AnimatedFeatures() Declaration public AnimatedFeatures() Properties | Improve this Doc View Source AnimationDuration Declaration public int AnimationDuration { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DistanceThreshold When the distance between the current and the previous position is larger than the DistanceThreshold it will not be animated. The default is Double.MaxValue Declaration public double DistanceThreshold { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Function Declaration public EasingFunction Function { get; set; } Property Value Type Description EasingFunction | Improve this Doc View Source IdField Declaration public string IdField { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddFeatures(IEnumerable<PointFeature>) Declaration public void AddFeatures(IEnumerable<PointFeature> features) Parameters Type Name Description System.Collections.Generic.IEnumerable < PointFeature > features | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description System.Boolean Implements IAnimatable"
  },
  "api/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html",
    "title": "Class AnimatedPointLayer",
    "keywords": "Class AnimatedPointLayer Inheritance System.Object BaseLayer AnimatedPointLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public class AnimatedPointLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source AnimatedPointLayer(IProvider<PointFeature>) Declaration public AnimatedPointLayer(IProvider<PointFeature> dataSource) Parameters Type Name Description IProvider < PointFeature > dataSource Properties | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides BaseLayer.RefreshData(FetchInfo) | Improve this Doc View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description System.Boolean Overrides BaseLayer.UpdateAnimations() | Improve this Doc View Source UpdateData() Declaration public void UpdateData() Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.Layers.AnimatedLayers.EasingFunction.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.EasingFunction.html",
    "title": "Enum EasingFunction",
    "keywords": "Enum EasingFunction Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public enum EasingFunction Fields Name Description CubicEaseOut Linear"
  },
  "api/Mapsui.Layers.AnimatedLayers.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.html",
    "title": "Namespace Mapsui.Layers.AnimatedLayers",
    "keywords": "Namespace Mapsui.Layers.AnimatedLayers Classes AnimatedFeatures AnimatedPointLayer Enums EasingFunction"
  },
  "api/Mapsui.Layers.BaseFeature.html": {
    "href": "api/Mapsui.Layers.BaseFeature.html",
    "title": "Class BaseFeature",
    "keywords": "Class BaseFeature Inheritance System.Object BaseFeature PointFeature RasterFeature RectFeature Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public abstract class BaseFeature : IDisposable Constructors | Improve this Doc View Source BaseFeature() Declaration public BaseFeature() | Improve this Doc View Source BaseFeature(BaseFeature) Declaration public BaseFeature(BaseFeature baseFeature) Parameters Type Name Description BaseFeature baseFeature Properties | Improve this Doc View Source Fields Declaration public IEnumerable<string> Fields { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source Item[String] Declaration public virtual object this[string key] { get; set; } Parameters Type Name Description System.String key Property Value Type Description System.Object | Improve this Doc View Source RenderedGeometry Declaration public IDictionary<IStyle, object> RenderedGeometry { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < IStyle , System.Object > | Improve this Doc View Source Styles Declaration public ICollection<IStyle> Styles { get; set; } Property Value Type Description System.Collections.Generic.ICollection < IStyle > Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() Implements System.IDisposable"
  },
  "api/Mapsui.Layers.BaseLayer.html": {
    "href": "api/Mapsui.Layers.BaseLayer.html",
    "title": "Class BaseLayer",
    "keywords": "Class BaseLayer Inheritance System.Object BaseLayer AnimatedPointLayer ImageLayer Layer MemoryLayer RasterizingLayer WritableLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public abstract class BaseLayer : ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source BaseLayer() Creates a BaseLayer without a name Declaration protected BaseLayer() | Improve this Doc View Source BaseLayer(String) Creates a BaseLayer with a name Declaration protected BaseLayer(string name) Parameters Type Name Description System.String name Name for this layer Properties | Improve this Doc View Source Attribution Attribution for layer Declaration public Hyperlink Attribution { get; set; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration public bool Busy { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Extent Returns the envelope of all available data in the layer Declaration public virtual MRect Extent { get; protected set; } Property Value Type Description MRect | Improve this Doc View Source Id Numerical Id of layer Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration public bool IsMapInfoLayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Name Name of layer Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Opacity Opacity of layer Declaration public double Opacity { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Resolutions List of native resolutions Declaration public virtual IReadOnlyList<double> Resolutions { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration public IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration public object Tag { get; set; } Property Value Type Description System.Object Methods | Improve this Doc View Source DataHasChanged() Declaration public void DataHasChanged() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration public abstract IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box System.Double resolution Resolution of viewport Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source GetLayerStyles(ILayer) Get a layer's styles Declaration public static IEnumerable<IStyle> GetLayerStyles(ILayer layer) Parameters Type Name Description ILayer layer Layer, for which styles should be returned Returns Type Description System.Collections.Generic.IEnumerable < IStyle > Enumerable with styles belonging to layer | Improve this Doc View Source OnDataChanged(DataChangedEventArgs) Declaration protected void OnDataChanged(DataChangedEventArgs args) Parameters Type Name Description DataChangedEventArgs args | Improve this Doc View Source OnPropertyChanged(String) Declaration protected virtual void OnPropertyChanged(string name) Parameters Type Name Description System.String name | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration public abstract void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source UpdateAnimations() Declaration public virtual bool UpdateAnimations() Returns Type Description System.Boolean Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.Layers.FetchInfo.html": {
    "href": "api/Mapsui.Layers.FetchInfo.html",
    "title": "Class FetchInfo",
    "keywords": "Class FetchInfo Inheritance System.Object FetchInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class FetchInfo Constructors | Improve this Doc View Source FetchInfo(FetchInfo) Declaration public FetchInfo(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source FetchInfo(MRect, Double, String, ChangeType) Declaration public FetchInfo(MRect extent, double resolution, string crs = null, ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description MRect extent System.Double resolution System.String crs ChangeType changeType Properties | Improve this Doc View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Improve this Doc View Source CRS Declaration public string CRS { get; } Property Value Type Description System.String | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Resolution Declaration public double Resolution { get; } Property Value Type Description System.Double Extension Methods FetchInfoExtensions.ToViewport(FetchInfo)"
  },
  "api/Mapsui.Layers.html": {
    "href": "api/Mapsui.Layers.html",
    "title": "Namespace Mapsui.Layers",
    "keywords": "Namespace Mapsui.Layers Classes BaseFeature BaseLayer FetchInfo ImageLayer Layer LayerCollection LayerCollectionChangedEventArgs MemoryLayer A layer to use, when DataSource doesn't fetch anything because it is already in memory PointFeature RasterFeature RasterizingLayer RectFeature WritableLayer Interfaces IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. ILayer Interface for map layers Delegates LayerCollection.LayerAddedEventHandler LayerCollection.LayerCollectionChangedEventHandler LayerCollection.LayerMovedEventHandler LayerCollection.LayerRemovedEventHandler"
  },
  "api/Mapsui.Layers.IFeatureInfo.html": {
    "href": "api/Mapsui.Layers.IFeatureInfo.html",
    "title": "Interface IFeatureInfo",
    "keywords": "Interface IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface IFeatureInfo Methods | Improve this Doc View Source GetFeatureInfo(IReadOnlyViewport, Double, Double, Action<IDictionary<String, IEnumerable<IFeature>>>) Declaration void GetFeatureInfo(IReadOnlyViewport viewport, double x, double y, Action<IDictionary<string, IEnumerable<IFeature>>> callback) Parameters Type Name Description IReadOnlyViewport viewport System.Double x System.Double y System.Action < System.Collections.Generic.IDictionary < System.String , System.Collections.Generic.IEnumerable < IFeature >>> callback"
  },
  "api/Mapsui.Layers.ILayer.html": {
    "href": "api/Mapsui.Layers.ILayer.html",
    "title": "Interface ILayer",
    "keywords": "Interface ILayer Interface for map layers Inherited Members IAnimatable.UpdateAnimations() System.ComponentModel.INotifyPropertyChanged.PropertyChanged System.IDisposable.Dispose() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface ILayer : IAnimatable, INotifyPropertyChanged, IDisposable Properties | Improve this Doc View Source Attribution Attribution for layer Declaration Hyperlink Attribution { get; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration bool Busy { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Extent Gets the MRect of the entire layer. Can be null if there are no features in the layer. Declaration MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Id Numerical Id of layer Declaration int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration bool IsMapInfoLayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration double MaxVisible { get; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration double MinVisible { get; } Property Value Type Description System.Double | Improve this Doc View Source Name Name of layer Declaration string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Opacity Opacity of layer Declaration double Opacity { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Resolutions List of native resolutions Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration object Tag { get; set; } Property Value Type Description System.Object Methods | Improve this Doc View Source DataHasChanged() To indicate the data withing the layer has changed. This triggers a DataChanged event. This is necessary for situations where the layer can not know about changes to it's data as in the case of editing of a geometry. Declaration void DataHasChanged() | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box System.Double resolution Resolution of viewport Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo Events | Improve this Doc View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler"
  },
  "api/Mapsui.Layers.ImageLayer.html": {
    "href": "api/Mapsui.Layers.ImageLayer.html",
    "title": "Class ImageLayer",
    "keywords": "Class ImageLayer Inheritance System.Object BaseLayer ImageLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged IAsyncDataFetcher System.IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Extent BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class ImageLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IAsyncDataFetcher, IDisposable Constructors | Improve this Doc View Source ImageLayer(String) Declaration public ImageLayer(string layerName) Parameters Type Name Description System.String layerName Properties | Improve this Doc View Source DataSource Declaration public IProvider<IFeature> DataSource { get; set; } Property Value Type Description IProvider < IFeature > | Improve this Doc View Source FetchDelay Delay before fetching a new wms image from the server after the view has changed. Specified in milliseconds. Declaration public int FetchDelay { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides BaseLayer.Dispose(Boolean) | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides BaseLayer.RefreshData(FetchInfo) Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged IAsyncDataFetcher System.IDisposable"
  },
  "api/Mapsui.Layers.Layer.html": {
    "href": "api/Mapsui.Layers.Layer.html",
    "title": "Class Layer",
    "keywords": "Class Layer Inheritance System.Object BaseLayer Layer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable IAsyncDataFetcher Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class Layer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, IAsyncDataFetcher Constructors | Improve this Doc View Source Layer() Create a new layer Declaration public Layer() | Improve this Doc View Source Layer(String) Create layer with name Declaration public Layer(string layerName) Parameters Type Name Description System.String layerName Name to use for layer Properties | Improve this Doc View Source Animations Declaration public List<Func<bool>> Animations { get; } Property Value Type Description System.Collections.Generic.List < System.Func < System.Boolean >> | Improve this Doc View Source DataSource Data source for this layer Declaration public IProvider<IFeature> DataSource { get; set; } Property Value Type Description IProvider < IFeature > | Improve this Doc View Source Delayer Declaration public Delayer Delayer { get; } Property Value Type Description Delayer | Improve this Doc View Source Extent Returns the extent of the layer Declaration public override MRect Extent { get; } Property Value Type Description MRect Bounding box corresponding to the extent of the features in the layer Overrides BaseLayer.Extent | Improve this Doc View Source FetchingPostponedInMilliseconds Time to wait before fetching data Declaration public int FetchingPostponedInMilliseconds { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SymbolStyle Declaration public SymbolStyle SymbolStyle { get; set; } Property Value Type Description SymbolStyle Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent System.Double resolution Resolution of viewport Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo Overrides BaseLayer.RefreshData(FetchInfo) | Improve this Doc View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description System.Boolean Overrides BaseLayer.UpdateAnimations() Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable IAsyncDataFetcher"
  },
  "api/Mapsui.Layers.LayerCollection.html": {
    "href": "api/Mapsui.Layers.LayerCollection.html",
    "title": "Class LayerCollection",
    "keywords": "Class LayerCollection Inheritance System.Object LayerCollection Implements System.Collections.Generic.IEnumerable < ILayer > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class LayerCollection : IEnumerable<ILayer>, IEnumerable Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public ILayer this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ILayer Methods | Improve this Doc View Source Add(ILayer[]) Declaration public void Add(params ILayer[] layers) Parameters Type Name Description ILayer [] layers | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(ILayer) Declaration public bool Contains(ILayer item) Parameters Type Name Description ILayer item Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(ILayer[], Int32) Declaration public void CopyTo(ILayer[] array, int arrayIndex) Parameters Type Name Description ILayer [] array System.Int32 arrayIndex | Improve this Doc View Source FindLayer(String) Declaration public IEnumerable<ILayer> FindLayer(string layername) Parameters Type Name Description System.String layername Returns Type Description System.Collections.Generic.IEnumerable < ILayer > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ILayer> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < ILayer > | Improve this Doc View Source Insert(Int32, ILayer[]) Declaration public void Insert(int index, params ILayer[] layers) Parameters Type Name Description System.Int32 index ILayer [] layers | Improve this Doc View Source Modify(IEnumerable<ILayer>, IEnumerable<ILayer>) Declaration public void Modify(IEnumerable<ILayer> layersToRemove, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layersToRemove System.Collections.Generic.IEnumerable < ILayer > layersToAdd | Improve this Doc View Source Modify(Func<ILayer, Boolean>, IEnumerable<ILayer>) Declaration public void Modify(Func<ILayer, bool> removePredicate, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description System.Func < ILayer , System.Boolean > removePredicate System.Collections.Generic.IEnumerable < ILayer > layersToAdd | Improve this Doc View Source Move(Int32, ILayer) Declaration public void Move(int index, ILayer layer) Parameters Type Name Description System.Int32 index ILayer layer | Improve this Doc View Source Remove(ILayer[]) Declaration public bool Remove(params ILayer[] layers) Parameters Type Name Description ILayer [] layers Returns Type Description System.Boolean | Improve this Doc View Source Remove(Func<ILayer, Boolean>) Declaration public bool Remove(Func<ILayer, bool> predicate) Parameters Type Name Description System.Func < ILayer , System.Boolean > predicate Returns Type Description System.Boolean Events | Improve this Doc View Source Changed Declaration public event LayerCollection.LayerCollectionChangedEventHandler Changed Event Type Type Description LayerCollection.LayerCollectionChangedEventHandler | Improve this Doc View Source LayerAdded Declaration public event LayerCollection.LayerAddedEventHandler LayerAdded Event Type Type Description LayerCollection.LayerAddedEventHandler | Improve this Doc View Source LayerMoved Declaration public event LayerCollection.LayerMovedEventHandler LayerMoved Event Type Type Description LayerCollection.LayerMovedEventHandler | Improve this Doc View Source LayerRemoved Declaration public event LayerCollection.LayerRemovedEventHandler LayerRemoved Event Type Type Description LayerCollection.LayerRemovedEventHandler Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html",
    "title": "Delegate LayerCollection.LayerAddedEventHandler",
    "keywords": "Delegate LayerCollection.LayerAddedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerAddedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html",
    "title": "Delegate LayerCollection.LayerCollectionChangedEventHandler",
    "keywords": "Delegate LayerCollection.LayerCollectionChangedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerCollectionChangedEventHandler(object sender, LayerCollectionChangedEventArgs args); Parameters Type Name Description System.Object sender LayerCollectionChangedEventArgs args"
  },
  "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerMovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerMovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerMovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerRemovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerRemovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerRemovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollectionChangedEventArgs.html": {
    "href": "api/Mapsui.Layers.LayerCollectionChangedEventArgs.html",
    "title": "Class LayerCollectionChangedEventArgs",
    "keywords": "Class LayerCollectionChangedEventArgs Inheritance System.Object System.EventArgs LayerCollectionChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class LayerCollectionChangedEventArgs : EventArgs Constructors | Improve this Doc View Source LayerCollectionChangedEventArgs(IEnumerable<ILayer>, IEnumerable<ILayer>, IEnumerable<ILayer>) Declaration public LayerCollectionChangedEventArgs(IEnumerable<ILayer> added = null, IEnumerable<ILayer> removed = null, IEnumerable<ILayer> moved = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > added System.Collections.Generic.IEnumerable < ILayer > removed System.Collections.Generic.IEnumerable < ILayer > moved Properties | Improve this Doc View Source AddedLayers Declaration public IEnumerable<ILayer> AddedLayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ILayer > | Improve this Doc View Source MovedLayers Declaration public IEnumerable<ILayer> MovedLayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ILayer > | Improve this Doc View Source RemovedLayers Declaration public IEnumerable<ILayer> RemovedLayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ILayer >"
  },
  "api/Mapsui.Layers.MemoryLayer.html": {
    "href": "api/Mapsui.Layers.MemoryLayer.html",
    "title": "Class MemoryLayer",
    "keywords": "Class MemoryLayer A layer to use, when DataSource doesn't fetch anything because it is already in memory Inheritance System.Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class MemoryLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source MemoryLayer() Create a new layer Declaration public MemoryLayer() | Improve this Doc View Source MemoryLayer(String) Create layer with name Declaration public MemoryLayer(string layerName) Parameters Type Name Description System.String layerName Name to use for layer Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source DataSource Declaration public IProvider<IFeature> DataSource { get; set; } Property Value Type Description IProvider < IFeature > | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides BaseLayer.RefreshData(FetchInfo) Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.Layers.PointFeature.html": {
    "href": "api/Mapsui.Layers.PointFeature.html",
    "title": "Class PointFeature",
    "keywords": "Class PointFeature Inheritance System.Object BaseFeature PointFeature Implements IFeature System.IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class PointFeature : BaseFeature, IFeature, IDisposable Constructors | Improve this Doc View Source PointFeature(PointFeature) Declaration public PointFeature(PointFeature pointFeature) Parameters Type Name Description PointFeature pointFeature | Improve this Doc View Source PointFeature(MPoint) Declaration public PointFeature(MPoint point) Parameters Type Name Description MPoint point | Improve this Doc View Source PointFeature(Double, Double) Declaration public PointFeature(double x, double y) Parameters Type Name Description System.Double x System.Double y Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Point Declaration public MPoint Point { get; } Property Value Type Description MPoint Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description System.Action < System.Double , System.Double , CoordinateSetter > visit Implements IFeature System.IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.RasterFeature.html": {
    "href": "api/Mapsui.Layers.RasterFeature.html",
    "title": "Class RasterFeature",
    "keywords": "Class RasterFeature Inheritance System.Object BaseFeature RasterFeature Implements IFeature System.IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RasterFeature : BaseFeature, IFeature, IDisposable Constructors | Improve this Doc View Source RasterFeature(RasterFeature) Declaration public RasterFeature(RasterFeature rasterFeature) Parameters Type Name Description RasterFeature rasterFeature | Improve this Doc View Source RasterFeature(MRaster) Declaration public RasterFeature(MRaster raster) Parameters Type Name Description MRaster raster Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Raster Declaration public MRaster Raster { get; } Property Value Type Description MRaster Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description System.Action < System.Double , System.Double , CoordinateSetter > visit Implements IFeature System.IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.RasterizingLayer.html": {
    "href": "api/Mapsui.Layers.RasterizingLayer.html",
    "title": "Class RasterizingLayer",
    "keywords": "Class RasterizingLayer Inheritance System.Object BaseLayer RasterizingLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable IAsyncDataFetcher Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RasterizingLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, IAsyncDataFetcher Constructors | Improve this Doc View Source RasterizingLayer(ILayer, Int32, Double, IRenderer, Double, Boolean, Single) Creates a RasterizingLayer which rasterizes a layer for performance Declaration public RasterizingLayer(ILayer layer, int delayBeforeRasterize = 1000, double renderResolutionMultiplier = 1, IRenderer rasterizer = null, double overscanRatio = 1, bool onlyRerasterizeIfOutsideOverscan = false, float pixelDensity = 1F) Parameters Type Name Description ILayer layer The Layer to be rasterized System.Int32 delayBeforeRasterize Delay after viewport change to start re-rasterizing System.Double renderResolutionMultiplier IRenderer rasterizer Rasterizer to use. null will use the default System.Double overscanRatio The ratio of the size of the rasterized output to the current viewport System.Boolean onlyRerasterizeIfOutsideOverscan Set the rasterization policy. false will trigger a rasterization on every viewport change. true will trigger a re-rasterization only if the viewport moves outside the existing rasterization. System.Single pixelDensity Properties | Improve this Doc View Source ChildLayer Declaration public ILayer ChildLayer { get; } Property Value Type Description ILayer | Improve this Doc View Source Delayer Declaration public Delayer Delayer { get; } Property Value Type Description Delayer | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Improve this Doc View Source SymbolSize Declaration public static double SymbolSize { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides BaseLayer.RefreshData(FetchInfo) Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable IAsyncDataFetcher"
  },
  "api/Mapsui.Layers.RectFeature.html": {
    "href": "api/Mapsui.Layers.RectFeature.html",
    "title": "Class RectFeature",
    "keywords": "Class RectFeature Inheritance System.Object BaseFeature RectFeature Implements IFeature System.IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RectFeature : BaseFeature, IFeature, IDisposable Constructors | Improve this Doc View Source RectFeature(RectFeature) Declaration public RectFeature(RectFeature rectFeature) Parameters Type Name Description RectFeature rectFeature | Improve this Doc View Source RectFeature(MRect) Declaration public RectFeature(MRect rect) Parameters Type Name Description MRect rect Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Rect Declaration public MRect Rect { get; set; } Property Value Type Description MRect Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description System.Action < System.Double , System.Double , CoordinateSetter > visit Implements IFeature System.IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.WritableLayer.html": {
    "href": "api/Mapsui.Layers.WritableLayer.html",
    "title": "Class WritableLayer",
    "keywords": "Class WritableLayer Inheritance System.Object BaseLayer WritableLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class WritableLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Properties | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Improve this Doc View Source Add(IFeature) Declaration public void Add(IFeature feature) Parameters Type Name Description IFeature feature | Improve this Doc View Source AddRange(IEnumerable<IFeature>) Declaration public void AddRange(IEnumerable<IFeature> features) Parameters Type Name Description System.Collections.Generic.IEnumerable < IFeature > features | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(IFeature) Declaration public IFeature Find(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description IFeature | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public override void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides BaseLayer.RefreshData(FetchInfo) | Improve this Doc View Source TryRemove(IFeature, Func<IFeature, IFeature, Boolean>) Tries to remove a feature. Declaration public bool TryRemove(IFeature feature, Func<IFeature, IFeature, bool> compare = null) Parameters Type Name Description IFeature feature Feature to remove System.Func < IFeature , IFeature , System.Boolean > compare Optional method to compare the feature with any of the other features in the list. If omitted a reference compare is done. Returns Type Description System.Boolean Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.LimitedViewport.html": {
    "href": "api/Mapsui.LimitedViewport.html",
    "title": "Class LimitedViewport",
    "keywords": "Class LimitedViewport Inheritance System.Object LimitedViewport Implements IViewport IReadOnlyViewport IAnimatable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class LimitedViewport : IViewport, IReadOnlyViewport, IAnimatable Constructors | Improve this Doc View Source LimitedViewport() Declaration public LimitedViewport() Properties | Improve this Doc View Source Center Declaration public MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration public double CenterX { get; } Property Value Type Description System.Double | Improve this Doc View Source CenterY Declaration public double CenterY { get; } Property Value Type Description System.Double | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated Declaration public bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Limiter Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source Map Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Resolution Declaration public double Resolution { get; } Property Value Type Description System.Double | Improve this Doc View Source Rotation Declaration public double Rotation { get; } Property Value Type Description System.Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source ScreenToWorld(MPoint) Declaration public MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Returns Type Description MPoint | Improve this Doc View Source ScreenToWorld(Double, Double) Declaration public MPoint ScreenToWorld(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description MPoint | Improve this Doc View Source ScreenToWorldXY(Double, Double) Declaration public (double worldX, double worldY) ScreenToWorldXY(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration public void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description System.Collections.Generic.List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration public void SetCenter(MReadOnlyPoint center, long duration = 0L, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center System.Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration public virtual void SetCenter(double x, double y, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration public virtual void SetCenterAndResolution(double x, double y, double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration public void SetResolution(double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration public void SetRotation(double rotation, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double rotation System.Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Declaration public void Transform(MPoint position, MPoint previousPosition, double deltaResolution = 1, double deltaRotation = 0) Parameters Type Name Description MPoint position MPoint previousPosition System.Double deltaResolution System.Double deltaRotation | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description System.Boolean | Improve this Doc View Source WorldToScreen(MPoint) Declaration public MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Returns Type Description MPoint | Improve this Doc View Source WorldToScreen(Double, Double) Declaration public MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX System.Double worldY Returns Type Description MPoint | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Declaration public (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX System.Double worldY Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source WorldToScreenXY(Double, Double) Declaration public (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description System.Double worldX System.Double worldY Returns Type Description System.ValueTuple < System.Double , System.Double > Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler ViewportChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IViewport IReadOnlyViewport IAnimatable Extension Methods ViewportExtensions.ToSKMatrix(IViewport)"
  },
  "api/Mapsui.Logging.html": {
    "href": "api/Mapsui.Logging.html",
    "title": "Namespace Mapsui.Logging",
    "keywords": "Namespace Mapsui.Logging Classes Logger Enums LogLevel"
  },
  "api/Mapsui.Logging.Logger.html": {
    "href": "api/Mapsui.Logging.Logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance System.Object Logger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public static class Logger Properties | Improve this Doc View Source LogDelegate Declaration public static Action<LogLevel, string, Exception> LogDelegate { get; set; } Property Value Type Description System.Action < LogLevel , System.String , System.Exception > Methods | Improve this Doc View Source Log(LogLevel, String, Exception) Declaration public static void Log(LogLevel level, string message, Exception exception = null) Parameters Type Name Description LogLevel level System.String message System.Exception exception"
  },
  "api/Mapsui.Logging.LogLevel.html": {
    "href": "api/Mapsui.Logging.LogLevel.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public enum LogLevel Fields Name Description Debug Error Information Trace Warning"
  },
  "api/Mapsui.Map.html": {
    "href": "api/Mapsui.Map.html",
    "title": "Class Map",
    "keywords": "Class Map Map class Inheritance System.Object Map Implements System.ComponentModel.INotifyPropertyChanged IMap IAnimatable System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Map : INotifyPropertyChanged, IMap, IAnimatable, IDisposable Remarks Map holds all map related infos like the target CRS, layers, widgets and so on. Constructors | Improve this Doc View Source Map() Initializes a new map Declaration public Map() Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Extent Gets the extent of the map based on the extent of all the layers in the layers collection Declaration public MRect Extent { get; } Property Value Type Description MRect Full map extent | Improve this Doc View Source Home Declaration public Action<INavigator> Home { get; set; } Property Value Type Description System.Action < INavigator > | Improve this Doc View Source HoverLayers Declaration [Obsolete(\"Use your own hover event and call MapControl.GetMapInfo\", true)] public IList<ILayer> HoverLayers { get; } Property Value Type Description System.Collections.Generic.IList < ILayer > | Improve this Doc View Source InfoLayers Declaration [Obsolete(\"Use ILayer.IsMapInfoLayer instead\", true)] public IList<ILayer> InfoLayers { get; } Property Value Type Description System.Collections.Generic.IList < ILayer > | Improve this Doc View Source Initialized To register if the initial Home call has been done. Declaration public bool Initialized { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Limiter Limit the extent to which the user can navigate Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source PanLock When true the user can not pan (move) the map. Declaration public bool PanLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration public IReadOnlyList<double> Resolutions { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Double > | Improve this Doc View Source RotationLock When true the user can not zoom into the map Declaration public bool RotationLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration public ConcurrentQueue<IWidget> Widgets { get; } Property Value Type Description System.Collections.Concurrent.ConcurrentQueue < IWidget > | Improve this Doc View Source ZoomLock When true the user an not rotate the map Declaration public bool ZoomLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration public void ClearCache() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source GetWidgetsOfMapAndLayers() Declaration public IEnumerable<IWidget> GetWidgetsOfMapAndLayers() Returns Type Description System.Collections.Generic.IEnumerable < IWidget > | Improve this Doc View Source OnInfo(MapInfoEventArgs) This method is to invoke the Info event from the Map. This method is called by the MapControl/MapView and should usually not be called from user code. Declaration public void OnInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Improve this Doc View Source RefreshData(FetchInfo) Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description System.Boolean Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source Hover Declaration [Obsolete(\"Use your own hover event instead and call MapControl.GetMapInfo\", true)] public event EventHandler<MapInfoEventArgs> Hover Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source RefreshGraphics Declaration [Obsolete(\"Use PropertyChanged instead\", true)] public event EventHandler RefreshGraphics Event Type Type Description System.EventHandler Implements System.ComponentModel.INotifyPropertyChanged IMap IAnimatable System.IDisposable"
  },
  "api/Mapsui.MPoint.html": {
    "href": "api/Mapsui.MPoint.html",
    "title": "Class MPoint",
    "keywords": "Class MPoint A MPoint is a 0-dimensional geometry and represents a single location in 2D coordinate space. A MPoint has a x coordinate value and a y-coordinate value. Inheritance System.Object MPoint Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MPoint Constructors | Improve this Doc View Source MPoint() Declaration public MPoint() | Improve this Doc View Source MPoint(MPoint) Copy constructor Declaration public MPoint(MPoint point) Parameters Type Name Description MPoint point | Improve this Doc View Source MPoint(Double, Double) Initializes a new MPoint Declaration public MPoint(double x, double y) Parameters Type Name Description System.Double x X coordinate System.Double y Y coordinate | Improve this Doc View Source MPoint(Double[]) Create a new point by a double[] array Declaration public MPoint(double[] point) Parameters Type Name Description System.Double [] point Properties | Improve this Doc View Source Item[UInt32] Returns part of coordinate. Index 0 = X, Index 1 = Y Declaration public virtual double this[uint index] { get; set; } Parameters Type Name Description System.UInt32 index Property Value Type Description System.Double | Improve this Doc View Source MRect The minimum bounding box for this Geometry. Declaration public MRect MRect { get; } Property Value Type Description MRect | Improve this Doc View Source NumOrdinates Returns the number of ordinates for this point Declaration public virtual int NumOrdinates { get; } Property Value Type Description System.Int32 | Improve this Doc View Source X Gets or sets the X coordinate of the point Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Gets or sets the Y coordinate of the point Declaration public double Y { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source AsPoint() Returns a 2D MPoint instance from this Declaration public MPoint AsPoint() Returns Type Description MPoint MPoint | Improve this Doc View Source Clone() This method must be overridden using 'public new [derived_data_type] Clone()' Declaration public MPoint Clone() Returns Type Description MPoint Clone | Improve this Doc View Source CompareTo(MPoint) Comparator used for ordering point first by ascending X, then by ascending Y. Declaration public virtual int CompareTo(MPoint other) Parameters Type Name Description MPoint other Returns Type Description System.Int32 | Improve this Doc View Source Contains(MPoint) Declaration public bool Contains(MPoint point) Parameters Type Name Description MPoint point Returns Type Description System.Boolean | Improve this Doc View Source Distance(MPoint) Returns the distance between this geometry instance and another geometry, as measured in the spatial reference system of this instance. Declaration public double Distance(MPoint point) Parameters Type Name Description MPoint point Returns Type Description System.Double | Improve this Doc View Source Distance(MRect) Returns the distance between this point and a MRect Declaration public double Distance(MRect box) Parameters Type Name Description MRect box Returns Type Description System.Double | Improve this Doc View Source Equals(MPoint) Checks whether this instance is spatially equal to the MPoint 'o' Declaration public virtual bool Equals(MPoint p) Parameters Type Name Description MPoint p MPoint to compare to Returns Type Description System.Boolean | Improve this Doc View Source FromDMS(Double, Double, Double, Double, Double, Double) Returns a point based on degrees, minutes and seconds notation. For western or southern coordinates, add minus '-' in front of all longitude and/or latitude values Declaration public static MPoint FromDMS(double longDegrees, double longMinutes, double longSeconds, double latDegrees, double latMinutes, double latSeconds) Parameters Type Name Description System.Double longDegrees Longitude degrees System.Double longMinutes Longitude minutes System.Double longSeconds Longitude seconds System.Double latDegrees Latitude degrees System.Double latMinutes Latitude minutes System.Double latSeconds Latitude seconds Returns Type Description MPoint MPoint | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . Overrides System.Object.GetHashCode() | Improve this Doc View Source Offset(Double, Double) Calculates a new point by translating this point by the specified offset Declaration public MPoint Offset(double offsetX, double offsetY) Parameters Type Name Description System.Double offsetX Offset to translate in X axis System.Double offsetY Offset to translate in Y axis Returns Type Description MPoint Returns the offset point | Improve this Doc View Source Rotate(Double, MPoint) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, MPoint center) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) MPoint center MPoint about which to rotate Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source Rotate(Double, Double, Double) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) System.Double centerX X coordinate of point about which to rotate System.Double centerY Y coordinate of point about which to rotate Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source ToDoubleArray() exports a point into a 2-dimensional double array Declaration public double[] ToDoubleArray() Returns Type Description System.Double [] Operators | Improve this Doc View Source Addition(MPoint, MPoint) Vector + Vector Declaration public static MPoint operator +(MPoint v1, MPoint v2) Parameters Type Name Description MPoint v1 Vector MPoint v2 Vector Returns Type Description MPoint | Improve this Doc View Source Multiply(MPoint, Double) Vector * Scalar Declaration public static MPoint operator *(MPoint m, double d) Parameters Type Name Description MPoint m Vector System.Double d Scalar (double) Returns Type Description MPoint | Improve this Doc View Source Subtraction(MPoint, MPoint) Vector - Vector Declaration public static MPoint operator -(MPoint v1, MPoint v2) Parameters Type Name Description MPoint v1 Vector MPoint v2 Vector Returns Type Description MPoint Cross product Extension Methods PointExtensions.ToDeviceIndependentUnits(MPoint, Single) PositionExtensions.ToForms(MPoint) PositionExtensions.ToNative(MPoint)"
  },
  "api/Mapsui.MQuad.html": {
    "href": "api/Mapsui.MQuad.html",
    "title": "Class MQuad",
    "keywords": "Class MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. Inheritance System.Object MQuad Implements System.IEquatable < MQuad > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MQuad : IEquatable<MQuad> Remarks The sides do not have to be parallel to the two axes of the coordinate system. If this has been rotated, the 'BottomLeft' vertex may not actually be the min point in x/y. Constructors | Improve this Doc View Source MQuad() Declaration public MQuad() | Improve this Doc View Source MQuad(MPoint, MPoint, MPoint, MPoint) Declaration public MQuad(MPoint bottomLeft, MPoint topLeft, MPoint topRight, MPoint bottomRight) Parameters Type Name Description MPoint bottomLeft MPoint topLeft MPoint topRight MPoint bottomRight | Improve this Doc View Source MQuad(MQuad) Declaration public MQuad(MQuad quad) Parameters Type Name Description MQuad quad Properties | Improve this Doc View Source BottomLeft Declaration public MPoint BottomLeft { get; set; } Property Value Type Description MPoint | Improve this Doc View Source BottomRight Declaration public MPoint BottomRight { get; set; } Property Value Type Description MPoint | Improve this Doc View Source TopLeft Declaration public MPoint TopLeft { get; set; } Property Value Type Description MPoint | Improve this Doc View Source TopRight Declaration public MPoint TopRight { get; set; } Property Value Type Description MPoint | Improve this Doc View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<MPoint> Vertices { get; } Property Value Type Description System.Collections.Generic.IEnumerable < MPoint > Methods | Improve this Doc View Source Equals(MQuad) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MQuad other) Parameters Type Name Description MQuad other Other object to compare Returns Type Description System.Boolean Returns true if they are equal | Improve this Doc View Source Equals(Object) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Other object to compare Returns Type Description System.Boolean Returns true if they are equal Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the specified object Overrides System.Object.GetHashCode() | Improve this Doc View Source Rotate(Double, Double, Double) Creates a new quad by rotate all 4 vertices clockwise about the specified center point Declaration public MQuad Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) System.Double centerX X coordinate of point about which to rotate System.Double centerY Y coordinate of point about which to rotate Returns Type Description MQuad Returns the rotate quad | Improve this Doc View Source ToBoundingBox() Calculates a new bounding box that encompasses all 4 vertices. Declaration public MRect ToBoundingBox() Returns Type Description MRect Returns the calculate bounding box | Improve this Doc View Source ToString() Returns a string representation of the vertices from bottom-left clockwise to bottom-right Declaration public override string ToString() Returns Type Description System.String Returns the string Overrides System.Object.ToString() Implements System.IEquatable<T>"
  },
  "api/Mapsui.MRaster.html": {
    "href": "api/Mapsui.MRaster.html",
    "title": "Class MRaster",
    "keywords": "Class MRaster Inheritance System.Object MRect MRaster Implements System.IEquatable < MRect > Inherited Members MRect.MinX MRect.MinY MRect.MaxX MRect.MaxY MRect.Min MRect.Max MRect.Left MRect.Right MRect.Top MRect.Bottom MRect.TopLeft MRect.TopRight MRect.BottomLeft MRect.BottomRight MRect.Width MRect.Height MRect.LongestAxis MRect.Equals(MRect) MRect.Offset(MPoint) MRect.Offset(Double, Double) MRect.CheckMinMax() MRect.Intersects(MRect) MRect.Touches(MRect) MRect.Contains(MRect) MRect.Touches(MPoint) MRect.GetArea() MRect.GetIntersectingArea(MRect) MRect.Join(MRect) MRect.Join(MRect, MRect) MRect.Join(MRect[]) MRect.Grow(Double) MRect.Grow(Double, Double) MRect.Multiply(Double) MRect.Rotate(Double) MRect.Contains(MPoint) MRect.Distance(MRect) MRect.Distance(MPoint) MRect.Centroid MRect.Clone() MRect.ToString() MRect.Equals(Object) MRect.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MRaster : MRect, IEquatable<MRect> Constructors | Improve this Doc View Source MRaster(MRaster) Declaration public MRaster(MRaster raster) Parameters Type Name Description MRaster raster | Improve this Doc View Source MRaster(Byte[], MRect) Declaration public MRaster(byte[] data, MRect rect) Parameters Type Name Description System.Byte [] data MRect rect Properties | Improve this Doc View Source Data Declaration public byte[] Data { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TickFetched Declaration public long TickFetched { get; } Property Value Type Description System.Int64 Implements System.IEquatable<T> Extension Methods MRectExtensions.ToSkia(MRect)"
  },
  "api/Mapsui.MReadOnlyPoint.html": {
    "href": "api/Mapsui.MReadOnlyPoint.html",
    "title": "Class MReadOnlyPoint",
    "keywords": "Class MReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. Inheritance System.Object MReadOnlyPoint Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MReadOnlyPoint Constructors | Improve this Doc View Source MReadOnlyPoint(MReadOnlyPoint) Declaration public MReadOnlyPoint(MReadOnlyPoint readOnlyPoint) Parameters Type Name Description MReadOnlyPoint readOnlyPoint | Improve this Doc View Source MReadOnlyPoint(Double, Double) Declaration public MReadOnlyPoint(double x, double y) Parameters Type Name Description System.Double x System.Double y Properties | Improve this Doc View Source X Declaration public double X { get; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; } Property Value Type Description System.Double Operators | Improve this Doc View Source Implicit(MPoint to MReadOnlyPoint) Implicit conversion from ReadOnlyPoint to MPoint Declaration public static implicit operator MReadOnlyPoint(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MReadOnlyPoint | Improve this Doc View Source Implicit(MReadOnlyPoint to MPoint) Implicit conversion from MPoint to ReadOnlyPoint Declaration public static implicit operator MPoint(MReadOnlyPoint readOnlyPoint) Parameters Type Name Description MReadOnlyPoint readOnlyPoint Returns Type Description MPoint"
  },
  "api/Mapsui.MRect.html": {
    "href": "api/Mapsui.MRect.html",
    "title": "Class MRect",
    "keywords": "Class MRect Bounding box type with double precision Inheritance System.Object MRect MRaster Implements System.IEquatable < MRect > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MRect : IEquatable<MRect> Remarks The Bounding Box represents a box whose sides are parallel to the two axes of the coordinate system. Constructors | Improve this Doc View Source MRect(MPoint, MPoint) Initializes a bounding box Declaration public MRect(MPoint minPoint, MPoint maxPoint) Parameters Type Name Description MPoint minPoint Lower left corner MPoint maxPoint Upper right corner | Improve this Doc View Source MRect(MRect) Declaration public MRect(MRect rect) Parameters Type Name Description MRect rect | Improve this Doc View Source MRect(IEnumerable<MRect>) Initializes a new Bounding Box based on the bounds from a set of bounding boxes Declaration public MRect(IEnumerable<MRect> rects) Parameters Type Name Description System.Collections.Generic.IEnumerable < MRect > rects | Improve this Doc View Source MRect(Double, Double, Double, Double) Initializes a rect box Declaration public MRect(double minX, double minY, double maxX, double maxY) Parameters Type Name Description System.Double minX left System.Double minY bottom System.Double maxX right System.Double maxY top Remarks In case min values are larger than max values, the parameters will be swapped to ensure correct min/max boundary Properties | Improve this Doc View Source Bottom Gets the bottom boundary Declaration public double Bottom { get; } Property Value Type Description System.Double | Improve this Doc View Source BottomLeft Declaration public MPoint BottomLeft { get; } Property Value Type Description MPoint | Improve this Doc View Source BottomRight Declaration public MPoint BottomRight { get; } Property Value Type Description MPoint | Improve this Doc View Source Centroid Returns the center of the rect Declaration public MPoint Centroid { get; } Property Value Type Description MPoint | Improve this Doc View Source Height Returns the height of the rect Declaration public double Height { get; } Property Value Type Description System.Double Height of rect | Improve this Doc View Source Left Gets the left boundary Declaration public double Left { get; } Property Value Type Description System.Double | Improve this Doc View Source LongestAxis Intersection scalar (used for weighting in building the tree) Declaration public uint LongestAxis { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Max Gets or sets the upper right corner. Declaration public MPoint Max { get; set; } Property Value Type Description MPoint | Improve this Doc View Source MaxX Declaration public double MaxX { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxY Declaration public double MaxY { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Gets or sets the lower left corner. Declaration public MPoint Min { get; set; } Property Value Type Description MPoint | Improve this Doc View Source MinX Declaration public double MinX { get; } Property Value Type Description System.Double | Improve this Doc View Source MinY Declaration public double MinY { get; } Property Value Type Description System.Double | Improve this Doc View Source Right Gets the right boundary Declaration public double Right { get; } Property Value Type Description System.Double | Improve this Doc View Source Top Gets the top boundary Declaration public double Top { get; } Property Value Type Description System.Double | Improve this Doc View Source TopLeft Declaration public MPoint TopLeft { get; } Property Value Type Description MPoint | Improve this Doc View Source TopRight Declaration public MPoint TopRight { get; } Property Value Type Description MPoint | Improve this Doc View Source Width Returns the width of the rect Declaration public double Width { get; } Property Value Type Description System.Double Width of rect Methods | Improve this Doc View Source CheckMinMax() Checks whether min values are actually smaller than max values and in that case swaps them. Declaration public bool CheckMinMax() Returns Type Description System.Boolean true if the rect was changed | Improve this Doc View Source Clone() Creates a copy of the MRect Declaration public MRect Clone() Returns Type Description MRect | Improve this Doc View Source Contains(MPoint) Checks whether a point lies within the rect Declaration public bool Contains(MPoint p) Parameters Type Name Description MPoint p MPoint Returns Type Description System.Boolean true if point is within | Improve this Doc View Source Contains(MRect) Returns true if this instance contains the MRect Declaration public bool Contains(MRect r) Parameters Type Name Description MRect r MRect Returns Type Description System.Boolean True it contains | Improve this Doc View Source Distance(MPoint) Computes the minimum distance between this MRect and a MPoint Declaration public double Distance(MPoint p) Parameters Type Name Description MPoint p MPoint to calculate distance to. Returns Type Description System.Double Minimum distance. | Improve this Doc View Source Distance(MRect) Declaration public virtual double Distance(MRect box) Parameters Type Name Description MRect box Returns Type Description System.Double | Improve this Doc View Source Equals(MRect) Checks whether the values of this instance is equal to the values of another instance. Declaration public bool Equals(MRect other) Parameters Type Name Description MRect other MRect to compare to. Returns Type Description System.Boolean True if equal | Improve this Doc View Source Equals(Object) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetArea() Returns the area of the MRect Declaration public double GetArea() Returns Type Description System.Double Area of box | Improve this Doc View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the specified object Overrides System.Object.GetHashCode() | Improve this Doc View Source GetIntersectingArea(MRect) Gets the intersecting area between two rects Declaration public double GetIntersectingArea(MRect r) Parameters Type Name Description MRect r MRect Returns Type Description System.Double Area | Improve this Doc View Source Grow(Double) Increases the size of the rect by the given amount in all directions Declaration public MRect Grow(double amount) Parameters Type Name Description System.Double amount Amount to grow in all directions Returns Type Description MRect | Improve this Doc View Source Grow(Double, Double) Increases the size of the MRect by the given amount in horizontal and vertical directions Declaration public MRect Grow(double amountInX, double amountInY) Parameters Type Name Description System.Double amountInX Amount to grow in horizontal direction System.Double amountInY Amount to grow in vertical direction Returns Type Description MRect | Improve this Doc View Source Intersects(MRect) Determines whether the rect intersects another rect Declaration public bool Intersects(MRect box) Parameters Type Name Description MRect box Returns Type Description System.Boolean | Improve this Doc View Source Join(MRect) Computes the joined rect of this instance and another rect Declaration public MRect Join(MRect box) Parameters Type Name Description MRect box Rect to join with Returns Type Description MRect Rect containing both rects | Improve this Doc View Source Join(MRect, MRect) Computes the joined rect of two rects Declaration public static MRect Join(MRect box1, MRect box2) Parameters Type Name Description MRect box1 MRect box2 Returns Type Description MRect | Improve this Doc View Source Join(MRect[]) Computes the joined MRect of an array of rects. Declaration public static MRect Join(MRect[] boxes) Parameters Type Name Description MRect [] boxes Boxes to join Returns Type Description MRect Combined MRect | Improve this Doc View Source Multiply(Double) Adjusts the size by increasing Width and Heigh with (Width * Height) / 2 * factor. Declaration public MRect Multiply(double factor) Parameters Type Name Description System.Double factor Returns Type Description MRect | Improve this Doc View Source Offset(MPoint) Moves/translates the MRect along the the specified vector Declaration public void Offset(MPoint vector) Parameters Type Name Description MPoint vector Offset vector | Improve this Doc View Source Offset(Double, Double) Declaration public void Offset(double x, double y) Parameters Type Name Description System.Double x System.Double y | Improve this Doc View Source Rotate(Double) Calculates a new quad by rotating this rect about its center by the specified angle clockwise Declaration public MQuad Rotate(double degrees) Parameters Type Name Description System.Double degrees Angle about which to rotate (degrees) Returns Type Description MQuad Returns the calculated quad | Improve this Doc View Source ToString() Returns a string representation of the rect as LowerLeft + UpperRight formatted as \"MinX, MinY, MaxX, MaxY\" Declaration public override string ToString() Returns Type Description System.String MinX,MinY MaxX,MaxY Overrides System.Object.ToString() | Improve this Doc View Source Touches(MPoint) Returns true if this instance touches the MPoint Declaration public bool Touches(MPoint p) Parameters Type Name Description MPoint p Geometry Returns Type Description System.Boolean True if touches | Improve this Doc View Source Touches(MRect) Returns true if this instance touches the MRect Declaration public bool Touches(MRect r) Parameters Type Name Description MRect r MRect Returns Type Description System.Boolean True it touches Implements System.IEquatable<T> Extension Methods MRectExtensions.ToSkia(MRect)"
  },
  "api/Mapsui.Navigator.html": {
    "href": "api/Mapsui.Navigator.html",
    "title": "Class Navigator",
    "keywords": "Class Navigator Inheritance System.Object Navigator Implements INavigator System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Navigator : INavigator, IDisposable Constructors | Improve this Doc View Source Navigator(Map, IViewport) Declaration public Navigator(Map map, IViewport viewport) Parameters Type Name Description Map map IViewport viewport Properties | Improve this Doc View Source Navigated Declaration public EventHandler<ChangeType> Navigated { get; set; } Property Value Type Description System.EventHandler < ChangeType > Methods | Improve this Doc View Source CenterOn(MPoint, Int64, Easing) Change center of viewport Declaration public void CenterOn(MPoint center, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint center New center point of viewport System.Int64 duration Duration for animation in milliseconds. Easing easing Function for easing | Improve this Doc View Source CenterOn(Double, Double, Int64, Easing) Change center of viewport to X/Y coordinates Declaration public void CenterOn(double x, double y, long duration = -1L, Easing easing = null) Parameters Type Name Description System.Double x X value of the new center System.Double y Y value of the new center System.Int64 duration Duration for animation in milliseconds. Easing easing Function for easing | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source FlingWith(Double, Double, Int64) Animate Fling of viewport Declaration public void FlingWith(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description System.Double velocityX VelocityX from SwipedEventArgs> System.Double velocityY VelocityX from SwipedEventArgs> System.Int64 maxDuration Maximum duration of fling deceleration> | Improve this Doc View Source FlyTo(MPoint, Double, Int64) Fly to the given center with zooming out to given resolution and in again Declaration public void FlyTo(MPoint center, double maxResolution, long duration = 500L) Parameters Type Name Description MPoint center MPoint to fly to System.Double maxResolution Maximum resolution to zoom out System.Int64 duration Duration for animation in milliseconds. | Improve this Doc View Source NavigateTo(MPoint, Double, Int64, Easing) Navigate to center and change resolution with animation Declaration public void NavigateTo(MPoint center, double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description MPoint center New center to move to System.Double resolution New resolution to use System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateTo(MRect, ScaleMethod, Int64, Easing) Navigate center of viewport to center of extent and change resolution Declaration public void NavigateTo(MRect extent, ScaleMethod scaleMethod = ScaleMethod.Fit, long duration = -1L, Easing easing = null) Parameters Type Name Description MRect extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determine resolution System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod, Int64, Easing) Navigate to a resolution, so such the map uses the fill method Declaration public void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill, long duration = -1L, Easing easing = null) Parameters Type Name Description ScaleMethod scaleMethod Scale method to use to determine resolution System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source RotateTo(Double, Int64, Easing) Change rotation of viewport Declaration public void RotateTo(double rotation, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double rotation New rotation in degrees of viewport> System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(MPoint, Int64, Easing) Zoom in to a given point Declaration public void ZoomIn(MPoint centerOfZoom, long duration = -1L, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(Int64, Easing) Zoom in to the next resolution Declaration public void ZoomIn(long duration = -1L, Easing easing = null) Parameters Type Name Description System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(MPoint, Int64, Easing) Zoom out to a given point Declaration public void ZoomOut(MPoint centerOfZoom, long duration = -1L, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(Int64, Easing) Zoom out to the next resolution Declaration public void ZoomOut(long duration = -1L, Easing easing = null) Parameters Type Name Description System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, MPoint, Int64, Easing) Zoom to a given resolution with a given point as center Declaration public void ZoomTo(double resolution, MPoint centerOfZoom, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution Resolution to zoom MPoint centerOfZoom Center of zoom in screen coordinates. This is the one point in the map that stays on the same location while zooming in. /// For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. Note, that the centerOfZoom is in screen coordinates not world coordinates, this is because this is most convenient for the main use case, zoom with the mouse position as center. System.Int64 duration Duration for animation in milliseconds. Easing easing The easing of the animation when duration is > 0 | Improve this Doc View Source ZoomTo(Double, Int64, Easing) Change resolution of viewport Declaration public void ZoomTo(double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution New resolution to use System.Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state Implements INavigator System.IDisposable"
  },
  "api/Mapsui.Projections.CrsHelper.html": {
    "href": "api/Mapsui.Projections.CrsHelper.html",
    "title": "Class CrsHelper",
    "keywords": "Class CrsHelper Inheritance System.Object CrsHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public static class CrsHelper Fields | Improve this Doc View Source EpsgPrefix Declaration public const string EpsgPrefix = \"EPSG:\" Field Value Type Description System.String | Improve this Doc View Source EsriStringPrefix Declaration public const string EsriStringPrefix = \"ESRISTRING:\" Field Value Type Description System.String | Improve this Doc View Source Proj4StringPrefix Declaration public const string Proj4StringPrefix = \"PROJ4STRING:\" Field Value Type Description System.String Methods | Improve this Doc View Source GetCrsType(String) Declaration public static CrsType GetCrsType(string crs) Parameters Type Name Description System.String crs Returns Type Description CrsType | Improve this Doc View Source IsCrsProvided(String, String) Declaration public static bool IsCrsProvided(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Boolean | Improve this Doc View Source IsProjectionNeeded(String, String) Declaration public static bool IsProjectionNeeded(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Boolean | Improve this Doc View Source ToEpsgCode(String) Declaration public static int ToEpsgCode(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Int32 | Improve this Doc View Source ToStandardizedCRS(String) Declaration public static string ToStandardizedCRS(string crs) Parameters Type Name Description System.String crs Returns Type Description System.String"
  },
  "api/Mapsui.Projections.CrsType.html": {
    "href": "api/Mapsui.Projections.CrsType.html",
    "title": "Enum CrsType",
    "keywords": "Enum CrsType Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public enum CrsType Fields Name Description Epgs EsriString Proj4String"
  },
  "api/Mapsui.Projections.html": {
    "href": "api/Mapsui.Projections.html",
    "title": "Namespace Mapsui.Projections",
    "keywords": "Namespace Mapsui.Projections Classes CrsHelper Mercator Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. ProjectionDefaults SphericalMercator Interfaces IProjection Enums CrsType"
  },
  "api/Mapsui.Projections.IProjection.html": {
    "href": "api/Mapsui.Projections.IProjection.html",
    "title": "Interface IProjection",
    "keywords": "Interface IProjection Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public interface IProjection Methods | Improve this Doc View Source IsProjectionSupported(String, String) Declaration bool IsProjectionSupported(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Boolean | Improve this Doc View Source Project(String, String, IFeature) Declaration void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description System.String fromCRS System.String toCRS IFeature feature | Improve this Doc View Source Project(String, String, MPoint) Declaration void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description System.String fromCRS System.String toCRS MPoint point | Improve this Doc View Source Project(String, String, MRect) Declaration void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description System.String fromCRS System.String toCRS MRect rect | Improve this Doc View Source Project(String, String, IEnumerable<IFeature>) Declaration void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description System.String fromCRS System.String toCRS System.Collections.Generic.IEnumerable < IFeature > features | Improve this Doc View Source Project(String, String, Double, Double) Declaration (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description System.String fromCRS System.String toCRS System.Double x System.Double y Returns Type Description System.ValueTuple < System.Double , System.Double >"
  },
  "api/Mapsui.Projections.Mercator.html": {
    "href": "api/Mapsui.Projections.Mercator.html",
    "title": "Class Mercator",
    "keywords": "Class Mercator Inheritance System.Object Mercator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class Mercator Methods | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static MPoint FromLonLat(double lon, double lat) Parameters Type Name Description System.Double lon System.Double lat Returns Type Description MPoint | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static MPoint ToLonLat(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description MPoint"
  },
  "api/Mapsui.Projections.Projection.html": {
    "href": "api/Mapsui.Projections.Projection.html",
    "title": "Class Projection",
    "keywords": "Class Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. Inheritance System.Object Projection Implements IProjection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class Projection : IProjection Constructors | Improve this Doc View Source Projection() Declaration public Projection() Methods | Improve this Doc View Source IsProjectionSupported(String, String) Declaration public bool IsProjectionSupported(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Boolean | Improve this Doc View Source Project(String, String, IFeature) Declaration public void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description System.String fromCRS System.String toCRS IFeature feature | Improve this Doc View Source Project(String, String, MPoint) Declaration public void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description System.String fromCRS System.String toCRS MPoint point | Improve this Doc View Source Project(String, String, MRect) Declaration public void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description System.String fromCRS System.String toCRS MRect rect | Improve this Doc View Source Project(String, String, IEnumerable<IFeature>) Declaration public void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description System.String fromCRS System.String toCRS System.Collections.Generic.IEnumerable < IFeature > features | Improve this Doc View Source Project(String, String, Double, Double) Declaration public (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description System.String fromCRS System.String toCRS System.Double x System.Double y Returns Type Description System.ValueTuple < System.Double , System.Double > Implements IProjection"
  },
  "api/Mapsui.Projections.ProjectionDefaults.html": {
    "href": "api/Mapsui.Projections.ProjectionDefaults.html",
    "title": "Class ProjectionDefaults",
    "keywords": "Class ProjectionDefaults Inheritance System.Object ProjectionDefaults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class ProjectionDefaults Properties | Improve this Doc View Source Projection Static property that can be overridden by a user defined IProjection. Declaration public static IProjection Projection { get; set; } Property Value Type Description IProjection"
  },
  "api/Mapsui.Projections.SphericalMercator.html": {
    "href": "api/Mapsui.Projections.SphericalMercator.html",
    "title": "Class SphericalMercator",
    "keywords": "Class SphericalMercator Inheritance System.Object SphericalMercator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class SphericalMercator Methods | Improve this Doc View Source FromLonLat(MPoint) Declaration public static MPoint FromLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static (double x, double y) FromLonLat(double lon, double lat) Parameters Type Name Description System.Double lon System.Double lat Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source ToLonLat(MPoint) Declaration public static MPoint ToLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static (double lon, double lat) ToLonLat(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description System.ValueTuple < System.Double , System.Double >"
  },
  "api/Mapsui.Providers.GeoTiffProvider.html": {
    "href": "api/Mapsui.Providers.GeoTiffProvider.html",
    "title": "Class GeoTiffProvider",
    "keywords": "Class GeoTiffProvider Inheritance System.Object GeoTiffProvider Implements IProvider < IFeature > System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class GeoTiffProvider : IProvider<IFeature>, IDisposable Constructors | Improve this Doc View Source GeoTiffProvider(String, List<Color>) Declaration public GeoTiffProvider(string tiffPath, List<Color> noDataColors = null) Parameters Type Name Description System.String tiffPath System.Collections.Generic.List < System.Drawing.Color > noDataColors Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public IEnumerable<IFeature> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > Implements IProvider<T> System.IDisposable"
  },
  "api/Mapsui.Providers.html": {
    "href": "api/Mapsui.Providers.html",
    "title": "Namespace Mapsui.Providers",
    "keywords": "Namespace Mapsui.Providers Classes GeoTiffProvider MemoryProvider<T> ProjectingProvider StackedLabelProvider Interfaces IProjectingProvider IProvider<T> Interface for data providers"
  },
  "api/Mapsui.Providers.IProjectingProvider.html": {
    "href": "api/Mapsui.Providers.IProjectingProvider.html",
    "title": "Interface IProjectingProvider",
    "keywords": "Interface IProjectingProvider Inherited Members IProvider<IFeature>.CRS IProvider<IFeature>.GetFeatures(FetchInfo) IProvider<IFeature>.GetExtent() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProjectingProvider : IProvider<IFeature> Methods | Improve this Doc View Source IsCrsSupported(String) Queries whether a provider supports projection to a certain CRS. Declaration bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown"
  },
  "api/Mapsui.Providers.IProvider-1.html": {
    "href": "api/Mapsui.Providers.IProvider-1.html",
    "title": "Interface IProvider<T>",
    "keywords": "Interface IProvider<T> Interface for data providers Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProvider<out T> where T : IFeature Type Parameters Name Description T Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtent() of data set Declaration MRect GetExtent() Returns Type Description MRect BoundingBox | Improve this Doc View Source GetFeatures(FetchInfo) Declaration IEnumerable<T> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable <T>"
  },
  "api/Mapsui.Providers.MemoryProvider-1.html": {
    "href": "api/Mapsui.Providers.MemoryProvider-1.html",
    "title": "Class MemoryProvider<T>",
    "keywords": "Class MemoryProvider<T> Inheritance System.Object MemoryProvider<T> Implements IProvider <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class MemoryProvider<T> : IProvider<T> where T : IFeature Type Parameters Name Description T Constructors | Improve this Doc View Source MemoryProvider() Declaration public MemoryProvider() | Improve this Doc View Source MemoryProvider(T) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(T feature) Parameters Type Name Description T feature Feature to be in this dataSource | Improve this Doc View Source MemoryProvider(IEnumerable<T>) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IEnumerable<T> features) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> features Features to be included in this dataSource Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Features Gets or sets the geometries this data source contains Declaration public IReadOnlyList<T> Features { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList <T> | Improve this Doc View Source SymbolSize Declaration public double SymbolSize { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(Object, String) Search for a feature Declaration public T Find(object value, string fieldName) Parameters Type Name Description System.Object value Value to search for System.String fieldName Name of the field to search in. This is the key of the T dictionary Returns Type Description T | Improve this Doc View Source GetExtent() BoundingBox of data set Declaration public MRect GetExtent() Returns Type Description MRect BoundingBox | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public virtual IEnumerable<T> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable <T> Implements IProvider<T>"
  },
  "api/Mapsui.Providers.ProjectingProvider.html": {
    "href": "api/Mapsui.Providers.ProjectingProvider.html",
    "title": "Class ProjectingProvider",
    "keywords": "Class ProjectingProvider Inheritance System.Object ProjectingProvider Implements IProvider < IFeature > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class ProjectingProvider : IProvider<IFeature> Constructors | Improve this Doc View Source ProjectingProvider(IProvider<IFeature>, IProjection) Declaration public ProjectingProvider(IProvider<IFeature> provider, IProjection projection = null) Parameters Type Name Description IProvider < IFeature > provider IProjection projection Properties | Improve this Doc View Source CRS The CRS of the target. The source CRS will be projected to this target CRS. This should be equal to the CRS of the Map and the FetchInfo.CRS. Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public IEnumerable<IFeature> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Implements IProvider<T>"
  },
  "api/Mapsui.Providers.StackedLabelProvider.html": {
    "href": "api/Mapsui.Providers.StackedLabelProvider.html",
    "title": "Class StackedLabelProvider",
    "keywords": "Class StackedLabelProvider Inheritance System.Object StackedLabelProvider Implements IProvider < IFeature > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class StackedLabelProvider : IProvider<IFeature> Constructors | Improve this Doc View Source StackedLabelProvider(IProvider<IFeature>, LabelStyle, Pen, Brush) Declaration public StackedLabelProvider(IProvider<IFeature> provider, LabelStyle labelStyle, Pen rectangleLine = null, Brush rectangleFill = null) Parameters Type Name Description IProvider < IFeature > provider LabelStyle labelStyle Pen rectangleLine Brush rectangleFill Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public IEnumerable<IFeature> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable < IFeature > Implements IProvider<T>"
  },
  "api/Mapsui.Providers.Wms.Capabilities.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.html",
    "title": "Class Capabilities",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance System.Object Capabilities Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class Capabilities"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactAddress",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct ContactAddress Fields | Improve this Doc View Source Address Contact address Declaration public string Address Field Value Type Description System.String | Improve this Doc View Source AddressType Type of address (usually \"postal\"). Declaration public string AddressType Field Value Type Description System.String | Improve this Doc View Source City Contact City Declaration public string City Field Value Type Description System.String | Improve this Doc View Source Country Country of contact address Declaration public string Country Field Value Type Description System.String | Improve this Doc View Source PostCode Zipcode of contact Declaration public string PostCode Field Value Type Description System.String | Improve this Doc View Source StateOrProvince State or province of contact Declaration public string StateOrProvince Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactPerson",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct ContactPerson Fields | Improve this Doc View Source Organisation Organisation of primary person Declaration public string Organisation Field Value Type Description System.String | Improve this Doc View Source Person Primary contact person Declaration public string Person Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html",
    "title": "Struct Capabilities.WmsContactInformation",
    "keywords": "Struct Capabilities.WmsContactInformation Stores contact metadata about WMS service Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsContactInformation Fields | Improve this Doc View Source Address Address Declaration public Capabilities.WmsContactInformation.ContactAddress Address Field Value Type Description Capabilities.WmsContactInformation.ContactAddress | Improve this Doc View Source ElectronicMailAddress Email address Declaration public string ElectronicMailAddress Field Value Type Description System.String | Improve this Doc View Source FacsimileTelephone Fax number Declaration public string FacsimileTelephone Field Value Type Description System.String | Improve this Doc View Source PersonPrimary Primary contact person Declaration public Capabilities.WmsContactInformation.ContactPerson PersonPrimary Field Value Type Description Capabilities.WmsContactInformation.ContactPerson | Improve this Doc View Source Position Position of contact person Declaration public string Position Field Value Type Description System.String | Improve this Doc View Source VoiceTelephone Telephone Declaration public string VoiceTelephone Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html",
    "title": "Struct Capabilities.WmsServiceDescription",
    "keywords": "Struct Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsServiceDescription Fields | Improve this Doc View Source Abstract Optional narrative description providing additional information Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source AccessConstraints The optional element \"AccessConstraints\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no access constraints, as follows: \"none\". When constraints are imposed, no precise syntax has been defined for the text content of these elements, but client applications may display the content for user information and action. Declaration public string AccessConstraints Field Value Type Description System.String | Improve this Doc View Source ContactInformation Optional WMS contact information Declaration public Capabilities.WmsContactInformation ContactInformation Field Value Type Description Capabilities.WmsContactInformation | Improve this Doc View Source Fees The optional element \"Fees\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no fees, as follows: \"none\". Declaration public string Fees Field Value Type Description System.String | Improve this Doc View Source Keywords Optional list of keywords or keyword phrases describing the server as a whole to help catalog searching Declaration public string[] Keywords Field Value Type Description System.String [] | Improve this Doc View Source LayerLimit Maximum number of layers allowed (0=no restrictions) Declaration public uint LayerLimit Field Value Type Description System.UInt32 | Improve this Doc View Source MaxHeight Maximum height allowed in pixels (0=no restrictions) Declaration public uint MaxHeight Field Value Type Description System.UInt32 | Improve this Doc View Source MaxWidth Maximum width allowed in pixels (0=no restrictions) Declaration public uint MaxWidth Field Value Type Description System.UInt32 | Improve this Doc View Source OnlineResource Mandatory Top-level web address of service or service provider. Declaration public string OnlineResource Field Value Type Description System.String | Improve this Doc View Source Title Mandatory Human-readable title for pick lists Declaration public string Title Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Client.html": {
    "href": "api/Mapsui.Providers.Wms.Client.html",
    "title": "Class Client",
    "keywords": "Class Client Class for requesting and parsing a WMS servers capabilities Inheritance System.Object Client Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax [Serializable] public class Client Constructors | Improve this Doc View Source Client(String, String, Func<String, Task<Stream>>) Initializes WMS server and parses the Capabilities request Declaration public Client(string url, string wmsVersion = null, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.String url URL of wms server System.String wmsVersion WMS version number, null to get the default from service System.Func < System.String , System.Threading.Tasks.Task < System.IO.Stream >> getStreamAsync Download method, leave null for default | Improve this Doc View Source Client(XmlDocument, Func<String, Task<Stream>>) Declaration public Client(XmlDocument capabilitiesXmlDocument, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.Xml.XmlDocument capabilitiesXmlDocument System.Func < System.String , System.Threading.Tasks.Task < System.IO.Stream >> getStreamAsync Properties | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description System.String [] | Improve this Doc View Source GetFeatureInfoOutputFormats Gets a list of available feature info mime type formats Declaration public Collection<string> GetFeatureInfoOutputFormats { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source GetFeatureInfoRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetFeatureInfoRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetMapOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetMapOutputFormats { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source GetMapRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetMapRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source Layer Gets the hierarchical layer structure Declaration public Client.WmsServerLayer Layer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source ServiceDescription Gets the service description Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilities' VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode VendorSpecificCapabilities { get; } Property Value Type Description System.Xml.XmlNode | Improve this Doc View Source WmsVersion Gets the version of the WMS server (ex. \"1.3.0\") Declaration public string WmsVersion { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Client.WmsLayerStyle.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsLayerStyle.html",
    "title": "Struct Client.WmsLayerStyle",
    "keywords": "Struct Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsLayerStyle Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source LegendUrl Legend Declaration public Client.WmsStyleLegend LegendUrl Field Value Type Description Client.WmsStyleLegend | Improve this Doc View Source Name Name Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source StyleSheetUrl Style Sheet Url Declaration public Client.WmsOnlineResource StyleSheetUrl Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Title Title Declaration public string Title Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Client.WmsOnlineResource.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsOnlineResource.html",
    "title": "Struct Client.WmsOnlineResource",
    "keywords": "Struct Client.WmsOnlineResource Structure for storing info on an Online Resource Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsOnlineResource Fields | Improve this Doc View Source OnlineResource URI of online resource Declaration public string OnlineResource Field Value Type Description System.String | Improve this Doc View Source Type Type of online resource (Ex. request method 'Get' or 'Post') Declaration public string Type Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Client.WmsServerLayer.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsServerLayer.html",
    "title": "Struct Client.WmsServerLayer",
    "keywords": "Struct Client.WmsServerLayer Structure for holding information about a WMS Layer Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsServerLayer Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source BoundingBoxes Coordinate Reference Systems supported by layer Declaration public IDictionary<string, MRect> BoundingBoxes Field Value Type Description System.Collections.Generic.IDictionary < System.String , MRect > | Improve this Doc View Source ChildLayers Collection of child layers Declaration public Client.WmsServerLayer[] ChildLayers Field Value Type Description Client.WmsServerLayer [] | Improve this Doc View Source CRS Coordinate Reference Systems supported by layer Declaration public string[] CRS Field Value Type Description System.String [] | Improve this Doc View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description System.String [] | Improve this Doc View Source LatLonBoundingBox Latitudal/longitudal extent of this layer Declaration public MRect LatLonBoundingBox Field Value Type Description MRect | Improve this Doc View Source Name Unique name of this layer used for requesting layer Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source Queryable Specifies whether this layer is queryable using GetFeatureInfo requests Declaration public bool Queryable Field Value Type Description System.Boolean | Improve this Doc View Source Style List of styles supported by layer Declaration public Client.WmsLayerStyle[] Style Field Value Type Description Client.WmsLayerStyle [] | Improve this Doc View Source Title Layer title Declaration public string Title Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.Client.WmsStyleLegend.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsStyleLegend.html",
    "title": "Struct Client.WmsStyleLegend",
    "keywords": "Struct Client.WmsStyleLegend Structure for storing WMS Legend information Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsStyleLegend Fields | Improve this Doc View Source OnlineResource Online resource for legend style Declaration public Client.WmsOnlineResource OnlineResource Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Size Size of legend Declaration public Size Size Field Value Type Description Size"
  },
  "api/Mapsui.Providers.Wms.FeatureInfo.html": {
    "href": "api/Mapsui.Providers.Wms.FeatureInfo.html",
    "title": "Class FeatureInfo",
    "keywords": "Class FeatureInfo Inheritance System.Object FeatureInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class FeatureInfo Properties | Improve this Doc View Source FeatureInfos Declaration public List<Dictionary<string, string>> FeatureInfos { get; set; } Property Value Type Description System.Collections.Generic.List < System.Collections.Generic.Dictionary < System.String , System.String >> | Improve this Doc View Source LayerName Declaration public string LayerName { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wms.GetFeatureInfo.html": {
    "href": "api/Mapsui.Providers.Wms.GetFeatureInfo.html",
    "title": "Class GetFeatureInfo",
    "keywords": "Class GetFeatureInfo Inheritance System.Object GetFeatureInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class GetFeatureInfo Constructors | Improve this Doc View Source GetFeatureInfo(Func<String, Task<Stream>>) Declaration public GetFeatureInfo(Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.Func < System.String , System.Threading.Tasks.Task < System.IO.Stream >> getStreamAsync Properties | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description System.Net.ICredentials | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string> ExtraParams { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source TimeOut Timeout of web request in milliseconds. Default is 7 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Request(String, String, String, String, String, Double, Double, Double, Double, Int32, Int32, Int32, Int32) Request FeatureInfo for a WMS Server Declaration public void Request(string baseUrl, string wmsVersion, string infoFormat, string srs, string layer, double extendXmin, double extendYmin, double extendXmax, double extendYmax, int x, int y, int mapWidth, int mapHeight) Parameters Type Name Description System.String baseUrl Base URL of the WMS server System.String wmsVersion WMS Version System.String infoFormat Format of response (text/xml, text/plain, etc) System.String srs EPSG Code of the coordinate system System.String layer Layer to get FeatureInfo From System.Double extendXmin System.Double extendYmin System.Double extendXmax System.Double extendYmax System.Int32 x Coordinate in pixels x System.Int32 y Coordinate in pixels y System.Int32 mapWidth Width of the map System.Int32 mapHeight Height of the map Events | Improve this Doc View Source IdentifyFailed Declaration public event StatusEventHandler IdentifyFailed Event Type Type Description StatusEventHandler | Improve this Doc View Source IdentifyFinished Declaration public event StatusEventHandler IdentifyFinished Event Type Type Description StatusEventHandler"
  },
  "api/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html",
    "title": "Class GmlGetFeatureInfoParser",
    "keywords": "Class GmlGetFeatureInfoParser Inheritance System.Object GmlGetFeatureInfoParser Implements IGetFeatureInfoParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class GmlGetFeatureInfoParser : IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration public FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName System.IO.Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Providers.Wms.html": {
    "href": "api/Mapsui.Providers.Wms.html",
    "title": "Namespace Mapsui.Providers.Wms",
    "keywords": "Namespace Mapsui.Providers.Wms Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WMS servers capabilities FeatureInfo GetFeatureInfo GmlGetFeatureInfoParser WmsProvider Web Map Service layer XmlGetFeatureInfoParser Structs Capabilities.WmsContactInformation Stores contact metadata about WMS service Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Client.WmsOnlineResource Structure for storing info on an Online Resource Client.WmsServerLayer Structure for holding information about a WMS Layer Client.WmsStyleLegend Structure for storing WMS Legend information Interfaces IGetFeatureInfoParser Delegates StatusEventHandler"
  },
  "api/Mapsui.Providers.Wms.IGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.IGetFeatureInfoParser.html",
    "title": "Interface IGetFeatureInfoParser",
    "keywords": "Interface IGetFeatureInfoParser Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public interface IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName System.IO.Stream result Returns Type Description FeatureInfo"
  },
  "api/Mapsui.Providers.Wms.StatusEventHandler.html": {
    "href": "api/Mapsui.Providers.Wms.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public delegate void StatusEventHandler(object sender, FeatureInfo featureInfo); Parameters Type Name Description System.Object sender FeatureInfo featureInfo"
  },
  "api/Mapsui.Providers.Wms.WmsProvider.html": {
    "href": "api/Mapsui.Providers.Wms.WmsProvider.html",
    "title": "Class WmsProvider",
    "keywords": "Class WmsProvider Web Map Service layer Inheritance System.Object WmsProvider Implements IProjectingProvider IProvider < IFeature > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class WmsProvider : IProjectingProvider, IProvider<IFeature> Remarks The WmsLayer is currently very basic and doesn't support automatic fetching of the WMS Service Description. Instead you would have to add the necessary parameters to the URL, and the WmsLayer will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Constructors | Improve this Doc View Source WmsProvider(String, String, Func<String, Task<Stream>>) Initializes a new layer, and downloads and parses the service description Declaration public WmsProvider(string url, string wmsVersion = null, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.String url Url of WMS server System.String wmsVersion Version number of wms leave null to get the default service version System.Func < System.String , System.Threading.Tasks.Task < System.IO.Stream >> getStreamAsync Download method, leave null for default | Improve this Doc View Source WmsProvider(XmlDocument, Func<String, Task<Stream>>) Declaration public WmsProvider(XmlDocument capabilities, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.Xml.XmlDocument capabilities System.Func < System.String , System.Threading.Tasks.Task < System.IO.Stream >> getStreamAsync Properties | Improve this Doc View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer Declaration public bool ContinueOnError { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description System.Net.ICredentials | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string> ExtraParams { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source GetFeatureInfoFormats Gets the list of available FeatureInfo Output Format Declaration public Collection<string> GetFeatureInfoFormats { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source LayerList Gets the list of enabled layers Declaration public Collection<string> LayerList { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source RootLayer Gets the hierarchical list of available WMS layers from this service Declaration public Client.WmsServerLayer? RootLayer { get; } Property Value Type Description System.Nullable < Client.WmsServerLayer > | Improve this Doc View Source ServiceDescription Gets the service description from this server Declaration public Capabilities.WmsServiceDescription? ServiceDescription { get; } Property Value Type Description System.Nullable < Capabilities.WmsServiceDescription > | Improve this Doc View Source StylesList Gets the list of enabled styles Declaration public Collection<string> StylesList { get; } Property Value Type Description System.Collections.ObjectModel.Collection < System.String > | Improve this Doc View Source TimeOut Timeout of web request in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Version Gets the WMS Server version of this service Declaration public string Version { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddLayer(String) Adds a layer to WMS request Declaration public void AddLayer(string name) Parameters Type Name Description System.String name Name of layer Remarks Layer names are case sensitive. Exceptions Type Condition System.ArgumentException Throws an exception is an unknown layer is added | Improve this Doc View Source AddStyle(String) Adds a style to the style collection Declaration public void AddStyle(string name) Parameters Type Name Description System.String name Name of style Exceptions Type Condition System.ArgumentException Throws an exception is an unknown layer is added | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public IEnumerable<IFeature> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source GetLayer(String) Get a layer from the WMS Declaration public Client.WmsServerLayer GetLayer(string name) Parameters Type Name Description System.String name Name of layer Returns Type Description Client.WmsServerLayer Remarks Layer names are case sensitive. Exceptions Type Condition System.ArgumentException Throws an exception if the layer is not found | Improve this Doc View Source GetLegendRequestUrls() Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public IEnumerable<string> GetLegendRequestUrls() Returns Type Description System.Collections.Generic.IEnumerable < System.String > URL for WMS request | Improve this Doc View Source GetLegends() Declaration public IEnumerable<MemoryStream> GetLegends() Returns Type Description System.Collections.Generic.IEnumerable < System.IO.MemoryStream > | Improve this Doc View Source GetRequestUrl(MRect, Int32, Int32) Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public string GetRequestUrl(MRect box, int width, int height) Parameters Type Name Description MRect box System.Int32 width System.Int32 height Returns Type Description System.String URL for WMS request | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source RemoveAllLayers() Removes all layers Declaration public void RemoveAllLayers() | Improve this Doc View Source RemoveAllStyles() Removes all styles from the list Declaration public void RemoveAllStyles() | Improve this Doc View Source RemoveLayer(String) Removes a layer from the layer list Declaration public void RemoveLayer(string name) Parameters Type Name Description System.String name Name of layer to remove | Improve this Doc View Source RemoveLayerAt(Int32) Removes the layer at the specified index Declaration public void RemoveLayerAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source RemoveStyle(String) Removes a style from the collection Declaration public void RemoveStyle(string name) Parameters Type Name Description System.String name Name of style | Improve this Doc View Source RemoveStyleAt(Int32) Removes a style at specified index Declaration public void RemoveStyleAt(int index) Parameters Type Name Description System.Int32 index Index | Improve this Doc View Source SetImageFormat(String) Sets the image type to use when requesting images from the WMS server Declaration public void SetImageFormat(string mimeType) Parameters Type Name Description System.String mimeType Mime type of image format Remarks See the OutputFormats property for a list of available mime types supported by the WMS server Exceptions Type Condition System.ArgumentException Throws an exception if either the mime type isn't offered by the WMS or GDI+ doesn't support this mime type. | Improve this Doc View Source TryGetMap(IViewport, out MRaster) Declaration public bool TryGetMap(IViewport viewport, out MRaster raster) Parameters Type Name Description IViewport viewport MRaster raster Returns Type Description System.Boolean Implements IProjectingProvider IProvider<T>"
  },
  "api/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html",
    "title": "Class XmlGetFeatureInfoParser",
    "keywords": "Class XmlGetFeatureInfoParser Inheritance System.Object XmlGetFeatureInfoParser Implements IGetFeatureInfoParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class XmlGetFeatureInfoParser : IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration public FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName System.IO.Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Rendering.DefaultRendererFactory.html": {
    "href": "api/Mapsui.Rendering.DefaultRendererFactory.html",
    "title": "Class DefaultRendererFactory",
    "keywords": "Class DefaultRendererFactory Inheritance System.Object DefaultRendererFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class DefaultRendererFactory Properties | Improve this Doc View Source Create Declaration public static Func<IRenderer> Create { get; set; } Property Value Type Description System.Func < IRenderer >"
  },
  "api/Mapsui.Rendering.html": {
    "href": "api/Mapsui.Rendering.html",
    "title": "Namespace Mapsui.Rendering",
    "keywords": "Namespace Mapsui.Rendering Classes DefaultRendererFactory MapInfoRecord RenderException Exception thrown when a layer rendering fails VisibleFeatureIterator Interfaces IRenderer IRenderInfo ISymbolCache"
  },
  "api/Mapsui.Rendering.IRenderer.html": {
    "href": "api/Mapsui.Rendering.IRenderer.html",
    "title": "Interface IRenderer",
    "keywords": "Interface IRenderer Inherited Members IRenderInfo.GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderer : IRenderInfo Properties | Improve this Doc View Source StyleRenderers Declaration IDictionary<Type, IStyleRenderer> StyleRenderers { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.Type , IStyleRenderer > | Improve this Doc View Source SymbolCache Declaration ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Collections.Generic.IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color, Single) Declaration MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null, float pixelDensity = 1F) Parameters Type Name Description IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers Color background System.Single pixelDensity Returns Type Description System.IO.MemoryStream"
  },
  "api/Mapsui.Rendering.IRenderInfo.html": {
    "href": "api/Mapsui.Rendering.IRenderInfo.html",
    "title": "Interface IRenderInfo",
    "keywords": "Interface IRenderInfo Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderInfo Methods | Improve this Doc View Source GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Declaration MapInfo GetMapInfo(double screenX, double screenY, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, int margin = 0) Parameters Type Name Description System.Double screenX System.Double screenY IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Int32 margin Returns Type Description MapInfo"
  },
  "api/Mapsui.Rendering.ISymbolCache.html": {
    "href": "api/Mapsui.Rendering.ISymbolCache.html",
    "title": "Interface ISymbolCache",
    "keywords": "Interface ISymbolCache Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface ISymbolCache Methods | Improve this Doc View Source GetSize(Int32) Declaration Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size"
  },
  "api/Mapsui.Rendering.MapInfoRecord.html": {
    "href": "api/Mapsui.Rendering.MapInfoRecord.html",
    "title": "Class MapInfoRecord",
    "keywords": "Class MapInfoRecord Inheritance System.Object MapInfoRecord Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class MapInfoRecord Constructors | Improve this Doc View Source MapInfoRecord(IFeature, IStyle, ILayer) Declaration public MapInfoRecord(IFeature feature, IStyle style, ILayer layer) Parameters Type Name Description IFeature feature IStyle style ILayer layer Properties | Improve this Doc View Source Feature Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Improve this Doc View Source Layer Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Improve this Doc View Source Style Declaration public IStyle Style { get; set; } Property Value Type Description IStyle"
  },
  "api/Mapsui.Rendering.RenderException.html": {
    "href": "api/Mapsui.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance System.Object System.Exception RenderException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class RenderException : Exception, ISerializable Constructors | Improve this Doc View Source RenderException(String) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source RenderException(String, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Mapsui.Rendering.Skia.BitmapHelper.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapHelper.html",
    "title": "Class BitmapHelper",
    "keywords": "Class BitmapHelper Inheritance System.Object BitmapHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class BitmapHelper Methods | Improve this Doc View Source LoadBitmap(Object) Declaration public static BitmapInfo LoadBitmap(object bitmapStream) Parameters Type Name Description System.Object bitmapStream Returns Type Description BitmapInfo"
  },
  "api/Mapsui.Rendering.Skia.BitmapInfo.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapInfo.html",
    "title": "Class BitmapInfo",
    "keywords": "Class BitmapInfo Inheritance System.Object BitmapInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class BitmapInfo Properties | Improve this Doc View Source Bitmap Declaration public SKImage Bitmap { get; set; } Property Value Type Description SkiaSharp.SKImage | Improve this Doc View Source Height Declaration public float Height { get; } Property Value Type Description System.Single | Improve this Doc View Source IterationUsed Declaration public long IterationUsed { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Picture Declaration public SKPicture Picture { get; set; } Property Value Type Description SkiaSharp.SKPicture | Improve this Doc View Source Sprite Declaration public Sprite Sprite { get; set; } Property Value Type Description Sprite | Improve this Doc View Source Svg Declaration public SKSvg Svg { get; set; } Property Value Type Description Svg.Skia.SKSvg | Improve this Doc View Source Type Declaration public BitmapType Type { get; } Property Value Type Description BitmapType | Improve this Doc View Source Width Declaration public float Width { get; } Property Value Type Description System.Single"
  },
  "api/Mapsui.Rendering.Skia.BitmapType.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapType.html",
    "title": "Enum BitmapType",
    "keywords": "Enum BitmapType Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public enum BitmapType Fields Name Description Bitmap Picture Sprite Svg"
  },
  "api/Mapsui.Rendering.Skia.CalloutStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.CalloutStyleRenderer.html",
    "title": "Class CalloutStyleRenderer",
    "keywords": "Class CalloutStyleRenderer Inheritance System.Object Style VectorStyle ImageStyle SymbolStyle CalloutStyleRenderer Implements IStyle Inherited Members SymbolStyle.DefaultWidth SymbolStyle.DefaultHeight SymbolStyle.SymbolType SymbolStyle.Equals(Object) SymbolStyle.Equals(SymbolStyle) SymbolStyle.GetHashCode() ImageStyle.UnitType ImageStyle.SymbolRotation ImageStyle.BitmapId ImageStyle.RotateWithMap ImageStyle.SymbolScale ImageStyle.SymbolOffset ImageStyle.SymbolOffsetRotatesWithMap VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class CalloutStyleRenderer : SymbolStyle, IStyle Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, Single, Double, Double, CalloutStyle) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, float opacity, double x, double y, CalloutStyle calloutStyle) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport System.Single opacity System.Double x System.Double y CalloutStyle calloutStyle | Improve this Doc View Source RenderCallout(CalloutStyle) Declaration public static void RenderCallout(CalloutStyle callout) Parameters Type Name Description CalloutStyle callout | Improve this Doc View Source ToSkia(Color) Convert Mapsui color to Skia color Declaration public SKColor ToSkia(Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description SkiaSharp.SKColor Color in Skia format | Improve this Doc View Source UpdateContent(CalloutStyle) Update content for single and detail Declaration public static void UpdateContent(CalloutStyle callout) Parameters Type Name Description CalloutStyle callout Implements IStyle"
  },
  "api/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html",
    "title": "Class AlignmentExtensions",
    "keywords": "Class AlignmentExtensions Inheritance System.Object AlignmentExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class AlignmentExtensions Methods | Improve this Doc View Source ToRichTextKit(Alignment) Declaration public static TextAlignment ToRichTextKit(this Alignment textAlignment) Parameters Type Name Description Alignment textAlignment Returns Type Description Topten.RichTextKit.TextAlignment"
  },
  "api/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance System.Object ColorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ColorExtensions Methods | Improve this Doc View Source ToSkia(Color, Single) Declaration public static SKColor ToSkia(this Color color, float layerOpacity = 1F) Parameters Type Name Description Color color System.Single layerOpacity Returns Type Description SkiaSharp.SKColor"
  },
  "api/Mapsui.Rendering.Skia.Extensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Extensions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Extensions Classes AlignmentExtensions ColorExtensions MRectExtensions PenStrokeCapExtensions PenStrokeJoinExtensions PenStyleExtension SKColorExtensions ViewportExtensions"
  },
  "api/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance System.Object MRectExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MRectExtensions Methods | Improve this Doc View Source ToSkia(MRect) Declaration public static SKRect ToSkia(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description SkiaSharp.SKRect"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html",
    "title": "Class PenStrokeCapExtensions",
    "keywords": "Class PenStrokeCapExtensions Inheritance System.Object PenStrokeCapExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeCapExtensions Methods | Improve this Doc View Source ToSkia(PenStrokeCap) Declaration public static SKStrokeCap ToSkia(this PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description SkiaSharp.SKStrokeCap"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html",
    "title": "Class PenStrokeJoinExtensions",
    "keywords": "Class PenStrokeJoinExtensions Inheritance System.Object PenStrokeJoinExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeJoinExtensions Methods | Improve this Doc View Source ToSkia(StrokeJoin) Declaration public static SKStrokeJoin ToSkia(this StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description SkiaSharp.SKStrokeJoin"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html",
    "title": "Class PenStyleExtension",
    "keywords": "Class PenStyleExtension Inheritance System.Object PenStyleExtension Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStyleExtension Methods | Improve this Doc View Source ToSkia(PenStyle, Single, Single[], Single) Declaration public static SKPathEffect ToSkia(this PenStyle penStyle, float width, float[] dashArray = null, float dashOffset = 0F) Parameters Type Name Description PenStyle penStyle System.Single width System.Single [] dashArray System.Single dashOffset Returns Type Description SkiaSharp.SKPathEffect"
  },
  "api/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html",
    "title": "Class SKColorExtensions",
    "keywords": "Class SKColorExtensions Inheritance System.Object SKColorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SKColorExtensions Methods | Improve this Doc View Source ToMapsui(SKColor) Declaration public static Color ToMapsui(this SKColor color) Parameters Type Name Description SkiaSharp.SKColor color Returns Type Description Color"
  },
  "api/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html",
    "title": "Class ViewportExtensions",
    "keywords": "Class ViewportExtensions Inheritance System.Object ViewportExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ViewportExtensions Methods | Improve this Doc View Source ToSKMatrix(IViewport) Declaration public static SKMatrix ToSKMatrix(this IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description SkiaSharp.SKMatrix"
  },
  "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html",
    "title": "Class ClippingFunctions",
    "keywords": "Class ClippingFunctions Inheritance System.Object ClippingFunctions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.Functions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ClippingFunctions Methods | Improve this Doc View Source LiangBarskyClip(SKPoint, SKPoint, SKRect, out SKPoint, out SKPoint) A Liang-Barsky implementation to detect the intersection between a line and a rect. With this, all lines, that aren't visible on screen could be sorted out. Found at https://gist.github.com/ChickenProp/3194723 Declaration public static ClippingFunctions.Intersection LiangBarskyClip(SKPoint point1, SKPoint point2, SKRect clipRect, out SKPoint intersectionPoint1, out SKPoint intersectionPoint2) Parameters Type Name Description SkiaSharp.SKPoint point1 First point of line SkiaSharp.SKPoint point2 Second point of line SkiaSharp.SKRect clipRect SkiaSharp.SKPoint intersectionPoint1 First intersection point SkiaSharp.SKPoint intersectionPoint2 Second intersection point Returns Type Description ClippingFunctions.Intersection | Improve this Doc View Source ReducePointsToClipRect(IEnumerable<Coordinate>, IReadOnlyViewport, SKRect) Reduce list of points, so that all are inside of cliptRect See https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm Declaration public static List<SKPoint> ReducePointsToClipRect(IEnumerable<Coordinate> points, IReadOnlyViewport viewport, SKRect clipRect) Parameters Type Name Description System.Collections.Generic.IEnumerable < NetTopologySuite.Geometries.Coordinate > points List of points to reduce IReadOnlyViewport viewport Viewport implementation SkiaSharp.SKRect clipRect Rectangle to clip to. All points outside aren't drawn. Returns Type Description System.Collections.Generic.List < SkiaSharp.SKPoint >"
  },
  "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html",
    "title": "Enum ClippingFunctions.Intersection",
    "keywords": "Enum ClippingFunctions.Intersection Type of intersection Namespace : Mapsui.Rendering.Skia.Functions Assembly : Mapsui.Rendering.Skia.dll Syntax public enum Intersection Fields Name Description Both CompleteInside CompleteOutside FirstInside SecondInside Unknown"
  },
  "api/Mapsui.Rendering.Skia.Functions.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Functions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Functions Classes ClippingFunctions Enums ClippingFunctions.Intersection Type of intersection"
  },
  "api/Mapsui.Rendering.Skia.GeometryRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.GeometryRenderer.html",
    "title": "Class GeometryRenderer",
    "keywords": "Class GeometryRenderer Inheritance System.Object GeometryRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class GeometryRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, Single, GeometryFeature, SymbolCache) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, float layerOpacity, GeometryFeature geometryFeature, SymbolCache symbolCache) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style System.Single layerOpacity Mapsui.Nts.GeometryFeature geometryFeature SymbolCache symbolCache"
  },
  "api/Mapsui.Rendering.Skia.html": {
    "href": "api/Mapsui.Rendering.Skia.html",
    "title": "Namespace Mapsui.Rendering.Skia",
    "keywords": "Namespace Mapsui.Rendering.Skia Classes BitmapHelper BitmapInfo CalloutStyleRenderer GeometryRenderer LabelRenderer LineStringRenderer MapRenderer MapRenderer.IdentityComparer<T> MultiLineStringRenderer MultiPointRenderer MultiPolygonRenderer RasterRenderer RectRenderer SvgRenderer SymbolCache SymbolStyleRenderer Enums BitmapType"
  },
  "api/Mapsui.Rendering.Skia.LabelRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LabelRenderer.html",
    "title": "Class LabelRenderer",
    "keywords": "Class LabelRenderer Inheritance System.Object LabelRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class LabelRenderer Methods | Improve this Doc View Source Draw(SKCanvas, LabelStyle, IFeature, Double, Double, Single) Declaration public static void Draw(SKCanvas canvas, LabelStyle style, IFeature feature, double x, double y, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas LabelStyle style IFeature feature System.Double x System.Double y System.Single layerOpacity | Improve this Doc View Source DrawAsBitmap(SKCanvas, LabelStyle, IFeature, Single, Single, Single) Declaration public static void DrawAsBitmap(SKCanvas canvas, LabelStyle style, IFeature feature, float x, float y, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas LabelStyle style IFeature feature System.Single x System.Single y System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.LineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance System.Object LineStringRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class LineStringRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, LineString, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, LineString lineString, float opacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature NetTopologySuite.Geometries.LineString lineString System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MapRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance System.Object MapRenderer Implements IRenderer IRenderInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class MapRenderer : IRenderer, IRenderInfo Constructors | Improve this Doc View Source MapRenderer() Declaration public MapRenderer() Properties | Improve this Doc View Source StyleRenderers Dictionary holding all special renderers for styles Declaration public IDictionary<Type, IStyleRenderer> StyleRenderers { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.Type , IStyleRenderer > | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration public IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.Type , IWidgetRenderer > Methods | Improve this Doc View Source GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Declaration public MapInfo GetMapInfo(double x, double y, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, int margin = 0) Parameters Type Name Description System.Double x System.Double y IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration public void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Collections.Generic.IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color, Single) Declaration public MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null, float pixelDensity = 1F) Parameters Type Name Description IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers Color background System.Single pixelDensity Returns Type Description System.IO.MemoryStream Implements IRenderer IRenderInfo"
  },
  "api/Mapsui.Rendering.Skia.MapRenderer.IdentityComparer-1.html": {
    "href": "api/Mapsui.Rendering.Skia.MapRenderer.IdentityComparer-1.html",
    "title": "Class MapRenderer.IdentityComparer<T>",
    "keywords": "Class MapRenderer.IdentityComparer<T> Inheritance System.Object MapRenderer.IdentityComparer<T> Implements System.Collections.Generic.IEqualityComparer <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class IdentityComparer<T> : IEqualityComparer<T> where T : class Type Parameters Name Description T Methods | Improve this Doc View Source Equals(T, T) Declaration public bool Equals(T obj, T otherObj) Parameters Type Name Description T obj T otherObj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(T) Declaration public int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32 Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Mapsui.Rendering.Skia.MultiLineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiLineStringRenderer.html",
    "title": "Class MultiLineStringRenderer",
    "keywords": "Class MultiLineStringRenderer Inheritance System.Object MultiLineStringRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiLineStringRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, MultiLineString, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, MultiLineString multiLineString, float opacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature NetTopologySuite.Geometries.MultiLineString multiLineString System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MultiPointRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiPointRenderer.html",
    "title": "Class MultiPointRenderer",
    "keywords": "Class MultiPointRenderer Inheritance System.Object MultiPointRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiPointRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, MultiPoint, SymbolCache, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, MultiPoint multiPoint, SymbolCache symbolCache, float opacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature NetTopologySuite.Geometries.MultiPoint multiPoint SymbolCache symbolCache System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MultiPolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiPolygonRenderer.html",
    "title": "Class MultiPolygonRenderer",
    "keywords": "Class MultiPolygonRenderer Inheritance System.Object MultiPolygonRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiPolygonRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, MultiPolygon, Single, SymbolCache) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, MultiPolygon multiPolygon, float opacity, SymbolCache symbolCache = null) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature NetTopologySuite.Geometries.MultiPolygon multiPolygon System.Single opacity SymbolCache symbolCache"
  },
  "api/Mapsui.Rendering.Skia.RasterRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.RasterRenderer.html",
    "title": "Class RasterRenderer",
    "keywords": "Class RasterRenderer Inheritance System.Object RasterRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class RasterRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, MRaster, Single, IDictionary<Object, BitmapInfo>, Int64) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, MRaster raster, float opacity, IDictionary<object, BitmapInfo> tileCache, long currentIteration) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature MRaster raster System.Single opacity System.Collections.Generic.IDictionary < System.Object , BitmapInfo > tileCache System.Int64 currentIteration"
  },
  "api/Mapsui.Rendering.Skia.RectRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.RectRenderer.html",
    "title": "Class RectRenderer",
    "keywords": "Class RectRenderer Inheritance System.Object RectRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class RectRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, RectFeature, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, RectFeature rectFeature, float opacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IStyle style RectFeature rectFeature System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaStyles.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaStyles.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaStyles",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaStyles Interfaces ISkiaStyleRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html",
    "title": "Interface ISkiaStyleRenderer",
    "keywords": "Interface ISkiaStyleRenderer Namespace : Mapsui.Rendering.Skia.SkiaStyles Assembly : Mapsui.Rendering.Skia.dll Syntax public interface ISkiaStyleRenderer : IStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache) Drawing function for special styles Declaration bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache) Parameters Type Name Description SkiaSharp.SKCanvas canvas SKCanvas for drawing IReadOnlyViewport viewport Active viewport for this drawing operation ILayer layer Layer that contains feature IFeature feature Feature to draw IStyle style Style to draw ISymbolCache symbolCache SymbolCache for ready rendered bitmaps Returns Type Description System.Boolean"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ButtonWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ButtonWidgetRenderer.html",
    "title": "Class ButtonWidgetRenderer",
    "keywords": "Class ButtonWidgetRenderer Inheritance System.Object ButtonWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ButtonWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaWidgets",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaWidgets Classes ButtonWidgetRenderer HyperlinkWidgetRenderer PerformanceWidgetRenderer ScaleBarWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer Interfaces ISkiaWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html",
    "title": "Class HyperlinkWidgetRenderer",
    "keywords": "Class HyperlinkWidgetRenderer Inheritance System.Object HyperlinkWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class HyperlinkWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html",
    "title": "Interface ISkiaWidgetRenderer",
    "keywords": "Interface ISkiaWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public interface ISkiaWidgetRenderer : IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html",
    "title": "Class PerformanceWidgetRenderer",
    "keywords": "Class PerformanceWidgetRenderer Inheritance System.Object PerformanceWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class PerformanceWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer, IDisposable Constructors | Improve this Doc View Source PerformanceWidgetRenderer(Single, Single, Int32, SKColor, SKColor) Renderer for PerformanceWidget Declaration public PerformanceWidgetRenderer(float x, float y, int textSize, SKColor textColor, SKColor backgroundColor) Parameters Type Name Description System.Single x X position of widget on screen System.Single y Y position of widget on screen System.Int32 textSize Size of text SkiaSharp.SKColor textColor Color for text SkiaSharp.SKColor backgroundColor Color for background Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer System.IDisposable"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance System.Object ScaleBarWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ScaleBarWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer, IDisposable Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer System.IDisposable"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance System.Object WidgetRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public static class WidgetRenderer Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>, Single) Declaration public static void Render(object target, IReadOnlyViewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renders, float layerOpacity) Parameters Type Name Description System.Object target IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < IWidget > widgets System.Collections.Generic.IDictionary < System.Type , IWidgetRenderer > renders System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance System.Object ZoomInOutWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ZoomInOutWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SkiaSharp.SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SvgRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SvgRenderer.html",
    "title": "Class SvgRenderer",
    "keywords": "Class SvgRenderer Inheritance System.Object SvgRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SvgRenderer Methods | Improve this Doc View Source Draw(SKCanvas, SKSvg, Single, Single, Single, Single, Single, Single, Single) Declaration public static void Draw(SKCanvas canvas, SKSvg svg, float x, float y, float orientation = 0F, float offsetX = 0F, float offsetY = 0F, float opacity = 1F, float scale = 1F) Parameters Type Name Description SkiaSharp.SKCanvas canvas Svg.Skia.SKSvg svg System.Single x System.Single y System.Single orientation System.Single offsetX System.Single offsetY System.Single opacity System.Single scale"
  },
  "api/Mapsui.Rendering.Skia.SymbolCache.html": {
    "href": "api/Mapsui.Rendering.Skia.SymbolCache.html",
    "title": "Class SymbolCache",
    "keywords": "Class SymbolCache Inheritance System.Object SymbolCache Implements ISymbolCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SymbolCache : ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration public BitmapInfo GetOrCreate(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description BitmapInfo | Improve this Doc View Source GetSize(Int32) Declaration public Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size Implements ISymbolCache"
  },
  "api/Mapsui.Rendering.Skia.SymbolStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SymbolStyleRenderer.html",
    "title": "Class SymbolStyleRenderer",
    "keywords": "Class SymbolStyleRenderer Inheritance System.Object SymbolStyleRenderer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SymbolStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, SymbolStyle, Double, Double, Single, SymbolType, Double) Declaration public static void Draw(SKCanvas canvas, SymbolStyle style, double x, double y, float opacity, SymbolType symbolType, double mapRotation) Parameters Type Name Description SkiaSharp.SKCanvas canvas SymbolStyle style System.Double x System.Double y System.Single opacity SymbolType symbolType System.Double mapRotation | Improve this Doc View Source Draw(SKCanvas, VectorStyle, Double, Double, Single, SymbolType) Declaration public static void Draw(SKCanvas canvas, VectorStyle vectorStyle, double x, double y, float opacity, SymbolType symbolType) Parameters Type Name Description SkiaSharp.SKCanvas canvas VectorStyle vectorStyle System.Double x System.Double y System.Single opacity SymbolType symbolType | Improve this Doc View Source Draw(SKCanvas, VectorStyle, Single, SymbolType) Declaration public static void Draw(SKCanvas canvas, VectorStyle vectorStyle, float opacity, SymbolType symbolType = SymbolType.Ellipse) Parameters Type Name Description SkiaSharp.SKCanvas canvas VectorStyle vectorStyle System.Single opacity SymbolType symbolType"
  },
  "api/Mapsui.Rendering.VisibleFeatureIterator.html": {
    "href": "api/Mapsui.Rendering.VisibleFeatureIterator.html",
    "title": "Class VisibleFeatureIterator",
    "keywords": "Class VisibleFeatureIterator Inheritance System.Object VisibleFeatureIterator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class VisibleFeatureIterator Methods | Improve this Doc View Source IterateLayers(IReadOnlyViewport, IEnumerable<ILayer>, Action<IReadOnlyViewport, ILayer, IStyle, IFeature, Single>) Declaration public static void IterateLayers(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Action<IReadOnlyViewport, ILayer, IStyle, IFeature, float> callback) Parameters Type Name Description IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Action < IReadOnlyViewport , ILayer , IStyle , IFeature , System.Single > callback"
  },
  "api/Mapsui.Styles.ArrowAlignment.html": {
    "href": "api/Mapsui.Styles.ArrowAlignment.html",
    "title": "Enum ArrowAlignment",
    "keywords": "Enum ArrowAlignment Determines, where the pointer is Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum ArrowAlignment Fields Name Description Bottom Callout arrow is at bottom side of bubble Left Callout arrow is at left side of bubble Right Callout arrow is at right side of bubble Top Callout arrow is at top side of bubble"
  },
  "api/Mapsui.Styles.BitmapRegistry.html": {
    "href": "api/Mapsui.Styles.BitmapRegistry.html",
    "title": "Class BitmapRegistry",
    "keywords": "Class BitmapRegistry Class for managing all bitmaps, which are registered for Mapsui drawing Inheritance System.Object BitmapRegistry Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class BitmapRegistry Properties | Improve this Doc View Source Instance Singleton of BitmapRegistry class Declaration public static BitmapRegistry Instance { get; } Property Value Type Description BitmapRegistry Methods | Improve this Doc View Source Get(Int32) Get bitmap data of registered bitmap Declaration public object Get(int id) Parameters Type Name Description System.Int32 id Id of existing bitmap data Returns Type Description System.Object | Improve this Doc View Source Register(Object, String) Register a new bitmap Declaration public int Register(object bitmapData, string key = null) Parameters Type Name Description System.Object bitmapData Bitmap data to register System.String key key for accessing bitmap Returns Type Description System.Int32 Id of registered bitmap data | Improve this Doc View Source Set(Int32, Object) Set new bitmap data for a already registered bitmap Declaration public bool Set(int id, object bitmapData) Parameters Type Name Description System.Int32 id Id of existing bitmap data System.Object bitmapData New bitmap data to replace Returns Type Description System.Boolean True, if replacing worked correct | Improve this Doc View Source TryGetBitmapId(String, out Int32) Try Get Bitmap Id Declaration public bool TryGetBitmapId(string key, out int bitmapId) Parameters Type Name Description System.String key key System.Int32 bitmapId bitmap id Returns Type Description System.Boolean true if found | Improve this Doc View Source Unregister(Int32) Unregister an existing bitmap Declaration public object Unregister(int id) Parameters Type Name Description System.Int32 id Id of registered bitmap data Returns Type Description System.Object The unregistered object"
  },
  "api/Mapsui.Styles.Brush.html": {
    "href": "api/Mapsui.Styles.Brush.html",
    "title": "Class Brush",
    "keywords": "Class Brush Inheritance System.Object Brush Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Brush Constructors | Improve this Doc View Source Brush() Declaration public Brush() | Improve this Doc View Source Brush(Brush) Declaration public Brush(Brush brush) Parameters Type Name Description Brush brush | Improve this Doc View Source Brush(Color) Declaration public Brush(Color color) Parameters Type Name Description Color color Properties | Improve this Doc View Source Background Declaration public Color Background { get; set; } Property Value Type Description Color | Improve this Doc View Source BitmapId This identifies bitmap in the BitmapRegistry Declaration public int BitmapId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source FillStyle This identifies how the brush is applied, works for Color not for bitmaps Declaration public FillStyle FillStyle { get; set; } Property Value Type Description FillStyle Methods | Improve this Doc View Source Equals(Brush) Declaration public bool Equals(Brush brush) Parameters Type Name Description Brush brush Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(Brush, Brush) Declaration public static bool operator ==(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Brush, Brush) Declaration public static bool operator !=(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.CalloutStyle.html": {
    "href": "api/Mapsui.Styles.CalloutStyle.html",
    "title": "Class CalloutStyle",
    "keywords": "Class CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps Inheritance System.Object Style VectorStyle ImageStyle SymbolStyle CalloutStyle Implements IStyle Inherited Members SymbolStyle.SymbolType SymbolStyle.Equals(Object) SymbolStyle.Equals(SymbolStyle) SymbolStyle.GetHashCode() ImageStyle.UnitType ImageStyle.SymbolRotation ImageStyle.BitmapId ImageStyle.RotateWithMap ImageStyle.SymbolScale ImageStyle.SymbolOffset ImageStyle.SymbolOffsetRotatesWithMap VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class CalloutStyle : SymbolStyle, IStyle Remarks There are three different types of Callouts Type = CalloutType.Single The text in Title will be shown Type = CalloutType.Detail The text in Title and SubTitle will be shown Type = CalloutType.Custom The bitmap with ID in Content will be shown Properties | Improve this Doc View Source ArrowAlignment Anchor position of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height of anchor of Callout Declaration public float ArrowHeight { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by AnchorType Declaration public float ArrowPosition { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ArrowWidth Width of opening of anchor of Callout Declaration public float ArrowWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description System.Int32 Remarks Is a BitmapId of a save image | Improve this Doc View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source InternalContent Declaration public int InternalContent { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Invalidated Declaration public bool Invalidated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Offset Offset position in pixels of Callout Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Improve this Doc View Source Padding Padding around content of Callout Declaration public MRect Padding { get; set; } Property Value Type Description MRect | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public float RectRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Rotation Gets or sets the rotation of the Callout in degrees (clockwise is positive) Declaration public double Rotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ShadowWidth Width of shadow around Callout Declaration public float ShadowWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description System.Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Subtitle Content of Callout subtitle label Declaration public string Subtitle { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleFont Declaration public Font SubtitleFont { get; set; } Property Value Type Description Font | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Color SubtitleFontColor { get; set; } Property Value Type Description Color | Improve this Doc View Source SubtitleTextAlignment Text alignment of subtitle Declaration public Alignment SubtitleTextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source Title Content of Callout title label Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleFont Declaration public Font TitleFont { get; set; } Property Value Type Description Font | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Color TitleFontColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public Alignment TitleTextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be Single, Detail or Custom. The last need a bitmap id in Content for an owner drawn image. Implements IStyle"
  },
  "api/Mapsui.Styles.CalloutType.html": {
    "href": "api/Mapsui.Styles.CalloutType.html",
    "title": "Enum CalloutType",
    "keywords": "Enum CalloutType Type of CalloutStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum CalloutType Fields Name Description Custom Content is custom, the bitmap given in Content is shown Detail Header and detail is shown Single Only one line is shown"
  },
  "api/Mapsui.Styles.Color.html": {
    "href": "api/Mapsui.Styles.Color.html",
    "title": "Class Color",
    "keywords": "Class Color Inheritance System.Object Color Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Color Constructors | Improve this Doc View Source Color() Declaration public Color() | Improve this Doc View Source Color(Color) Declaration public Color(Color color) Parameters Type Name Description Color color | Improve this Doc View Source Color(Int32, Int32, Int32, Int32) Declaration public Color(int red, int green, int blue, int alpha = 255) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue System.Int32 alpha Fields | Improve this Doc View Source KnownColors Known HTML color names and hex code for RGB color Declaration public static readonly Dictionary<string, string> KnownColors Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > Properties | Improve this Doc View Source A Declaration public int A { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source B Declaration public int B { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Improve this Doc View Source Blue Declaration public static Color Blue { get; } Property Value Type Description Color | Improve this Doc View Source Cyan Declaration public static Color Cyan { get; } Property Value Type Description Color | Improve this Doc View Source DarkGray Declaration public static Color DarkGray { get; } Property Value Type Description Color | Improve this Doc View Source G Declaration public int G { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Gray Declaration public static Color Gray { get; } Property Value Type Description Color | Improve this Doc View Source Green Declaration public static Color Green { get; } Property Value Type Description Color | Improve this Doc View Source Indigo Declaration public static Color Indigo { get; } Property Value Type Description Color | Improve this Doc View Source Orange Declaration public static Color Orange { get; } Property Value Type Description Color | Improve this Doc View Source R Declaration public int R { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Improve this Doc View Source Transparent Declaration public static Color Transparent { get; } Property Value Type Description Color | Improve this Doc View Source Violet Declaration public static Color Violet { get; } Property Value Type Description Color | Improve this Doc View Source White Declaration public static Color White { get; } Property Value Type Description Color | Improve this Doc View Source Yellow Declaration public static Color Yellow { get; } Property Value Type Description Color Methods | Improve this Doc View Source Equals(Color) Declaration public bool Equals(Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source FromArgb(Int32, Int32, Int32, Int32) Declaration public static Color FromArgb(int a, int r, int g, int b) Parameters Type Name Description System.Int32 a System.Int32 r System.Int32 g System.Int32 b Returns Type Description Color | Improve this Doc View Source FromHsl(Single, Single, Single, Int32) Found at http://james-ramsden.com/convert-from-hsl-to-rgb-colour-codes-in-c/ Declaration public static Color FromHsl(float h, float s, float l, int a = 255) Parameters Type Name Description System.Single h System.Single s System.Single l System.Int32 a Returns Type Description Color | Improve this Doc View Source FromString(String) Converts a string in Mapbox GL format to a Mapsui Color This function assumes, that alpha is a float in range from 0.0 to 1.0. It converts this float in Mapsui Color alpha without rounding. The following colors could be converted: Named colors with known Html names Colors as Html color values with leading '#' and 6 or 3 numbers Function rgb(r,g,b) with values for red, green and blue Function rgba(r,g,b,a) with values for red, green, blue and alpha. Here alpha is between 0.0 and 1.0 like opacity. Function hsl(h,s,l) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%) and lightness (0.0% - 100.0%) Function hsla(h,s,l,a) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%), lightness (0.0% - 100.0%) and alpha. Here alpha is between 0.0 and 1.0 like opacity. Declaration public static Color FromString(string from) Parameters Type Name Description System.String from String with HTML color representation or function like rgb() or hsl() Returns Type Description Color Converted Mapsui Color | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source Opacity(Color, Nullable<Single>) Change alpha channel from given color to respect opacity Declaration public static Color Opacity(Color color, float? opacity) Parameters Type Name Description Color color Mapsui Color to change System.Nullable < System.Single > opacity Opacity of the new color Returns Type Description Color New color respecting old alpha and new opacity Operators | Improve this Doc View Source Equality(Color, Color) Declaration public static bool operator ==(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Color, Color) Declaration public static bool operator !=(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description System.Boolean Extension Methods ColorExtensions.ToSkia(Color, Single) ColorExtensions.ToForms(Color) ColorExtensions.ToNative(Color)"
  },
  "api/Mapsui.Styles.FillStyle.html": {
    "href": "api/Mapsui.Styles.FillStyle.html",
    "title": "Enum FillStyle",
    "keywords": "Enum FillStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum FillStyle Fields Name Description BackwardDiagonal Bitmap BitmapRotated Cross DiagonalCross Dotted ForwardDiagonal Hollow Horizontal Solid Svg Vertical"
  },
  "api/Mapsui.Styles.Font.html": {
    "href": "api/Mapsui.Styles.Font.html",
    "title": "Class Font",
    "keywords": "Class Font Inheritance System.Object Font Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Font Constructors | Improve this Doc View Source Font() Declaration public Font() | Improve this Doc View Source Font(Font) Declaration public Font(Font font) Parameters Type Name Description Font font Properties | Improve this Doc View Source Bold Declaration public bool Bold { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FontFamily Declaration public string FontFamily { get; set; } Property Value Type Description System.String | Improve this Doc View Source Invalidated Declaration public bool Invalidated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Italic Declaration public bool Italic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Size Declaration public double Size { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Mapsui.Styles.html": {
    "href": "api/Mapsui.Styles.html",
    "title": "Namespace Mapsui.Styles",
    "keywords": "Namespace Mapsui.Styles Classes BitmapRegistry Class for managing all bitmaps, which are registered for Mapsui drawing Brush CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps Color Font ImageStyle LabelStyle Defines a style used for rendering labels Offset Pen Size Sprite Style Defines a style used for rendering vector data StyleCollection SymbolStyle VectorStyle Interfaces IStyle Defines an interface for defining layer styles IStyleRenderer Enums ArrowAlignment Determines, where the pointer is CalloutType Type of CalloutStyle FillStyle LabelStyle.HorizontalAlignmentEnum Label text alignment LabelStyle.LineBreakMode LabelStyle.VerticalAlignmentEnum Label text alignment PenStrokeCap PenStyle StrokeJoin SymbolType UnitType"
  },
  "api/Mapsui.Styles.ImageStyle.html": {
    "href": "api/Mapsui.Styles.ImageStyle.html",
    "title": "Class ImageStyle",
    "keywords": "Class ImageStyle Inheritance System.Object Style VectorStyle ImageStyle SymbolStyle Implements IStyle Inherited Members VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(Object) VectorStyle.Equals(VectorStyle) VectorStyle.GetHashCode() Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class ImageStyle : VectorStyle, IStyle Constructors | Improve this Doc View Source ImageStyle() Declaration public ImageStyle() Properties | Improve this Doc View Source BitmapId This identifies bitmap in the BitmapRegistry. Declaration public int BitmapId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. This is useful if you need to symbolize the direction in which a vehicle is moving. When the symbol is false it will retain it's position to the screen. This is useful for pins like symbols. The default is false. This mode is not supported in the WPF renderer. Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SymbolOffset Gets or sets the offset in pixels of the symbol. Declaration public Offset SymbolOffset { get; set; } Property Value Type Description Offset Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset of SymbolScale =1.0. | Improve this Doc View Source SymbolOffsetRotatesWithMap Should SymbolOffset position rotate with map Declaration public bool SymbolOffsetRotatesWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public double SymbolRotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public double SymbolScale { get; set; } Property Value Type Description System.Double Remarks Setting the SymbolScale to '2.0' doubles the size of the symbol. A SymbolScale of 0.5 makes the scale half the size. of the original image | Improve this Doc View Source UnitType Declaration public UnitType UnitType { get; set; } Property Value Type Description UnitType Implements IStyle"
  },
  "api/Mapsui.Styles.IStyle.html": {
    "href": "api/Mapsui.Styles.IStyle.html",
    "title": "Interface IStyle",
    "keywords": "Interface IStyle Defines an interface for defining layer styles Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IStyle Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Gets or sets the objects overall opacity Declaration float Opacity { get; set; } Property Value Type Description System.Single"
  },
  "api/Mapsui.Styles.IStyleRenderer.html": {
    "href": "api/Mapsui.Styles.IStyleRenderer.html",
    "title": "Interface IStyleRenderer",
    "keywords": "Interface IStyleRenderer Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IStyleRenderer"
  },
  "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html",
    "title": "Enum LabelStyle.HorizontalAlignmentEnum",
    "keywords": "Enum LabelStyle.HorizontalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum HorizontalAlignmentEnum : short Fields Name Description Center Centered Left Left oriented Right Right oriented"
  },
  "api/Mapsui.Styles.LabelStyle.html": {
    "href": "api/Mapsui.Styles.LabelStyle.html",
    "title": "Class LabelStyle",
    "keywords": "Class LabelStyle Defines a style used for rendering labels Inheritance System.Object Style LabelStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class LabelStyle : Style, IStyle Constructors | Improve this Doc View Source LabelStyle() Declaration public LabelStyle() | Improve this Doc View Source LabelStyle(LabelStyle) Declaration public LabelStyle(LabelStyle labelStyle) Parameters Type Name Description LabelStyle labelStyle Properties | Improve this Doc View Source BackColor The background color of the label. Set to transparent brush or null if background isn't needed Declaration public Brush BackColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source BorderColor The color of the border around the background. Declaration public Color BorderColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderThickness The thickness of the border around the background. Declaration public double BorderThickness { get; set; } Property Value Type Description System.Double | Improve this Doc View Source CollisionDetection Gets or sets whether Collision Detection is enabled for the labels. If set to true, label collision will be tested. Declaration public bool CollisionDetection { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CornerRounding The radius of the oval used to round the corners of the background. See . Declaration public int CornerRounding { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Font Label Font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Halo Creates a halo around the text Declaration public Pen Halo { get; set; } Property Value Type Description Pen | Improve this Doc View Source HorizontalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.HorizontalAlignmentEnum HorizontalAlignment { get; set; } Property Value Type Description LabelStyle.HorizontalAlignmentEnum | Improve this Doc View Source LabelColumn The column of the feature used by GetLabelText to return the label text. Declaration public string LabelColumn { get; set; } Property Value Type Description System.String Remarks Used only when LabelMethod is not set. Overrides use of the Text field. | Improve this Doc View Source LabelMethod Method used by GetLabelText to return the label text. Declaration public Func<IFeature, string> LabelMethod { get; set; } Property Value Type Description System.Func < IFeature , System.String > Remarks Overrides use of Text and LabelColumn fields. | Improve this Doc View Source LineHeight Space from one text line to next text line in em Declaration public double LineHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MaxWidth Maximum width of text in em. If text is wider than this, text is shorten or word wrapped regarding WordWrap. Declaration public double MaxWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Offset Specifies relative position of labels with respect to objects label point Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Improve this Doc View Source Text The text used for this specific label. Declaration public string Text { set; } Property Value Type Description System.String Remarks Used only when LabelColumn and LabelMethod are not set. | Improve this Doc View Source VerticalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.VerticalAlignmentEnum VerticalAlignment { get; set; } Property Value Type Description LabelStyle.VerticalAlignmentEnum | Improve this Doc View Source WordWrap Line break mode for text, if width is bigger than MaxWidth Declaration public LabelStyle.LineBreakMode WordWrap { get; set; } Property Value Type Description LabelStyle.LineBreakMode Methods | Improve this Doc View Source GetLabelText(IFeature) The text used for this specific label. Declaration public string GetLabelText(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description System.String Implements IStyle"
  },
  "api/Mapsui.Styles.LabelStyle.LineBreakMode.html": {
    "href": "api/Mapsui.Styles.LabelStyle.LineBreakMode.html",
    "title": "Enum LabelStyle.LineBreakMode",
    "keywords": "Enum LabelStyle.LineBreakMode Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum LineBreakMode : short Fields Name Description CharacterWrap Wrap at character boundaries HeadTruncation Truncate the head of text MiddleTruncation Truncate the middle of text. This may be done, for example, by replacing it with an ellipsis NoWrap Do not wrap text TailTruncation Truncate the tail of text WordWrap Wrap at word boundaries"
  },
  "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html",
    "title": "Enum LabelStyle.VerticalAlignmentEnum",
    "keywords": "Enum LabelStyle.VerticalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum VerticalAlignmentEnum : short Fields Name Description Bottom Left oriented Center Centered Top Right oriented"
  },
  "api/Mapsui.Styles.Offset.html": {
    "href": "api/Mapsui.Styles.Offset.html",
    "title": "Class Offset",
    "keywords": "Class Offset Inheritance System.Object Offset Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Offset Constructors | Improve this Doc View Source Offset() Offset of images from the center of the image. If IsRelative, than the offset is between -0.5 and +0.5. Declaration public Offset() | Improve this Doc View Source Offset(Offset, Boolean) Declaration public Offset(Offset offset, bool isRelative = false) Parameters Type Name Description Offset offset System.Boolean isRelative | Improve this Doc View Source Offset(Double, Double, Boolean) Declaration public Offset(double x, double y, bool isRelative = false) Parameters Type Name Description System.Double x System.Double y System.Boolean isRelative Properties | Improve this Doc View Source IsRelative Declaration public bool IsRelative { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Offset) Declaration public bool Equals(Offset offset) Parameters Type Name Description Offset offset Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(Offset, Offset) Declaration public static bool operator ==(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Offset, Offset) Declaration public static bool operator !=(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.Pen.html": {
    "href": "api/Mapsui.Styles.Pen.html",
    "title": "Class Pen",
    "keywords": "Class Pen Inheritance System.Object Pen Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Pen Constructors | Improve this Doc View Source Pen() Declaration public Pen() | Improve this Doc View Source Pen(Color, Double) Declaration public Pen(Color color, double width = 1) Parameters Type Name Description Color color System.Double width Properties | Improve this Doc View Source Color Color of line Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source DashArray Array for drawing user defined dashes. Should be even and values are multiplied by line width before drawing. Declaration public float[] DashArray { get; set; } Property Value Type Description System.Single [] | Improve this Doc View Source DashOffset Offset for drawing user defined dashes Declaration public float DashOffset { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PenStrokeCap Defines the end of a line Declaration public PenStrokeCap PenStrokeCap { get; set; } Property Value Type Description PenStrokeCap | Improve this Doc View Source PenStyle Style of the line (solid/dashed), which is drawn Declaration public PenStyle PenStyle { get; set; } Property Value Type Description PenStyle | Improve this Doc View Source StrokeJoin Defines how line parts are join together Declaration public StrokeJoin StrokeJoin { get; set; } Property Value Type Description StrokeJoin | Improve this Doc View Source StrokeMiterLimit Defines up to which width of line StrokeJoin is used Declaration public float StrokeMiterLimit { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Width Width of line Declaration public double Width { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Pen) Declaration public bool Equals(Pen pen) Parameters Type Name Description Pen pen Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(Pen, Pen) Declaration public static bool operator ==(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Pen, Pen) Declaration public static bool operator !=(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.PenStrokeCap.html": {
    "href": "api/Mapsui.Styles.PenStrokeCap.html",
    "title": "Enum PenStrokeCap",
    "keywords": "Enum PenStrokeCap Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStrokeCap Fields Name Description Butt Round Square Extension Methods PenStrokeCapExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.PenStyle.html": {
    "href": "api/Mapsui.Styles.PenStyle.html",
    "title": "Enum PenStyle",
    "keywords": "Enum PenStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStyle Fields Name Description Dash DashDot DashDotDot Dot LongDash LongDashDot ShortDash ShortDashDot ShortDashDotDot ShortDot Solid UserDefined Extension Methods PenStyleExtension.ToSkia(Single, Single[], Single)"
  },
  "api/Mapsui.Styles.Size.html": {
    "href": "api/Mapsui.Styles.Size.html",
    "title": "Class Size",
    "keywords": "Class Size Inheritance System.Object Size Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Size Constructors | Improve this Doc View Source Size() Declaration public Size() | Improve this Doc View Source Size(Size) Declaration public Size(Size size) Parameters Type Name Description Size size | Improve this Doc View Source Size(Double, Double) Declaration public Size(double width, double height) Parameters Type Name Description System.Double width System.Double height Properties | Improve this Doc View Source Height Declaration public double Height { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Width Declaration public double Width { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Styles.Sprite.html": {
    "href": "api/Mapsui.Styles.Sprite.html",
    "title": "Class Sprite",
    "keywords": "Class Sprite Inheritance System.Object Sprite Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Sprite Constructors | Improve this Doc View Source Sprite(Int32, MPoint, Size, Single) Declaration public Sprite(int atlas, MPoint p, Size s, float pixelRatio) Parameters Type Name Description System.Int32 atlas MPoint p Size s System.Single pixelRatio | Improve this Doc View Source Sprite(Int32, Int32, Int32, Int32, Int32, Single) Declaration public Sprite(int atlas, int x, int y, int width, int height, float pixelRatio) Parameters Type Name Description System.Int32 atlas System.Int32 x System.Int32 y System.Int32 width System.Int32 height System.Single pixelRatio Properties | Improve this Doc View Source Atlas Declaration public int Atlas { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Data Declaration public object Data { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Height Declaration public int Height { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PixelRatio Declaration public float PixelRatio { get; } Property Value Type Description System.Single | Improve this Doc View Source Width Declaration public int Width { get; } Property Value Type Description System.Int32 | Improve this Doc View Source X Declaration public int X { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y { get; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.Styles.StrokeJoin.html": {
    "href": "api/Mapsui.Styles.StrokeJoin.html",
    "title": "Enum StrokeJoin",
    "keywords": "Enum StrokeJoin Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum StrokeJoin Fields Name Description Bevel Miter Round Extension Methods PenStrokeJoinExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.Style.html": {
    "href": "api/Mapsui.Styles.Style.html",
    "title": "Class Style",
    "keywords": "Class Style Defines a style used for rendering vector data Inheritance System.Object Style LabelStyle CustomTheme GradientTheme ThemeStyle VectorStyle Implements IStyle Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Style : IStyle Constructors | Improve this Doc View Source Style() Declaration public Style() Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Gets or sets the objects base opacity Declaration public float Opacity { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Equals(Style) Declaration public bool Equals(Style style) Parameters Type Name Description Style style Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Operators | Improve this Doc View Source Equality(Style, Style) Declaration public static bool operator ==(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Style, Style) Declaration public static bool operator !=(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.StyleCollection.html": {
    "href": "api/Mapsui.Styles.StyleCollection.html",
    "title": "Class StyleCollection",
    "keywords": "Class StyleCollection Inheritance System.Object System.Collections.ObjectModel.Collection < IStyle > StyleCollection Implements System.Collections.Generic.IList < IStyle > System.Collections.Generic.ICollection < IStyle > System.Collections.Generic.IReadOnlyList < IStyle > System.Collections.Generic.IReadOnlyCollection < IStyle > System.Collections.Generic.IEnumerable < IStyle > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IStyle Inherited Members System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Add(Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Clear() System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.ClearItems() System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Contains(Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.CopyTo(Mapsui.Styles.IStyle[], System.Int32) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.GetEnumerator() System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.IndexOf(Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Insert(System.Int32, Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.InsertItem(System.Int32, Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Remove(Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.SetItem(System.Int32, Mapsui.Styles.IStyle) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Count System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Item[System.Int32] System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.Items System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.Generic.ICollection<Mapsui.Styles.IStyle>.IsReadOnly System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Mapsui.Styles.IStyle>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class StyleCollection : Collection<IStyle>, IList<IStyle>, ICollection<IStyle>, IReadOnlyList<IStyle>, IReadOnlyCollection<IStyle>, IEnumerable<IStyle>, IList, ICollection, IEnumerable, IStyle Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Declaration public float Opacity { get; set; } Property Value Type Description System.Single Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IStyle"
  },
  "api/Mapsui.Styles.SymbolStyle.html": {
    "href": "api/Mapsui.Styles.SymbolStyle.html",
    "title": "Class SymbolStyle",
    "keywords": "Class SymbolStyle Inheritance System.Object Style VectorStyle ImageStyle SymbolStyle CalloutStyleRenderer CalloutStyle Implements IStyle Inherited Members ImageStyle.UnitType ImageStyle.SymbolRotation ImageStyle.BitmapId ImageStyle.RotateWithMap ImageStyle.SymbolScale ImageStyle.SymbolOffset ImageStyle.SymbolOffsetRotatesWithMap VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class SymbolStyle : ImageStyle, IStyle Properties | Improve this Doc View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source SymbolType Declaration public SymbolType SymbolType { get; set; } Property Value Type Description SymbolType Methods | Improve this Doc View Source Equals(SymbolStyle) Declaration public bool Equals(SymbolStyle symbolStyle) Parameters Type Name Description SymbolStyle symbolStyle Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides VectorStyle.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides VectorStyle.GetHashCode() Operators | Improve this Doc View Source Equality(SymbolStyle, SymbolStyle) Declaration public static bool operator ==(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(SymbolStyle, SymbolStyle) Declaration public static bool operator !=(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.SymbolType.html": {
    "href": "api/Mapsui.Styles.SymbolType.html",
    "title": "Enum SymbolType",
    "keywords": "Enum SymbolType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum SymbolType Fields Name Description Ellipse Rectangle Triangle"
  },
  "api/Mapsui.Styles.Thematics.ColorBlend.html": {
    "href": "api/Mapsui.Styles.Thematics.ColorBlend.html",
    "title": "Class ColorBlend",
    "keywords": "Class ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. Inheritance System.Object ColorBlend Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ColorBlend Constructors | Improve this Doc View Source ColorBlend(Color[], Double[]) Initializes a new instance of the ColorBlend class. Declaration public ColorBlend(Color[] colors, double[] positions) Parameters Type Name Description Color [] colors An array of Color structures that represents the colors to use at corresponding positions along a gradient. System.Double [] positions An array of values that specify percentages of distance along the gradient line. Properties | Improve this Doc View Source BlackToWhite Gets a linear gradient scale from black to white Declaration public static ColorBlend BlackToWhite { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToGreen Gets a linear gradient scale from blue to green Declaration public static ColorBlend BlueToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToRed Gets a linear gradient scale from blue to red Declaration public static ColorBlend BlueToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Colors Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient. Declaration public Color[] Colors { get; set; } Property Value Type Description Color [] | Improve this Doc View Source GreenToBlue Gets a linear gradient scale from green to blue Declaration public static ColorBlend GreenToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source GreenToRed Gets a linear gradient scale from green to red Declaration public static ColorBlend GreenToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Positions Gets or sets the positions along a gradient line. Declaration public double[] Positions { get; set; } Property Value Type Description System.Double [] An array of values that specify percentages of distance along the gradient line. Remarks The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f, and the first element of the array must be 0.0f and the last element must be 1.0f. Along with the Colors property, this property defines a multicolor gradient. | Improve this Doc View Source Rainbow5 Gets a linear gradient scale with five colors making a rainbow from red to blue. Declaration public static ColorBlend Rainbow5 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 0.25: { Color.Red, Color.Yellow, Color.Green, Color.Cyan, Color.Blue } | Improve this Doc View Source Rainbow7 Gets a linear gradient scale with seven colors making a rainbow from red to violet. Declaration public static ColorBlend Rainbow7 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 1/6: { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Violet } | Improve this Doc View Source RedToBlue Gets a linear gradient scale from red to blue Declaration public static ColorBlend RedToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source RedToGreen Gets a linear gradient scale from red to green Declaration public static ColorBlend RedToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source WhiteToBlack Gets a linear gradient scale from white to black Declaration public static ColorBlend WhiteToBlack { get; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetColor(Double) Gets the color from the scale at position 'pos'. Declaration public Color GetColor(double pos) Parameters Type Name Description System.Double pos Position on scale between 0.0f and 1.0f Returns Type Description Color Color on scale Remarks If the position is outside the scale [0..1] only the fractional part is used (in other words the scale restarts for each integer-part). | Improve this Doc View Source ThreeColors(Color, Color, Color) Creates a linear gradient scale from three colors Declaration public static ColorBlend ThreeColors(Color fromColor, Color middleColor, Color toColor) Parameters Type Name Description Color fromColor Color middleColor Color toColor Returns Type Description ColorBlend | Improve this Doc View Source TwoColors(Color, Color) Creates a linear gradient scale from two colors Declaration public static ColorBlend TwoColors(Color fromColor, Color toColor) Parameters Type Name Description Color fromColor Color toColor Returns Type Description ColorBlend"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html",
    "title": "Delegate CustomTheme.GetStyleMethod",
    "keywords": "Delegate CustomTheme.GetStyleMethod Custom Style Delegate method Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public delegate IStyle GetStyleMethod(IFeature feature); Parameters Type Name Description IFeature feature Feature Returns Type Description IStyle Style to be applied to feature"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.html",
    "title": "Class CustomTheme",
    "keywords": "Class CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. Inheritance System.Object Style CustomTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class CustomTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source CustomTheme(CustomTheme.GetStyleMethod) Initializes a new instance of the CustomTheme class Declaration public CustomTheme(CustomTheme.GetStyleMethod getStyleMethod) Parameters Type Name Description CustomTheme.GetStyleMethod getStyleMethod Properties | Improve this Doc View Source DefaultStyle Gets or sets the default style when an attribute isn't found in any bucket Declaration public IStyle DefaultStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source StyleDelegate Gets or sets the style delegate used for determining the style of a feature Declaration public CustomTheme.GetStyleMethod StyleDelegate { get; set; } Property Value Type Description CustomTheme.GetStyleMethod See Also CustomTheme.GetStyleMethod Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.GradientTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.GradientTheme.html",
    "title": "Class GradientTheme",
    "keywords": "Class GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. Inheritance System.Object Style GradientTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class GradientTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source GradientTheme(String, Double, Double, IStyle, IStyle) Initializes a new instance of the GradientTheme class Declaration public GradientTheme(string columnName, double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description System.String columnName Name of column to extract the attribute System.Double minValue Minimum value System.Double maxValue Maximum value IStyle minStyle Color for minimum value IStyle maxStyle Color for maximum value Remarks The gradient theme interpolates linearly between two styles based on a numerical attribute in the data source. This is useful for scaling symbols, line widths, line and fill colors from numerical attributes. Colors are interpolated between two colors, but if you want to interpolate through more colors (fx. a rainbow), set the TextColorBlend , LineColorBlend and FillColorBlend properties to a custom ColorBlend . The following properties are scaled (properties not mentioned here are not interpolated): Property Remarks Color Red, Green, Blue and Alpha values are linearly interpolated. Pen The color, width, color of pens are interpolated. MiterLimit,StartCap,EndCap,LineJoin,DashStyle,DashPattern,DashOffset,DashCap,CompoundArray, and Alignment are switched in the middle of the min/max values. Brush Brush color are interpolated. Other brushes are not supported. VectorStyle MaxVisible, MinVisible, Line, Outline, Fill and SymbolScale are scaled linearly. Symbol, EnableOutline and Enabled switch in the middle of the min/max values. LabelStyle FontSize, BackColor, ForeColor, MaxVisible, MinVisible, Offset are scaled linearly. All other properties use min-style. Creating a rainbow color blend showing colors from red, through yellow, green and blue depicting the population density of a country. //Create two vector styles to interpolate between Mapsui.Styles.VectorStyle min = new Mapsui.Styles.VectorStyle(); Mapsui.Styles.VectorStyle max = new Mapsui.Styles.VectorStyle(); min.Outline.Width = 1f; //Outline width of the minimum value max.Outline.Width = 3f; //Outline width of the maximum value //Create a theme interpolating population density between 0 and 400 Mapsui.Rendering.Thematics.GradientTheme popdens = new Mapsui.Rendering.Thematics.GradientTheme(\"PopDens\", 0, 400, min, max); //Set the fill-style colors to be a rainbow blend from red to blue. popdens.FillColorBlend = Mapsui.Rendering.Thematics.ColorBlend.Rainbow5; myVectorLayer.Styles.Add(popdens); Properties | Improve this Doc View Source ColumnName Gets or sets the column name from where to get the attribute value Declaration public string ColumnName { get; set; } Property Value Type Description System.String | Improve this Doc View Source FillColorBlend Gets or sets the ColorBlend used as Fill Declaration public ColorBlend FillColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source LineColorBlend Gets or sets the ColorBlend used on lines Declaration public ColorBlend LineColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source Max Gets or sets the maximum value of the gradient Declaration public double Max { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MaxStyle Gets or sets the IStyle for the maximum value Declaration public IStyle MaxStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Min Gets or sets the minimum value of the gradient Declaration public double Min { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinStyle Gets or sets the IStyle for the minimum value Declaration public IStyle MinStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source TextColorBlend Gets or sets the ColorBlend used on labels Declaration public ColorBlend TextColorBlend { get; set; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a numeric DataColumn, where style properties are linearly interpolated between max and min values. Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Feature Returns Type Description IStyle IStyle calculated by a linear interpolation between the min/max styles Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.html": {
    "href": "api/Mapsui.Styles.Thematics.html",
    "title": "Namespace Mapsui.Styles.Thematics",
    "keywords": "Namespace Mapsui.Styles.Thematics Classes ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. ThemeStyle Interfaces IThemeStyle Interface for rendering a thematic layer Delegates CustomTheme.GetStyleMethod Custom Style Delegate method"
  },
  "api/Mapsui.Styles.Thematics.IThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.IThemeStyle.html",
    "title": "Interface IThemeStyle",
    "keywords": "Interface IThemeStyle Interface for rendering a thematic layer Inherited Members IStyle.MinVisible IStyle.MaxVisible IStyle.Enabled IStyle.Opacity Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public interface IThemeStyle : IStyle Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a feature Declaration IStyle GetStyle(IFeature feature) Parameters Type Name Description IFeature feature Feature to calculate color from Returns Type Description IStyle Color"
  },
  "api/Mapsui.Styles.Thematics.ThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.ThemeStyle.html",
    "title": "Class ThemeStyle",
    "keywords": "Class ThemeStyle Inheritance System.Object Style ThemeStyle Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ThemeStyle : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source ThemeStyle(Func<IFeature, IStyle>) Declaration public ThemeStyle(Func<IFeature, IStyle> method) Parameters Type Name Description System.Func < IFeature , IStyle > method Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature attribute) Parameters Type Name Description IFeature attribute Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.UnitType.html": {
    "href": "api/Mapsui.Styles.UnitType.html",
    "title": "Enum UnitType",
    "keywords": "Enum UnitType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum UnitType Fields Name Description Pixel WorldUnit"
  },
  "api/Mapsui.Styles.VectorStyle.html": {
    "href": "api/Mapsui.Styles.VectorStyle.html",
    "title": "Class VectorStyle",
    "keywords": "Class VectorStyle Inheritance System.Object Style VectorStyle ImageStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class VectorStyle : Style, IStyle Constructors | Improve this Doc View Source VectorStyle() Declaration public VectorStyle() Properties | Improve this Doc View Source Fill Fill style for Polygon geometries Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Line Line style for line geometries Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source Outline Outline style for line and polygon geometries Declaration public Pen Outline { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source Equals(VectorStyle) Declaration public bool Equals(VectorStyle vectorStyle) Parameters Type Name Description VectorStyle vectorStyle Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides Style.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Style.GetHashCode() Operators | Improve this Doc View Source Equality(VectorStyle, VectorStyle) Declaration public static bool operator ==(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(VectorStyle, VectorStyle) Declaration public static bool operator !=(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.UI.Android.Extensions.html": {
    "href": "api/Mapsui.UI.Android.Extensions.html",
    "title": "Namespace Mapsui.UI.Android.Extensions",
    "keywords": "Namespace Mapsui.UI.Android.Extensions Classes PointExtensions"
  },
  "api/Mapsui.UI.Android.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.UI.Android.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android.Extensions Assembly : Mapsui.UI.Android.dll Syntax public static class PointExtensions Methods | Improve this Doc View Source ToDeviceIndependentUnits(MPoint, Single) Declaration public static MPoint ToDeviceIndependentUnits(this MPoint point, float pixelDensity) Parameters Type Name Description MPoint point System.Single pixelDensity Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Android.html": {
    "href": "api/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl Resource Resource.Attribute Resource.String Resource.Styleable Enums SkiaRenderMode"
  },
  "api/Mapsui.UI.Android.MapControl.html": {
    "href": "api/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object Java.Lang.Object Android.Views.View Android.Views.ViewGroup MapControl Implements Android.Graphics.Drawables.Drawable.ICallback Android.Views.Accessibility.IAccessibilityEventSource Android.Views.KeyEvent.ICallback Android.Views.IViewManager Android.Views.IViewParent Android.Runtime.IJavaObject Java.Interop.IJavaPeerable IMapControl System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members Android.Views.ViewGroup.ClipToPaddingMask Android.Views.ViewGroup.LayoutModeClipBounds Android.Views.ViewGroup.LayoutModeOpticalBounds Android.Views.ViewGroup.AddStatesFromChildren() Android.Views.ViewGroup.AddView(Android.Views.View) Android.Views.ViewGroup.AddView(Android.Views.View, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32, System.Int32) Android.Views.ViewGroup.AddViewInLayout(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddViewInLayout(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams, System.Boolean) Android.Views.ViewGroup.AttachLayoutAnimationParameters(Android.Views.View, Android.Views.ViewGroup.LayoutParams, System.Int32, System.Int32) Android.Views.ViewGroup.AttachViewToParent(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.BringChildToFront(Android.Views.View) Android.Views.ViewGroup.CanAnimate() Android.Views.ViewGroup.CheckLayoutParams(Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.ChildDrawableStateChanged(Android.Views.View) Android.Views.ViewGroup.ChildHasTransientStateChanged(Android.Views.View, System.Boolean) Android.Views.ViewGroup.CleanupLayoutState(Android.Views.View) Android.Views.ViewGroup.ClearChildFocus(Android.Views.View) Android.Views.ViewGroup.ClearDisappearingChildren() Android.Views.ViewGroup.Debug(System.Int32) Android.Views.ViewGroup.DetachAllViewsFromParent() Android.Views.ViewGroup.DetachViewFromParent(Android.Views.View) Android.Views.ViewGroup.DetachViewFromParent(System.Int32) Android.Views.ViewGroup.DetachViewsFromParent(System.Int32, System.Int32) Android.Views.ViewGroup.DispatchFreezeSelfOnly(Android.Util.SparseArray) Android.Views.ViewGroup.DispatchSetActivated(System.Boolean) Android.Views.ViewGroup.DispatchSetSelected(System.Boolean) Android.Views.ViewGroup.DispatchThawSelfOnly(Android.Util.SparseArray) Android.Views.ViewGroup.DrawChild(Android.Graphics.Canvas, Android.Views.View, System.Int64) Android.Views.ViewGroup.EndViewTransition(Android.Views.View) Android.Views.ViewGroup.FocusableViewAvailable(Android.Views.View) Android.Views.ViewGroup.FocusSearch(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.ViewGroup.GatherTransparentRegion(Android.Graphics.Region) Android.Views.ViewGroup.GenerateDefaultLayoutParams() Android.Views.ViewGroup.GenerateLayoutParams(Android.Util.IAttributeSet) Android.Views.ViewGroup.GenerateLayoutParams(Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.GetChildAt(System.Int32) Android.Views.ViewGroup.GetChildDrawingOrder(System.Int32, System.Int32) Android.Views.ViewGroup.GetChildMeasureSpec(System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.GetChildStaticTransformation(Android.Views.View, Android.Views.Animations.Transformation) Android.Views.ViewGroup.GetChildVisibleRect(Android.Views.View, Android.Graphics.Rect, Android.Graphics.Point) Android.Views.ViewGroup.IndexOfChild(Android.Views.View) Android.Views.ViewGroup.InvalidateChild(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.InvalidateChildInParent(System.Int32[], Android.Graphics.Rect) Android.Views.ViewGroup.Layout(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChild(Android.Views.View, System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChildren(System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChildWithMargins(Android.Views.View, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.NotifySubtreeAccessibilityStateChanged(Android.Views.View, Android.Views.View, Android.Views.Accessibility.ContentChangeTypes) Android.Views.ViewGroup.OffsetDescendantRectToMyCoords(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.OffsetRectIntoDescendantCoords(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.OnDescendantInvalidated(Android.Views.View, Android.Views.View) Android.Views.ViewGroup.OnInterceptHoverEvent(Android.Views.MotionEvent) Android.Views.ViewGroup.OnInterceptTouchEvent(Android.Views.MotionEvent) Android.Views.ViewGroup.OnNestedFling(Android.Views.View, System.Single, System.Single, System.Boolean) Android.Views.ViewGroup.OnNestedPreFling(Android.Views.View, System.Single, System.Single) Android.Views.ViewGroup.OnNestedPrePerformAccessibilityAction(Android.Views.View, Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.ViewGroup.OnNestedPreScroll(Android.Views.View, System.Int32, System.Int32, System.Int32[]) Android.Views.ViewGroup.OnNestedScroll(Android.Views.View, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.OnNestedScrollAccepted(Android.Views.View, Android.Views.View, Android.Views.ScrollAxis) Android.Views.ViewGroup.OnRequestFocusInDescendants(System.Int32, Android.Graphics.Rect) Android.Views.ViewGroup.OnRequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent) Android.Views.ViewGroup.OnStartNestedScroll(Android.Views.View, Android.Views.View, Android.Views.ScrollAxis) Android.Views.ViewGroup.OnStopNestedScroll(Android.Views.View) Android.Views.ViewGroup.OnViewAdded(Android.Views.View) Android.Views.ViewGroup.OnViewRemoved(Android.Views.View) Android.Views.ViewGroup.RecomputeViewAttributes(Android.Views.View) Android.Views.ViewGroup.RemoveAllViews() Android.Views.ViewGroup.RemoveAllViewsInLayout() Android.Views.ViewGroup.RemoveDetachedView(Android.Views.View, System.Boolean) Android.Views.ViewGroup.RemoveView(Android.Views.View) Android.Views.ViewGroup.RemoveViewAt(System.Int32) Android.Views.ViewGroup.RemoveViewInLayout(Android.Views.View) Android.Views.ViewGroup.RemoveViews(System.Int32, System.Int32) Android.Views.ViewGroup.RemoveViewsInLayout(System.Int32, System.Int32) Android.Views.ViewGroup.RequestChildFocus(Android.Views.View, Android.Views.View) Android.Views.ViewGroup.RequestChildRectangleOnScreen(Android.Views.View, Android.Graphics.Rect, System.Boolean) Android.Views.ViewGroup.RequestDisallowInterceptTouchEvent(System.Boolean) Android.Views.ViewGroup.RequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent) Android.Views.ViewGroup.RequestTransparentRegion(Android.Views.View) Android.Views.ViewGroup.ResetResolvedLayoutDirection() Android.Views.ViewGroup.ResetResolvedTextDirection() Android.Views.ViewGroup.ScheduleLayoutAnimation() Android.Views.ViewGroup.SetAddStatesFromChildren(System.Boolean) Android.Views.ViewGroup.SetChildrenDrawingCacheEnabled(System.Boolean) Android.Views.ViewGroup.SetClipChildren(System.Boolean) Android.Views.ViewGroup.SetClipToPadding(System.Boolean) Android.Views.ViewGroup.SetOnHierarchyChangeListener(Android.Views.ViewGroup.IOnHierarchyChangeListener) Android.Views.ViewGroup.SetStaticTransformationsEnabled(System.Boolean) Android.Views.ViewGroup.ShouldDelayChildPressedState() Android.Views.ViewGroup.ShowContextMenuForChild(Android.Views.View) Android.Views.ViewGroup.ShowContextMenuForChild(Android.Views.View, System.Single, System.Single) Android.Views.ViewGroup.StartActionModeForChild(Android.Views.View, Android.Views.ActionMode.ICallback) Android.Views.ViewGroup.StartActionModeForChild(Android.Views.View, Android.Views.ActionMode.ICallback, Android.Views.ActionModeType) Android.Views.ViewGroup.StartLayoutAnimation() Android.Views.ViewGroup.StartViewTransition(Android.Views.View) Android.Views.ViewGroup.UpdateViewLayout(Android.Views.View, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AlwaysDrawnWithCacheEnabled Android.Views.ViewGroup.AnimationCacheEnabled Android.Views.ViewGroup.ChildCount Android.Views.ViewGroup.ChildrenDrawingOrderEnabled Android.Views.ViewGroup.ChildrenDrawnWithCacheEnabled Android.Views.ViewGroup.ClipChildren Android.Views.ViewGroup.ClipToPadding Android.Views.ViewGroup.DescendantFocusability Android.Views.ViewGroup.FocusedChild Android.Views.ViewGroup.LayoutAnimation Android.Views.ViewGroup.LayoutAnimationListener Android.Views.ViewGroup.LayoutMode Android.Views.ViewGroup.LayoutTransition Android.Views.ViewGroup.MotionEventSplittingEnabled Android.Views.ViewGroup.NestedScrollAxes Android.Views.ViewGroup.PersistentDrawingCache Android.Views.ViewGroup.TouchscreenBlocksFocus Android.Views.ViewGroup.TransitionGroup Android.Views.ViewGroup.ChildViewAdded Android.Views.ViewGroup.ChildViewRemoved Android.Views.ViewGroup.AnimationEnd Android.Views.ViewGroup.AnimationRepeat Android.Views.ViewGroup.AnimationStart Android.Views.View.AccessibilityLiveRegionAssertive Android.Views.View.AccessibilityLiveRegionNone Android.Views.View.AccessibilityLiveRegionPolite Android.Views.View.AutofillFlagIncludeNotImportantViews Android.Views.View.AutofillHintCreditCardExpirationDate Android.Views.View.AutofillHintCreditCardExpirationDay Android.Views.View.AutofillHintCreditCardExpirationMonth Android.Views.View.AutofillHintCreditCardExpirationYear Android.Views.View.AutofillHintCreditCardNumber Android.Views.View.AutofillHintCreditCardSecurityCode Android.Views.View.AutofillHintEmailAddress Android.Views.View.AutofillHintName Android.Views.View.AutofillHintPassword Android.Views.View.AutofillHintPhone Android.Views.View.AutofillHintPostalAddress Android.Views.View.AutofillHintPostalCode Android.Views.View.AutofillHintUsername Android.Views.View.AutofillTypeDate Android.Views.View.AutofillTypeList Android.Views.View.AutofillTypeNone Android.Views.View.AutofillTypeText Android.Views.View.AutofillTypeToggle Android.Views.View.DragFlagGlobal Android.Views.View.DragFlagGlobalPersistableUriPermission Android.Views.View.DragFlagGlobalPrefixUriPermission Android.Views.View.DragFlagGlobalUriRead Android.Views.View.DragFlagGlobalUriWrite Android.Views.View.DragFlagOpaque Android.Views.View.FindViewsWithContentDescription Android.Views.View.FocusableAuto Android.Views.View.ImportantForAccessibilityAuto Android.Views.View.ImportantForAccessibilityNo Android.Views.View.ImportantForAccessibilityNoHideDescendants Android.Views.View.ImportantForAccessibilityYes Android.Views.View.ImportantForAutofillAuto Android.Views.View.ImportantForAutofillNo Android.Views.View.ImportantForAutofillNoExcludeDescendants Android.Views.View.ImportantForAutofillYes Android.Views.View.ImportantForAutofillYesExcludeDescendants Android.Views.View.LayoutDirectionInherit Android.Views.View.LayoutDirectionLocale Android.Views.View.LayoutDirectionLtr Android.Views.View.LayoutDirectionRtl Android.Views.View.MeasuredHeightStateShift Android.Views.View.MeasuredSizeMask Android.Views.View.MeasuredStateMask Android.Views.View.MeasuredStateTooSmall Android.Views.View.NoId Android.Views.View.NotFocusable Android.Views.View.OverScrollAlways Android.Views.View.OverScrollIfContentScrolls Android.Views.View.OverScrollNever Android.Views.View.ScreenStateOff Android.Views.View.ScreenStateOn Android.Views.View.ScrollAxisHorizontal Android.Views.View.ScrollAxisNone Android.Views.View.ScrollAxisVertical Android.Views.View.SystemUiFlagFullscreen Android.Views.View.SystemUiFlagHideNavigation Android.Views.View.SystemUiFlagImmersive Android.Views.View.SystemUiFlagImmersiveSticky Android.Views.View.SystemUiFlagLayoutFullscreen Android.Views.View.SystemUiFlagLayoutHideNavigation Android.Views.View.SystemUiFlagLayoutStable Android.Views.View.SystemUiFlagLightNavigationBar Android.Views.View.SystemUiFlagLightStatusBar Android.Views.View.SystemUiFlagLowProfile Android.Views.View.SystemUiFlagVisible Android.Views.View.SystemUiLayoutFlags Android.Views.View.TextAlignmentCenter Android.Views.View.TextAlignmentGravity Android.Views.View.TextAlignmentInherit Android.Views.View.TextAlignmentResolvedDefault Android.Views.View.TextAlignmentTextEnd Android.Views.View.TextAlignmentTextStart Android.Views.View.TextAlignmentViewEnd Android.Views.View.TextAlignmentViewStart Android.Views.View.TextDirectionAnyRtl Android.Views.View.TextDirectionFirstStrong Android.Views.View.TextDirectionFirstStrongLtr Android.Views.View.TextDirectionFirstStrongRtl Android.Views.View.TextDirectionInherit Android.Views.View.TextDirectionLocale Android.Views.View.TextDirectionLtr Android.Views.View.TextDirectionRtl Android.Views.View.ViewLogTag Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle) Android.Views.View.FindViewById<T>(System.Int32) Android.Views.View.Post(System.Action) Android.Views.View.PostDelayed(System.Action, System.Int64) Android.Views.View.RemoveCallbacks(System.Action) Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable, System.Action, System.Int64) Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable, System.Action) Android.Views.View.DispatchSystemUiVisibilityChanged(System.Int32) Android.Views.View.AddChildrenForAccessibility(System.Collections.Generic.IList<Android.Views.View>) Android.Views.View.AddExtraDataToAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo, System.String, Android.OS.Bundle) Android.Views.View.AddFocusables(System.Collections.Generic.IList<Android.Views.View>, Android.Views.FocusSearchDirection) Android.Views.View.AddFocusables(System.Collections.Generic.IList<Android.Views.View>, Android.Views.FocusSearchDirection, Android.Views.FocusablesFlags) Android.Views.View.AddKeyboardNavigationClusters(System.Collections.Generic.ICollection<Android.Views.View>, Android.Views.FocusSearchDirection) Android.Views.View.AddOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener) Android.Views.View.AddOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener) Android.Views.View.AddTouchables(System.Collections.Generic.IList<Android.Views.View>) Android.Views.View.Animate() Android.Views.View.AnnounceForAccessibility(Java.Lang.ICharSequence) Android.Views.View.AnnounceForAccessibility(System.String) Android.Views.View.Autofill(Android.Util.SparseArray) Android.Views.View.Autofill(Android.Views.Autofill.AutofillValue) Android.Views.View.AwakenScrollBars() Android.Views.View.AwakenScrollBars(System.Int32) Android.Views.View.AwakenScrollBars(System.Int32, System.Boolean) Android.Views.View.BringToFront() Android.Views.View.BuildDrawingCache() Android.Views.View.BuildDrawingCache(System.Boolean) Android.Views.View.BuildLayer() Android.Views.View.CallOnClick() Android.Views.View.CancelDragAndDrop() Android.Views.View.CancelLongPress() Android.Views.View.CancelPendingInputEvents() Android.Views.View.CanResolveLayoutDirection() Android.Views.View.CanResolveTextAlignment() Android.Views.View.CanResolveTextDirection() Android.Views.View.CanScrollHorizontally(System.Int32) Android.Views.View.CanScrollVertically(System.Int32) Android.Views.View.CheckInputConnectionProxy(Android.Views.View) Android.Views.View.ClearAnimation() Android.Views.View.ClearFocus() Android.Views.View.CombineMeasuredStates(System.Int32, System.Int32) Android.Views.View.ComputeHorizontalScrollExtent() Android.Views.View.ComputeHorizontalScrollOffset() Android.Views.View.ComputeHorizontalScrollRange() Android.Views.View.ComputeScroll() Android.Views.View.ComputeSystemWindowInsets(Android.Views.WindowInsets, Android.Graphics.Rect) Android.Views.View.ComputeVerticalScrollExtent() Android.Views.View.ComputeVerticalScrollOffset() Android.Views.View.ComputeVerticalScrollRange() Android.Views.View.CreateAccessibilityNodeInfo() Android.Views.View.CreateContextMenu(Android.Views.IContextMenu) Android.Views.View.DestroyDrawingCache() Android.Views.View.DispatchApplyWindowInsets(Android.Views.WindowInsets) Android.Views.View.DispatchCapturedPointerEvent(Android.Views.MotionEvent) Android.Views.View.DispatchConfigurationChanged(Android.Content.Res.Configuration) Android.Views.View.DispatchDisplayHint(Android.Views.ViewStates) Android.Views.View.DispatchDragEvent(Android.Views.DragEvent) Android.Views.View.DispatchDraw(Android.Graphics.Canvas) Android.Views.View.DispatchDrawableHotspotChanged(System.Single, System.Single) Android.Views.View.DispatchFinishTemporaryDetach() Android.Views.View.DispatchGenericFocusedEvent(Android.Views.MotionEvent) Android.Views.View.DispatchGenericMotionEvent(Android.Views.MotionEvent) Android.Views.View.DispatchGenericPointerEvent(Android.Views.MotionEvent) Android.Views.View.DispatchHoverEvent(Android.Views.MotionEvent) Android.Views.View.DispatchKeyEvent(Android.Views.KeyEvent) Android.Views.View.DispatchKeyEventPreIme(Android.Views.KeyEvent) Android.Views.View.DispatchKeyShortcutEvent(Android.Views.KeyEvent) Android.Views.View.DispatchNestedFling(System.Single, System.Single, System.Boolean) Android.Views.View.DispatchNestedPreFling(System.Single, System.Single) Android.Views.View.DispatchNestedPrePerformAccessibilityAction(Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32[], System.Int32[]) Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32[]) Android.Views.View.DispatchPointerCaptureChanged(System.Boolean) Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.DispatchProvideAutofillStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.DispatchProvideStructure(Android.Views.ViewStructure) Android.Views.View.DispatchRestoreInstanceState(Android.Util.SparseArray) Android.Views.View.DispatchSaveInstanceState(Android.Util.SparseArray) Android.Views.View.DispatchSetPressed(System.Boolean) Android.Views.View.DispatchStartTemporaryDetach() Android.Views.View.DispatchSystemUiVisibilityChanged(Android.Views.SystemUiFlags) Android.Views.View.DispatchTouchEvent(Android.Views.MotionEvent) Android.Views.View.DispatchTrackballEvent(Android.Views.MotionEvent) Android.Views.View.DispatchUnhandledMove(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.View.DispatchVisibilityChanged(Android.Views.View, Android.Views.ViewStates) Android.Views.View.DispatchWindowFocusChanged(System.Boolean) Android.Views.View.DispatchWindowSystemUiVisiblityChanged(Android.Views.SystemUiFlags) Android.Views.View.DispatchWindowVisibilityChanged(Android.Views.ViewStates) Android.Views.View.Draw(Android.Graphics.Canvas) Android.Views.View.DrawableHotspotChanged(System.Single, System.Single) Android.Views.View.DrawableStateChanged() Android.Views.View.FindFocus() Android.Views.View.FindViewById(System.Int32) Android.Views.View.FindViewsWithText(System.Collections.Generic.IList<Android.Views.View>, Java.Lang.ICharSequence, Android.Views.FindViewsWith) Android.Views.View.FindViewsWithText(System.Collections.Generic.IList<Android.Views.View>, System.String, Android.Views.FindViewsWith) Android.Views.View.FindViewWithTag(Java.Lang.Object) Android.Views.View.InvokeFitsSystemWindows() Android.Views.View.FitSystemWindows(Android.Graphics.Rect) Android.Views.View.FocusSearch(Android.Views.FocusSearchDirection) Android.Views.View.ForceHasOverlappingRendering(System.Boolean) Android.Views.View.ForceLayout() Android.Views.View.GenerateViewId() Android.Views.View.GetAutofillHints() Android.Views.View.GetClipBounds(Android.Graphics.Rect) Android.Views.View.GetDefaultSize(System.Int32, System.Int32) Android.Views.View.GetDrawableState() Android.Views.View.GetDrawingCache(System.Boolean) Android.Views.View.GetDrawingRect(Android.Graphics.Rect) Android.Views.View.GetFocusable() Android.Views.View.GetFocusables(Android.Views.FocusSearchDirection) Android.Views.View.GetFocusedRect(Android.Graphics.Rect) Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect) Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect, Android.Graphics.Point) Android.Views.View.GetHitRect(Android.Graphics.Rect) Android.Views.View.GetLocalVisibleRect(Android.Graphics.Rect) Android.Views.View.GetLocationInWindow(System.Int32[]) Android.Views.View.GetLocationOnScreen(System.Int32[]) Android.Views.View.GetTag(System.Int32) Android.Views.View.GetWindowVisibleDisplayFrame(Android.Graphics.Rect) Android.Views.View.GetX() Android.Views.View.GetY() Android.Views.View.GetZ() Android.Views.View.GetHasOverlappingRendering() Android.Views.View.Inflate(Android.Content.Context, System.Int32, Android.Views.ViewGroup) Android.Views.View.InitializeFadingEdge(Android.Content.Res.TypedArray) Android.Views.View.InitializeScrollbars(Android.Content.Res.TypedArray) Android.Views.View.Invalidate() Android.Views.View.Invalidate(Android.Graphics.Rect) Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.InvalidateDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.InvalidateOutline() Android.Views.View.JumpDrawablesToCurrentState() Android.Views.View.KeyboardNavigationClusterSearch(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.View.Measure(System.Int32, System.Int32) Android.Views.View.MergeDrawableStates(System.Int32[], System.Int32[]) Android.Views.View.OffsetLeftAndRight(System.Int32) Android.Views.View.OffsetTopAndBottom(System.Int32) Android.Views.View.OnAnimationEnd() Android.Views.View.OnAnimationStart() Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets) Android.Views.View.OnAttachedToWindow() Android.Views.View.OnCancelPendingInputEvents() Android.Views.View.OnCapturedPointerEvent(Android.Views.MotionEvent) Android.Views.View.OnCheckIsTextEditor() Android.Views.View.OnConfigurationChanged(Android.Content.Res.Configuration) Android.Views.View.OnCreateContextMenu(Android.Views.IContextMenu) Android.Views.View.OnCreateDrawableState(System.Int32) Android.Views.View.OnCreateInputConnection(Android.Views.InputMethods.EditorInfo) Android.Views.View.OnDetachedFromWindow() Android.Views.View.OnDisplayHint(System.Int32) Android.Views.View.OnDragEvent(Android.Views.DragEvent) Android.Views.View.OnDraw(Android.Graphics.Canvas) Android.Views.View.OnDrawForeground(Android.Graphics.Canvas) Android.Views.View.OnDrawScrollBars(Android.Graphics.Canvas) Android.Views.View.OnFilterTouchEventForSecurity(Android.Views.MotionEvent) Android.Views.View.OnFinishInflate() Android.Views.View.OnFinishTemporaryDetach() Android.Views.View.OnFocusChanged(System.Boolean, Android.Views.FocusSearchDirection, Android.Graphics.Rect) Android.Views.View.OnGenericMotionEvent(Android.Views.MotionEvent) Android.Views.View.OnHoverChanged(System.Boolean) Android.Views.View.OnHoverEvent(Android.Views.MotionEvent) Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.OnInitializeAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo) Android.Views.View.OnKeyDown(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyLongPress(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyMultiple(Android.Views.Keycode, System.Int32, Android.Views.KeyEvent) Android.Views.View.OnKeyPreIme(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyShortcut(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyUp(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnMeasure(System.Int32, System.Int32) Android.Views.View.OnOverScrolled(System.Int32, System.Int32, System.Boolean, System.Boolean) Android.Views.View.OnPointerCaptureChange(System.Boolean) Android.Views.View.OnPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.OnProvideAutofillStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.OnProvideAutofillVirtualStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.OnProvideStructure(Android.Views.ViewStructure) Android.Views.View.OnProvideVirtualStructure(Android.Views.ViewStructure) Android.Views.View.OnResolvePointerIcon(Android.Views.MotionEvent, System.Int32) Android.Views.View.OnRestoreInstanceState(Android.OS.IParcelable) Android.Views.View.OnRtlPropertiesChanged(Android.Views.LayoutDirection) Android.Views.View.OnSaveInstanceState() Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState) Android.Views.View.OnScrollChanged(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.OnSetAlpha(System.Int32) Android.Views.View.OnStartTemporaryDetach() Android.Views.View.OnTouchEvent(Android.Views.MotionEvent) Android.Views.View.OnTrackballEvent(Android.Views.MotionEvent) Android.Views.View.OnVisibilityAggregated(System.Boolean) Android.Views.View.OnVisibilityChanged(Android.Views.View, Android.Views.ViewStates) Android.Views.View.OnWindowFocusChanged(System.Boolean) Android.Views.View.OnWindowSystemUiVisibilityChanged(Android.Views.SystemUiFlags) Android.Views.View.OnWindowVisibilityChanged(Android.Views.ViewStates) Android.Views.View.OverScrollBy(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean) Android.Views.View.PerformAccessibilityAction(Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.View.PerformClick() Android.Views.View.PerformContextClick() Android.Views.View.PerformContextClick(System.Single, System.Single) Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants) Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants, Android.Views.FeedbackFlags) Android.Views.View.PerformLongClick() Android.Views.View.PerformLongClick(System.Single, System.Single) Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects) Android.Views.View.Post(Java.Lang.IRunnable) Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64) Android.Views.View.PostInvalidate() Android.Views.View.PostInvalidate(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostInvalidateDelayed(System.Int64) Android.Views.View.PostInvalidateDelayed(System.Int64, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostInvalidateOnAnimation() Android.Views.View.PostInvalidateOnAnimation(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostOnAnimation(Java.Lang.IRunnable) Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64) Android.Views.View.RefreshDrawableState() Android.Views.View.ReleasePointerCapture() Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable) Android.Views.View.RemoveOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener) Android.Views.View.RemoveOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener) Android.Views.View.RequestApplyInsets() Android.Views.View.RequestFitSystemWindows() Android.Views.View.RequestFocus() Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection) Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection, Android.Graphics.Rect) Android.Views.View.RequestFocusFromTouch() Android.Views.View.RequestLayout() Android.Views.View.RequestPointerCapture() Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect) Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect, System.Boolean) Android.Views.View.RequestUnbufferedDispatch(Android.Views.MotionEvent) Android.Views.View.ResolveSize(System.Int32, System.Int32) Android.Views.View.ResolveSizeAndState(System.Int32, System.Int32, System.Int32) Android.Views.View.RestoreDefaultFocus() Android.Views.View.RestoreHierarchyState(Android.Util.SparseArray) Android.Views.View.SaveHierarchyState(Android.Util.SparseArray) Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable, Java.Lang.IRunnable, System.Int64) Android.Views.View.ScrollBy(System.Int32, System.Int32) Android.Views.View.ScrollTo(System.Int32, System.Int32) Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes) Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate) Android.Views.View.SetAutofillHints(System.String[]) Android.Views.View.SetBackgroundColor(Android.Graphics.Color) Android.Views.View.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.SetBackgroundResource(System.Int32) Android.Views.View.SetCameraDistance(System.Single) Android.Views.View.SetFadingEdgeLength(System.Int32) Android.Views.View.SetFitsSystemWindows(System.Boolean) Android.Views.View.SetFocusable(Android.Views.ViewFocusability) Android.Views.View.SetForegroundGravity(Android.Views.GravityFlags) Android.Views.View.SetLayerPaint(Android.Graphics.Paint) Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint) Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32) Android.Views.View.SetMinimumHeight(System.Int32) Android.Views.View.SetMinimumWidth(System.Int32) Android.Views.View.SetOnApplyWindowInsetsListener(Android.Views.View.IOnApplyWindowInsetsListener) Android.Views.View.SetOnCapturedPointerListener(Android.Views.View.IOnCapturedPointerListener) Android.Views.View.SetOnClickListener(Android.Views.View.IOnClickListener) Android.Views.View.SetOnContextClickListener(Android.Views.View.IOnContextClickListener) Android.Views.View.SetOnCreateContextMenuListener(Android.Views.View.IOnCreateContextMenuListener) Android.Views.View.SetOnDragListener(Android.Views.View.IOnDragListener) Android.Views.View.SetOnGenericMotionListener(Android.Views.View.IOnGenericMotionListener) Android.Views.View.SetOnHoverListener(Android.Views.View.IOnHoverListener) Android.Views.View.SetOnKeyListener(Android.Views.View.IOnKeyListener) Android.Views.View.SetOnLongClickListener(Android.Views.View.IOnLongClickListener) Android.Views.View.SetOnScrollChangeListener(Android.Views.View.IOnScrollChangeListener) Android.Views.View.SetOnSystemUiVisibilityChangeListener(Android.Views.View.IOnSystemUiVisibilityChangeListener) Android.Views.View.SetOnTouchListener(Android.Views.View.IOnTouchListener) Android.Views.View.SetPadding(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.SetPaddingRelative(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.SetScrollContainer(System.Boolean) Android.Views.View.SetScrollIndicators(System.Int32) Android.Views.View.SetScrollIndicators(System.Int32, System.Int32) Android.Views.View.SetTag(System.Int32, Java.Lang.Object) Android.Views.View.SetWillNotCacheDrawing(System.Boolean) Android.Views.View.SetWillNotDraw(System.Boolean) Android.Views.View.SetX(System.Single) Android.Views.View.SetY(System.Single) Android.Views.View.SetZ(System.Single) Android.Views.View.ShowContextMenu() Android.Views.View.ShowContextMenu(System.Single, System.Single) Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback) Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback, Android.Views.ActionModeType) Android.Views.View.StartAnimation(Android.Views.Animations.Animation) Android.Views.View.StartDrag(Android.Content.ClipData, Android.Views.View.DragShadowBuilder, Java.Lang.Object, System.Int32) Android.Views.View.StartDragAndDrop(Android.Content.ClipData, Android.Views.View.DragShadowBuilder, Java.Lang.Object, System.Int32) Android.Views.View.StartNestedScroll(Android.Views.ScrollAxis) Android.Views.View.StopNestedScroll() Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable, Java.Lang.IRunnable) Android.Views.View.UpdateDragShadow(Android.Views.View.DragShadowBuilder) Android.Views.View.VerifyDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.WillNotCacheDrawing() Android.Views.View.WillNotDraw() Android.Views.View.EmptyStateSet Android.Views.View.EnabledFocusedSelectedStateSet Android.Views.View.EnabledFocusedSelectedWindowFocusedStateSet Android.Views.View.EnabledFocusedStateSet Android.Views.View.EnabledFocusedWindowFocusedStateSet Android.Views.View.EnabledSelectedStateSet Android.Views.View.EnabledSelectedWindowFocusedStateSet Android.Views.View.EnabledStateSet Android.Views.View.EnabledWindowFocusedStateSet Android.Views.View.FocusedSelectedStateSet Android.Views.View.FocusedSelectedWindowFocusedStateSet Android.Views.View.FocusedStateSet Android.Views.View.FocusedWindowFocusedStateSet Android.Views.View.PressedEnabledFocusedSelectedStateSet Android.Views.View.PressedEnabledFocusedSelectedWindowFocusedStateSet Android.Views.View.PressedEnabledFocusedStateSet Android.Views.View.PressedEnabledFocusedWindowFocusedStateSet Android.Views.View.PressedEnabledSelectedStateSet Android.Views.View.PressedEnabledSelectedWindowFocusedStateSet Android.Views.View.PressedEnabledStateSet Android.Views.View.PressedEnabledWindowFocusedStateSet Android.Views.View.PressedFocusedSelectedStateSet Android.Views.View.PressedFocusedSelectedWindowFocusedStateSet Android.Views.View.PressedFocusedStateSet Android.Views.View.PressedFocusedWindowFocusedStateSet Android.Views.View.PressedSelectedStateSet Android.Views.View.PressedSelectedWindowFocusedStateSet Android.Views.View.PressedStateSet Android.Views.View.PressedWindowFocusedStateSet Android.Views.View.ScaleXs Android.Views.View.ScaleYs Android.Views.View.SelectedStateSet Android.Views.View.SelectedWindowFocusedStateSet Android.Views.View.WindowFocusedStateSet Android.Views.View.X Android.Views.View.Y Android.Views.View.Z Android.Views.View.AccessibilityClassNameFormatted Android.Views.View.AccessibilityClassName Android.Views.View.AccessibilityLiveRegion Android.Views.View.AccessibilityNodeProvider Android.Views.View.AccessibilityTraversalAfter Android.Views.View.AccessibilityTraversalBefore Android.Views.View.Activated Android.Views.View.Alpha Android.Views.View.Animation Android.Views.View.ApplicationWindowToken Android.Views.View.AutofillId Android.Views.View.AutofillType Android.Views.View.AutofillValue Android.Views.View.Background Android.Views.View.BackgroundTintList Android.Views.View.BackgroundTintMode Android.Views.View.Baseline Android.Views.View.Bottom Android.Views.View.BottomFadingEdgeStrength Android.Views.View.BottomPaddingOffset Android.Views.View.CameraDistance Android.Views.View.Clickable Android.Views.View.ClipBounds Android.Views.View.ClipToOutline Android.Views.View.ContentDescriptionFormatted Android.Views.View.ContentDescription Android.Views.View.Context Android.Views.View.ContextClickable Android.Views.View.ContextMenuInfo Android.Views.View.DefaultFocusHighlightEnabled Android.Views.View.Display Android.Views.View.DrawingCache Android.Views.View.DrawingCacheBackgroundColor Android.Views.View.DrawingCacheEnabled Android.Views.View.DrawingCacheQuality Android.Views.View.DrawingTime Android.Views.View.DuplicateParentStateEnabled Android.Views.View.Elevation Android.Views.View.Enabled Android.Views.View.FilterTouchesWhenObscured Android.Views.View.FitsSystemWindows Android.Views.View.Focusable Android.Views.View.FocusableInTouchMode Android.Views.View.FocusedByDefault Android.Views.View.Foreground Android.Views.View.ForegroundGravity Android.Views.View.ForegroundTintList Android.Views.View.ForegroundTintMode Android.Views.View.Handler Android.Views.View.HapticFeedbackEnabled Android.Views.View.HasExplicitFocusable Android.Views.View.HasFocus Android.Views.View.HasFocusable Android.Views.View.HasNestedScrollingParent Android.Views.View.HasOnClickListeners Android.Views.View.HasOverlappingRendering Android.Views.View.HasPointerCapture Android.Views.View.HasTransientState Android.Views.View.HasWindowFocus Android.Views.View.Height Android.Views.View.HorizontalFadingEdgeEnabled Android.Views.View.HorizontalFadingEdgeLength Android.Views.View.HorizontalScrollBarEnabled Android.Views.View.HorizontalScrollbarHeight Android.Views.View.Hovered Android.Views.View.Id Android.Views.View.ImportantForAccessibility Android.Views.View.ImportantForAutofill Android.Views.View.IsAccessibilityFocused Android.Views.View.IsAttachedToWindow Android.Views.View.IsDirty Android.Views.View.IsFocused Android.Views.View.IsHardwareAccelerated Android.Views.View.IsImportantForAccessibility Android.Views.View.IsImportantForAutofill Android.Views.View.IsInEditMode Android.Views.View.IsInLayout Android.Views.View.IsInTouchMode Android.Views.View.IsLaidOut Android.Views.View.IsLayoutDirectionResolved Android.Views.View.IsLayoutRequested Android.Views.View.IsOpaque Android.Views.View.IsPaddingOffsetRequired Android.Views.View.IsPaddingRelative Android.Views.View.IsScrollContainer Android.Views.View.IsShown Android.Views.View.IsTemporarilyDetached Android.Views.View.IsTextAlignmentResolved Android.Views.View.IsTextDirectionResolved Android.Views.View.KeepScreenOn Android.Views.View.KeyDispatcherState Android.Views.View.KeyboardNavigationCluster Android.Views.View.LabelFor Android.Views.View.LayerType Android.Views.View.LayoutDirection Android.Views.View.LayoutParameters Android.Views.View.Left Android.Views.View.LeftFadingEdgeStrength Android.Views.View.LeftPaddingOffset Android.Views.View.LongClickable Android.Views.View.Matrix Android.Views.View.MeasuredHeight Android.Views.View.MeasuredHeightAndState Android.Views.View.MeasuredState Android.Views.View.MeasuredWidth Android.Views.View.MeasuredWidthAndState Android.Views.View.MinimumHeight Android.Views.View.MinimumWidth Android.Views.View.NestedScrollingEnabled Android.Views.View.NextClusterForwardId Android.Views.View.NextFocusDownId Android.Views.View.NextFocusForwardId Android.Views.View.NextFocusLeftId Android.Views.View.NextFocusRightId Android.Views.View.NextFocusUpId Android.Views.View.OnFocusChangeListener Android.Views.View.OutlineProvider Android.Views.View.OverScrollMode Android.Views.View.Overlay Android.Views.View.PaddingBottom Android.Views.View.PaddingEnd Android.Views.View.PaddingLeft Android.Views.View.PaddingRight Android.Views.View.PaddingStart Android.Views.View.PaddingTop Android.Views.View.Parent Android.Views.View.ParentForAccessibility Android.Views.View.PivotX Android.Views.View.PivotY Android.Views.View.PointerIcon Android.Views.View.Pressed Android.Views.View.Resources Android.Views.View.RevealOnFocusHint Android.Views.View.Right Android.Views.View.RightFadingEdgeStrength Android.Views.View.RightPaddingOffset Android.Views.View.RootView Android.Views.View.RootWindowInsets Android.Views.View.Rotation Android.Views.View.RotationX Android.Views.View.RotationY Android.Views.View.SaveEnabled Android.Views.View.SaveFromParentEnabled Android.Views.View.ScaleX Android.Views.View.ScaleY Android.Views.View.ScrollBarDefaultDelayBeforeFade Android.Views.View.ScrollBarFadeDuration Android.Views.View.ScrollBarSize Android.Views.View.ScrollBarStyle Android.Views.View.ScrollIndicators Android.Views.View.ScrollX Android.Views.View.ScrollY Android.Views.View.ScrollbarFadingEnabled Android.Views.View.Selected Android.Views.View.SolidColor Android.Views.View.SoundEffectsEnabled Android.Views.View.StateListAnimator Android.Views.View.SuggestedMinimumHeight Android.Views.View.SuggestedMinimumWidth Android.Views.View.SystemUiVisibility Android.Views.View.Tag Android.Views.View.TextAlignment Android.Views.View.TextDirection Android.Views.View.TooltipTextFormatted Android.Views.View.TooltipText Android.Views.View.Top Android.Views.View.TopFadingEdgeStrength Android.Views.View.TopPaddingOffset Android.Views.View.TouchDelegate Android.Views.View.Touchables Android.Views.View.TransitionName Android.Views.View.TranslationX Android.Views.View.TranslationY Android.Views.View.TranslationZ Android.Views.View.VerticalFadingEdgeEnabled Android.Views.View.VerticalFadingEdgeLength Android.Views.View.VerticalScrollBarEnabled Android.Views.View.VerticalScrollbarPosition Android.Views.View.VerticalScrollbarWidth Android.Views.View.ViewTreeObserver Android.Views.View.Visibility Android.Views.View.Width Android.Views.View.WindowAttachCount Android.Views.View.WindowId Android.Views.View.WindowSystemUiVisibility Android.Views.View.WindowToken Android.Views.View.WindowVisibility Android.Views.View.ApplyWindowInsets Android.Views.View.ViewAttachedToWindow Android.Views.View.ViewDetachedFromWindow Android.Views.View.LayoutChange Android.Views.View.CapturedPointer Android.Views.View.Click Android.Views.View.ContextClick Android.Views.View.ContextMenuCreated Android.Views.View.Drag Android.Views.View.GenericMotion Android.Views.View.Hover Android.Views.View.KeyPress Android.Views.View.LongClick Android.Views.View.ScrollChange Android.Views.View.SystemUiVisibilityChange Android.Views.View.Touch Android.Views.View.FocusChange Java.Lang.Object.Java.Interop.IJavaPeerable.DisposeUnlessReferenced() Java.Lang.Object.Java.Interop.IJavaPeerable.Disposed() Java.Lang.Object.Java.Interop.IJavaPeerable.Finalized() Java.Lang.Object.Java.Interop.IJavaPeerable.SetJniIdentityHashCode(System.Int32) Java.Lang.Object.Java.Interop.IJavaPeerable.SetJniManagedPeerState(Java.Interop.JniManagedPeerStates) Java.Lang.Object.Java.Interop.IJavaPeerable.SetPeerReference(Java.Interop.JniObjectReference) Java.Lang.Object.Dispose() Java.Lang.Object.GetObject<T>(System.IntPtr, System.IntPtr, Android.Runtime.JniHandleOwnership) Java.Lang.Object.GetObject<T>(System.IntPtr, Android.Runtime.JniHandleOwnership) Java.Lang.Object.FromArray<T>(T[]) Java.Lang.Object.Clone() Java.Lang.Object.Equals(Java.Lang.Object) Java.Lang.Object.JavaFinalize() Java.Lang.Object.GetHashCode() Java.Lang.Object.Notify() Java.Lang.Object.NotifyAll() Java.Lang.Object.ToString() Java.Lang.Object.Wait() Java.Lang.Object.Wait(System.Int64) Java.Lang.Object.Wait(System.Int64, System.Int32) Java.Lang.Object.Java.Interop.IJavaPeerable.JniManagedPeerState Java.Lang.Object.Class System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class MapControl : ViewGroup, IJavaObjectEx, Drawable.ICallback, IAccessibilityEventSource, KeyEvent.ICallback, IViewManager, IViewParent, IJavaObject, IJavaPeerable, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Android.Content.Context context Android.Util.IAttributeSet attrs | Improve this Doc View Source MapControl(Context, IAttributeSet, Int32) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Android.Content.Context context Android.Util.IAttributeSet attrs System.Int32 defStyle Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source RenderMode Declaration public SkiaRenderMode RenderMode { get; set; } Property Value Type Description SkiaRenderMode | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Java.Lang.Object.Dispose(System.Boolean) | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Layers that should be included in snapshot Returns Type Description System.Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source MapView_Touch(Object, View.TouchEventArgs) Declaration public void MapView_Touch(object sender, View.TouchEventArgs args) Parameters Type Name Description System.Object sender Android.Views.View.TouchEventArgs args | Improve this Doc View Source OnFling(Object, GestureDetector.FlingEventArgs) Declaration public void OnFling(object sender, GestureDetector.FlingEventArgs args) Parameters Type Name Description System.Object sender Android.Views.GestureDetector.FlingEventArgs args | Improve this Doc View Source OnLayout(Boolean, Int32, Int32, Int32, Int32) Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description System.Boolean changed System.Int32 l System.Int32 t System.Int32 r System.Int32 b Overrides Android.Views.ViewGroup.OnLayout(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32) | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnSizeChanged(Int32, Int32, Int32, Int32) Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description System.Int32 width System.Int32 height System.Int32 oldWidth System.Int32 oldHeight Overrides Android.Views.View.OnSizeChanged(System.Int32, System.Int32, System.Int32, System.Int32) | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler Implements Android.Graphics.Drawables.Drawable.ICallback Android.Views.Accessibility.IAccessibilityEventSource Android.Views.KeyEvent.ICallback Android.Views.IViewManager Android.Views.IViewParent Android.Runtime.IJavaObject Java.Interop.IJavaPeerable IMapControl System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.UI.Android.Resource.Attribute.html": {
    "href": "api/Mapsui.UI.Android.Resource.Attribute.html",
    "title": "Class Resource.Attribute",
    "keywords": "Class Resource.Attribute Inheritance System.Object Resource.Attribute Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Attribute Fields | Improve this Doc View Source start_with_openstreetmap Declaration public static int start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.html": {
    "href": "api/Mapsui.UI.Android.Resource.html",
    "title": "Class Resource",
    "keywords": "Class Resource Inheritance System.Object Resource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Resource"
  },
  "api/Mapsui.UI.Android.Resource.String.html": {
    "href": "api/Mapsui.UI.Android.Resource.String.html",
    "title": "Class Resource.String",
    "keywords": "Class Resource.String Inheritance System.Object Resource.String Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class String Fields | Improve this Doc View Source ApplicationName Declaration public static int ApplicationName Field Value Type Description System.Int32 | Improve this Doc View Source Hello Declaration public static int Hello Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.Styleable.html": {
    "href": "api/Mapsui.UI.Android.Resource.Styleable.html",
    "title": "Class Resource.Styleable",
    "keywords": "Class Resource.Styleable Inheritance System.Object Resource.Styleable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Styleable Fields | Improve this Doc View Source start_with_openstreetmap_style Declaration public static int[] start_with_openstreetmap_style Field Value Type Description System.Int32 [] | Improve this Doc View Source start_with_openstreetmap_style_start_with_openstreetmap Declaration public static int start_with_openstreetmap_style_start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.SkiaRenderMode.html": {
    "href": "api/Mapsui.UI.Android.SkiaRenderMode.html",
    "title": "Enum SkiaRenderMode",
    "keywords": "Enum SkiaRenderMode Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public enum SkiaRenderMode Fields Name Description Hardware Software"
  },
  "api/Mapsui.UI.FeatureInfoEventArgs.html": {
    "href": "api/Mapsui.UI.FeatureInfoEventArgs.html",
    "title": "Class FeatureInfoEventArgs",
    "keywords": "Class FeatureInfoEventArgs Inheritance System.Object System.EventArgs FeatureInfoEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class FeatureInfoEventArgs : EventArgs Properties | Improve this Doc View Source FeatureInfo Declaration public IDictionary<string, IEnumerable<IFeature>> FeatureInfo { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.Collections.Generic.IEnumerable < IFeature >>"
  },
  "api/Mapsui.UI.Forms.Callout.html": {
    "href": "api/Mapsui.UI.Forms.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance System.Object Xamarin.Forms.BindableObject Callout Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider System.IDisposable Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Callout : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IFeatureProvider, IDisposable Constructors | Improve this Doc View Source Callout(Pin) Declaration public Callout(Pin pin) Parameters Type Name Description Pin pin Fields | Improve this Doc View Source AnchorProperty Bindable property for the Anchor property Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowAlignmentProperty Bindable property for the ArrowAlignment property Declaration public static readonly BindableProperty ArrowAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowHeightProperty Bindable property for the ArrowHeight property Declaration public static readonly BindableProperty ArrowHeightProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowPositionProperty Bindable property for the ArrowPosition property Declaration public static readonly BindableProperty ArrowPositionProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowWidthProperty Bindable property for the ArrowWidth property Declaration public static readonly BindableProperty ArrowWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source BackgroundColorProperty Bindable property for the BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ColorProperty Bindable property for the Color property Declaration public static readonly BindableProperty ColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ContentProperty Bindable property for the Content property Declaration public static readonly BindableProperty ContentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source DefaultSubtitleFontAttributes Declaration public static FontAttributes DefaultSubtitleFontAttributes Field Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source DefaultSubtitleFontColor Declaration public static Color DefaultSubtitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultSubtitleFontName Declaration public static string DefaultSubtitleFontName Field Value Type Description System.String | Improve this Doc View Source DefaultSubtitleFontSize Declaration public static double DefaultSubtitleFontSize Field Value Type Description System.Double | Improve this Doc View Source DefaultSubtitleTextAlignment Declaration public static TextAlignment DefaultSubtitleTextAlignment Field Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source DefaultTitleFontAttributes Declaration public static FontAttributes DefaultTitleFontAttributes Field Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source DefaultTitleFontColor Declaration public static Color DefaultTitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultTitleFontName Declaration public static string DefaultTitleFontName Field Value Type Description System.String | Improve this Doc View Source DefaultTitleFontSize Declaration public static double DefaultTitleFontSize Field Value Type Description System.Double | Improve this Doc View Source DefaultTitleTextAlignment Declaration public static TextAlignment DefaultTitleTextAlignment Field Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source IsClosableByClickProperty Bindable property for the IsClosableByClick property Declaration public static readonly BindableProperty IsClosableByClickProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxWidthProperty Bindable property for the MaxWidth property Declaration public static readonly BindableProperty MaxWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PaddingProperty Bindable property for the Padding property Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RectRadiusProperty Bindable property for the RectRadius property Declaration public static readonly BindableProperty RectRadiusProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotateWithMapProperty Bindable property for the RotateWithMap property Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationProperty Bindable property for the Rotation property Declaration public static readonly BindableProperty RotationProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ShadowWidthProperty Bindable property for the ShadowWidth property Declaration public static readonly BindableProperty ShadowWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SpacingProperty Bindable property for the Spacing property Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeWidthProperty Bindable property for the StrokeWidth property Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontAttributesProperty Bindable property for the SubtitleFontAttributes property Declaration public static readonly BindableProperty SubtitleFontAttributesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontColorProperty Bindable property for the SubtitleFontColor property Declaration public static readonly BindableProperty SubtitleFontColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontNameProperty Bindable property for the SubtitleFontName property Declaration public static readonly BindableProperty SubtitleFontNameProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontSizeProperty Bindable property for the SubtitleFontSize property Declaration public static readonly BindableProperty SubtitleFontSizeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleProperty Bindable property for the Subtitle property Declaration public static readonly BindableProperty SubtitleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleTextAlignmentProperty Bindable property for the SubtitleTextAlignment property Declaration public static readonly BindableProperty SubtitleTextAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontAttributesProperty Bindable property for the TitleFontAttributes property Declaration public static readonly BindableProperty TitleFontAttributesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontColorProperty Bindable property for the TitleFontColor property Declaration public static readonly BindableProperty TitleFontColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontNameProperty Bindable property for the TitleFontName property Declaration public static readonly BindableProperty TitleFontNameProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontSizeProperty Bindable property for the TitleFontSize property Declaration public static readonly BindableProperty TitleFontSizeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleProperty Bindable property for the Title property Declaration public static readonly BindableProperty TitleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleTextAlignmentProperty Bindable property for the TitleTextAlignment property Declaration public static readonly BindableProperty TitleTextAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TypeProperty Bindable property for the Type property Declaration public static readonly BindableProperty TypeProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Anchor Anchor position of Callout Declaration public Point Anchor { get; set; } Property Value Type Description Xamarin.Forms.Point | Improve this Doc View Source ArrowAlignment Arrow alignment of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height from arrow of Callout Declaration public double ArrowHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by ArrowAlignment Declaration public double ArrowPosition { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ArrowWidth Width from arrow of Callout Declaration public double ArrowWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Feature Feature, which belongs to callout. Should be the same as for the pin to which this callout belongs. Declaration public GeometryFeature Feature { get; } Property Value Type Description Mapsui.Nts.GeometryFeature | Improve this Doc View Source IsClosableByClick Is Callout closable by a click on the callout Declaration public bool IsClosableByClick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Xamarin.Forms.Thickness | Improve this Doc View Source Pin Pin to which this callout belongs Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public double RectRadius { get; set; } Property Value Type Description System.Double | Improve this Doc View Source RotateWithMap Rotate Callout with map Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Rotation Rotation of Callout around the anchor Declaration public double Rotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ShadowWidth Shadow width around Callout Declaration public double ShadowWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description System.Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public double StrokeWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Subtitle Content of Callout detail label Declaration public string Subtitle { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleFontAttributes Font attributes to render subtitle Declaration public FontAttributes SubtitleFontAttributes { get; set; } Property Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Color SubtitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source SubtitleFontName Font name to use rendering subtitle Declaration public string SubtitleFontName { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleFontSize Font size to rendering subtitle Declaration public double SubtitleFontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source SubtitleTextAlignment Text alignment of title Declaration public TextAlignment SubtitleTextAlignment { get; set; } Property Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source Title Content of Callout title label Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleFontAttributes Font attributes to render title Declaration public FontAttributes TitleFontAttributes { get; set; } Property Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Color TitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source TitleFontName Font name to use rendering title Declaration public string TitleFontName { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleFontSize Font size to rendering title Declaration public double TitleFontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public TextAlignment TitleTextAlignment { get; set; } Property Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be single, detail or custom. The last is a bitmap id for an owner drawn image. Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) Events | Improve this Doc View Source CalloutClicked Declaration public event EventHandler<CalloutClickedEventArgs> CalloutClicked Event Type Type Description System.EventHandler < CalloutClickedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider System.IDisposable"
  },
  "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html",
    "title": "Class CalloutClickedEventArgs",
    "keywords": "Class CalloutClickedEventArgs Inheritance System.Object System.EventArgs CalloutClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class CalloutClickedEventArgs : EventArgs Properties | Improve this Doc View Source Callout Callout that is clicked Declaration public Callout Callout { get; } Property Value Type Description Callout | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Xamarin.Forms.Point"
  },
  "api/Mapsui.UI.Forms.Circle.html": {
    "href": "api/Mapsui.UI.Forms.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance System.Object Xamarin.Forms.BindableObject Drawable Circle Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Circle : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Circle() Declaration public Circle() Fields | Improve this Doc View Source CenterProperty Declaration public static readonly BindableProperty CenterProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source QualityProperty Declaration public static readonly BindableProperty QualityProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RadiusProperty Declaration public static readonly BindableProperty RadiusProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Improve this Doc View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Distance.html": {
    "href": "api/Mapsui.UI.Forms.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Distance Constructors | Improve this Doc View Source Distance(Double) Constructor for Distance object. Declaration public Distance(double meters) Parameters Type Name Description System.Double meters Meters. Properties | Improve this Doc View Source Kilometers Distance in kilometers Declaration public readonly double Kilometers { get; } Property Value Type Description System.Double Distance in kilometers | Improve this Doc View Source Meters Distance in meters Declaration public readonly double Meters { get; } Property Value Type Description System.Double Distance in meters | Improve this Doc View Source Miles Distance in miles Declaration public readonly double Miles { get; } Property Value Type Description System.Double Distance im miles | Improve this Doc View Source NauticalMiles Distance in nautic miles Declaration public readonly double NauticalMiles { get; } Property Value Type Description System.Double Distance in nautical miles Methods | Improve this Doc View Source Equals(Distance) Determines whether the specified Distance is equal to the current Distance . Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Distance Returns Type Description System.Boolean True if the specified Distance is equal to the current Distance ; otherwise, false . | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source FromKilometers(Double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description System.Double kilometers Distance in kilometers Returns Type Description Distance Distance object | Improve this Doc View Source FromMeters(Double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description System.Double meters Distance in meters Returns Type Description Distance Distance object | Improve this Doc View Source FromMiles(Double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description System.Double miles Distance in miles Returns Type Description Distance Distance object | Improve this Doc View Source FromNauticalMiles(Double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description System.Double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance System.Object System.EventArgs DrawableClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Xamarin.Forms.Point"
  },
  "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance System.Object ColorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ColorExtensions Methods | Improve this Doc View Source ToForms(Color) Convert Mapsui.Styles.Color to Xamarin.Forms.Color Declaration public static Color ToForms(this Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description Xamarin.Forms.Color Color in Xamarin.Forms.Maps format | Improve this Doc View Source ToMapsui(Color) Convert Xamarin.Forms.Color to Mapsui.Style.Color Declaration public static Color ToMapsui(this Color color) Parameters Type Name Description Xamarin.Forms.Color color Color in Xamarin.Forms.Color format Returns Type Description Color Color in Mapsui.Styles.Color format | Improve this Doc View Source ToNative(Color) Declaration public static Color ToNative(this Color color) Parameters Type Name Description Color color Returns Type Description Xamarin.Forms.Color"
  },
  "api/Mapsui.UI.Forms.Extensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.html",
    "title": "Namespace Mapsui.UI.Forms.Extensions",
    "keywords": "Namespace Mapsui.UI.Forms.Extensions Classes ColorExtensions PositionExtensions TextAlignmentExtensions ZoomLevelExtensions"
  },
  "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance System.Object PositionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class PositionExtensions Methods | Improve this Doc View Source ToForms(MPoint) Convert Mapsui.Geometries.Point to Xamarin.Forms.Maps.Position Declaration public static Position ToForms(this MPoint point) Parameters Type Name Description MPoint point Point in Mapsui format Returns Type Description Position Position in Xamarin.Forms.Maps format | Improve this Doc View Source ToNative(MPoint) Declaration public static Position ToNative(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Position"
  },
  "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html",
    "title": "Class TextAlignmentExtensions",
    "keywords": "Class TextAlignmentExtensions Inheritance System.Object TextAlignmentExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class TextAlignmentExtensions Methods | Improve this Doc View Source ToMapsui(TextAlignment) Convert Xamarin.Forms.TextAlignment to Mapsui/RichTextKit.Styles.Color Declaration public static Alignment ToMapsui(this TextAlignment textAlignment) Parameters Type Name Description Xamarin.Forms.TextAlignment textAlignment TextAlignment in Xamarin.Forms format Returns Type Description Alignment TextAlignment in Mapsui/RichTextKit format"
  },
  "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html",
    "title": "Class ZoomLevelExtensions",
    "keywords": "Class ZoomLevelExtensions Inheritance System.Object ZoomLevelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ZoomLevelExtensions Methods | Improve this Doc View Source ToMapsuiResolution(Double) Convert zoom level (as described at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this double zoomLevel) Parameters Type Name Description System.Double zoomLevel Zoom level Returns Type Description System.Double Resolution in Mapsui format"
  },
  "api/Mapsui.UI.Forms.html": {
    "href": "api/Mapsui.UI.Forms.html",
    "title": "Namespace Mapsui.UI.Forms",
    "keywords": "Namespace Mapsui.UI.Forms Classes Callout CalloutClickedEventArgs Circle DrawableClickedEventArgs MapClickedEventArgs MapControl Class, that uses the API of all other Mapsui MapControls MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "api/Mapsui.UI.Forms.MapClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance System.Object System.EventArgs MapClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapControl.html": {
    "href": "api/Mapsui.UI.Forms.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Class, that uses the API of all other Mapsui MapControls Inheritance System.Object Xamarin.Forms.BindableObject Xamarin.Forms.Element Xamarin.Forms.NavigableElement Xamarin.Forms.VisualElement Xamarin.Forms.View Xamarin.Forms.Layout Xamarin.Forms.TemplatedView Xamarin.Forms.ContentView MapControl MapView Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Xamarin.Forms.ContentView.ContentProperty Xamarin.Forms.ContentView.OnBindingContextChanged() Xamarin.Forms.ContentView.Content Xamarin.Forms.TemplatedView.ControlTemplateProperty Xamarin.Forms.TemplatedView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Xamarin.Forms.TemplatedView.OnApplyTemplate() Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element) Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element, System.Int32) Xamarin.Forms.TemplatedView.GetTemplateChild(System.String) Xamarin.Forms.TemplatedView.ResolveControlTemplate() Xamarin.Forms.TemplatedView.ControlTemplate Xamarin.Forms.Layout.IsClippedToBoundsProperty Xamarin.Forms.Layout.CascadeInputTransparentProperty Xamarin.Forms.Layout.PaddingProperty Xamarin.Forms.Layout.ForceLayout() Xamarin.Forms.Layout.LayoutChildIntoBoundingRegion(Xamarin.Forms.VisualElement, Xamarin.Forms.Rectangle) Xamarin.Forms.Layout.LowerChild(Xamarin.Forms.View) Xamarin.Forms.Layout.RaiseChild(Xamarin.Forms.View) Xamarin.Forms.Layout.InvalidateLayout() Xamarin.Forms.Layout.OnChildMeasureInvalidated(System.Object, System.EventArgs) Xamarin.Forms.Layout.OnChildMeasureInvalidated() Xamarin.Forms.Layout.OnSizeAllocated(System.Double, System.Double) Xamarin.Forms.Layout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View) Xamarin.Forms.Layout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View) Xamarin.Forms.Layout.UpdateChildrenLayout() Xamarin.Forms.Layout.ResolveLayoutChanges() Xamarin.Forms.Layout.IsClippedToBounds Xamarin.Forms.Layout.Padding Xamarin.Forms.Layout.CascadeInputTransparent Xamarin.Forms.Layout.LayoutChanged Xamarin.Forms.View.VerticalOptionsProperty Xamarin.Forms.View.HorizontalOptionsProperty Xamarin.Forms.View.MarginProperty Xamarin.Forms.View.GetChildElements(Xamarin.Forms.Point) Xamarin.Forms.View.GestureController Xamarin.Forms.View.GestureRecognizers Xamarin.Forms.View.Xamarin.Forms.Internals.IGestureController.CompositeGestureRecognizers Xamarin.Forms.View.HorizontalOptions Xamarin.Forms.View.Margin Xamarin.Forms.View.VerticalOptions Xamarin.Forms.VisualElement.NavigationProperty Xamarin.Forms.VisualElement.StyleProperty Xamarin.Forms.VisualElement.InputTransparentProperty Xamarin.Forms.VisualElement.IsEnabledProperty Xamarin.Forms.VisualElement.XProperty Xamarin.Forms.VisualElement.YProperty Xamarin.Forms.VisualElement.AnchorXProperty Xamarin.Forms.VisualElement.AnchorYProperty Xamarin.Forms.VisualElement.TranslationXProperty Xamarin.Forms.VisualElement.TranslationYProperty Xamarin.Forms.VisualElement.WidthProperty Xamarin.Forms.VisualElement.HeightProperty Xamarin.Forms.VisualElement.RotationProperty Xamarin.Forms.VisualElement.RotationXProperty Xamarin.Forms.VisualElement.RotationYProperty Xamarin.Forms.VisualElement.ScaleProperty Xamarin.Forms.VisualElement.ScaleXProperty Xamarin.Forms.VisualElement.ScaleYProperty Xamarin.Forms.VisualElement.ClipProperty Xamarin.Forms.VisualElement.VisualProperty Xamarin.Forms.VisualElement.IsVisibleProperty Xamarin.Forms.VisualElement.OpacityProperty Xamarin.Forms.VisualElement.BackgroundColorProperty Xamarin.Forms.VisualElement.BackgroundProperty Xamarin.Forms.VisualElement.BehaviorsProperty Xamarin.Forms.VisualElement.TriggersProperty Xamarin.Forms.VisualElement.WidthRequestProperty Xamarin.Forms.VisualElement.HeightRequestProperty Xamarin.Forms.VisualElement.MinimumWidthRequestProperty Xamarin.Forms.VisualElement.MinimumHeightRequestProperty Xamarin.Forms.VisualElement.IsFocusedProperty Xamarin.Forms.VisualElement.FlowDirectionProperty Xamarin.Forms.VisualElement.TabIndexProperty Xamarin.Forms.VisualElement.IsTabStopProperty Xamarin.Forms.VisualElement.OnTabIndexPropertyChanged(System.Int32, System.Int32) Xamarin.Forms.VisualElement.TabIndexDefaultValueCreator() Xamarin.Forms.VisualElement.OnTabStopPropertyChanged(System.Boolean, System.Boolean) Xamarin.Forms.VisualElement.TabStopDefaultValueCreator() Xamarin.Forms.VisualElement.BatchBegin() Xamarin.Forms.VisualElement.BatchCommit() Xamarin.Forms.VisualElement.Focus() Xamarin.Forms.VisualElement.Layout(Xamarin.Forms.Rectangle) Xamarin.Forms.VisualElement.Measure(System.Double, System.Double, Xamarin.Forms.MeasureFlags) Xamarin.Forms.VisualElement.Unfocus() Xamarin.Forms.VisualElement.InvalidateMeasure() Xamarin.Forms.VisualElement.OnChildAdded(Xamarin.Forms.Element) Xamarin.Forms.VisualElement.OnChildrenReordered() Xamarin.Forms.VisualElement.OnMeasure(System.Double, System.Double) Xamarin.Forms.VisualElement.SizeAllocated(System.Double, System.Double) Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.InvalidateMeasure(Xamarin.Forms.Internals.InvalidationTrigger) Xamarin.Forms.VisualElement.ChangeVisualState() Xamarin.Forms.VisualElement.Visual Xamarin.Forms.VisualElement.FlowDirection Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.EffectiveFlowDirection Xamarin.Forms.VisualElement.AnchorX Xamarin.Forms.VisualElement.AnchorY Xamarin.Forms.VisualElement.BackgroundColor Xamarin.Forms.VisualElement.Background Xamarin.Forms.VisualElement.Behaviors Xamarin.Forms.VisualElement.Bounds Xamarin.Forms.VisualElement.Height Xamarin.Forms.VisualElement.HeightRequest Xamarin.Forms.VisualElement.InputTransparent Xamarin.Forms.VisualElement.IsEnabled Xamarin.Forms.VisualElement.IsFocused Xamarin.Forms.VisualElement.IsVisible Xamarin.Forms.VisualElement.MinimumHeightRequest Xamarin.Forms.VisualElement.MinimumWidthRequest Xamarin.Forms.VisualElement.Opacity Xamarin.Forms.VisualElement.Rotation Xamarin.Forms.VisualElement.RotationX Xamarin.Forms.VisualElement.RotationY Xamarin.Forms.VisualElement.Scale Xamarin.Forms.VisualElement.ScaleX Xamarin.Forms.VisualElement.ScaleY Xamarin.Forms.VisualElement.TabIndex Xamarin.Forms.VisualElement.IsTabStop Xamarin.Forms.VisualElement.TranslationX Xamarin.Forms.VisualElement.TranslationY Xamarin.Forms.VisualElement.Triggers Xamarin.Forms.VisualElement.Width Xamarin.Forms.VisualElement.WidthRequest Xamarin.Forms.VisualElement.X Xamarin.Forms.VisualElement.Y Xamarin.Forms.VisualElement.Clip Xamarin.Forms.VisualElement.Resources Xamarin.Forms.VisualElement.ChildrenReordered Xamarin.Forms.VisualElement.Focused Xamarin.Forms.VisualElement.MeasureInvalidated Xamarin.Forms.VisualElement.SizeChanged Xamarin.Forms.VisualElement.Unfocused Xamarin.Forms.NavigableElement.OnParentSet() Xamarin.Forms.NavigableElement.Navigation Xamarin.Forms.NavigableElement.Style Xamarin.Forms.NavigableElement.StyleClass Xamarin.Forms.NavigableElement.class Xamarin.Forms.Element.MenuProperty Xamarin.Forms.Element.AutomationIdProperty Xamarin.Forms.Element.ClassIdProperty Xamarin.Forms.Element.GetMenu(Xamarin.Forms.BindableObject) Xamarin.Forms.Element.SetMenu(Xamarin.Forms.BindableObject, Xamarin.Forms.Menu) Xamarin.Forms.Element.Xamarin.Forms.IElementController.SetValueFromRenderer(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.Element.FindByName(System.String) Xamarin.Forms.Element.RemoveDynamicResource(Xamarin.Forms.BindableProperty) Xamarin.Forms.Element.SetDynamicResource(Xamarin.Forms.BindableProperty, System.String) Xamarin.Forms.Element.AutomationId Xamarin.Forms.Element.ClassId Xamarin.Forms.Element.Effects Xamarin.Forms.Element.Id Xamarin.Forms.Element.StyleId Xamarin.Forms.Element.Parent Xamarin.Forms.Element.ChildAdded Xamarin.Forms.Element.ChildRemoved Xamarin.Forms.Element.DescendantAdded Xamarin.Forms.Element.DescendantRemoved Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapControl : ContentView, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Fields | Improve this Doc View Source _initialized Declaration protected readonly bool _initialized Field Value Type Description System.Boolean | Improve this Doc View Source UseDoubleTap Declaration public bool UseDoubleTap Field Value Type Description System.Boolean | Improve this Doc View Source UseFling Declaration public bool UseFling Field Value Type Description System.Boolean | Improve this Doc View Source UseGPU Declaration public static bool UseGPU Field Value Type Description System.Boolean Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ScreenHeight Declaration public float ScreenHeight { get; } Property Value Type Description System.Single | Improve this Doc View Source ScreenWidth Declaration public float ScreenWidth { get; } Property Value Type Description System.Single | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Layers that should be included in snapshot Returns Type Description System.Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.Element.OnPropertyChanged(System.String) | Improve this Doc View Source OpenBrowser(String) Public functions Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source RunOnUIThread(Action) Declaration protected void RunOnUIThread(Action action) Parameters Type Name Description System.Action action | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source DoubleTap DoubleTap is called, when user clicks with a mouse button or tap with a finger two or more times on map Declaration public event EventHandler<TappedEventArgs> DoubleTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs> Fling Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source Hovered Hover is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs> Hovered Event Type Type Description System.EventHandler < HoveredEventArgs > | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source LongTap LongTap is called, when user clicks with a mouse button or tap with a finger on map for 500 ms Declaration public event EventHandler<TappedEventArgs> LongTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source SingleTap SingleTap is called, when user clicks with a mouse button or tap with a finger on map Declaration public event EventHandler<TappedEventArgs> SingleTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs> Swipe Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source TouchAction TouchAction is called, when user provoques a touch event Declaration public event EventHandler<SKTouchEventArgs> TouchAction Event Type Type Description System.EventHandler < SkiaSharp.Views.Forms.SKTouchEventArgs > | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs> TouchEnded Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchEntered TouchEntered is called, when user moves an active touch onto the view Declaration public event EventHandler<TouchedEventArgs> TouchEntered Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchExited TouchExited is called, when user moves an active touch off the view Declaration public event EventHandler<TouchedEventArgs> TouchExited Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs> TouchMove Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchStarted Event handlers Declaration public event EventHandler<TouchedEventArgs> TouchStarted Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs> Zoomed Event Type Type Description System.EventHandler < ZoomedEventArgs > Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance System.Object System.EventArgs MapLongClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapSpan.html": {
    "href": "api/Mapsui.UI.Forms.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance System.Object MapSpan Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapSpan Constructors | Improve this Doc View Source MapSpan(Position, Double, Double) Initializes a new instance of the MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan System.Double latitudeDegrees Extend of MapSpan in latitude direction in degrees System.Double longitudeDegrees Extend of MapSpan in longitude direction in degrees Properties | Improve this Doc View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Improve this Doc View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description System.Double Extend in latitude degrees | Improve this Doc View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description System.Double Extend in longitude degrees | Improve this Doc View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Improve this Doc View Source ClampLatitude(Double, Double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description System.Double north Maximal latitude degrees for north System.Double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to the current MapSpan Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with current MapSpan Returns Type Description System.Boolean true if the specified System.Object is equal to the current MapSpan ; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source FromPositions(IEnumerable<Position>) Create a new MapSpan from multiple positions Declaration public static MapSpan FromPositions(IEnumerable<Position> positions) Parameters Type Name Description System.Collections.Generic.IEnumerable < Position > positions List of positions to get the new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source WithZoom(Double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description System.Double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Improve this Doc View Source Equality(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.MapView.html": {
    "href": "api/Mapsui.UI.Forms.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance System.Object Xamarin.Forms.BindableObject Xamarin.Forms.Element Xamarin.Forms.NavigableElement Xamarin.Forms.VisualElement Xamarin.Forms.View Xamarin.Forms.Layout Xamarin.Forms.TemplatedView Xamarin.Forms.ContentView MapControl MapView Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged System.Collections.Generic.IEnumerable < Pin > System.Collections.IEnumerable Inherited Members MapControl.UseGPU MapControl._initialized MapControl.ScreenWidth MapControl.ScreenHeight MapControl.SymbolCache MapControl.UseDoubleTap MapControl.UseFling MapControl.TouchStarted MapControl.TouchEnded MapControl.TouchEntered MapControl.TouchExited MapControl.TouchMove MapControl.TouchAction MapControl.Hovered MapControl.Swipe MapControl.Fling MapControl.SingleTap MapControl.LongTap MapControl.DoubleTap MapControl.Zoomed MapControl.OpenBrowser(String) MapControl.RunOnUIThread(Action) MapControl.Dispose() MapControl.StartUpdates(Boolean) MapControl.StopUpdates() MapControl.ForceUpdate() MapControl.UpdateInterval MapControl.Performance MapControl.UnSnapRotationDegrees MapControl.ReSnapRotationDegrees MapControl.PixelDensity MapControl.Renderer MapControl.Viewport MapControl.Navigator MapControl.ViewportInitialized MapControl.Info MapControl.PropertyChanged MapControl.Unsubscribe() MapControl.Refresh(ChangeType) MapControl.RefreshGraphics() MapControl.CallHomeIfNeeded() MapControl.Map MapControl.ToPixels(MPoint) MapControl.ToDeviceIndependentUnits(MPoint) MapControl.RefreshData(ChangeType) MapControl.GetMapInfo(MPoint, Int32) MapControl.GetSnapshot(IEnumerable<ILayer>) MapControl.Clear() Xamarin.Forms.ContentView.ContentProperty Xamarin.Forms.ContentView.OnBindingContextChanged() Xamarin.Forms.ContentView.Content Xamarin.Forms.TemplatedView.ControlTemplateProperty Xamarin.Forms.TemplatedView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Xamarin.Forms.TemplatedView.OnApplyTemplate() Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element) Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element, System.Int32) Xamarin.Forms.TemplatedView.GetTemplateChild(System.String) Xamarin.Forms.TemplatedView.ResolveControlTemplate() Xamarin.Forms.TemplatedView.ControlTemplate Xamarin.Forms.Layout.IsClippedToBoundsProperty Xamarin.Forms.Layout.CascadeInputTransparentProperty Xamarin.Forms.Layout.PaddingProperty Xamarin.Forms.Layout.ForceLayout() Xamarin.Forms.Layout.LayoutChildIntoBoundingRegion(Xamarin.Forms.VisualElement, Xamarin.Forms.Rectangle) Xamarin.Forms.Layout.LowerChild(Xamarin.Forms.View) Xamarin.Forms.Layout.RaiseChild(Xamarin.Forms.View) Xamarin.Forms.Layout.InvalidateLayout() Xamarin.Forms.Layout.OnChildMeasureInvalidated(System.Object, System.EventArgs) Xamarin.Forms.Layout.OnChildMeasureInvalidated() Xamarin.Forms.Layout.OnSizeAllocated(System.Double, System.Double) Xamarin.Forms.Layout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View) Xamarin.Forms.Layout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View) Xamarin.Forms.Layout.UpdateChildrenLayout() Xamarin.Forms.Layout.ResolveLayoutChanges() Xamarin.Forms.Layout.IsClippedToBounds Xamarin.Forms.Layout.Padding Xamarin.Forms.Layout.CascadeInputTransparent Xamarin.Forms.Layout.LayoutChanged Xamarin.Forms.View.VerticalOptionsProperty Xamarin.Forms.View.HorizontalOptionsProperty Xamarin.Forms.View.MarginProperty Xamarin.Forms.View.GetChildElements(Xamarin.Forms.Point) Xamarin.Forms.View.GestureController Xamarin.Forms.View.GestureRecognizers Xamarin.Forms.View.Xamarin.Forms.Internals.IGestureController.CompositeGestureRecognizers Xamarin.Forms.View.HorizontalOptions Xamarin.Forms.View.Margin Xamarin.Forms.View.VerticalOptions Xamarin.Forms.VisualElement.NavigationProperty Xamarin.Forms.VisualElement.StyleProperty Xamarin.Forms.VisualElement.InputTransparentProperty Xamarin.Forms.VisualElement.IsEnabledProperty Xamarin.Forms.VisualElement.XProperty Xamarin.Forms.VisualElement.YProperty Xamarin.Forms.VisualElement.AnchorXProperty Xamarin.Forms.VisualElement.AnchorYProperty Xamarin.Forms.VisualElement.TranslationXProperty Xamarin.Forms.VisualElement.TranslationYProperty Xamarin.Forms.VisualElement.WidthProperty Xamarin.Forms.VisualElement.HeightProperty Xamarin.Forms.VisualElement.RotationProperty Xamarin.Forms.VisualElement.RotationXProperty Xamarin.Forms.VisualElement.RotationYProperty Xamarin.Forms.VisualElement.ScaleProperty Xamarin.Forms.VisualElement.ScaleXProperty Xamarin.Forms.VisualElement.ScaleYProperty Xamarin.Forms.VisualElement.ClipProperty Xamarin.Forms.VisualElement.VisualProperty Xamarin.Forms.VisualElement.IsVisibleProperty Xamarin.Forms.VisualElement.OpacityProperty Xamarin.Forms.VisualElement.BackgroundColorProperty Xamarin.Forms.VisualElement.BackgroundProperty Xamarin.Forms.VisualElement.BehaviorsProperty Xamarin.Forms.VisualElement.TriggersProperty Xamarin.Forms.VisualElement.WidthRequestProperty Xamarin.Forms.VisualElement.HeightRequestProperty Xamarin.Forms.VisualElement.MinimumWidthRequestProperty Xamarin.Forms.VisualElement.MinimumHeightRequestProperty Xamarin.Forms.VisualElement.IsFocusedProperty Xamarin.Forms.VisualElement.FlowDirectionProperty Xamarin.Forms.VisualElement.TabIndexProperty Xamarin.Forms.VisualElement.IsTabStopProperty Xamarin.Forms.VisualElement.OnTabIndexPropertyChanged(System.Int32, System.Int32) Xamarin.Forms.VisualElement.TabIndexDefaultValueCreator() Xamarin.Forms.VisualElement.OnTabStopPropertyChanged(System.Boolean, System.Boolean) Xamarin.Forms.VisualElement.TabStopDefaultValueCreator() Xamarin.Forms.VisualElement.BatchBegin() Xamarin.Forms.VisualElement.BatchCommit() Xamarin.Forms.VisualElement.Focus() Xamarin.Forms.VisualElement.Layout(Xamarin.Forms.Rectangle) Xamarin.Forms.VisualElement.Measure(System.Double, System.Double, Xamarin.Forms.MeasureFlags) Xamarin.Forms.VisualElement.Unfocus() Xamarin.Forms.VisualElement.InvalidateMeasure() Xamarin.Forms.VisualElement.OnChildAdded(Xamarin.Forms.Element) Xamarin.Forms.VisualElement.OnChildrenReordered() Xamarin.Forms.VisualElement.OnMeasure(System.Double, System.Double) Xamarin.Forms.VisualElement.SizeAllocated(System.Double, System.Double) Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.InvalidateMeasure(Xamarin.Forms.Internals.InvalidationTrigger) Xamarin.Forms.VisualElement.ChangeVisualState() Xamarin.Forms.VisualElement.Visual Xamarin.Forms.VisualElement.FlowDirection Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.EffectiveFlowDirection Xamarin.Forms.VisualElement.AnchorX Xamarin.Forms.VisualElement.AnchorY Xamarin.Forms.VisualElement.BackgroundColor Xamarin.Forms.VisualElement.Background Xamarin.Forms.VisualElement.Behaviors Xamarin.Forms.VisualElement.Bounds Xamarin.Forms.VisualElement.Height Xamarin.Forms.VisualElement.HeightRequest Xamarin.Forms.VisualElement.InputTransparent Xamarin.Forms.VisualElement.IsEnabled Xamarin.Forms.VisualElement.IsFocused Xamarin.Forms.VisualElement.IsVisible Xamarin.Forms.VisualElement.MinimumHeightRequest Xamarin.Forms.VisualElement.MinimumWidthRequest Xamarin.Forms.VisualElement.Opacity Xamarin.Forms.VisualElement.Rotation Xamarin.Forms.VisualElement.RotationX Xamarin.Forms.VisualElement.RotationY Xamarin.Forms.VisualElement.Scale Xamarin.Forms.VisualElement.ScaleX Xamarin.Forms.VisualElement.ScaleY Xamarin.Forms.VisualElement.TabIndex Xamarin.Forms.VisualElement.IsTabStop Xamarin.Forms.VisualElement.TranslationX Xamarin.Forms.VisualElement.TranslationY Xamarin.Forms.VisualElement.Triggers Xamarin.Forms.VisualElement.Width Xamarin.Forms.VisualElement.WidthRequest Xamarin.Forms.VisualElement.X Xamarin.Forms.VisualElement.Y Xamarin.Forms.VisualElement.Clip Xamarin.Forms.VisualElement.Resources Xamarin.Forms.VisualElement.ChildrenReordered Xamarin.Forms.VisualElement.Focused Xamarin.Forms.VisualElement.MeasureInvalidated Xamarin.Forms.VisualElement.SizeChanged Xamarin.Forms.VisualElement.Unfocused Xamarin.Forms.NavigableElement.OnParentSet() Xamarin.Forms.NavigableElement.Navigation Xamarin.Forms.NavigableElement.Style Xamarin.Forms.NavigableElement.StyleClass Xamarin.Forms.NavigableElement.class Xamarin.Forms.Element.MenuProperty Xamarin.Forms.Element.AutomationIdProperty Xamarin.Forms.Element.ClassIdProperty Xamarin.Forms.Element.GetMenu(Xamarin.Forms.BindableObject) Xamarin.Forms.Element.SetMenu(Xamarin.Forms.BindableObject, Xamarin.Forms.Menu) Xamarin.Forms.Element.Xamarin.Forms.IElementController.SetValueFromRenderer(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.Element.FindByName(System.String) Xamarin.Forms.Element.RemoveDynamicResource(Xamarin.Forms.BindableProperty) Xamarin.Forms.Element.SetDynamicResource(Xamarin.Forms.BindableProperty, System.String) Xamarin.Forms.Element.AutomationId Xamarin.Forms.Element.ClassId Xamarin.Forms.Element.Effects Xamarin.Forms.Element.Id Xamarin.Forms.Element.StyleId Xamarin.Forms.Element.Parent Xamarin.Forms.Element.ChildAdded Xamarin.Forms.Element.ChildRemoved Xamarin.Forms.Element.DescendantAdded Xamarin.Forms.Element.DescendantRemoved Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapView : MapControl, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, IMapControl, IDisposable, INotifyPropertyChanged, IEnumerable<Pin>, IEnumerable Constructors | Improve this Doc View Source MapView() Initializes a new instance of the MapView class. Declaration public MapView() Fields | Improve this Doc View Source ButtonMarginProperty Declaration public static readonly BindableProperty ButtonMarginProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ButtonSizeProperty Declaration public static readonly BindableProperty ButtonSizeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ButtonSpacingProperty Declaration public static readonly BindableProperty ButtonSpacingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UniqueCalloutProperty Declaration public static readonly BindableProperty UniqueCalloutProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UseFlingProperty Declaration public static readonly BindableProperty UseFlingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source ButtonMargin Margin for buttons Declaration public Thickness ButtonMargin { get; set; } Property Value Type Description Xamarin.Forms.Thickness | Improve this Doc View Source ButtonSize Size of buttons in x- and y-direction Declaration public double ButtonSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ButtonSpacing Spacing between buttons Declaration public double ButtonSpacing { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description System.Collections.Generic.IList < Drawable > | Improve this Doc View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description System.Boolean Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Improve this Doc View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Improve this Doc View Source PanLock Enable paning Declaration public bool PanLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description System.Collections.Generic.IList < Pin > | Improve this Doc View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectedPin Selected pin Declaration public Pin SelectedPin { get; set; } Property Value Type Description Pin | Improve this Doc View Source UniqueCallout Single or multiple callouts possible Declaration public bool UniqueCallout { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides MapControl.Dispose(Boolean) | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < Pin > | Improve this Doc View Source HideCallouts() Hide all visible callouts Declaration public void HideCallouts() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Overrides MapControl.OnPropertyChanged(String) | Improve this Doc View Source Reset() Declaration public void Reset() Events | Improve this Doc View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs> MapClicked Event Type Type Description System.EventHandler < MapClickedEventArgs > | Improve this Doc View Source MapLongClicked Occurs when map long clicked Declaration public event EventHandler<MapLongClickedEventArgs> MapLongClicked Event Type Type Description System.EventHandler < MapLongClickedEventArgs > | Improve this Doc View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs> PinClicked Event Type Type Description System.EventHandler < PinClickedEventArgs > | Improve this Doc View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs> SelectedPinChanged Event Type Type Description System.EventHandler < SelectedPinChangedEventArgs > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Mapsui.UI.Forms.Pin.html": {
    "href": "api/Mapsui.UI.Forms.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance System.Object Xamarin.Forms.BindableObject Pin Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider System.IDisposable Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Pin : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IFeatureProvider, IDisposable Constructors | Improve this Doc View Source Pin() Initializes a new instance of the Pin class Declaration public Pin() | Improve this Doc View Source Pin(MapView) Initializes a new instance of the Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Fields | Improve this Doc View Source AddressProperty Declaration public static readonly BindableProperty AddressProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source HeightProperty Declaration public static readonly BindableProperty HeightProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IconProperty Declaration public static readonly BindableProperty IconProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PositionProperty Declaration public static readonly BindableProperty PositionProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotateWithMapProperty Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationProperty Declaration public static readonly BindableProperty RotationProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ScaleProperty Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SvgProperty Declaration public static readonly BindableProperty SvgProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TransparencyProperty Declaration public static readonly BindableProperty TransparencyProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source WidthProperty Declaration public static readonly BindableProperty WidthProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Address Adress (like street) of pin Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Xamarin.Forms.Point | Improve this Doc View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Improve this Doc View Source Color Color of pin Declaration public Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Feature Mapsui feature for this pin Declaration public GeometryFeature Feature { get; } Property Value Type Description Mapsui.Nts.GeometryFeature Mapsui feature | Improve this Doc View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source Icon Byte[] holding the bitmap informations Declaration public byte[] Icon { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of pin Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxVisible MaxVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible MinVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Svg String holding the Svg image informations Declaration public string Svg { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tag Tag holding free data Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Improve this Doc View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to the current Pin . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with the current Pin . Returns Type Description System.Boolean true if the specified System.Object is equal to the current Pin ; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source HideCallout() Hide corresponding callout Declaration public void HideCallout() | Improve this Doc View Source IsCalloutVisible() Check visibility for corresponding callout Declaration public bool IsCalloutVisible() Returns Type Description System.Boolean True, if callout is visible on map | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) | Improve this Doc View Source ShowCallout() Show corresponding callout Declaration public void ShowCallout() Operators | Improve this Doc View Source Equality(Pin, Pin) Declaration public static bool operator ==(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Pin, Pin) Declaration public static bool operator !=(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider System.IDisposable"
  },
  "api/Mapsui.UI.Forms.PinClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance System.Object System.EventArgs PinClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.PinType.html": {
    "href": "api/Mapsui.UI.Forms.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public enum PinType Fields Name Description Icon Pin as icon image Pin Pin with image, which could change color Svg Pin as Svg image"
  },
  "api/Mapsui.UI.Forms.Polygon.html": {
    "href": "api/Mapsui.UI.Forms.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance System.Object Xamarin.Forms.BindableObject Drawable Polygon Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polygon : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polygon() Initializes a new instance of the Polygon class. Declaration public Polygon() Fields | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description System.Collections.Generic.IList < Position []> | Improve this Doc View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description System.Collections.Generic.IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Polyline.html": {
    "href": "api/Mapsui.UI.Forms.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance System.Object Xamarin.Forms.BindableObject Drawable Polyline Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polyline : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polyline() Initializes a new instance of the Polyline class. Declaration public Polyline() | Improve this Doc View Source Polyline(String) Initializes a new instance of the Polyline class from encoded string as described here https://developers.google.com/maps/documentation/utilities/polylinealgorithm Declaration public Polyline(string encodedPolyline) Parameters Type Name Description System.String encodedPolyline Encoded polyline Properties | Improve this Doc View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description System.Collections.Generic.IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Position.html": {
    "href": "api/Mapsui.UI.Forms.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Position Constructors | Improve this Doc View Source Position(Position) Initializes a new instance of the Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Improve this Doc View Source Position(Double, Double) Initializes a new instance of the Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description System.Double latitude Latitude of position System.Double longitude Longitude of position Fields | Improve this Doc View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = \"P DD.ddd°|P DDD.ddd°|N|S|E|W\" Field Value Type Description System.String | Improve this Doc View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = \"P DD° MM.MMM'|P DDD° MM.MMM'|N|S|E|W\" Field Value Type Description System.String | Improve this Doc View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = \"P DD° MM' SS.sss\\\"|P DDD° MM' SS.sss\\\"|N|S|E|W\" Field Value Type Description System.String Properties | Improve this Doc View Source Latitude Latitude of position Declaration public readonly double Latitude { get; } Property Value Type Description System.Double | Improve this Doc View Source Longitude Longitude of position Declaration public readonly double Longitude { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToCoordinate() Declaration public Coordinate ToCoordinate() Returns Type Description NetTopologySuite.Geometries.Coordinate | Improve this Doc View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public MPoint ToMapsui() Returns Type Description MPoint Position in Mapsui format | Improve this Doc View Source ToPoint() Declaration public Point ToPoint() Returns Type Description NetTopologySuite.Geometries.Point | Improve this Doc View Source ToString() Returns a System.String that represents the current Position Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current Position Overrides System.ValueType.ToString() | Improve this Doc View Source ToString(String) Returns a System.String that represents the current Position in a given format Declaration public string ToString(string format) Parameters Type Name Description System.String format Format string Returns Type Description System.String Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Improve this Doc View Source Equality(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance System.Object System.EventArgs SelectedPinChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Improve this Doc View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin"
  },
  "api/Mapsui.UI.Forms.Utils.html": {
    "href": "api/Mapsui.UI.Forms.Utils.html",
    "title": "Namespace Mapsui.UI.Forms.Utils",
    "keywords": "Namespace Mapsui.UI.Forms.Utils Classes PolylineConverter Polyline helper class"
  },
  "api/Mapsui.UI.Forms.Utils.PolylineConverter.html": {
    "href": "api/Mapsui.UI.Forms.Utils.PolylineConverter.html",
    "title": "Class PolylineConverter",
    "keywords": "Class PolylineConverter Polyline helper class Inheritance System.Object PolylineConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Utils Assembly : Mapsui.UI.Forms.dll Syntax public static class PolylineConverter Methods | Improve this Doc View Source DecodePolyline(String) Decode Declaration public static List<Position> DecodePolyline(string encodedPolyline) Parameters Type Name Description System.String encodedPolyline Returns Type Description System.Collections.Generic.List < Position >"
  },
  "api/Mapsui.UI.HoveredEventArgs.html": {
    "href": "api/Mapsui.UI.HoveredEventArgs.html",
    "title": "Class HoveredEventArgs",
    "keywords": "Class HoveredEventArgs Inheritance System.Object HoveredEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class HoveredEventArgs : EventArgs Constructors | Improve this Doc View Source HoveredEventArgs(MPoint) Declaration public HoveredEventArgs(MPoint screenPosition) Parameters Type Name Description MPoint screenPosition Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.html": {
    "href": "api/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes FeatureInfoEventArgs HoveredEventArgs MapInfo MapInfoEventArgs MinMax MouseWheelAnimation SwipedEventArgs TappedEventArgs TouchedEventArgs ViewportLimiter ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. ViewportLimiterWithoutLimits ZoomedEventArgs Interfaces IMapControl IViewportLimiter Enums TouchMode ZoomDirection ZoomMode"
  },
  "api/Mapsui.UI.IMapControl.html": {
    "href": "api/Mapsui.UI.IMapControl.html",
    "title": "Interface IMapControl",
    "keywords": "Interface IMapControl Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IMapControl Properties | Improve this Doc View Source Map Declaration Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Declaration INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source Performance Declaration Performance Performance { get; set; } Property Value Type Description Performance | Improve this Doc View Source PixelDensity The number of pixel per device independent unit Declaration float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Declaration IRenderer Renderer { get; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees Declaration double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees Declaration double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Declaration IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Create a snapshot form map as PNG image Declaration byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Layers that should be included in snapshot Returns Type Description System.Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source OpenBrowser(String) Declaration void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Declaration void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Declaration void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Declaration void Unsubscribe() Events | Improve this Doc View Source Info Declaration event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source ViewportInitialized Declaration event EventHandler ViewportInitialized Event Type Type Description System.EventHandler"
  },
  "api/Mapsui.UI.iOS.html": {
    "href": "api/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "api/Mapsui.UI.iOS.MapControl.html": {
    "href": "api/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object Foundation.NSObject UIKit.UIResponder UIKit.UIView MapControl Implements System.IEquatable < Foundation.NSObject > Foundation.INSObjectProtocol UIKit.IUIPasteConfigurationSupporting UIKit.IUIUserActivityRestoring System.Collections.IEnumerable Foundation.INSCoding UIKit.IUIAccessibilityIdentification UIKit.IUIAppearance UIKit.IUIAppearanceContainer UIKit.IUICoordinateSpace UIKit.IUIDynamicItem UIKit.IUIFocusItem UIKit.IUIFocusEnvironment UIKit.IUIFocusItemContainer UIKit.IUILargeContentViewerItem UIKit.IUITraitEnvironment CoreAnimation.ICALayerDelegate ObjCRuntime.INativeObject IMapControl System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members UIKit.UIView.Add(UIKit.UIView) UIKit.UIView.AddSubviews(UIKit.UIView[]) UIKit.UIView.GetEnumerator() UIKit.UIView.BeginAnimations(System.String) UIKit.UIView.Animate(System.Double, System.Action, System.Action) UIKit.UIView.Animate(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action, System.Action) UIKit.UIView.Transition(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.Transition(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action, System.Action) UIKit.UIView.AnimateAsync(System.Double, System.Action) UIKit.UIView.Capture(System.Boolean) UIKit.UIView.AccessibilityActivate() UIKit.UIView.ActionForLayer(CoreAnimation.CALayer, System.String) UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint) UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[]) UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer) UIKit.UIView.AddInteraction(UIKit.IUIInteraction) UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double, System.Double, System.Action) UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide) UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect) UIKit.UIView.AddSubview(UIKit.UIView) UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect) UIKit.UIView.Animate(System.Double, System.Action) UIKit.UIView.AnimateKeyframes(System.Double, System.Double, UIKit.UIViewKeyframeAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateKeyframesAsync(System.Double, System.Double, UIKit.UIViewKeyframeAnimationOptions, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Double, System.nfloat, System.nfloat, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Double, System.nfloat, System.nfloat, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.BeginAnimations(System.String, System.IntPtr) UIKit.UIView.BringSubviewToFront(UIKit.UIView) UIKit.UIView.CommitAnimations() UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis) UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis) UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint, UIKit.UIView) UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint, UIKit.UIView) UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect, UIKit.UIView) UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect, UIKit.UIView) UIKit.UIView.DecodeRestorableState(Foundation.NSCoder) UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint) UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext, UIKit.UIFocusAnimationCoordinator) UIKit.UIView.DisplayLayer(CoreAnimation.CALayer) UIKit.UIView.Draw(CoreGraphics.CGRect) UIKit.UIView.DrawLayer(CoreAnimation.CALayer, CoreGraphics.CGContext) UIKit.UIView.DrawRect(CoreGraphics.CGRect, UIKit.UIViewPrintFormatter) UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect, System.Boolean) UIKit.UIView.EncodeRestorableState(Foundation.NSCoder) UIKit.UIView.EncodeTo(Foundation.NSCoder) UIKit.UIView.ExchangeSubview(System.nint, System.nint) UIKit.UIView.ExerciseAmbiguityInLayout() UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect) UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer) UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis) UIKit.UIView.GetFocusItems(CoreGraphics.CGRect) UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute) UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute, UIKit.UIUserInterfaceLayoutDirection) UIKit.UIView.HitTest(CoreGraphics.CGPoint, UIKit.UIEvent) UIKit.UIView.InsertSubview(UIKit.UIView, System.nint) UIKit.UIView.InsertSubviewAbove(UIKit.UIView, UIKit.UIView) UIKit.UIView.InsertSubviewBelow(UIKit.UIView, UIKit.UIView) UIKit.UIView.InvalidateIntrinsicContentSize() UIKit.UIView.IsDescendantOfView(UIKit.UIView) UIKit.UIView.LayoutIfNeeded() UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer) UIKit.UIView.LayoutSubviews() UIKit.UIView.ModifyAnimations(System.nfloat, System.Boolean, System.Action) UIKit.UIView.MovedToSuperview() UIKit.UIView.MovedToWindow() UIKit.UIView.NeedsUpdateConstraints() UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.PerformWithoutAnimation(System.Action) UIKit.UIView.PointInside(CoreGraphics.CGPoint, UIKit.UIEvent) UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint) UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[]) UIKit.UIView.RemoveFromSuperview() UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer) UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction) UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide) UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect) UIKit.UIView.RequiresConstraintBasedLayout() UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect, System.Boolean, UIKit.UIEdgeInsets) UIKit.UIView.SafeAreaInsetsDidChange() UIKit.UIView.SendSubviewToBack(UIKit.UIView) UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean) UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve) UIKit.UIView.SetAnimationDelay(System.Double) UIKit.UIView.SetAnimationDelegate(Foundation.NSObject) UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector) UIKit.UIView.SetAnimationDuration(System.Double) UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean) UIKit.UIView.SetAnimationRepeatCount(System.Single) UIKit.UIView.SetAnimationStartDate(Foundation.NSDate) UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition, UIKit.UIView, System.Boolean) UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector) UIKit.UIView.SetContentCompressionResistancePriority(System.Single, UIKit.UILayoutConstraintAxis) UIKit.UIView.SetContentHuggingPriority(System.Single, UIKit.UILayoutConstraintAxis) UIKit.UIView.SetNeedsDisplay() UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect) UIKit.UIView.SetNeedsFocusUpdate() UIKit.UIView.SetNeedsLayout() UIKit.UIView.SetNeedsUpdateConstraints() UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext) UIKit.UIView.SizeThatFits(CoreGraphics.CGSize) UIKit.UIView.SizeToFit() UIKit.UIView.SnapshotView(System.Boolean) UIKit.UIView.SubviewAdded(UIKit.UIView) UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize) UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize, System.Single, System.Single) UIKit.UIView.TintColorDidChange() UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection) UIKit.UIView.TransitionNotify(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, UIKit.UICompletionHandler) UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions) UIKit.UIView.TransitionNotify(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.UpdateConstraints() UIKit.UIView.UpdateConstraintsIfNeeded() UIKit.UIView.UpdateFocusIfNeeded() UIKit.UIView.ViewWithTag(System.nint) UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer) UIKit.UIView.WillMoveToSuperview(UIKit.UIView) UIKit.UIView.WillMoveToWindow(UIKit.UIWindow) UIKit.UIView.WillRemoveSubview(UIKit.UIView) UIKit.UIView.GetAppearance<T>() UIKit.UIView.AppearanceWhenContainedIn(System.Type[]) UIKit.UIView.GetAppearance(UIKit.UITraitCollection) UIKit.UIView.GetAppearance(UIKit.UITraitCollection, System.Type[]) UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection) UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection, System.Type[]) UIKit.UIView.ClassHandle UIKit.UIView.AccessibilityActivationPoint UIKit.UIView.AccessibilityAttributedHint UIKit.UIView.AccessibilityAttributedLabel UIKit.UIView.AccessibilityAttributedUserInputLabels UIKit.UIView.AccessibilityAttributedValue UIKit.UIView.AccessibilityElementsHidden UIKit.UIView.AccessibilityFrame UIKit.UIView.AccessibilityHint UIKit.UIView.AccessibilityIdentifier UIKit.UIView.AccessibilityIgnoresInvertColors UIKit.UIView.AccessibilityLabel UIKit.UIView.AccessibilityLanguage UIKit.UIView.AccessibilityNavigationStyle UIKit.UIView.AccessibilityPath UIKit.UIView.AccessibilityRespondsToUserInteraction UIKit.UIView.AccessibilityTextualContext UIKit.UIView.AccessibilityTraits UIKit.UIView.AccessibilityUserInputLabels UIKit.UIView.AccessibilityValue UIKit.UIView.AccessibilityViewIsModal UIKit.UIView.AlignmentRectInsets UIKit.UIView.Alpha UIKit.UIView.AnimationsEnabled UIKit.UIView.AppliedContentSizeCategoryLimitsDescription UIKit.UIView.AutoresizingMask UIKit.UIView.AutosizesSubviews UIKit.UIView.BackgroundColor UIKit.UIView.BottomAnchor UIKit.UIView.Bounds UIKit.UIView.CanBecomeFocused UIKit.UIView.Center UIKit.UIView.CenterXAnchor UIKit.UIView.CenterYAnchor UIKit.UIView.ClearsContextBeforeDrawing UIKit.UIView.ClipsToBounds UIKit.UIView.CollisionBoundingPath UIKit.UIView.CollisionBoundsType UIKit.UIView.Constraints UIKit.UIView.ContentMode UIKit.UIView.ContentScaleFactor UIKit.UIView.ContentStretch UIKit.UIView.CoordinateSpace UIKit.UIView.DirectionalLayoutMargins UIKit.UIView.EffectiveUserInterfaceLayoutDirection UIKit.UIView.ExclusiveTouch UIKit.UIView.FirstBaselineAnchor UIKit.UIView.FocusEffect UIKit.UIView.FocusGroupIdentifier UIKit.UIView.FocusGroupPriority UIKit.UIView.FocusItemContainer UIKit.UIView.Focused UIKit.UIView.GestureRecognizers UIKit.UIView.HasAmbiguousLayout UIKit.UIView.HeightAnchor UIKit.UIView.Hidden UIKit.UIView.InheritedAnimationDuration UIKit.UIView.InsetsLayoutMarginsFromSafeArea UIKit.UIView.Interactions UIKit.UIView.IntrinsicContentSize UIKit.UIView.IsAccessibilityElement UIKit.UIView.IsTransparentFocusItem UIKit.UIView.KeyboardLayoutGuide UIKit.UIView.LargeContentImage UIKit.UIView.LargeContentImageInsets UIKit.UIView.LargeContentTitle UIKit.UIView.LastBaselineAnchor UIKit.UIView.Layer UIKit.UIView.LayoutGuides UIKit.UIView.LayoutMargins UIKit.UIView.LayoutMarginsGuide UIKit.UIView.LeadingAnchor UIKit.UIView.LeftAnchor UIKit.UIView.MaskView UIKit.UIView.MaximumContentSizeCategory UIKit.UIView.MinimumContentSizeCategory UIKit.UIView.MotionEffects UIKit.UIView.MultipleTouchEnabled UIKit.UIView.Opaque UIKit.UIView.OverrideUserInterfaceStyle UIKit.UIView.ParentFocusEnvironment UIKit.UIView.PreferredFocusEnvironments UIKit.UIView.PreferredFocusedView UIKit.UIView.PreservesSuperviewLayoutMargins UIKit.UIView.ReadableContentGuide UIKit.UIView.RestorationIdentifier UIKit.UIView.RightAnchor UIKit.UIView.SafeAreaInsets UIKit.UIView.SafeAreaLayoutGuide UIKit.UIView.ScalesLargeContentImage UIKit.UIView.SemanticContentAttribute UIKit.UIView.ShouldGroupAccessibilityChildren UIKit.UIView.ShowsLargeContentViewer UIKit.UIView.Subviews UIKit.UIView.Superview UIKit.UIView.Tag UIKit.UIView.TintAdjustmentMode UIKit.UIView.TintColor UIKit.UIView.TopAnchor UIKit.UIView.TrailingAnchor UIKit.UIView.TraitCollection UIKit.UIView.Transform UIKit.UIView.Transform3D UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints UIKit.UIView.UserInteractionEnabled UIKit.UIView.ViewForBaselineLayout UIKit.UIView.ViewForFirstBaselineLayout UIKit.UIView.ViewForLastBaselineLayout UIKit.UIView.ViewPrintFormatter UIKit.UIView.WidthAnchor UIKit.UIView.Window UIKit.UIView.AnnouncementDidFinishNotification UIKit.UIView.AnnouncementNotification UIKit.UIView.AssistiveTechnologyKey UIKit.UIView.AssistiveTouchStatusDidChangeNotification UIKit.UIView.BoldTextStatusDidChangeNotification UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification UIKit.UIView.ClosedCaptioningStatusDidChangeNotification UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification UIKit.UIView.ElementFocusedNotification UIKit.UIView.FocusedElementKey UIKit.UIView.GrayscaleStatusDidChangeNotification UIKit.UIView.GuidedAccessStatusDidChangeNotification UIKit.UIView.HearingDevicePairedEarDidChangeNotification UIKit.UIView.InvertColorsStatusDidChangeNotification UIKit.UIView.LayoutChangedNotification UIKit.UIView.MonoAudioStatusDidChangeNotification UIKit.UIView.NoIntrinsicMetric UIKit.UIView.NotificationSwitchControlIdentifier UIKit.UIView.NotificationVoiceOverIdentifier UIKit.UIView.OnOffSwitchLabelsDidChangeNotification UIKit.UIView.PageScrolledNotification UIKit.UIView.PauseAssistiveTechnologyNotification UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification UIKit.UIView.ReduceMotionStatusDidChangeNotification UIKit.UIView.ReduceTransparencyStatusDidChangeNotification UIKit.UIView.ResumeAssistiveTechnologyNotification UIKit.UIView.ScreenChangedNotification UIKit.UIView.ShakeToUndoDidChangeNotification UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification UIKit.UIView.SpeakScreenStatusDidChangeNotification UIKit.UIView.SpeakSelectionStatusDidChangeNotification UIKit.UIView.SpeechAttributeIpaNotation UIKit.UIView.SpeechAttributeLanguage UIKit.UIView.SpeechAttributePitch UIKit.UIView.SpeechAttributePunctuation UIKit.UIView.SpeechAttributeQueueAnnouncement UIKit.UIView.SpeechAttributeSpellOut UIKit.UIView.SwitchControlStatusDidChangeNotification UIKit.UIView.TextAttributeContext UIKit.UIView.TextAttributeCustom UIKit.UIView.TextAttributeHeadingLevel UIKit.UIView.TraitAdjustable UIKit.UIView.TraitAllowsDirectInteraction UIKit.UIView.TraitButton UIKit.UIView.TraitCausesPageTurn UIKit.UIView.TraitHeader UIKit.UIView.TraitImage UIKit.UIView.TraitKeyboardKey UIKit.UIView.TraitLink UIKit.UIView.TraitNone UIKit.UIView.TraitNotEnabled UIKit.UIView.TraitPlaysSound UIKit.UIView.TraitSearchField UIKit.UIView.TraitSelected UIKit.UIView.TraitStartsMediaSession UIKit.UIView.TraitStaticText UIKit.UIView.TraitSummaryElement UIKit.UIView.TraitTabBar UIKit.UIView.TraitUpdatesFrequently UIKit.UIView.UILayoutFittingCompressedSize UIKit.UIView.UILayoutFittingExpandedSize UIKit.UIView.UnfocusedElementKey UIKit.UIView.VideoAutoplayStatusDidChangeNotification UIKit.UIView.VoiceOverStatusChanged UIKit.UIView.VoiceOverStatusDidChangeNotification UIKit.UIView.Appearance UIKit.UIView.AnimationWillStart UIKit.UIView.AnimationWillEnd UIKit.UIResponder.AccessibilityDecrement() UIKit.UIResponder.AccessibilityElementDidBecomeFocused() UIKit.UIResponder.AccessibilityElementDidLoseFocus() UIKit.UIResponder.AccessibilityElementIsFocused() UIKit.UIResponder.AccessibilityIncrement() UIKit.UIResponder.AccessibilityPerformEscape() UIKit.UIResponder.AccessibilityPerformMagicTap() UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection) UIKit.UIResponder.BecomeFirstResponder() UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder) UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[]) UIKit.UIResponder.CanPerform(ObjCRuntime.Selector, Foundation.NSObject) UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject) UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString) UIKit.UIResponder.Copy(Foundation.NSObject) UIKit.UIResponder.Cut(Foundation.NSObject) UIKit.UIResponder.Delete(Foundation.NSObject) UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector, Foundation.NSObject) UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject) UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject) UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.Paste(Foundation.NSObject) UIKit.UIResponder.Paste(Foundation.NSItemProvider[]) UIKit.UIResponder.PasteAndGo(Foundation.NSObject) UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject) UIKit.UIResponder.PasteAndSearch(Foundation.NSObject) UIKit.UIResponder.PressesBegan(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesCancelled(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesChanged(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesEnded(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.Print(Foundation.NSObject) UIKit.UIResponder.ReloadInputViews() UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent) UIKit.UIResponder.ResignFirstResponder() UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity) UIKit.UIResponder.Select(Foundation.NSObject) UIKit.UIResponder.SelectAll(Foundation.NSObject) UIKit.UIResponder.ToggleBoldface(Foundation.NSObject) UIKit.UIResponder.ToggleItalics(Foundation.NSObject) UIKit.UIResponder.ToggleUnderline(Foundation.NSObject) UIKit.UIResponder.TouchesCancelled(Foundation.NSSet, UIKit.UIEvent) UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet) UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler) UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity) UIKit.UIResponder.ValidateCommand(UIKit.UICommand) UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers UIKit.UIResponder.AccessibilityCustomActions UIKit.UIResponder.AccessibilityDragSourceDescriptors UIKit.UIResponder.AccessibilityDropPointDescriptors UIKit.UIResponder.ActivityItemsConfiguration UIKit.UIResponder.CanBecomeFirstResponder UIKit.UIResponder.CanResignFirstResponder UIKit.UIResponder.EditingInteractionConfiguration UIKit.UIResponder.InputAccessoryView UIKit.UIResponder.InputAccessoryViewController UIKit.UIResponder.InputAssistantItem UIKit.UIResponder.InputView UIKit.UIResponder.InputViewController UIKit.UIResponder.IsFirstResponder UIKit.UIResponder.KeyCommands UIKit.UIResponder.NextResponder UIKit.UIResponder.PasteConfiguration UIKit.UIResponder.TextInputContextIdentifier UIKit.UIResponder.TextInputMode UIKit.UIResponder.UndoManager UIKit.UIResponder.UserActivity Foundation.NSObject.MonoTouchAssembly Foundation.NSObject.PlatformAssembly Foundation.NSObject.Alloc(ObjCRuntime.Class) Foundation.NSObject.Init() Foundation.NSObject.InvokeInBackground(System.Action) Foundation.NSObject.IsNewRefcountEnabled() Foundation.NSObject.MarkDirty() Foundation.NSObject.ConformsToProtocol(System.IntPtr) Foundation.NSObject.DangerousRelease() Foundation.NSObject.DangerousRetain() Foundation.NSObject.DangerousAutorelease() Foundation.NSObject.GetNativeField(System.String) Foundation.NSObject.SetNativeField(System.String, Foundation.NSObject) Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.BeginInvokeOnMainThread(System.Action) Foundation.NSObject.InvokeOnMainThread(System.Action) Foundation.NSObject.FromObject(System.Object) Foundation.NSObject.SetValueForKeyPath(System.IntPtr, Foundation.NSString) Foundation.NSObject.GetHashCode() Foundation.NSObject.Equals(System.Object) Foundation.NSObject.Equals(Foundation.NSObject) Foundation.NSObject.ToString() Foundation.NSObject.Invoke(System.Action, System.Double) Foundation.NSObject.Invoke(System.Action, System.TimeSpan) Foundation.NSObject.AddObserver(System.String, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>) Foundation.NSObject.AddObserver(Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>) Foundation.NSObject.AddObserver(Foundation.NSObject, Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.IntPtr) Foundation.NSObject.AddObserver(Foundation.NSObject, System.String, Foundation.NSKeyValueObservingOptions, System.IntPtr) Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String) Foundation.NSObject.AwakeFromNib() Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject) Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject, ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.Copy() Foundation.NSObject.DidChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString) Foundation.NSObject.DidChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet) Foundation.NSObject.DidChangeValue(System.String) Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector) Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[]) Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString) Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector) Foundation.NSObject.GetNativeHash() Foundation.NSObject.IsEqual(Foundation.NSObject) Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class) Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class) Foundation.NSObject.MutableCopy() Foundation.NSObject.ObserveValue(Foundation.NSString, Foundation.NSObject, Foundation.NSDictionary, System.IntPtr) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, System.Double, Foundation.NSString[]) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, System.Double) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, System.Boolean) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, System.Boolean, Foundation.NSString[]) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, Foundation.NSObject) Foundation.NSObject.PrepareForInterfaceBuilder() Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString, System.IntPtr) Foundation.NSObject.RemoveObserver(Foundation.NSObject, System.String, System.IntPtr) Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.RemoveObserver(Foundation.NSObject, System.String) Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector) Foundation.NSObject.SetNilValueForKey(Foundation.NSString) Foundation.NSObject.SetValueForKey(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary) Foundation.NSObject.ValueForKey(Foundation.NSString) Foundation.NSObject.ValueForKeyPath(Foundation.NSString) Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString) Foundation.NSObject.WillChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString) Foundation.NSObject.WillChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet) Foundation.NSObject.WillChangeValue(System.String) Foundation.NSObject.IsDirectBinding Foundation.NSObject.SuperHandle Foundation.NSObject.Handle Foundation.NSObject.Class Foundation.NSObject.DebugDescription Foundation.NSObject.Description Foundation.NSObject.IsProxy Foundation.NSObject.RetainCount Foundation.NSObject.Self Foundation.NSObject.Superclass Foundation.NSObject.Zone Foundation.NSObject.ChangeIndexesKey Foundation.NSObject.ChangeKindKey Foundation.NSObject.ChangeNewKey Foundation.NSObject.ChangeNotificationIsPriorKey Foundation.NSObject.ChangeOldKey System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.iOS Assembly : Mapsui.UI.iOS.dll Syntax [Register(\"MapControl\")] public class MapControl : UIView, IEquatable<NSObject>, INSObjectProtocol, IUIPasteConfigurationSupporting, IUIUserActivityRestoring, IEnumerable, INSCoding, IUIAccessibilityIdentification, IUIAppearance, IUIAppearanceContainer, IUICoordinateSpace, IUIDynamicItem, IUIFocusItem, IUIFocusEnvironment, IUIFocusItemContainer, IUILargeContentViewerItem, IUITraitEnvironment, ICALayerDelegate, INativeObject, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Improve this Doc View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CoreGraphics.CGRect frame | Improve this Doc View Source MapControl(IntPtr) Declaration [Preserve] public MapControl(IntPtr handle) Parameters Type Name Description System.IntPtr handle Properties | Improve this Doc View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CoreGraphics.CGRect Overrides UIKit.UIView.Frame | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides UIKit.UIView.Dispose(System.Boolean) | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Layers that should be included in snapshot Returns Type Description System.Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() Overrides UIKit.UIView.LayoutMarginsDidChange() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source TouchesBegan(NSSet, UIEvent) Declaration public override void TouchesBegan(NSSet touches, UIEvent evt) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent evt Overrides UIKit.UIResponder.TouchesBegan(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source TouchesEnded(NSSet, UIEvent) Declaration public override void TouchesEnded(NSSet touches, UIEvent e) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent e Overrides UIKit.UIResponder.TouchesEnded(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source TouchesMoved(NSSet, UIEvent) Declaration public override void TouchesMoved(NSSet touches, UIEvent evt) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent evt Overrides UIKit.UIResponder.TouchesMoved(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler Implements System.IEquatable<T> Foundation.INSObjectProtocol UIKit.IUIPasteConfigurationSupporting UIKit.IUIUserActivityRestoring System.Collections.IEnumerable Foundation.INSCoding UIKit.IUIAccessibilityIdentification UIKit.IUIAppearance UIKit.IUIAppearanceContainer UIKit.IUICoordinateSpace UIKit.IUIDynamicItem UIKit.IUIFocusItem UIKit.IUIFocusEnvironment UIKit.IUIFocusItemContainer UIKit.IUILargeContentViewerItem UIKit.IUITraitEnvironment CoreAnimation.ICALayerDelegate ObjCRuntime.INativeObject IMapControl System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.UI.IViewportLimiter.html": {
    "href": "api/Mapsui.UI.IViewportLimiter.html",
    "title": "Interface IViewportLimiter",
    "keywords": "Interface IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope Returns Type Description System.Double"
  },
  "api/Mapsui.UI.MapInfo.html": {
    "href": "api/Mapsui.UI.MapInfo.html",
    "title": "Class MapInfo",
    "keywords": "Class MapInfo Inheritance System.Object MapInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfo Properties | Improve this Doc View Source Feature The feature touched by the user Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Improve this Doc View Source Layer The layer to which the touched feature belongs Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Improve this Doc View Source MapInfoRecords Declaration public List<MapInfoRecord> MapInfoRecords { get; set; } Property Value Type Description System.Collections.Generic.List < MapInfoRecord > | Improve this Doc View Source Resolution The resolution at which the info was retrieved. This can be useful to calculate screen distances, which are needed for editing functionality. Declaration public double Resolution { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ScreenPosition Screen position of the place the user touched Declaration public MPoint ScreenPosition { get; set; } Property Value Type Description MPoint | Improve this Doc View Source Style The style of feature touched by the user Declaration public IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source WorldPosition World position of the place the user touched Declaration public MPoint WorldPosition { get; set; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.MapInfoEventArgs.html": {
    "href": "api/Mapsui.UI.MapInfoEventArgs.html",
    "title": "Class MapInfoEventArgs",
    "keywords": "Class MapInfoEventArgs Inheritance System.Object System.EventArgs MapInfoEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfoEventArgs : EventArgs Properties | Improve this Doc View Source Handled If the interaction was handled by the event subscriber Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapInfo Declaration public MapInfo MapInfo { get; set; } Property Value Type Description MapInfo | Improve this Doc View Source NumTaps Number of times the user tapped the location Declaration public int NumTaps { get; set; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.UI.MinMax.html": {
    "href": "api/Mapsui.UI.MinMax.html",
    "title": "Class MinMax",
    "keywords": "Class MinMax Inheritance System.Object MinMax Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MinMax Constructors | Improve this Doc View Source MinMax(Double, Double) Declaration public MinMax(double value1, double value2) Parameters Type Name Description System.Double value1 System.Double value2 Properties | Improve this Doc View Source Max Declaration public double Max { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Declaration public double Min { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.MouseWheelAnimation.html": {
    "href": "api/Mapsui.UI.MouseWheelAnimation.html",
    "title": "Class MouseWheelAnimation",
    "keywords": "Class MouseWheelAnimation Inheritance System.Object MouseWheelAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MouseWheelAnimation Properties | Improve this Doc View Source Duration Declaration public int Duration { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Easing Declaration public Easing Easing { get; set; } Property Value Type Description Easing Methods | Improve this Doc View Source GetResolution(Int32, IViewport, IMap) Declaration public double GetResolution(int delta, IViewport viewport, IMap map) Parameters Type Name Description System.Int32 delta IViewport viewport IMap map Returns Type Description System.Double | Improve this Doc View Source IsAnimating() Declaration public bool IsAnimating() Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Objects.Drawable.html": {
    "href": "api/Mapsui.UI.Objects.Drawable.html",
    "title": "Class Drawable",
    "keywords": "Class Drawable Base class for all drawables like polyline, polygon and circle Inheritance System.Object Xamarin.Forms.BindableObject Drawable Circle Polygon Polyline Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class Drawable : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Fields | Improve this Doc View Source IsClickableProperty Declaration public static readonly BindableProperty IsClickableProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeColorProperty Declaration public static readonly BindableProperty StrokeColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeWidthProperty Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ZIndexProperty Declaration public static readonly BindableProperty ZIndexProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Feature Mapsui Feature belonging to this drawable Declaration public GeometryFeature Feature { get; set; } Property Value Type Description Mapsui.Nts.GeometryFeature | Improve this Doc View Source IsClickable Is this drawable clickable Declaration public bool IsClickable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of drawable Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxVisible MaxVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible MinVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source StrokeColor StrokeColor for drawable Declaration public Color StrokeColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source StrokeWidth StrokeWidth of drawable in pixel Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Tag Object for free use Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ZIndex ZIndex of this drawable Declaration public int ZIndex { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) Events | Improve this Doc View Source Clicked Event called, if this drawable is clicked an IsClickable is true Declaration public event EventHandler<DrawableClickedEventArgs> Clicked Event Type Type Description System.EventHandler < DrawableClickedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.html": {
    "href": "api/Mapsui.UI.Objects.html",
    "title": "Namespace Mapsui.UI.Objects",
    "keywords": "Namespace Mapsui.UI.Objects Classes Drawable Base class for all drawables like polyline, polygon and circle MyLocationLayer A layer to display a symbol for own location ObservableCollectionProvider<T, TU> Interfaces IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.IFeatureProvider.html": {
    "href": "api/Mapsui.UI.Objects.IFeatureProvider.html",
    "title": "Interface IFeatureProvider",
    "keywords": "Interface IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public interface IFeatureProvider Properties | Improve this Doc View Source Feature Declaration GeometryFeature Feature { get; } Property Value Type Description Mapsui.Nts.GeometryFeature"
  },
  "api/Mapsui.UI.Objects.MyLocationLayer.html": {
    "href": "api/Mapsui.UI.Objects.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance System.Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable Inherited Members MemoryLayer.DataSource MemoryLayer.CRS MemoryLayer.GetFeatures(MRect, Double) MemoryLayer.RefreshData(FetchInfo) MemoryLayer.Extent BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class MyLocationLayer : MemoryLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Remarks There are two different symbols for own loaction: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Improve this Doc View Source MyLocationLayer(MapView) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(MapView view) Parameters Type Name Description MapView view MapView, to which this layer belongs | Improve this Doc View Source MyLocationLayer(MapView, Position) Initializes a new instance of the MyLocationLayer class with a starting location. Declaration public MyLocationLayer(MapView view, Position position) Parameters Type Name Description MapView view MapView, to which this layer belongs Position position Position, where to start Properties | Improve this Doc View Source Direction Movement direction of device at location Declaration public double Direction { get; } Property Value Type Description System.Double Direction at location | Improve this Doc View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocation Position of location, that is displayed Declaration public Position MyLocation { get; } Property Value Type Description Position Position of location | Improve this Doc View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description System.Double Scale of symbol | Improve this Doc View Source ViewingDirection Viewing direction of device (in degrees wrt. north direction) Declaration public double ViewingDirection { get; } Property Value Type Description System.Double Direction at location Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides BaseLayer.Dispose(Boolean) | Improve this Doc View Source UpdateMyDirection(Double, Double, Boolean) Updates my movement direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description System.Double newDirection New direction System.Double newViewportRotation New viewport rotation System.Boolean animated | Improve this Doc View Source UpdateMyLocation(Position, Boolean) Updates my location Declaration public void UpdateMyLocation(Position newLocation, bool animated = false) Parameters Type Name Description Position newLocation New location System.Boolean animated | Improve this Doc View Source UpdateMySpeed(Double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description System.Double newSpeed New speed | Improve this Doc View Source UpdateMyViewDirection(Double, Double, Boolean) Updates my view direction Declaration public void UpdateMyViewDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description System.Double newDirection New direction System.Double newViewportRotation New viewport rotation System.Boolean animated Implements ILayer IAnimatable System.ComponentModel.INotifyPropertyChanged System.IDisposable"
  },
  "api/Mapsui.UI.Objects.ObservableCollectionProvider-2.html": {
    "href": "api/Mapsui.UI.Objects.ObservableCollectionProvider-2.html",
    "title": "Class ObservableCollectionProvider<T, TU>",
    "keywords": "Class ObservableCollectionProvider<T, TU> Inheritance System.Object ObservableCollectionProvider<T, TU> Implements IProvider <TU> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class ObservableCollectionProvider<T, TU> : IProvider<TU> where T : IFeatureProvider where TU : IFeature Type Parameters Name Description T TU Constructors | Improve this Doc View Source ObservableCollectionProvider(ObservableCollection<T>) Declaration public ObservableCollectionProvider(ObservableCollection<T> collection) Parameters Type Name Description System.Collections.ObjectModel.ObservableCollection <T> collection Properties | Improve this Doc View Source Collection Declaration public ObservableCollection<T> Collection { get; } Property Value Type Description System.Collections.ObjectModel.ObservableCollection <T> | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeatures(FetchInfo) Declaration public IEnumerable<TU> GetFeatures(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description System.Collections.Generic.IEnumerable <TU> Implements IProvider<T>"
  },
  "api/Mapsui.UI.SwipedEventArgs.html": {
    "href": "api/Mapsui.UI.SwipedEventArgs.html",
    "title": "Class SwipedEventArgs",
    "keywords": "Class SwipedEventArgs Inheritance System.Object SwipedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class SwipedEventArgs : EventArgs Constructors | Improve this Doc View Source SwipedEventArgs(Double, Double) Declaration public SwipedEventArgs(double velocityX, double velocityY) Parameters Type Name Description System.Double velocityX System.Double velocityY Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VelocityX Declaration public double VelocityX { get; } Property Value Type Description System.Double | Improve this Doc View Source VelocityY Declaration public double VelocityY { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.TappedEventArgs.html": {
    "href": "api/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance System.Object TappedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class TappedEventArgs : EventArgs Constructors | Improve this Doc View Source TappedEventArgs(MPoint, Int32) Declaration public TappedEventArgs(MPoint screenPosition, int numOfTaps) Parameters Type Name Description MPoint screenPosition System.Int32 numOfTaps Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NumOfTaps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.TouchedEventArgs.html": {
    "href": "api/Mapsui.UI.TouchedEventArgs.html",
    "title": "Class TouchedEventArgs",
    "keywords": "Class TouchedEventArgs Inheritance System.Object TouchedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class TouchedEventArgs : EventArgs Constructors | Improve this Doc View Source TouchedEventArgs(List<MPoint>) Declaration public TouchedEventArgs(List<MPoint> screenPoints) Parameters Type Name Description List < MPoint > screenPoints Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPoints Declaration public List<MPoint> ScreenPoints { get; } Property Value Type Description List < MPoint >"
  },
  "api/Mapsui.UI.TouchMode.html": {
    "href": "api/Mapsui.UI.TouchMode.html",
    "title": "Enum TouchMode",
    "keywords": "Enum TouchMode Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public enum TouchMode : int Fields Name Description Dragging None Zooming"
  },
  "api/Mapsui.UI.Utils.FlingTracker.html": {
    "href": "api/Mapsui.UI.Utils.FlingTracker.html",
    "title": "Class FlingTracker",
    "keywords": "Class FlingTracker Inheritance System.Object FlingTracker Namespace : Mapsui.UI.Utils Assembly : Mapsui.UI.Wpf.dll Syntax public class FlingTracker : object Constructors | Improve this Doc View Source FlingTracker() Declaration public FlingTracker() Methods | Improve this Doc View Source AddEvent(Int64, MPoint, Int64) Declaration public void AddEvent(long id, MPoint location, long ticks) Parameters Type Name Description System.Int64 id MPoint location System.Int64 ticks | Improve this Doc View Source CalcVelocity(Int64, Int64) Declaration public (double vx, double vy) CalcVelocity(long id, long now) Parameters Type Name Description System.Int64 id System.Int64 now Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source RemoveId(Int64) Declaration public void RemoveId(long id) Parameters Type Name Description System.Int64 id"
  },
  "api/Mapsui.UI.Utils.html": {
    "href": "api/Mapsui.UI.Utils.html",
    "title": "Namespace Mapsui.UI.Utils",
    "keywords": "Namespace Mapsui.UI.Utils Classes FlingTracker"
  },
  "api/Mapsui.UI.Uwp.Extensions.html": {
    "href": "api/Mapsui.UI.Uwp.Extensions.html",
    "title": "Namespace Mapsui.UI.Uwp.Extensions",
    "keywords": "Namespace Mapsui.UI.Uwp.Extensions Classes PointExtensions"
  },
  "api/Mapsui.UI.Uwp.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.UI.Uwp.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Uwp.Extensions Assembly : Mapsui.UI.Uwp.dll Syntax public static class PointExtensions Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static MPoint ToMapsui(this Point point) Parameters Type Name Description Windows.Foundation.Point point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Uwp.html": {
    "href": "api/Mapsui.UI.Uwp.html",
    "title": "Namespace Mapsui.UI.Uwp",
    "keywords": "Namespace Mapsui.UI.Uwp Classes MapControl"
  },
  "api/Mapsui.UI.Uwp.MapControl.html": {
    "href": "api/Mapsui.UI.Uwp.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object Windows.UI.Xaml.DependencyObject Windows.UI.Xaml.UIElement Windows.UI.Xaml.FrameworkElement Windows.UI.Xaml.Controls.Panel Windows.UI.Xaml.Controls.Grid MapControl Implements Windows.UI.Composition.IAnimationObject Windows.UI.Composition.IVisualElement IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Windows.UI.Xaml.Controls.Grid.GetRow(Windows.UI.Xaml.FrameworkElement) Windows.UI.Xaml.Controls.Grid.SetRow(Windows.UI.Xaml.FrameworkElement, System.Int32) Windows.UI.Xaml.Controls.Grid.GetColumn(Windows.UI.Xaml.FrameworkElement) Windows.UI.Xaml.Controls.Grid.SetColumn(Windows.UI.Xaml.FrameworkElement, System.Int32) Windows.UI.Xaml.Controls.Grid.GetRowSpan(Windows.UI.Xaml.FrameworkElement) Windows.UI.Xaml.Controls.Grid.SetRowSpan(Windows.UI.Xaml.FrameworkElement, System.Int32) Windows.UI.Xaml.Controls.Grid.GetColumnSpan(Windows.UI.Xaml.FrameworkElement) Windows.UI.Xaml.Controls.Grid.SetColumnSpan(Windows.UI.Xaml.FrameworkElement, System.Int32) Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid.ColumnDefinitions Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid.RowDefinitions Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid2.Padding Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid2.CornerRadius Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid2.BorderThickness Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid2.BorderBrush Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid3.RowSpacing Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid3.ColumnSpacing Windows.UI.Xaml.Controls.Grid.Windows.UI.Xaml.Controls.IGrid4.BackgroundSizing Windows.UI.Xaml.Controls.Grid.ColumnProperty Windows.UI.Xaml.Controls.Grid.ColumnSpanProperty Windows.UI.Xaml.Controls.Grid.RowProperty Windows.UI.Xaml.Controls.Grid.RowSpanProperty Windows.UI.Xaml.Controls.Grid.BorderBrushProperty Windows.UI.Xaml.Controls.Grid.BorderThicknessProperty Windows.UI.Xaml.Controls.Grid.CornerRadiusProperty Windows.UI.Xaml.Controls.Grid.PaddingProperty Windows.UI.Xaml.Controls.Grid.ColumnSpacingProperty Windows.UI.Xaml.Controls.Grid.RowSpacingProperty Windows.UI.Xaml.Controls.Grid.BackgroundSizingProperty Windows.UI.Xaml.Controls.Panel.Windows.UI.Xaml.Controls.IPanel.ChildrenTransitions Windows.UI.Xaml.Controls.Panel.Windows.UI.Xaml.Controls.IPanel.Background Windows.UI.Xaml.Controls.Panel.Windows.UI.Xaml.Controls.IPanel.Children Windows.UI.Xaml.Controls.Panel.Windows.UI.Xaml.Controls.IPanel.IsItemsHost Windows.UI.Xaml.Controls.Panel.Windows.UI.Xaml.Controls.IPanel2.BackgroundTransition Windows.UI.Xaml.Controls.Panel.BackgroundProperty Windows.UI.Xaml.Controls.Panel.ChildrenTransitionsProperty Windows.UI.Xaml.Controls.Panel.IsItemsHostProperty Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.FindName(System.String) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty, Windows.UI.Xaml.Data.BindingBase) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElementProtected7.InvalidateViewport() Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate() Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String, System.Boolean) Windows.UI.Xaml.FrameworkElement.DeferTree(Windows.UI.Xaml.DependencyObject) Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Width Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.VerticalAlignment Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Tag Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Style Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Resources Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Name Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.MinWidth Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.MinHeight Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.MaxWidth Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.MaxHeight Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Margin Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Language Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Height Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.FlowDirection Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.DataContext Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.ActualHeight Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.ActualWidth Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.BaseUri Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Parent Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Triggers Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement2.RequestedTheme Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.FocusVisualSecondaryThickness Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.FocusVisualSecondaryBrush Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.FocusVisualPrimaryThickness Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.FocusVisualPrimaryBrush Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.FocusVisualMargin Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.AllowFocusWhenDisabled Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement4.AllowFocusOnInteraction Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement6.ActualTheme Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement7.IsLoaded Windows.UI.Xaml.FrameworkElement.ActualHeightProperty Windows.UI.Xaml.FrameworkElement.ActualWidthProperty Windows.UI.Xaml.FrameworkElement.DataContextProperty Windows.UI.Xaml.FrameworkElement.FlowDirectionProperty Windows.UI.Xaml.FrameworkElement.HeightProperty Windows.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty Windows.UI.Xaml.FrameworkElement.LanguageProperty Windows.UI.Xaml.FrameworkElement.MarginProperty Windows.UI.Xaml.FrameworkElement.MaxHeightProperty Windows.UI.Xaml.FrameworkElement.MaxWidthProperty Windows.UI.Xaml.FrameworkElement.MinHeightProperty Windows.UI.Xaml.FrameworkElement.MinWidthProperty Windows.UI.Xaml.FrameworkElement.NameProperty Windows.UI.Xaml.FrameworkElement.StyleProperty Windows.UI.Xaml.FrameworkElement.TagProperty Windows.UI.Xaml.FrameworkElement.VerticalAlignmentProperty Windows.UI.Xaml.FrameworkElement.WidthProperty Windows.UI.Xaml.FrameworkElement.RequestedThemeProperty Windows.UI.Xaml.FrameworkElement.AllowFocusOnInteractionProperty Windows.UI.Xaml.FrameworkElement.AllowFocusWhenDisabledProperty Windows.UI.Xaml.FrameworkElement.FocusVisualMarginProperty Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryBrushProperty Windows.UI.Xaml.FrameworkElement.FocusVisualPrimaryThicknessProperty Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryBrushProperty Windows.UI.Xaml.FrameworkElement.FocusVisualSecondaryThicknessProperty Windows.UI.Xaml.FrameworkElement.ActualThemeProperty Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.LayoutUpdated Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Loaded Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.SizeChanged Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement.Unloaded Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement2.DataContextChanged Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement3.Loading Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement6.ActualThemeChanged Windows.UI.Xaml.FrameworkElement.Windows.UI.Xaml.IFrameworkElement7.EffectiveViewportChanged Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ReleasePointerCaptures() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent, System.Object, System.Boolean) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent, System.Object) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.InvalidateMeasure() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.InvalidateArrange() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.UpdateLayout() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement2.CancelDirectManipulations() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement3.StartDragAsync(Windows.UI.Input.PointerPoint) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.StartBringIntoView() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.StartBringIntoView(Windows.UI.Xaml.BringIntoViewOptions) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.TryInvokeKeyboardAccelerator(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.StartAnimation(Windows.UI.Composition.ICompositionAnimationBase) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.StopAnimation(Windows.UI.Composition.ICompositionAnimationBase) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point, Windows.Foundation.Rect) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides7.GetChildrenInTabFocusOrder() Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides8.OnKeyboardAcceleratorInvoked(Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides8.OnBringIntoViewRequested(Windows.UI.Xaml.BringIntoViewRequestedEventArgs) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride(System.String, Windows.UI.Composition.AnimationPropertyInfo) Windows.UI.Xaml.UIElement.Windows.UI.Composition.IAnimationObject.PopulatePropertyInfo(System.String, Windows.UI.Composition.AnimationPropertyInfo) Windows.UI.Xaml.UIElement.RegisterAsScrollPort(Windows.UI.Xaml.UIElement) Windows.UI.Xaml.UIElement.TryStartDirectManipulation(Windows.UI.Xaml.Input.Pointer) Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Transitions Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Projection Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.RenderTransformOrigin Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Opacity Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationMode Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.IsTapEnabled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.IsRightTapEnabled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.IsHoldingEnabled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.IsHitTestVisible Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.AllowDrop Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Clip Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.CacheMode Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.UseLayoutRounding Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.RenderTransform Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Visibility Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.DesiredSize Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerCaptures Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.RenderSize Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement10.Shadow Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement10.XamlRoot Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement10.ActualOffset Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement10.ActualSize Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement10.UIContext Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement2.CompositeMode Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement3.Transform3D Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement3.CanDrag Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.IsAccessKeyScope Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.ExitDisplayModeOnAccessKeyInvoked Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.ContextFlyout Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.AccessKeyScopeOwner Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.AccessKey Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.KeyTipHorizontalOffset Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.HighContrastAdjustment Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.XYFocusRightNavigationStrategy Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.XYFocusKeyboardNavigation Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.XYFocusDownNavigationStrategy Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.TabFocusNavigation Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.KeyTipVerticalOffset Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.XYFocusUpNavigationStrategy Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.KeyTipPlacementMode Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.XYFocusLeftNavigationStrategy Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.Lights Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.KeyboardAccelerators Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement8.KeyboardAcceleratorPlacementTarget Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement8.KeyboardAcceleratorPlacementMode Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement8.KeyTipTarget Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.CenterPoint Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.TranslationTransition Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.Translation Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.TransformMatrix Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.ScaleTransition Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.Scale Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.RotationTransition Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.RotationAxis Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.Rotation Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.OpacityTransition Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement9.CanBeScrollAnchor Windows.UI.Xaml.UIElement.HoldingEvent Windows.UI.Xaml.UIElement.IsDoubleTapEnabledProperty Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty Windows.UI.Xaml.UIElement.IsHoldingEnabledProperty Windows.UI.Xaml.UIElement.IsRightTapEnabledProperty Windows.UI.Xaml.UIElement.KeyDownEvent Windows.UI.Xaml.UIElement.KeyUpEvent Windows.UI.Xaml.UIElement.ManipulationCompletedEvent Windows.UI.Xaml.UIElement.ManipulationDeltaEvent Windows.UI.Xaml.UIElement.IsTapEnabledProperty Windows.UI.Xaml.UIElement.ManipulationInertiaStartingEvent Windows.UI.Xaml.UIElement.ManipulationModeProperty Windows.UI.Xaml.UIElement.ManipulationStartedEvent Windows.UI.Xaml.UIElement.ManipulationStartingEvent Windows.UI.Xaml.UIElement.OpacityProperty Windows.UI.Xaml.UIElement.PointerCanceledEvent Windows.UI.Xaml.UIElement.PointerCaptureLostEvent Windows.UI.Xaml.UIElement.PointerCapturesProperty Windows.UI.Xaml.UIElement.PointerEnteredEvent Windows.UI.Xaml.UIElement.PointerExitedEvent Windows.UI.Xaml.UIElement.PointerMovedEvent Windows.UI.Xaml.UIElement.PointerPressedEvent Windows.UI.Xaml.UIElement.PointerWheelChangedEvent Windows.UI.Xaml.UIElement.ProjectionProperty Windows.UI.Xaml.UIElement.RenderTransformOriginProperty Windows.UI.Xaml.UIElement.RenderTransformProperty Windows.UI.Xaml.UIElement.RightTappedEvent Windows.UI.Xaml.UIElement.DragEnterEvent Windows.UI.Xaml.UIElement.TappedEvent Windows.UI.Xaml.UIElement.TransitionsProperty Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty Windows.UI.Xaml.UIElement.VisibilityProperty Windows.UI.Xaml.UIElement.AllowDropProperty Windows.UI.Xaml.UIElement.CacheModeProperty Windows.UI.Xaml.UIElement.ClipProperty Windows.UI.Xaml.UIElement.DoubleTappedEvent Windows.UI.Xaml.UIElement.PointerReleasedEvent Windows.UI.Xaml.UIElement.DragLeaveEvent Windows.UI.Xaml.UIElement.DragOverEvent Windows.UI.Xaml.UIElement.DropEvent Windows.UI.Xaml.UIElement.ShadowProperty Windows.UI.Xaml.UIElement.CompositeModeProperty Windows.UI.Xaml.UIElement.CanDragProperty Windows.UI.Xaml.UIElement.Transform3DProperty Windows.UI.Xaml.UIElement.AccessKeyProperty Windows.UI.Xaml.UIElement.AccessKeyScopeOwnerProperty Windows.UI.Xaml.UIElement.ContextFlyoutProperty Windows.UI.Xaml.UIElement.IsAccessKeyScopeProperty Windows.UI.Xaml.UIElement.ExitDisplayModeOnAccessKeyInvokedProperty Windows.UI.Xaml.UIElement.HighContrastAdjustmentProperty Windows.UI.Xaml.UIElement.KeyTipHorizontalOffsetProperty Windows.UI.Xaml.UIElement.KeyTipPlacementModeProperty Windows.UI.Xaml.UIElement.KeyTipVerticalOffsetProperty Windows.UI.Xaml.UIElement.LightsProperty Windows.UI.Xaml.UIElement.XYFocusDownNavigationStrategyProperty Windows.UI.Xaml.UIElement.XYFocusKeyboardNavigationProperty Windows.UI.Xaml.UIElement.XYFocusLeftNavigationStrategyProperty Windows.UI.Xaml.UIElement.XYFocusRightNavigationStrategyProperty Windows.UI.Xaml.UIElement.XYFocusUpNavigationStrategyProperty Windows.UI.Xaml.UIElement.TabFocusNavigationProperty Windows.UI.Xaml.UIElement.GettingFocusEvent Windows.UI.Xaml.UIElement.LosingFocusEvent Windows.UI.Xaml.UIElement.NoFocusCandidateFoundEvent Windows.UI.Xaml.UIElement.CharacterReceivedEvent Windows.UI.Xaml.UIElement.PreviewKeyDownEvent Windows.UI.Xaml.UIElement.PreviewKeyUpEvent Windows.UI.Xaml.UIElement.BringIntoViewRequestedEvent Windows.UI.Xaml.UIElement.ContextRequestedEvent Windows.UI.Xaml.UIElement.KeyTipTargetProperty Windows.UI.Xaml.UIElement.KeyboardAcceleratorPlacementModeProperty Windows.UI.Xaml.UIElement.KeyboardAcceleratorPlacementTargetProperty Windows.UI.Xaml.UIElement.CanBeScrollAnchorProperty Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.DoubleTapped Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.DragEnter Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.DragLeave Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.DragOver Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Drop Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.GotFocus Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Holding Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.KeyDown Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.KeyUp Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.LostFocus Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationCompleted Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationDelta Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationStarted Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.ManipulationStarting Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerCanceled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerCaptureLost Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerEntered Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerExited Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerMoved Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerPressed Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerReleased Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.PointerWheelChanged Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.RightTapped Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement.Tapped Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement3.DragStarting Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement3.DropCompleted Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.AccessKeyDisplayDismissed Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.AccessKeyDisplayRequested Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.AccessKeyInvoked Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.ContextCanceled Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement4.ContextRequested Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.GettingFocus Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.LosingFocus Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement5.NoFocusCandidateFound Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.CharacterReceived Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.PreviewKeyDown Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.PreviewKeyUp Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement7.ProcessKeyboardAccelerators Windows.UI.Xaml.UIElement.Windows.UI.Xaml.IUIElement8.BringIntoViewRequested Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty, System.Object) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject2.RegisterPropertyChangedCallback(Windows.UI.Xaml.DependencyProperty, Windows.UI.Xaml.DependencyPropertyChangedCallback) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject2.UnregisterPropertyChangedCallback(Windows.UI.Xaml.DependencyProperty, System.Int64) Windows.UI.Xaml.DependencyObject.Windows.UI.Xaml.IDependencyObject.Dispatcher System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Uwp Assembly : Mapsui.UI.Uwp.dll Syntax public class MapControl : Grid, IDependencyObject, IDependencyObject2, IUIElement, IUIElement2, IUIElement3, IUIElement4, IUIElement5, IUIElement7, IUIElement8, IUIElement9, IUIElement10, IUIElementOverrides, IUIElementOverrides7, IUIElementOverrides8, IUIElementOverrides9, IAnimationObject, IVisualElement, IFrameworkElement, IFrameworkElement2, IFrameworkElement3, IFrameworkElement4, IFrameworkElement6, IFrameworkElement7, IFrameworkElementProtected7, IFrameworkElementOverrides, IFrameworkElementOverrides2, IPanel, IPanel2, IGrid, IGrid2, IGrid3, IGrid4, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Layers that should be included in snapshot Returns Type Description System.Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler Implements Windows.UI.Composition.IAnimationObject Windows.UI.Composition.IVisualElement IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.UI.ViewportLimiter.html": {
    "href": "api/Mapsui.UI.ViewportLimiter.html",
    "title": "Class ViewportLimiter",
    "keywords": "Class ViewportLimiter Inheritance System.Object ViewportLimiter Implements IViewportLimiter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiter : IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax | Improve this Doc View Source ZoomMode Zoom mode to use, when map is zoomed Declaration public ZoomMode ZoomMode { get; set; } Property Value Type Description ZoomMode Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiterKeepWithin.html": {
    "href": "api/Mapsui.UI.ViewportLimiterKeepWithin.html",
    "title": "Class ViewportLimiterKeepWithin",
    "keywords": "Class ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. Inheritance System.Object ViewportLimiterKeepWithin Implements IViewportLimiter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterKeepWithin : IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). The resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiterWithoutLimits.html": {
    "href": "api/Mapsui.UI.ViewportLimiterWithoutLimits.html",
    "title": "Class ViewportLimiterWithoutLimits",
    "keywords": "Class ViewportLimiterWithoutLimits Inheritance System.Object ViewportLimiterWithoutLimits Implements IViewportLimiter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterWithoutLimits : IViewportLimiter Properties | Improve this Doc View Source PanLimits Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight System.Collections.Generic.IReadOnlyList < System.Double > mapResolutions MRect mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.Wpf.Extensions.html": {
    "href": "api/Mapsui.UI.Wpf.Extensions.html",
    "title": "Namespace Mapsui.UI.Wpf.Extensions",
    "keywords": "Namespace Mapsui.UI.Wpf.Extensions Classes WindowsPointExtensions"
  },
  "api/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html",
    "title": "Class WindowsPointExtensions",
    "keywords": "Class WindowsPointExtensions Inheritance System.Object WindowsPointExtensions Namespace : Mapsui.UI.Wpf.Extensions Assembly : Mapsui.UI.Wpf.dll Syntax public static class WindowsPointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static MPoint ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Wpf.html": {
    "href": "api/Mapsui.UI.Wpf.html",
    "title": "Namespace Mapsui.UI.Wpf",
    "keywords": "Namespace Mapsui.UI.Wpf Classes MapControl"
  },
  "api/Mapsui.UI.Wpf.MapControl.html": {
    "href": "api/Mapsui.UI.Wpf.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl IDisposable Grid Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, IDisposable, Grid Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source WpfCanvas Declaration public Canvas WpfCanvas { get; } Property Value Type Description Canvas Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description System.Nullable < IEnumerable < ILayer >> layers Returns Type Description System.Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() | Improve this Doc View Source ZoomToBox(MPoint, MPoint) Declaration public void ZoomToBox(MPoint beginPoint, MPoint endPoint) Parameters Type Name Description MPoint beginPoint MPoint endPoint Events | Improve this Doc View Source FeatureInfo Declaration public event EventHandler<FeatureInfoEventArgs>? FeatureInfo Event Type Type Description System.Nullable < EventHandler < FeatureInfoEventArgs >> | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs>? Fling Event Type Type Description System.Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description System.Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description System.Nullable < EventHandler > Implements IMapControl IDisposable Grid"
  },
  "api/Mapsui.UI.ZoomDirection.html": {
    "href": "api/Mapsui.UI.ZoomDirection.html",
    "title": "Enum ZoomDirection",
    "keywords": "Enum ZoomDirection Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public enum ZoomDirection : int Fields Name Description ZoomIn ZoomOut"
  },
  "api/Mapsui.UI.ZoomedEventArgs.html": {
    "href": "api/Mapsui.UI.ZoomedEventArgs.html",
    "title": "Class ZoomedEventArgs",
    "keywords": "Class ZoomedEventArgs Inheritance System.Object ZoomedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class ZoomedEventArgs : EventArgs Constructors | Improve this Doc View Source ZoomedEventArgs(MPoint, ZoomDirection) Declaration public ZoomedEventArgs(MPoint screenPosition, ZoomDirection direction) Parameters Type Name Description MPoint screenPosition ZoomDirection direction Properties | Improve this Doc View Source Direction Declaration public ZoomDirection Direction { get; } Property Value Type Description ZoomDirection | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.ZoomMode.html": {
    "href": "api/Mapsui.UI.ZoomMode.html",
    "title": "Enum ZoomMode",
    "keywords": "Enum ZoomMode Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public enum ZoomMode Fields Name Description KeepWithinResolutions Restricts zoom of the viewport to ZoomLimits and, if ZoomLimits isn't set, to minimum and maximum of Resolutions Unlimited Restricts zoom in no way"
  },
  "api/Mapsui.Utilities.Algorithms.html": {
    "href": "api/Mapsui.Utilities.Algorithms.html",
    "title": "Class Algorithms",
    "keywords": "Class Algorithms Inheritance System.Object Algorithms Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Algorithms Methods | Improve this Doc View Source DegreesToRadians(Double) Converts the specified angle from degrees to radians Declaration public static double DegreesToRadians(double degrees) Parameters Type Name Description System.Double degrees Angle to convert (degrees) Returns Type Description System.Double Returns the angle in radians | Improve this Doc View Source Distance(MPoint, MPoint) Declaration public static double Distance(MPoint a, MPoint b) Parameters Type Name Description MPoint a MPoint b Returns Type Description System.Double | Improve this Doc View Source Distance(Double, Double, Double, Double) Gets the euclidean distance between two points. Declaration public static double Distance(double x1, double y1, double x2, double y2) Parameters Type Name Description System.Double x1 The first point's X coordinate. System.Double y1 The first point's Y coordinate. System.Double x2 The second point's X coordinate. System.Double y2 The second point's Y coordinate. Returns Type Description System.Double | Improve this Doc View Source DistancePointLine(MPoint, MPoint, MPoint) Computes the distance from a point p to a line segment AB. Note: NON-ROBUST! Declaration public static double DistancePointLine(MPoint p, MPoint a, MPoint b) Parameters Type Name Description MPoint p The point to compute the distance for. MPoint a One point of the line. MPoint b Another point of the line (must be different to A). Returns Type Description System.Double The distance from p to line segment AB. | Improve this Doc View Source RotateClockwiseDegrees(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseDegrees(double x, double y, double degrees) Parameters Type Name Description System.Double x X coordinate to rotate System.Double y Y coordinate to rotate System.Double degrees Angle to rotate (degrees) Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source RotateClockwiseRadians(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseRadians(double x, double y, double radians) Parameters Type Name Description System.Double x X coordinate to rotate System.Double y Y coordinate to rotate System.Double radians Angle to rotate (radians) Returns Type Description MPoint Returns the rotated point"
  },
  "api/Mapsui.Utilities.Animation.html": {
    "href": "api/Mapsui.Utilities.Animation.html",
    "title": "Class Animation",
    "keywords": "Class Animation Inheritance System.Object Animation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Animation Methods | Improve this Doc View Source Start<T>(AnimationEntry<T>, Int64) List of all active animations Declaration public static void Start<T>(AnimationEntry<T> entry, long duration) Parameters Type Name Description AnimationEntry <T> entry AnimationEntry to start System.Int64 duration Duration im ms for the given AnimationEntry Type Parameters Name Description T | Improve this Doc View Source Start<T>(IEnumerable<AnimationEntry<T>>, Int64) Start a list of AnimationEntrys Declaration public static void Start<T>(IEnumerable<AnimationEntry<T>> entries, long duration) Parameters Type Name Description System.Collections.Generic.IEnumerable < AnimationEntry <T>> entries List of AnimationEntry to start System.Int64 duration Duration im ms for the given AnimationEntry Type Parameters Name Description T Remarks All AnimationEntries are started at the same time. | Improve this Doc View Source Stop<T>(T, AnimationEntry<T>, Boolean) Stop a given AnimationEntry Declaration public static void Stop<T>(T target, AnimationEntry<T> entry, bool callFinal = true) Parameters Type Name Description T target AnimationEntry <T> entry AnimationEntry to stop System.Boolean callFinal Final function is called, if callFinal is true Type Parameters Name Description T | Improve this Doc View Source Stop<T>(T, IEnumerable<AnimationEntry<T>>, Boolean) Stop all AnimationEntrys in a given list Declaration public static void Stop<T>(T target, IEnumerable<AnimationEntry<T>> entries, bool callFinal = true) Parameters Type Name Description T target System.Collections.Generic.IEnumerable < AnimationEntry <T>> entries System.Boolean callFinal Final function is called, if callFinal is true Type Parameters Name Description T | Improve this Doc View Source UpdateAnimations<T>(T, IEnumerable<AnimationEntry<T>>) Update all AnimationEntrys and check, if a redraw is needed Declaration public static bool UpdateAnimations<T>(T target, IEnumerable<AnimationEntry<T>> entries) Parameters Type Name Description T target System.Collections.Generic.IEnumerable < AnimationEntry <T>> entries Returns Type Description System.Boolean True, if a redraw of the screen is needed Type Parameters Name Description T"
  },
  "api/Mapsui.Utilities.AnimationEntry-1.html": {
    "href": "api/Mapsui.Utilities.AnimationEntry-1.html",
    "title": "Class AnimationEntry<T>",
    "keywords": "Class AnimationEntry<T> Inheritance System.Object AnimationEntry<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class AnimationEntry<T> Type Parameters Name Description T Constructors | Improve this Doc View Source AnimationEntry(Object, Object, Double, Double, Easing, Boolean, Action<T, AnimationEntry<T>, Double>, Action<T, AnimationEntry<T>>) Declaration public AnimationEntry(object start, object end, double animationStart = 0, double animationEnd = 1, Easing easing = null, bool repeat = false, Action<T, AnimationEntry<T>, double> tick = null, Action<T, AnimationEntry<T>> final = null) Parameters Type Name Description System.Object start System.Object end System.Double animationStart System.Double animationEnd Easing easing System.Boolean repeat System.Action <T, AnimationEntry <T>, System.Double > tick System.Action <T, AnimationEntry <T>> final Properties | Improve this Doc View Source AnimationEnd When this animation ends in animation cycle. Value between 0 and 1. Declaration public double AnimationEnd { get; } Property Value Type Description System.Double | Improve this Doc View Source AnimationStart When this animation starts in animation cycle. Value between 0 and 1. Declaration public double AnimationStart { get; } Property Value Type Description System.Double | Improve this Doc View Source Easing Easing to use for this animation Declaration public Easing Easing { get; } Property Value Type Description Easing | Improve this Doc View Source End Object holding the end value Declaration public object End { get; } Property Value Type Description System.Object | Improve this Doc View Source Repeat Is this a repeating animation that starts over and over again Declaration public bool Repeat { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Start Object holding the starting value Declaration public object Start { get; } Property Value Type Description System.Object"
  },
  "api/Mapsui.Utilities.AnimationEventArgs.html": {
    "href": "api/Mapsui.Utilities.AnimationEventArgs.html",
    "title": "Class AnimationEventArgs",
    "keywords": "Class AnimationEventArgs Inheritance System.Object AnimationEventArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class AnimationEventArgs Constructors | Improve this Doc View Source AnimationEventArgs(Double, ChangeType) Declaration public AnimationEventArgs(double value, ChangeType changeType) Parameters Type Name Description System.Double value ChangeType changeType Properties | Improve this Doc View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Improve this Doc View Source Value Declaration public double Value { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Utilities.Constants.html": {
    "href": "api/Mapsui.Utilities.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Inheritance System.Object Constants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Constants Fields | Improve this Doc View Source DefaultResolution Declaration public const float DefaultResolution = 1F Field Value Type Description System.Single | Improve this Doc View Source DegreesToRadians Declaration public const float DegreesToRadians = 0.0174532924F Field Value Type Description System.Single | Improve this Doc View Source Epsilon Declaration public const double Epsilon = 1.11022302462516E-16 Field Value Type Description System.Double"
  },
  "api/Mapsui.Utilities.Easing.html": {
    "href": "api/Mapsui.Utilities.Easing.html",
    "title": "Class Easing",
    "keywords": "Class Easing Inheritance System.Object Easing Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class Easing Constructors | Improve this Doc View Source Easing(Func<Double, Double>) Declaration public Easing(Func<double, double> easingFunc) Parameters Type Name Description System.Func < System.Double , System.Double > easingFunc Fields | Improve this Doc View Source BounceIn Declaration public static readonly Easing BounceIn Field Value Type Description Easing | Improve this Doc View Source BounceOut Declaration public static readonly Easing BounceOut Field Value Type Description Easing | Improve this Doc View Source CubicIn Declaration public static readonly Easing CubicIn Field Value Type Description Easing | Improve this Doc View Source CubicInOut Declaration public static readonly Easing CubicInOut Field Value Type Description Easing | Improve this Doc View Source CubicOut Declaration public static readonly Easing CubicOut Field Value Type Description Easing | Improve this Doc View Source Linear Declaration public static readonly Easing Linear Field Value Type Description Easing | Improve this Doc View Source QuarticIn Declaration public static readonly Easing QuarticIn Field Value Type Description Easing | Improve this Doc View Source QuarticOut Declaration public static readonly Easing QuarticOut Field Value Type Description Easing | Improve this Doc View Source SinIn Declaration public static readonly Easing SinIn Field Value Type Description Easing | Improve this Doc View Source SinInOut Declaration public static readonly Easing SinInOut Field Value Type Description Easing | Improve this Doc View Source SinOut Declaration public static readonly Easing SinOut Field Value Type Description Easing | Improve this Doc View Source SpringIn Declaration public static readonly Easing SpringIn Field Value Type Description Easing | Improve this Doc View Source SpringOut Declaration public static readonly Easing SpringOut Field Value Type Description Easing Methods | Improve this Doc View Source Ease(Double) Declaration public double Ease(double v) Parameters Type Name Description System.Double v Returns Type Description System.Double Operators | Improve this Doc View Source Implicit(Func<Double, Double> to Easing) Declaration public static implicit operator Easing(Func<double, double> func) Parameters Type Name Description System.Func < System.Double , System.Double > func Returns Type Description Easing"
  },
  "api/Mapsui.Utilities.EmbeddedResourceLoader.html": {
    "href": "api/Mapsui.Utilities.EmbeddedResourceLoader.html",
    "title": "Class EmbeddedResourceLoader",
    "keywords": "Class EmbeddedResourceLoader Inheritance System.Object EmbeddedResourceLoader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class EmbeddedResourceLoader Methods | Improve this Doc View Source Load(String, Type) Declaration public static Stream Load(string relativePathToEmbeddedResource, Type typeInAssemblyOfEmbeddedResource) Parameters Type Name Description System.String relativePathToEmbeddedResource This is the path of the resource without the assembly path but including possible project folders. So if an image 'myimage.png' is in a project folders 'images' the path is 'images.myimage.png'. Resources always uses '.' as separators. System.Type typeInAssemblyOfEmbeddedResource This should be a type that is in the same assembly as the EmbeddedResource. It is used to infer the full path and is necessary to load the resource. Returns Type Description System.IO.Stream"
  },
  "api/Mapsui.Utilities.html": {
    "href": "api/Mapsui.Utilities.html",
    "title": "Namespace Mapsui.Utilities",
    "keywords": "Namespace Mapsui.Utilities Classes Algorithms Animation AnimationEntry<T> AnimationEventArgs Constants Easing EmbeddedResourceLoader Performance StreamHelper SvgHelper TransformationAlgorithms Version Version information helper class ZoomHelper Enums ScaleMethod"
  },
  "api/Mapsui.Utilities.Performance.html": {
    "href": "api/Mapsui.Utilities.Performance.html",
    "title": "Class Performance",
    "keywords": "Class Performance Inheritance System.Object Performance Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class Performance Constructors | Improve this Doc View Source Performance(Int32) Declaration public Performance(int maxValues = 20) Parameters Type Name Description System.Int32 maxValues Properties | Improve this Doc View Source Count Counter for number of redraws of map Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source DrawingTimes Get list of all drawing times Declaration public List<double> DrawingTimes { get; } Property Value Type Description System.Collections.Generic.List < System.Double > Remarks First entry is the newest time | Improve this Doc View Source Dropped Number of dropped frames, because the screen is already updated Declaration public int Dropped { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FPS Possible frames per second calculated from Mean Declaration public int FPS { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LastDrawingTime Time be used for the last drawing Declaration public double LastDrawingTime { get; } Property Value Type Description System.Double | Improve this Doc View Source Max Maximal drawing time Declaration public double Max { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxValues MaxValues of drawing times that are saved and used for mean value Declaration public int MaxValues { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Mean Mean value of all MaxValues drawing times Declaration public double Mean { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Minimal drawing time Declaration public double Min { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Add(Double) Add next drawing time Declaration public void Add(double time) Parameters Type Name Description System.Double time | Improve this Doc View Source Clear() Clear all existing values up to now Declaration public void Clear()"
  },
  "api/Mapsui.Utilities.ScaleMethod.html": {
    "href": "api/Mapsui.Utilities.ScaleMethod.html",
    "title": "Enum ScaleMethod",
    "keywords": "Enum ScaleMethod Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public enum ScaleMethod Fields Name Description Fill Fill up the entire view port of the screen Fit Fit within the view port of the screen FitHeight Fill the height of the screen FitWidth Fill the width of the screen"
  },
  "api/Mapsui.Utilities.StreamHelper.html": {
    "href": "api/Mapsui.Utilities.StreamHelper.html",
    "title": "Class StreamHelper",
    "keywords": "Class StreamHelper Inheritance System.Object StreamHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class StreamHelper Methods | Improve this Doc View Source ReadFully(Stream) Reads data from a stream until the end is reached. The data is returned as a byte array. An IOException is thrown if any of the underlying IO calls fail. Declaration public static byte[] ReadFully(Stream stream) Parameters Type Name Description System.IO.Stream stream The stream to read data from Returns Type Description System.Byte []"
  },
  "api/Mapsui.Utilities.SvgHelper.html": {
    "href": "api/Mapsui.Utilities.SvgHelper.html",
    "title": "Class SvgHelper",
    "keywords": "Class SvgHelper Inheritance System.Object SvgHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SvgHelper Methods | Improve this Doc View Source LoadSvg(Stream) Load Svg from String Declaration public static SKSvg LoadSvg(this Stream str) Parameters Type Name Description System.IO.Stream str string Returns Type Description Svg.Skia.SKSvg loaded svg image | Improve this Doc View Source LoadSvg(String) Load Svg from String Declaration public static SKSvg LoadSvg(this string str) Parameters Type Name Description System.String str string Returns Type Description Svg.Skia.SKSvg loaded svg image | Improve this Doc View Source LoadSvgId(Type, String) Declaration public static int LoadSvgId(this Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description System.Type typeInAssemblyOfEmbeddedResource System.String relativePathToEmbeddedResource Returns Type Description System.Int32 | Improve this Doc View Source LoadSvgPicture(Stream) Load Svg Picture from String Declaration public static SKPicture LoadSvgPicture(this Stream str) Parameters Type Name Description System.IO.Stream str string Returns Type Description SkiaSharp.SKPicture loaded svg image | Improve this Doc View Source LoadSvgPicture(String) Load Svg Picture from String Declaration public static SKPicture LoadSvgPicture(this string str) Parameters Type Name Description System.String str string Returns Type Description SkiaSharp.SKPicture loaded svg image"
  },
  "api/Mapsui.Utilities.TransformationAlgorithms.html": {
    "href": "api/Mapsui.Utilities.TransformationAlgorithms.html",
    "title": "Class TransformationAlgorithms",
    "keywords": "Class TransformationAlgorithms Inheritance System.Object TransformationAlgorithms Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class TransformationAlgorithms Methods | Improve this Doc View Source CalculateCenterOfMap(Double, Double, Double, Double, Double, Double) Calculates the new CenterOfMap based on the CenterOfZoom and the new resolution. The CenterOfZoom is not the same as the CenterOfMap. CenterOfZoom is the one place in the map that stays on the same location when zooming. In Mapsui is can be equal to the CenterOfMap, for instance when using the +/- buttons. When using mouse wheel zoom the CenterOfZoom is the location of the mouse. Declaration public static (double x, double y) CalculateCenterOfMap(double centerOfZoomX, double centerOfZoomY, double newResolution, double currentCenterX, double currentCenterY, double currentResolution) Parameters Type Name Description System.Double centerOfZoomX System.Double centerOfZoomY System.Double newResolution System.Double currentCenterX System.Double currentCenterY System.Double currentResolution Returns Type Description System.ValueTuple < System.Double , System.Double >"
  },
  "api/Mapsui.Utilities.Version.html": {
    "href": "api/Mapsui.Utilities.Version.html",
    "title": "Class Version",
    "keywords": "Class Version Version information helper class Inheritance System.Object Version Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Version Methods | Improve this Doc View Source GetCurrentVersion() Returns the current build version of Mapsui Declaration public static Version GetCurrentVersion() Returns Type Description System.Version"
  },
  "api/Mapsui.Utilities.ZoomHelper.html": {
    "href": "api/Mapsui.Utilities.ZoomHelper.html",
    "title": "Class ZoomHelper",
    "keywords": "Class ZoomHelper Inheritance System.Object ZoomHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class ZoomHelper Methods | Improve this Doc View Source ClipResolutionToExtremes(IReadOnlyList<Double>, Double) Declaration [Obsolete(\"Use ViewportLimiter.LimitExtent instead\")] public static double ClipResolutionToExtremes(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source DetermineResolution(Double, Double, Double, Double, ScaleMethod) Declaration public static double DetermineResolution(double worldWidth, double worldHeight, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description System.Double worldWidth System.Double worldHeight System.Double screenWidth System.Double screenHeight ScaleMethod scaleMethod Returns Type Description System.Double | Improve this Doc View Source ZoomIn(IReadOnlyList<Double>, Double) Declaration public static double ZoomIn(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source ZoomOut(IReadOnlyList<Double>, Double) Declaration public static double ZoomOut(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source ZoomToBoudingbox(Viewport, Double, Double, Double, Double, Double, Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(Viewport viewport, double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description Viewport viewport System.Double x1 System.Double y1 System.Double x2 System.Double y2 System.Double screenWidth System.Double screenHeight ScaleMethod scaleMethod | Improve this Doc View Source ZoomToBoudingbox(Double, Double, Double, Double, Double, Double, out Double, out Double, out Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, out double x, out double y, out double resolution, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description System.Double x1 System.Double y1 System.Double x2 System.Double y2 System.Double screenWidth System.Double screenHeight System.Double x System.Double y System.Double resolution ScaleMethod scaleMethod"
  },
  "api/Mapsui.Viewport.html": {
    "href": "api/Mapsui.Viewport.html",
    "title": "Class Viewport",
    "keywords": "Class Viewport Viewport holds all information about the visible part of the map. Inheritance System.Object Viewport Implements IViewport IReadOnlyViewport IAnimatable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Viewport : IViewport, IReadOnlyViewport, IAnimatable Remarks Viewport is the connection between Map and MapControl. It tells MapControl, which part of Map should be displayed on screen. Constructors | Improve this Doc View Source Viewport() Create a new viewport Declaration public Viewport() | Improve this Doc View Source Viewport(IReadOnlyViewport) Create a new viewport from another viewport Declaration public Viewport(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Viewport from which to copy all values Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration public MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration public double CenterX { get; set; } Property Value Type Description System.Double | Improve this Doc View Source CenterY Declaration public double CenterY { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Extent MRect of viewport in map coordinates respecting Rotation Declaration public MRect Extent { get; } Property Value Type Description MRect Remarks This MRect is horizontally and vertically aligned, even if the viewport is rotated. So this MRect perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration public double Height { get; set; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration public bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration public double Resolution { get; set; } Property Value Type Description System.Double Remarks The Resolution in Mapsui is what is often called zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration public double Rotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration public double Width { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Create(MRect, Double) Declaration public static Viewport Create(MRect extent, double resolution) Parameters Type Name Description MRect extent System.Double resolution Returns Type Description Viewport | Improve this Doc View Source Rotate(Double, Double, Double, Double, Double) Declaration public (double x, double y) Rotate(double degrees, double x, double y, double centerX, double centerY) Parameters Type Name Description System.Double degrees System.Double x System.Double y System.Double centerX System.Double centerY Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source ScreenToWorld(MPoint) Converts a point in screen pixels to one in map units, respecting rotation Declaration public MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Coordinate in map units Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration public MPoint ScreenToWorld(double positionX, double positionY) Parameters Type Name Description System.Double positionX System.Double positionY Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorldXY(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration public (double worldX, double worldY) ScreenToWorldXY(double screenX, double screenY) Parameters Type Name Description System.Double screenX System.Double screenY Returns Type Description System.ValueTuple < System.Double , System.Double > Tuple of x and y in world coordintes | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration public void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description System.Collections.Generic.List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration public void SetCenter(MReadOnlyPoint center, long duration = 0L, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center System.Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration public void SetCenter(double x, double y, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration public void SetCenterAndResolution(double x, double y, double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double x System.Double y System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration public void SetResolution(double resolution, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double resolution System.Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration public void SetRotation(double rotation, long duration = 0L, Easing easing = null) Parameters Type Name Description System.Double rotation System.Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Moving the position of viewport to a new one Declaration public void Transform(MPoint positionScreen, MPoint previousPositionScreen, double deltaResolution = 1, double deltaRotation = 0) Parameters Type Name Description MPoint positionScreen MPoint previousPositionScreen System.Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) System.Double deltaRotation Change of rotation | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description System.Boolean | Improve this Doc View Source WorldToScreen(MPoint) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration public MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description System.ValueTuple < System.Double , System.Double > The x and y in screen pixels | Improve this Doc View Source WorldToScreenXY(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description System.ValueTuple < System.Double , System.Double > Tuple of x and y in screen coordinates Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler ViewportChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IViewport IReadOnlyViewport IAnimatable Extension Methods ViewportExtensions.ToSKMatrix(IViewport)"
  },
  "api/Mapsui.ViewportAnimations.CenterAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.CenterAnimation.html",
    "title": "Class CenterAnimation",
    "keywords": "Class CenterAnimation Inheritance System.Object CenterAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class CenterAnimation Methods | Improve this Doc View Source Create(IViewport, Double, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(IViewport viewport, double centerX, double centerY, long duration, Easing easing) Parameters Type Name Description IViewport viewport System.Double centerX System.Double centerY System.Int64 duration Easing easing Returns Type Description System.Collections.Generic.List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.FlingAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.FlingAnimation.html",
    "title": "Class FlingAnimation",
    "keywords": "Class FlingAnimation Inheritance System.Object FlingAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public static class FlingAnimation Methods | Improve this Doc View Source Create(Double, Double, Int64) Declaration public static List<AnimationEntry<Viewport>> Create(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description System.Double velocityX System.Double velocityY System.Int64 maxDuration Returns Type Description System.Collections.Generic.List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.FlyToAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.FlyToAnimation.html",
    "title": "Class FlyToAnimation",
    "keywords": "Class FlyToAnimation Inheritance System.Object FlyToAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class FlyToAnimation Methods | Improve this Doc View Source Create(IViewport, MPoint, Double, Int64) Declaration public static List<AnimationEntry<Viewport>> Create(IViewport viewport, MPoint center, double maxResolution, long duration) Parameters Type Name Description IViewport viewport MPoint center System.Double maxResolution System.Int64 duration Returns Type Description System.Collections.Generic.List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.html": {
    "href": "api/Mapsui.ViewportAnimations.html",
    "title": "Namespace Mapsui.ViewportAnimations",
    "keywords": "Namespace Mapsui.ViewportAnimations Classes CenterAnimation FlingAnimation FlyToAnimation RotateAnimation ZoomAnimation"
  },
  "api/Mapsui.ViewportAnimations.RotateAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.RotateAnimation.html",
    "title": "Class RotateAnimation",
    "keywords": "Class RotateAnimation Inheritance System.Object RotateAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class RotateAnimation Methods | Improve this Doc View Source Create(Viewport, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(Viewport viewport, double rotation, long duration, Easing easing) Parameters Type Name Description Viewport viewport System.Double rotation System.Int64 duration Easing easing Returns Type Description System.Collections.Generic.List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.ZoomAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.ZoomAnimation.html",
    "title": "Class ZoomAnimation",
    "keywords": "Class ZoomAnimation Inheritance System.Object ZoomAnimation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class ZoomAnimation Methods | Improve this Doc View Source Create(Viewport, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(Viewport viewport, double resolution, long duration, Easing easing) Parameters Type Name Description Viewport viewport System.Double resolution System.Int64 duration Easing easing Returns Type Description System.Collections.Generic.List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.Widgets.Alignment.html": {
    "href": "api/Mapsui.Widgets.Alignment.html",
    "title": "Enum Alignment",
    "keywords": "Enum Alignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum Alignment Fields Name Description Auto Center Left Right Extension Methods AlignmentExtensions.ToRichTextKit()"
  },
  "api/Mapsui.Widgets.ButtonWidget.ButtonWidget.html": {
    "href": "api/Mapsui.Widgets.ButtonWidget.ButtonWidget.html",
    "title": "Class ButtonWidget",
    "keywords": "Class ButtonWidget Widget which shows a buttons Inheritance System.Object Widget ButtonWidget Implements IWidget System.ComponentModel.INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.ButtonWidget Assembly : Mapsui.dll Syntax public class ButtonWidget : Widget, IWidget, INotifyPropertyChanged Remarks With this, the user could add buttons with SVG icons to the map. Usage To show a ButtonWidget, add a instance of the ButtonWidget to Map.Widgets by map.Widgets.Add(new ButtonWidget(map, picture)); Customize Picture: SVG image to display for button Rotation: Value for rotation in degrees Opacity: Opacity of button Properties | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Picture Object for prerendered image. For internal use only. Declaration public object Picture { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Rotation Rotation of the SVG image Declaration public float Rotation { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SvgImage SVG image to show for button Declaration public string SvgImage { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Event handler which is called, when the button is touched Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source WidgetTouched Event handler which is called, when the button is touched Declaration public event EventHandler<WidgetTouchedEventArgs> WidgetTouched Event Type Type Description System.EventHandler < WidgetTouchedEventArgs > Implements IWidget System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.ButtonWidget.html": {
    "href": "api/Mapsui.Widgets.ButtonWidget.html",
    "title": "Namespace Mapsui.Widgets.ButtonWidget",
    "keywords": "Namespace Mapsui.Widgets.ButtonWidget Classes ButtonWidget Widget which shows a buttons"
  },
  "api/Mapsui.Widgets.HorizontalAlignment.html": {
    "href": "api/Mapsui.Widgets.HorizontalAlignment.html",
    "title": "Enum HorizontalAlignment",
    "keywords": "Enum HorizontalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum HorizontalAlignment Fields Name Description Center Left Right"
  },
  "api/Mapsui.Widgets.html": {
    "href": "api/Mapsui.Widgets.html",
    "title": "Namespace Mapsui.Widgets",
    "keywords": "Namespace Mapsui.Widgets Classes Hyperlink HyperlinkWidgetArguments TextBox Widget WidgetTouch WidgetTouchedEventArgs Interfaces IWidget IWidgetRenderer Enums Alignment HorizontalAlignment VerticalAlignment"
  },
  "api/Mapsui.Widgets.Hyperlink.html": {
    "href": "api/Mapsui.Widgets.Hyperlink.html",
    "title": "Class Hyperlink",
    "keywords": "Class Hyperlink Inheritance System.Object Widget TextBox Hyperlink Implements IWidget Inherited Members TextBox.PaddingX TextBox.PaddingY TextBox.CornerRadius TextBox.Text TextBox.BackColor TextBox.TextColor Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class Hyperlink : TextBox, IWidget Properties | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source Touched Declaration public event EventHandler<HyperlinkWidgetArguments> Touched Event Type Type Description System.EventHandler < HyperlinkWidgetArguments > Implements IWidget"
  },
  "api/Mapsui.Widgets.HyperlinkWidgetArguments.html": {
    "href": "api/Mapsui.Widgets.HyperlinkWidgetArguments.html",
    "title": "Class HyperlinkWidgetArguments",
    "keywords": "Class HyperlinkWidgetArguments Inheritance System.Object HyperlinkWidgetArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class HyperlinkWidgetArguments Fields | Improve this Doc View Source Handled Declaration public bool Handled Field Value Type Description System.Boolean"
  },
  "api/Mapsui.Widgets.IWidget.html": {
    "href": "api/Mapsui.Widgets.IWidget.html",
    "title": "Interface IWidget",
    "keywords": "Interface IWidget Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidget Properties | Improve this Doc View Source Enabled Declaration bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Envelope The hit box of the widget. This needs to be updated from the widget renderer. Declaration MRect Envelope { get; set; } Property Value Type Description MRect | Improve this Doc View Source HorizontalAlignment Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration float MarginX { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MarginY Declaration float MarginY { get; set; } Property Value Type Description System.Single | Improve this Doc View Source VerticalAlignment Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Function, which is called, when a Widget is hidden Declaration bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator Navigator of MapControl MPoint position Screen position Returns Type Description System.Boolean True, if the Widget had handled the touch event"
  },
  "api/Mapsui.Widgets.IWidgetRenderer.html": {
    "href": "api/Mapsui.Widgets.IWidgetRenderer.html",
    "title": "Interface IWidgetRenderer",
    "keywords": "Interface IWidgetRenderer Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidgetRenderer"
  },
  "api/Mapsui.Widgets.PerformanceWidget.html": {
    "href": "api/Mapsui.Widgets.PerformanceWidget.html",
    "title": "Namespace Mapsui.Widgets.PerformanceWidget",
    "keywords": "Namespace Mapsui.Widgets.PerformanceWidget Classes PerformanceWidget Widget which shows the drawing performance"
  },
  "api/Mapsui.Widgets.PerformanceWidget.PerformanceWidget.html": {
    "href": "api/Mapsui.Widgets.PerformanceWidget.PerformanceWidget.html",
    "title": "Class PerformanceWidget",
    "keywords": "Class PerformanceWidget Widget which shows the drawing performance Inheritance System.Object Widget PerformanceWidget Implements IWidget System.ComponentModel.INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.PerformanceWidget Assembly : Mapsui.dll Syntax public class PerformanceWidget : Widget, IWidget, INotifyPropertyChanged Remarks With this, the user could see the drawing performance on the screen. It shows always the values for the last draw before this draw. Constructors | Improve this Doc View Source PerformanceWidget(Performance) Declaration public PerformanceWidget(Performance performance) Parameters Type Name Description Performance performance Properties | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Performance Performance object which holds the values Declaration public Performance Performance { get; } Property Value Type Description Performance Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Event handler which is called, when the button is touched Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source WidgetTouched Event handler which is called, when the button is touched Declaration public event EventHandler<WidgetTouchedEventArgs> WidgetTouched Event Type Type Description System.EventHandler < WidgetTouchedEventArgs > Implements IWidget System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.ScaleBar.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.html",
    "title": "Namespace Mapsui.Widgets.ScaleBar",
    "keywords": "Namespace Mapsui.Widgets.ScaleBar Classes ImperialUnitConverter MetricUnitConverter NauticalUnitConverter ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Interfaces IUnitConverter Enums ScaleBarMode"
  },
  "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html",
    "title": "Class ImperialUnitConverter",
    "keywords": "Class ImperialUnitConverter Inheritance System.Object ImperialUnitConverter Implements IUnitConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ImperialUnitConverter : IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly ImperialUnitConverter Instance Field Value Type Description ImperialUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html",
    "title": "Interface IUnitConverter",
    "keywords": "Interface IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public interface IUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration IEnumerable<int> ScaleBarValues { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String"
  },
  "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html",
    "title": "Class MetricUnitConverter",
    "keywords": "Class MetricUnitConverter Inheritance System.Object MetricUnitConverter Implements IUnitConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class MetricUnitConverter : IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly MetricUnitConverter Instance Field Value Type Description MetricUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html",
    "title": "Class NauticalUnitConverter",
    "keywords": "Class NauticalUnitConverter Inheritance System.Object NauticalUnitConverter Implements IUnitConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class NauticalUnitConverter : IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly NauticalUnitConverter Instance Field Value Type Description NauticalUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html",
    "title": "Enum ScaleBarMode",
    "keywords": "Enum ScaleBarMode Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public enum ScaleBarMode Fields Name Description Both Single"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html",
    "title": "Class ScaleBarWidget",
    "keywords": "Class ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Inheritance System.Object Widget ScaleBarWidget Implements IWidget System.ComponentModel.INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ScaleBarWidget : Widget, IWidget, INotifyPropertyChanged Constructors | Improve this Doc View Source ScaleBarWidget(Map, IProjection) Declaration public ScaleBarWidget(Map map, IProjection projection = null) Parameters Type Name Description Map map IProjection projection Properties | Improve this Doc View Source Font Font to use for drawing text Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source Halo Halo color of scalebar and text, so that it is better visible Declaration public Color Halo { get; set; } Property Value Type Description Color | Improve this Doc View Source Height Real height of scalebar. Depends on number of unit converters and text size. Is calculated by renderer. Declaration public float Height { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxWidth Maximum usable width for scalebar. The real used width could be less, because we want only integers as text. Declaration public float MaxWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scale Declaration public float Scale { get; } Property Value Type Description System.Single | Improve this Doc View Source ScaleBarMode ScaleBarMode of scalebar. Could be Single to show only one or Both for showing two units. Declaration public ScaleBarMode ScaleBarMode { get; set; } Property Value Type Description ScaleBarMode | Improve this Doc View Source SecondaryUnitConverter Secondary unit converter for lower text if ScaleBarMode is Both. Default is ImperialUnitConverter. Declaration public IUnitConverter SecondaryUnitConverter { get; set; } Property Value Type Description IUnitConverter | Improve this Doc View Source ShowEnvelop Draw a rectangle around the scale bar for testing Declaration public bool ShowEnvelop { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StrokeWidth Stroke width for lines Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StrokeWidthHalo Stroke width for halo of lines Declaration public float StrokeWidthHalo { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TextAlignment Alignment of text of scalebar Declaration public Alignment TextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source TextColor Foreground color of scalebar and text Declaration public Color TextColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextMargin Margin between end of tick and text Declaration public float TextMargin { get; } Property Value Type Description System.Single | Improve this Doc View Source TickLength Length of the ticks Declaration public float TickLength { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UnitConverter Normal unit converter for upper text. Default is MetricUnitConverter. Declaration public IUnitConverter UnitConverter { get; set; } Property Value Type Description IUnitConverter Methods | Improve this Doc View Source CanProject() Declaration public bool CanProject() Returns Type Description System.Boolean | Improve this Doc View Source GetScaleBarLengthAndText(IReadOnlyViewport) Calculates the length and text for both scalebars Declaration public (float scaleBarLength1, string scaleBarText1, float scaleBarLength2, string scaleBarText2) GetScaleBarLengthAndText(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Returns Type Description System.ValueTuple < System.Single , System.String , System.Single , System.String > Length of upper scalebar Text of upper scalebar Length of lower scalebar Text of lower scalebar | Improve this Doc View Source GetScaleBarLinePositions(IReadOnlyViewport, Single, Single, Single) Get pairs of points, which determine start and stop of the lines used to draw the scalebar Declaration public IReadOnlyList<MPoint> GetScaleBarLinePositions(IReadOnlyViewport viewport, float scaleBarLength1, float scaleBarLength2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport of the map System.Single scaleBarLength1 Length of upper scalebar System.Single scaleBarLength2 Length of lower scalebar System.Single stroke Width of line Returns Type Description System.Collections.Generic.IReadOnlyList < MPoint > Array with pairs of Points. First is always the start point, the second is the end point. | Improve this Doc View Source GetScaleBarTextPositions(IReadOnlyViewport, MRect, MRect, MRect, Single) Calculates the top-left-position of upper and lower text Declaration public (float posX1, float posY1, float posX2, float posY2) GetScaleBarTextPositions(IReadOnlyViewport viewport, MRect textSize, MRect textSize1, MRect textSize2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport MRect textSize Default text size for the string \"9999 m\" MRect textSize1 Size of upper text of scalebar MRect textSize2 Size of lower text of scalebar System.Single stroke Width of line Returns Type Description System.ValueTuple < System.Single , System.Single , System.Single , System.Single > posX1 as left position of upper scalebar text posY1 as top position of upper scalebar text posX2 as left position of lower scalebar text posY2 as top position of lower scalebar text | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements IWidget System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.TextBox.html": {
    "href": "api/Mapsui.Widgets.TextBox.html",
    "title": "Class TextBox",
    "keywords": "Class TextBox Inheritance System.Object Widget TextBox Hyperlink Implements IWidget Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Widget.HandleWidgetTouched(INavigator, MPoint) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class TextBox : Widget, IWidget Properties | Improve this Doc View Source BackColor Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CornerRadius Declaration public int CornerRadius { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PaddingX Declaration public int PaddingX { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PaddingY Declaration public int PaddingY { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source TextColor Declaration public Color TextColor { get; set; } Property Value Type Description Color Implements IWidget"
  },
  "api/Mapsui.Widgets.VerticalAlignment.html": {
    "href": "api/Mapsui.Widgets.VerticalAlignment.html",
    "title": "Enum VerticalAlignment",
    "keywords": "Enum VerticalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum VerticalAlignment Fields Name Description Bottom Center Top"
  },
  "api/Mapsui.Widgets.Widget.html": {
    "href": "api/Mapsui.Widgets.Widget.html",
    "title": "Class Widget",
    "keywords": "Class Widget Inheritance System.Object Widget ButtonWidget PerformanceWidget ScaleBarWidget TextBox ZoomInOutWidget Implements IWidget Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class Widget : IWidget Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Envelope Declaration public MRect Envelope { get; set; } Property Value Type Description MRect | Improve this Doc View Source HorizontalAlignment Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration public float MarginX { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MarginY Declaration public float MarginY { get; set; } Property Value Type Description System.Single | Improve this Doc View Source VerticalAlignment Declaration public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source CalculatePositionX(Single, Single, Single) Declaration public float CalculatePositionX(float left, float right, float width) Parameters Type Name Description System.Single left System.Single right System.Single width Returns Type Description System.Single | Improve this Doc View Source CalculatePositionY(Single, Single, Single) Declaration public float CalculatePositionY(float top, float bottom, float height) Parameters Type Name Description System.Single top System.Single bottom System.Single height Returns Type Description System.Single | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public abstract bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Implements IWidget"
  },
  "api/Mapsui.Widgets.WidgetTouch.html": {
    "href": "api/Mapsui.Widgets.WidgetTouch.html",
    "title": "Class WidgetTouch",
    "keywords": "Class WidgetTouch Inheritance System.Object WidgetTouch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public static class WidgetTouch Methods | Improve this Doc View Source GetTouchedWidget(MPoint, MPoint, IEnumerable<IWidget>) Gets the widget selected by touch positions Declaration public static IEnumerable<IWidget> GetTouchedWidget(MPoint screenPosition, MPoint startScreenPosition, IEnumerable<IWidget> widgets) Parameters Type Name Description MPoint screenPosition The screen position in device independent units (or DIP or DP) MPoint startScreenPosition The start screen position in device independent units (or DIP or DP) System.Collections.Generic.IEnumerable < IWidget > widgets The widgets to select from. Returns Type Description System.Collections.Generic.IEnumerable < IWidget > Returns the first Widget in the list that contains the screenPosition within it's Envelope. Returns null if there are none."
  },
  "api/Mapsui.Widgets.WidgetTouchedEventArgs.html": {
    "href": "api/Mapsui.Widgets.WidgetTouchedEventArgs.html",
    "title": "Class WidgetTouchedEventArgs",
    "keywords": "Class WidgetTouchedEventArgs Inheritance System.Object System.EventArgs WidgetTouchedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class WidgetTouchedEventArgs : EventArgs Constructors | Improve this Doc View Source WidgetTouchedEventArgs(MPoint) Declaration public WidgetTouchedEventArgs(MPoint position) Parameters Type Name Description MPoint position Properties | Improve this Doc View Source Handled True, if this Widget had handled this event Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position Declaration public MPoint Position { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.Widgets.Zoom.html": {
    "href": "api/Mapsui.Widgets.Zoom.html",
    "title": "Namespace Mapsui.Widgets.Zoom",
    "keywords": "Namespace Mapsui.Widgets.Zoom Classes ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Enums Orientation"
  },
  "api/Mapsui.Widgets.Zoom.Orientation.html": {
    "href": "api/Mapsui.Widgets.Zoom.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public enum Orientation Fields Name Description Horizontal Vertical"
  },
  "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html": {
    "href": "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html",
    "title": "Class ZoomInOutWidget",
    "keywords": "Class ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Inheritance System.Object Widget ZoomInOutWidget Implements IWidget System.ComponentModel.INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public class ZoomInOutWidget : Widget, IWidget, INotifyPropertyChanged Properties | Improve this Doc View Source BackColor Color of background Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Orientation Orientation of buttons Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source Size Width and height of buttons Declaration public float Size { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StrokeColor Color of button frames Declaration public Color StrokeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextColor Color of \"+\" and \"-\" sign Declaration public Color TextColor { get; set; } Property Value Type Description Color Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source WidgetTouched Event handler which is called, when buttons are touched. If there isn't one, than the default handler is used, which change the Resolution of Viewport. Declaration public event EventHandler<WidgetTouchedEventArgs> WidgetTouched Event Type Type Description System.EventHandler < WidgetTouchedEventArgs > Implements IWidget System.ComponentModel.INotifyPropertyChanged"
  },
  "api/System.Collections.ObjectModel.html": {
    "href": "api/System.Collections.ObjectModel.html",
    "title": "Namespace System.Collections.ObjectModel",
    "keywords": "Namespace System.Collections.ObjectModel Classes ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed."
  },
  "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html": {
    "href": "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html",
    "title": "Class ObservableRangeCollection<T>",
    "keywords": "Class ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed. Inheritance System.Object System.Collections.ObjectModel.Collection <T> System.Collections.ObjectModel.ObservableCollection <T> ObservableRangeCollection<T> Implements System.Collections.Generic.IList <T> System.Collections.Generic.ICollection <T> System.Collections.Generic.IReadOnlyList <T> System.Collections.Generic.IReadOnlyCollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged System.ComponentModel.INotifyPropertyChanged Inherited Members System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy() System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy() System.Collections.ObjectModel.ObservableCollection<T>.InsertItem(System.Int32, T) System.Collections.ObjectModel.ObservableCollection<T>.Move(System.Int32, System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.MoveItem(System.Int32, System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs) System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem(System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.CollectionChanged System.Collections.ObjectModel.ObservableCollection<T>.PropertyChanged System.Collections.ObjectModel.ObservableCollection<T>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<T>.Add(T) System.Collections.ObjectModel.Collection<T>.Clear() System.Collections.ObjectModel.Collection<T>.Contains(T) System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32) System.Collections.ObjectModel.Collection<T>.GetEnumerator() System.Collections.ObjectModel.Collection<T>.IndexOf(T) System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T) System.Collections.ObjectModel.Collection<T>.Remove(T) System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<T>.Count System.Collections.ObjectModel.Collection<T>.Item[System.Int32] System.Collections.ObjectModel.Collection<T>.Items System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.Collections.ObjectModel Assembly : Mapsui.UI.Forms.dll Syntax public class ObservableRangeCollection<T> : ObservableCollection<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableRangeCollection() Initializes a new instance of ObservableCollection that is empty and has default initial capacity. Declaration public ObservableRangeCollection() | Improve this Doc View Source ObservableRangeCollection(IEnumerable<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied. Declaration public ObservableRangeCollection(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The collection whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the collection. Exceptions Type Condition System.ArgumentNullException collection is a null reference | Improve this Doc View Source ObservableRangeCollection(List<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list Declaration public ObservableRangeCollection(List<T> list) Parameters Type Name Description System.Collections.Generic.List <T> list The list whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the list. Exceptions Type Condition System.ArgumentNullException list is a null reference Methods | Improve this Doc View Source AddRange(IEnumerable<T>) Adds the elements of the specified collection to the end of the System.Collections.ObjectModel.ObservableCollection<T> . Declaration public void AddRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The collection whose elements should be added to the end of the System.Collections.ObjectModel.ObservableCollection<T> . The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source ClearItems() Called by base class Collection<T> when the list is being cleared; raises a CollectionChanged event to any listeners. Declaration protected override void ClearItems() Overrides System.Collections.ObjectModel.ObservableCollection<T>.ClearItems() | Improve this Doc View Source DeferEvents() Declaration protected virtual IDisposable DeferEvents() Returns Type Description System.IDisposable | Improve this Doc View Source InsertRange(Int32, IEnumerable<T>) Inserts the elements of a collection into the System.Collections.ObjectModel.ObservableCollection<T> at the specified index. Declaration public void InsertRange(int index, IEnumerable<T> collection) Parameters Type Name Description System.Int32 index The zero-based index at which the new elements should be inserted. System.Collections.Generic.IEnumerable <T> collection The collection whose elements should be inserted into the List{T}. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. Exceptions Type Condition System.ArgumentNullException collection is null. System.ArgumentOutOfRangeException index is not in the collection range. | Improve this Doc View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Raise CollectionChanged event to any listeners. Properties/methods modifying this ObservableCollection will raise a collection changed event through this virtual method. Declaration protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e) Parameters Type Name Description System.Collections.Specialized.NotifyCollectionChangedEventArgs e Overrides System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs) Remarks When overriding this method, either call its base implementation or call System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy() to guard against reentrant collection changes. | Improve this Doc View Source RemoveAll(Int32, Int32, Predicate<T>) Iterates over the specified range within the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(int index, int count, Predicate<T> match) Parameters Type Name Description System.Int32 index The index of where to start performing the search. System.Int32 count The number of items to iterate on. System.Predicate <T> match Returns Type Description System.Int32 Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException match is null. | Improve this Doc View Source RemoveAll(Predicate<T>) Iterates over the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(Predicate<T> match) Parameters Type Name Description System.Predicate <T> match Returns Type Description System.Int32 Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition System.ArgumentNullException match is null. | Improve this Doc View Source RemoveRange(IEnumerable<T>) Removes the first occurence of each item in the specified collection from the System.Collections.ObjectModel.ObservableCollection<T> . Declaration public void RemoveRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to remove. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source RemoveRange(Int32, Int32) Removes a range of elements from the System.Collections.ObjectModel.ObservableCollection<T> >. Declaration public void RemoveRange(int index, int count) Parameters Type Name Description System.Int32 index The zero-based starting index of the range of elements to remove. System.Int32 count The number of elements to remove. Exceptions Type Condition System.ArgumentOutOfRangeException The specified range is exceeding the collection. | Improve this Doc View Source ReplaceRange(IEnumerable<T>) Clears the current collection and replaces it with the specified collection, using the default System.Collections.Generic.EqualityComparer`1 . Declaration public void ReplaceRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to fill the collection with, after clearing it. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source ReplaceRange(IEnumerable<T>, IEqualityComparer<T>) Clears the current collection and replaces it with the specified collection, using the specified comparer to skip equal items. Declaration public void ReplaceRange(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to fill the collection with, after clearing it. System.Collections.Generic.IEqualityComparer <T> comparer An System.Collections.Generic.IEqualityComparer<T> to be used to check whether an item in the same location already existed before, which in case it would not be added to the collection, and no event will be raised for it. Exceptions Type Condition System.ArgumentNullException collection is null. System.ArgumentNullException comparer is null. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>) Removes the specified range and inserts the specified collection, ignoring equal items (using System.Collections.Generic.EqualityComparer`1.Default ). Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection) Parameters Type Name Description System.Int32 index The index of where to start the replacement. System.Int32 count The number of items to be replaced. System.Collections.Generic.IEnumerable <T> collection The collection to insert in that location. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException collection is null. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>, IEqualityComparer<T>) Removes the specified range and inserts the specified collection in its position, leaving equal items in equal positions intact. Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 index The index of where to start the replacement. System.Int32 count The number of items to be replaced. System.Collections.Generic.IEnumerable <T> collection The collection to insert in that location. System.Collections.Generic.IEqualityComparer <T> comparer The comparer to use when checking for equal items. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException collection is null. System.ArgumentNullException comparer is null. | Improve this Doc View Source SetItem(Int32, T) Called by base class Collection<T> when an item is set in list; raises a CollectionChanged event to any listeners. Declaration protected override void SetItem(int index, T item) Parameters Type Name Description System.Int32 index T item Overrides System.Collections.ObjectModel.ObservableCollection<T>.SetItem(System.Int32, T) Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged System.ComponentModel.INotifyPropertyChanged"
  },
  "documentation/async-fetching.html": {
    "href": "documentation/async-fetching.html",
    "title": "Asynchronous Data Fetching",
    "keywords": "Asynchronous Data Fetching Some background To get smooth performance while panning and zooming data needs to be fetched on a background thread. Even if it is fetched on a background thread it will use resources which could be noticible in the responsiveness of the map. The asyncronous data fetching of Mapsui tries to take this into account to optimize the user experience. ChangeType (ChangeType was introduced in V3, in V2 the majorType boolean has this purpose) When calling the RefreshData method on the layers we pass in a ChangeType parameter which could be: Continous - During dragging, pinching zoom, or animations. Discrete - On zoom in/out button press, on touch up, or at the end of an animation. The layers itself decides how to respond to the refresh call. For different data types different strategies are used. TileLayer data fetching The diagram below shows how the TileLayers data fetcher works. The data fetcher runs on a background thread. The UI and Fetcher communicate through non blocking messages. Whenever the user pans or zooms a View Changed message is sent to the Fetcher. This will trigger the fetcher to start fetching data. Whenever new data arrives a Data Changed message is sent to the UI so that it knows it should redraw the map. The fetcher dumps incoming data into a cache. The UI renderer retrieves whatever is needed from that cache when rendering, not taking into account what the data fetcher is doing. This loose coupling keeps things simple and flexible and the renderer never has to wait for the fetcher which results in a smooth (perceived) performance. Read/Write cache For rendering the cache is only read. For data fetching the cache is primarily written but it is also needs to read the cache in order to know which data is already available and does not need to be fetched. Strategies Both the fetcher and the renderer can use some smart tricks to optimize the experience, for example: The fetcher can pre‐fetch tiles that are not directly needed but could be in the future. The renderer could search for alternative tiles (higher or lower levels) when the optimal tiles are not available. The implementation of these strategies can be overridden by the user by implementing interfaces that can be passed into the TileLayer constructor. The IDataFetchStrategy (IFetchStrategy in V2) determines which tiles are fetched from the data source to be stored in the cache. There is a DataFetchStrategy default implementation and a MinimalDataFetchStrategy which only fetches the tiles directly needed. The IRenderFetchStrategy (IRenderGetStrategy in V2) determines which tiles are fetched from the cache to use for rendering. There is a RenderFetchStrategy default implementation and a MinimalRenderFetchStrategy which only fetches the tiles directly needed. Those strategies should be tuned to support each other. For instance, in the current implementation the renderer uses higher level tiles when the optimal tiles are not available, and the fetcher pre‐fetches higher level tiles to assist the renderer. The way they play together is not specified in the interface so developers should take this into account. Data fetching in other layers Other layers like the Layer and ImageLayer have their own implementation. They use a delay mechanism in fetching new data and ignore ChangeType.Continuous."
  },
  "documentation/contributors-guidelines.html": {
    "href": "documentation/contributors-guidelines.html",
    "title": "Mapsui Contributor Guidelines",
    "keywords": "Mapsui Contributor Guidelines Issue first Submit an issue before a pull request co we can discuss the possible solutions to the problem. Sign the Contributor License Agreement (CLA) To contribute you need to sign our CLA Complexity Complexity is the biggest problem in software development. The primary effort should be to keep the complexity low. Complexity can be caused by clueless spaghetti code but also by astronaut architectures . Keeping things simple is not easy but hard work. It involves thinking up several solutions to your problem weighing the pros and cons and moving it around and upside down to look for even better (simpler) solutions. Continuous Refactoring Mapsui has some older code in it. Don't despair. We continuously improve or replace older code. It is a gradual process. We do it step by step. We have made major changes in the past; From WinForms to WPF, From GDI+ to SL rendering. From .NET Framework to PCL. From PCL to .NET Standard. From WPF rendering to SkiaSharp. Add support for Xamarin.Forms. Future changes will include moving to NTS geometries, improving the Layers list. Taking these steps will cause breaking changes. We are aware of this and clearly communicate it with the user. We use semver so breaking changes go in to major version upgrades. All checks should be green all the time At all times: All projects should compile The unit tests should succeed All samples should run properly Use ReSharper Mapsui uses the resharper team settings by committing the DotSettings to git, so that all developers can use the same settings. We should have zero warnings. Suggestions should be treated as actual suggestions, use them only when you think it improves the code. Keep dependencies in the csproj and nuspec in sync If we upgrade a nuget package in the solution we should also upgrade the lower bound of the nuget package in the nuspec because this is what nuget installs. We want the user to get the same version as the one that we are working and testing with. example csproj <PackageReference Include=\"SkiaSharp\" Version=\"2.80.2\" /> exmple nuspec <dependency id=\"SkiaSharp\" version=\"[2.80.2,3.0.0)\"/> Keep our direct and indirect dependencies in sync When we have direct and indirect dependecies on a nuget package those should all refer to the same version. For instance we have a direct dependency on SkiaSharp, but we also use SvgSkia and RichTextKit and those have a dependency on SkiaSharp too. It would be optimal if all referred to the same version of SkiaSharp. This might not always be possible. Extension methods Extension methods should always be in a Extensions folder. They should be in a class that has the name '{ClassItExtends}Extensions'. It should be in a namespace that follows the folder name (so not in the namespace of the class it extends). Extensions of a collection (IEnumerable, List, Array etc) of a type should also be in the class that extends the individual type. Ordering of lon lat In our code we prefor a lon, lat order consistent with the x, y order of most cartographic projections. Some background: The order of lon and lat always causes a lot of confusion. The official notation is lat, lon, but in map projections the lat corresponds to the y-axis and the lon to the x-axis. This is confusing because in math the ordering is the other way around: x, y. In our code we need to translate the lat/lon to an X/Y coordinate to draw it on the map. In the constructor of such a point the x (lon) will be the first parameter. There is no way that this problem can be fundamentally solved, there will always be some confusion. To mitigate it we choose one way of ordering which is lon, lat (consistent with x, y). Also there are many ways in which we can avoid ordering altogher. For instance if we work with Longitude and Latitude properties. In the case of SphericalMercator.FromLonLat we use lon/lat in the method name to avoid confusion. No rendering in the draw/paint loop Mapsui strives for optiomal performance, so in the rendering loop the objects should be ready to be painted to canvas directly without any need for preparation. This is currently (4.0.0-beta.1) not the case. For instance in the case of tiles they are rendered on the first iteration, after that the cached version is used. This needs to be improved. About the terminology Rendering : Create a platform specific resource. SKPath path = ToSKPath(feature, style); Drawing or Painting : Draw the platform specific resource to the canvas. canvas.DrawPath(path, paint);"
  },
  "documentation/custom-style-renders.html": {
    "href": "documentation/custom-style-renders.html",
    "title": "Custom Style Renderers",
    "keywords": "Custom Style Renderers Summary Mapsui 2.0 supports custom style renderers . This means a user can create a custom style and associate this with a custom style renderer to allow full freedom in rendering a feature the way the user would like. How it works Create a custom style by deriving a class from IStyle. Assign that style to an ILayer.Style or IFeature.Styles. Create a custom renderer by deriving a class from ISkiaStyleRenderer and implement the Draw method. Register the association of the custom style to the custom style renderer as in the line below. The consequence will be that if the Mapsui renderer detects this style it will call the Draw method on the style renderer. This is how you register the association of a custom style to a custom style renderer mapControl.Renderer.StyleRenderers.Add(typeof(CustomStyle), new SkiaCustomStyleRenderer()); This is the ISkiaStyleRenderer interface that you need to implement: public interface ISkiaStyleRenderer : IStyleRenderer { bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache); } The IFeature has a Geometry field. The renderer is responsible to cast the IFeature.Geometry to the type it intends to render. The IStyle is the custom style the user defined. It could contain extra style information not present in the default style classes. The user will need to cast that IStyle to the custom style to use this extra information. Code sample Look in the Mapsui source code for CustomStyleSample.cs. This is the most relevant code. In this sample the custom style contains no extra information, it is just an indication to use the associated custom renderer. It would be possible to add extra field like EarColor and NoseSize to the custom style which could be used in the renderer. Remarks Note, that the renderer depends on the technology we use for the rendering implementation, in this case SkiaSharp. Currently we still support XAML as renderer but this may be removed in the future. We expect to support SkiaSharp for a long time but it may be replaced at some point. There are no such plans just yet."
  },
  "documentation/development-constraints.html": {
    "href": "documentation/development-constraints.html",
    "title": "Development constraints",
    "keywords": "Development constraints When developing for Mapsui we take into account the following constraints. Not limited to certain coordinate system Mapsui's Map can be in any coordinate system. If you do not specify a coordinate system in the Map and Layers it assumes they are in the same coordinate system (whatever they are). In this case it only transforms these unspecified 'world-coordinates' to 'screen-coordinates' and nothing more. It is also possible to setup a coordinate transformation system using Map.CRS, DataSource.CRS and Map.Transformation. See projections . Full implementation of the feature matrix These are some of the feature dimensions: Renderers: WPF and Skia Geometries: Point, LineString, Polygon etc. Operations on Geometries: Distance, Contains. Coordinate projection support Style: fill color, line color, line cap, symbol opacity, symbol scale If we choose to support a feature each 'cell' of the multi dimensional matrix should be supported. No surprises for the user. Currently there are holes in the matrix on some point (like differences between WPF and Skia). The current focus is to fill these holes. If this support does not seem attainable (is that proper English?) but does seem very useful we should look for ways to make Mapsui extendable Write clear, simple and little code Maintenance is enemy that can bring a project like this to a halt. We should look for ways to implement the functionality with the simplest possible code."
  },
  "documentation/documentation.html": {
    "href": "documentation/documentation.html",
    "title": "Documentation",
    "keywords": "Documentation Documentation setup We use docfx to generate the documentation. There is a /docfx folder with a docfx project called Mapsui. This projects documenation folder contains all the md files used to generate the 'documentation' tab in the site. This is the source of those files, they should be edited there. In the docfx folder there is a script (build-site.cmd) that generates the documentation site (in /docfx/mapsui/_site) and copies it to the /docs folder. The Mapsui project on github is configured to automatically publish this docs folder to https://mapsui.github.io/mapsui A commit of an md file should trigger the build server. This should run the build-site.cmd. This should commit the generated site to the repo. It will when then show up on the website. We should have two separate build configurations one for the docs which ignores the project and one for the project which ignores the docs. Documentation guidelines All md files should be in lower case. All md files should be directly in the root of /docfx. Hierachy is created by indenting page references in the toc.md in the documenation folder. By keeping the files itself in the root it is easier to change the hierarchy later one - you do not need to move the files as well - and easier to get contributers to follow the guidelines. All md files should start with a header one (#) and should have no other header one in that file. All the headers in the toc should be equal to the header one in the file it points to. Mapsui is cased as Mapsui not MapsUI. We should iteratively improve the documentation. If questions are asked in the issues we should search for the answer in the documentation. Update the documentation when it is missing and answer the issue with a url to the documentation. Writing documentation is not only useful to inform the user but also as a sanity check for the developer. If what you have to tell becomes complicated and hard to grasp this could mean the software is not well designed. Writing documentation early should be used as a part of the software development process."
  },
  "documentation/faq.html": {
    "href": "documentation/faq.html",
    "title": "Frequently Asked Questions",
    "keywords": "Frequently Asked Questions The openstreetmap layer does not show The most common reason is that the default user-agent used by the osm layer is blocked. The default user-agent gets blocked by osm at some point because there is always someone somewhere abusing the api. Within your app you need to use a user-agent that is specific to your app. We change the user agent from time to time so that the samples work but it will probably get blocked again at some point. Better not to wait until that happens and create you own user-agent right away. MapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); Why is all my data in a small area near the west coast of Africa? This is because the background data is in SphericalMercator (it is in the SphericalMercator coordinate system) and the foreground data is in WGS84 (latlon). Use SphericalMercator.FromLonLat to transform it. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. Why does NavigateTo zoom into an area near the west coast of Africa? This is because the coordinates you pass to NavigateTo are in WGS84 whereas the background data is in SphericalMercator. Use SphericalMercator.FromLonLat to transform the NavigateTo arguments to SphericalMercator. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. How can I get rid of the white dots or black lines? In Mapsui v1 and v2 a layer is created with a default style ( Layer.Style ). This style applies to all features in the layer. You need to set the Style field to null if you do not want to use it ( Layer.Style = null ). The default style shows as a white dot on Point geometries and a black line on LineStrings and Polygons. Since most users work with styles on the feature they are not aware of the style on the layer , this make the default style confusing and it should be removed in v3."
  },
  "documentation/getting-started-android.html": {
    "href": "documentation/getting-started-android.html",
    "title": "Mapsui Android getting started",
    "keywords": "Mapsui Android getting started Step 1 Create 'Blank App (Android)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.Android -pre Step 3 In Resources/layout/Main.axml add Mapsui.UI.Android.MapControl: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <Mapsui.UI.Android.MapControl android:id=\"@+id/mapcontrol\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </LinearLayout> Step 4 In MainActivity.cs add MapControl after SetContentView(Resource.Layout.Main): protected override void OnCreate(Bundle savedInstanceState) { base.OnCreate(savedInstanceState); // Set our view from the \"main\" layout resource SetContentView(Resource.Layout.Main); var mapControl = FindViewById<MapControl>(Resource.Id.mapcontrol); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; } Add the following using statements: using Mapsui; using Mapsui.Utilities; using Mapsui.UI.Android; Step 5: Run it and you should see a map of the world."
  },
  "documentation/getting-started-ios.html": {
    "href": "documentation/getting-started-ios.html",
    "title": "Mapsui iOS Getting Started",
    "keywords": "Mapsui iOS Getting Started Step 1 Create new 'Single View App' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.iOS -pre Step 3 Open ViewController.cs add namespaces: using Mapsui; using Mapsui.UI.iOS; using Mapsui.Utilities; add code to ViewDidLoad() method: public override void ViewDidLoad() { base.ViewDidLoad(); var mapControl = new MapControl(View.Bounds); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; View = mapControl; } Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-uwp.html": {
    "href": "documentation/getting-started-uwp.html",
    "title": "Mapsui UWP Getting Started",
    "keywords": "Mapsui UWP Getting Started Step 1 Create new 'Blank App (Universal Windows)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.Uwp -pre Step 3 Open MainPage.xaml and add namespace: xmlns:uwp=\"using:Mapsui.UI.Uwp\" Add MapControl to the Grid: <Grid> <uwp:MapControl x:Name=\"MyMap\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MyMap.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); } Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-winui.html": {
    "href": "documentation/getting-started-winui.html",
    "title": "Mapsui WinUI Getting Started",
    "keywords": "Mapsui WinUI Getting Started Step 1 Create new 'Blank App. Packaged (WinUI 3 in Desktop)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.WinUI -pre Step 3 Open MainPage.xaml and add namespace: xmlns:winui=\"using:Mapsui.UI.WinUI\" Add MapControl to the Grid: <Grid> <winui:MapControl x:Name=\"MyMap\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MyMap.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); } Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-wpf.html": {
    "href": "documentation/getting-started-wpf.html",
    "title": "Mapsui WPF getting started",
    "keywords": "Mapsui WPF getting started Step 1 Start a new WPF application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui.Wpf -pre Step 3 In WpfApplication1.MainWindow.xaml add this in the Grid element: <mapsui:MapControl Name=\"MyMapControl\"></mapsui:MapControl> And add the namespace: xmlns:mapsui=\"clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf\" Step 4 In WpfApplication1.MainWindow.xaml.cs add in the constructor after InitializeComponent(): MyMapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); And add the namespaces: using Mapsui.Utilities; using Mapsui.Layers; Step 5 Run it and you should see a map of the world."
  },
  "documentation/getting-started-xamarin-forms.html": {
    "href": "documentation/getting-started-xamarin-forms.html",
    "title": "Mapsui for Xamarin.Forms getting started",
    "keywords": "Mapsui for Xamarin.Forms getting started Step 1 Create a normal Xamarin.Forms project Step 2 In the package manager console type: PM> Install-Package Mapsui.Forms -pre Step 3 Add the line xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" to the Xaml file Step 4 Add the Mapsui.Forms view with <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> to the Xaml part file. Nest the MapView element inside a container, this child element needs to be placed inside a parent Layout for the view to be correctly setup and attached to the code behind, for instance, <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" mc:Ignorable=\"d\"> <StackLayout> <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> </StackLayout> </ContentPage> the Xaml file should look similar to this after this step. Step 5 Add in the code behind the following var map = new Map { CRS = \"EPSG:3857\", Transformation = new MinimalTransformation() }; var tileLayer = OpenStreetMap.CreateTileLayer(); map.Layers.Add(tileLayer); map.Widgets.Add(new Widgets.ScaleBar.ScaleBarWidget(map) { TextAlignment = Widgets.Alignment.Center, HorizontalAlignment = Widgets.HorizontalAlignment.Left, VerticalAlignment = Widgets.VerticalAlignment.Bottom }); mapView.Map = map; Step 6 Run it and you should see a map of the world."
  },
  "documentation/home.html": {
    "href": "documentation/home.html",
    "title": "Introduction",
    "keywords": "Introduction Mapsui is a .NET component to show a map in your app. Supported platforms WPF UWP Xamarin.Android Xamarin.iOS Xamarin.Forms Supported data Mapsui uses the BruTile library to display tile layers such as: OpenStreetMap tiles Open standards for tiles WMTS TMS WMS called tilewise Custom data providers MBTiles. An offline format to store tile data in sqlite file. Mapsui renders and can style vector data (polygons, lines, points)"
  },
  "documentation/how-to-work-with-mapsui.html": {
    "href": "documentation/how-to-work-with-mapsui.html",
    "title": "How to Work with Mapsui",
    "keywords": "How to Work with Mapsui Logging Sooner or later there comes a time where you are struggling with a bug. You can save yourself some time by writing the Mapsui log events to your own log from the start of your project. In Mapsui errors and warnings are logged to a static class which has an event handler you can listen to. Mapsui.Logging.Logger.LogDelegate += (level, message, ex) => // todo: Write to your own logger; Extension of Mapsui If you need more functionality from the MapControl you could create your own version of the MapControl by making a copy. You can customize these for your own needs. While it is also possible to extend functionality by adding your own ILayer or IProvider implementation. If you encounter breaking changes please take a look at the release notes . You can check the related commits by clicking the 'x commits to masters since this release' of the previous release (a bit odd but that is how github works)."
  },
  "documentation/mapsui-components.html": {
    "href": "documentation/mapsui-components.html",
    "title": "Mapsui Components",
    "keywords": "Mapsui Components If you install the NuGet package into your app these assemblies are added: Mapsui.UI.{platform} - Platform specific UI. Contains the MapControl Mapsui.Rendering.Skia Mapsui Mapsui.Geometries On Windows desktop Mapsui.Rendering.Xaml is added. A number of nuget dependencies Mapsui Parts There are three important classes that you will deal with MapControl This is the UI component that you add to you project. Map Holds all information about the map like layers and widgets. Viewport Holds all information about the part of the map that is visible on the screen like center, extent, rotation, resolution and so on. It is created automatically when Map is created. You can access it with MapControl.Map.Viewport."
  },
  "documentation/mapsui-forms.html": {
    "href": "documentation/mapsui-forms.html",
    "title": "Mapsui.Forms",
    "keywords": "Mapsui.Forms Mapsui can be used on Xamarin.Forms with the Mapsui.Forms nuget package. Mapsui.Forms is a 'native' Xamarin.Forms implementation, meaning it does not use Xamarin.Forms Renderers around platform specific components but implements a Xamarin.Forms implementation instead. Mapsui.Forms uses SkiaSharp.Views.Forms to display the map on the device. This works for iOS, Android, UWP and Mac OS. On WPF there still is an issue with placing controls over the Map. To get started see getting started with Xamarin.Forms ."
  },
  "documentation/nuget-of-latest-build.html": {
    "href": "documentation/nuget-of-latest-build.html",
    "title": "NuGet of Latest Build",
    "keywords": "NuGet of Latest Build On every commit the build server is triggered which publishes a NuGet package of that build. It's version number is the current version of the master branch followed by a dot and the build number. The package is not published to nuget.org but to a AppVeyor feed. You need to add this feed to be able to install the package to your project. There are three ways to add this feed to your environment. Package Manager Console PM> nuget install-package mapsui -source https://ci.appveyor.com/nuget/mapsui -pre This installs only the mapsui core package but you could install any other package this way. Add the feed in Visual Studio Add the feed in tools | options | nuget | package sources https://ci.appveyor.com/nuget/mapsui And under 'manage nuget packages' select this as source on the top right. Add a .nuget\\NuGet.Config xml In you sln folder add a .nuget folder and in it a NuGet.Config file with content: <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <solution> <add key=\"disableSourceControlIntegration\" value=\"true\" /> </solution> <packageSources> <add key=\"AppVeyor\" value=\"https://ci.appveyor.com/nuget/mapsui \" /> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </packageSources> </configuration> This way you application knows where to find the package and when other developers clone your project it works for them too right away. This is the best option. Build your own nuget package It is also possible to build you own nuget package locally by running scripts\\buildpack.bat 3.0.0-custom.1 from the sln folder. You can set the file location as a Package Source in visual studio."
  },
  "documentation/performance-widget.html": {
    "href": "documentation/performance-widget.html",
    "title": "PerformanceWidget",
    "keywords": "PerformanceWidget Summary Mapsui 3.0 supports a widget, that could show the main performance values for drawing the map. How it works 1) Create a new Performance object for the MapControl, where the values could be stored if (mapControl.Performance == null) mapControl.Performance = new Utilities.Performance(10); 2) Create the PerformanceWidget. As parameter you have to provide the Performance object, that the widget should be use var widget = new Widgets.Performance.PerformanceWidget(mapControl.Performance); 3) If you want to clear all values of the Performance object, then add the following event handler for the touch event of the widget widget.WidgetTouched += (sender, args) => { mapControl?.Performance.Clear(); mapControl?.RefreshGraphics(); args.Handled = true; }; 4) Add the widget to the list of known widgets mapControl.Map.Widgets.Add(widget); 5) To draw the widget on the screen, we need a widget renderer. To use the default widget renderer, use the following lines mapControl.Renderer.WidgetRenders[typeof(Widgets.Performance.PerformanceWidget)] = new Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer(10, 10, 12, SkiaSharp.SKColors.Black, SkiaSharp.SKColors.White); The first two parameters are the X and Y coordiantes for the widget. Third parameter is the text size. Fourth is the text color and fifth is the background color. Code copy if (mapControl.Performance == null) mapControl. Performance = new Utilities.Performance(); var widget = new Widgets.Performance.PerformanceWidget(mapControl.Performance); widget.WidgetTouched += (sender, args) => { mapControl?.Performance.Clear(); mapControl?.RefreshGraphics(); args.Handled = true; }; mapControl.Map.Widgets.Add(widget); mapControl.Renderer.WidgetRenders[typeof(Widgets.Performance.PerformanceWidget)] = new Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer(10, 10, 12, SkiaSharp.SKColors.Black, SkiaSharp.SKColors.White); Values Last Time for drawing of the last screen. Be careful: because the widget is drawn together with the screen, this time is the time for the screen drawn before the screen you see. Mean The mean value is the mean of the last x draws. x is the number, you provide when creating the Performance object. Frames per second This is the number of frames that could be drawn with the actual mean drawing time. Minimum Fastest draw of the screen. Maximum Slowest draw of the screen. Count How often the screen is drawn. Dropped How often the screen isn't invalidated, because a drawing is still in progress. Remarks The Performance object contains the times between start and end of a drawing process. This must not be the real drawing time. It could be, that other tasks running in between the drawing process."
  },
  "documentation/projections.html": {
    "href": "documentation/projections.html",
    "title": "Projections",
    "keywords": "Projections A geospatial projection is the transformation of coordinates in one coordinate system to another coordinate system. If all your data is in one coordinate system there is no need for projection. With a geospectial projection we do not mean transforming spatial coordinates to pixel positions on screen. To distinguish it from that kind of transformation we use the term projection instead of transformation for geospatial projections in Mapsui, although these words mean rougly the same. Some background on projections The topic of geospatial projections is complicated. Users of Mapsui have a wide variety of backgrounds. Some are experienced GIS users that just need to know how this specific map component works. Many others are app developers that just happen to need a map for their current app. This makes it hard to explain things clear for everyone. Below are some basic concepts. I like this video introduction to map projections. Spatial Reference System (CRS) In geospatial there is a standard way to refer to a coordinate systems, the CRS (coordinate reference system). We will use the term CRS to refer to a specific coordinate system. In Mapsui the Map and the IProvider have a CRS field to indicate their coordinate systems. Supported coordinate systems (CRSes) Out of the box Mapsui only supports the projection between two coordinate systems. EPSG:4326 or lat/lon, or WGS84. GPS coordinates are in lat/lon EPSG:3857 or SphericalMercator, or WebMercator, PseudoMercator. This is the coordinate system used in the maps of google and openstreetmap. It is however possible to create your own projection. You need to implement the IProjection interface. Within this implementation you need to use some other projection library. A recommended one is ProjNet4GeoAPI . Parts of Mapsui involved in projections Map : There is one Map. It is inevitably in some kind of coordinate system. Layers : There are several layers that provider data. The layers always need to return data in the coordinate system that the map is using. If not, different projections will be drawn on top of each other and things go wrong. Providers : Some Layers have a DataSource (Provider). This DataSource could contain data in another coordinate system. This data can be converted to the map coordinate system using the ProjectingProvider. The most common scenario If you use OpenStreetMap the map is in SphericalMercator. Often you have geodata in lat/lon, say a GPS track. The Map.CRS has to be set. If you use SpehricalMercator set it to \"EPSG:3857\". The Provider.CRS has to be set. If the data is in lat/lon set it to \"EPSG:4326\". Wrap the Provider om the ProjectingProvider. Search the code samples for ProjectingProvider. With this setup the ProjectingProvider will do the projection for you. Another option is to do the projection yourself. You can use Mapsui's SphericalMerator.FromLonLat/ToLonLat to project the data before you add them to a Memorylayer and no CRSes need to be set. Remarks Mapsui is not capable of projecting images. So no projection of tiles as rasters. No attempt will be made to project and the CRS fields will be ignored. Sample public void Setup(IMapControl mapControl) { mapControl.Map = CreateMap(); } public static Map CreateMap() { // For Projections to work three things need to be set: // 1) The CRS on the Map to know what to project to. // 2) The CRS on the DataSource to know what to project from. // 3) The projection to project from the DataSource CRS to // the Map CRS. var geometryLayer = CreateWorldCitiesLayer(); var extent = geometryLayer.Extent!.Grow(10000); var map = new Map { CRS = \"EPSG:3857\", // The Map CRS needs to be set BackColor = Color.Gray }; map.Layers.Add(OpenStreetMap.CreateTileLayer()); map.Layers.Add(geometryLayer); map.Home = n => n.NavigateTo(extent); return map; } public static Layer CreateWorldCitiesLayer() { var features = WorldCities.GenerateTop100(); var memoryProvider = new MemoryProvider<IFeature>(features) { CRS = \"EPSG:4326\" // The DataSource CRS needs to be set }; var dataSource = new ProjectingProvider(memoryProvider) { CRS = \"EPSG:3857\" }; return new Layer { DataSource = dataSource, Name = \"Cities\", Style = CreateCityStyle(), IsMapInfoLayer = true }; } private static SymbolStyle CreateCityStyle() { var location = typeof(GeodanOfficesSample).LoadBitmapId(\"Images.location.png\"); return new SymbolStyle { BitmapId = location, SymbolOffset = new Offset { Y = 64 }, SymbolScale = 0.25, Opacity = 0.5f }; }"
  },
  "documentation/renderers.html": {
    "href": "documentation/renderers.html",
    "title": "Renderers",
    "keywords": "Renderers Mapsui has two renderers: Xaml in the Mapsui.Rendering.Xaml assembly. Used only in the WPF MapControl. Older and stable. Skia in the Mapsui.Rendering.Skia assembly. Used in all supported platforms. Newer. Differences Between Xaml and Skia Skia is nearly equivalent to Xaml but there are still some differences (This list has grown shorter over last year): There is a difference in the way halo symbolization is implemented. We will match Xaml to Skia (not the other way around). We already use the correct technique for Xaml halos for labels styles. Skia does not have the option to displayed symbols in world units. The means the icon will grow bigger if you zoom in. This is unlike regular icon but like regular polgons. This is an exotic feature, you will probably not need this. There are probably some more differences I missed. Xaml and Skia side by side in Mapsui.Samples.Wpf The project Mapsui.Samples.Wpf has a dropdown on the top left to select between Skia and Wpf rendering. This is allows you to compare them. Renderer abstraction layer There is the question how much of the renderer should be abstracted away. An abstraction layer add extra complexity. Since it looks more and more like skiasharp will be the only renderer for as far as we can see we could just add that dependency to all our code and work directly with SkiaSharp classes, that may simplify some things. However, in the past we had to switch many times to different renderers, so I am not so sure if this won't happen again. So let's not settle for one renderer just yet. For context, these are the renderers Mapsui had in the past: System.Drawing System.Drawing for PocketPC Silverlight XAML WPF XAML UWP XAML (could later be merged with WPF XAML) iOS native rendering Android native rendering (this is actually internally using skia) OpenTK (this was not mature enough at that point) SkiaSharp"
  },
  "documentation/rendering-tests.html": {
    "href": "documentation/rendering-tests.html",
    "title": "Rendering Tests",
    "keywords": "Rendering Tests Mapsui has a way of testing rendering where a Map state is rendered to a bitmap. This bitmap is then compared to the original images which are stored as resource in the repository. This is thus a kind of regresssion test (1). If there are differences between these images the test will fail. If this is the case the developer needs to visually inspect the generated images (2). If the generated image is as expected and the original is not then the original needs to be overwritten. Regression tests Visual inspection. The regression tests are useful during refactoring when you expect no changes. When you are working on changes in the rendered output the regression tests will fail but the visual inspection of the output is still useful to check if this is as intended. 1. Regression tests The generated images are written to: {test project folder}\\bin\\Debug\\netcoreapp3.1\\Resources\\Images\\Generated Those will be compared to the original images that were deployed in the build located here: {test project folder}\\bin\\Debug\\netcoreapp3.1\\Resources\\Images\\Original\\ If after code changes there are expected changes in the generated files they should be committed to git so they need to be copied to: {test project folder}\\Resources\\Images\\Original\\ This can be done with a script: scripts\\test-image-copier.cmd . 2. Visual inspection There tests can be inspected in two ways. In the WPF sample there is a 'Tests' category, that shows an interactive version of the test sample. In the output folder (see above) the generated images can be viewed. Currently this folder looks like this:"
  },
  "documentation/roadmap.html": {
    "href": "documentation/roadmap.html",
    "title": "Roadmap",
    "keywords": "Roadmap Updated May 2020 Replace Mapsui.Geometries with NTS Add vector tiles Improve performance World wrap Improvements around Mapsui: Improve the documentation. Adding 'getting started' tutorials for all platforms. Improve the samples. Add comments, make them smaller (single purpose) and make them look better. Later Change license to MIT Not 3D support"
  },
  "documentation/samples.html": {
    "href": "documentation/samples.html",
    "title": "Samples",
    "keywords": "Samples The best way to get started with mapsui is to go through the samples. The code samples There are sample apps for each platform. They share a number of Map samples that can be found in this folder in our git repository Samples\\Mapsui\\Mapsui.Samples.Common\\Maps. For 2.0 look here For 1.4 look here Run the samples See the samples in action by running the WPF sample app ( Mapsui.Samples.Wpf ) in the samples folder. On the left side it has a list with all samples."
  },
  "documentation/skia-scale.html": {
    "href": "documentation/skia-scale.html",
    "title": "Skia Scale",
    "keywords": "Skia Scale We have a separate page about this topic because skia scale has caused some confusion in the past and bugs as a consequence. Some context: Device Independent Units Modern devices have a very high resolution. If something is drawn onto the canvas using raw pixels as coordinates the fonts would become tiny and unreadable and lines would become very thin. To correct for this a scale factor is used. Those scaled-up coordinates are called device independent units. Most of the time you deal with the device independent units. Coordinates in SkiaSharp Most (all?) views in SkiaSharp use pixels as coordinates by default but for our purposes we need to use device independent units, so we need to correct for this. We do this by setting the scale of the SKCanvas. This needs to be done in the render loop because it is the only place where we have access. Also the size of the map needs to be adjusted otherwise we would draw outsize the screen."
  },
  "documentation/tutorials.html": {
    "href": "documentation/tutorials.html",
    "title": "Tutorials",
    "keywords": "Tutorials Cross-Platform MVVMCross Xamarin.Forms Application MvvmCross is a cross-platform MVVM framework that enables developers to create powerful cross platform apps. It supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, Xamarin.Forms, Universal Windows Platform (UWP) and Windows Presentation Framework (WPF). The high level features that MvvmCross provides you with are: MVVM architecture pattern Navigation system Data Binding Platform specifics support Inversion of Control container and Dependency Injection engine Lots of plugins for common functionalities Unit test helpers Complete flexibility - your app is King! There is a Sample functional app demonstrating how to use Mapsui in MVVMCross Xamarin Forms application at: Mapsui in MVVMCross Xamarin Forms App"
  },
  "documentation/v2.0-upgrade-guide.html": {
    "href": "documentation/v2.0-upgrade-guide.html",
    "title": "v2.0 upgrade guide",
    "keywords": "v2.0 upgrade guide This is the incomplete upgrade guide from v1.4 to v2.0. The most apparent changes will be mentioned here. If you notice important things missing then please post an issue. Moved from PCL to .NET Standard 2.0 Look up compatible frameworks in this table . Viewport moved from Map to MapControl and is readonly Use MapControl.Navigator instead. Moved MapControl.NavigateTo methods to MapControl.Navigator All user map manipulation should go the the Navigator. Introduced Map.Home to initialze the map viewport There is now a Home delegate on the Map object that should be used to set the initial state of the map. MapControl.Map.Home = n => n.NavigateTo(myCenter, myResolution); Reason: This is because in some cases the Navigate methods depend on the envelope and resolutions of the layers and in some cases it takes time for these layers to load their data. Added Map.PanLock, Map.ZoomLock and Map.RotationLock The lock fields can be used on all platforms to lock the user from a certain kind of map manipulation. Added Map.Limiter to limit the extent to which the user can navigate The Limter is an implementation of IViewportLimiter. There are currently three limiters part of Mapsui: ViewportLimiter (default) ViewportLimiterKeepWithin ViewportLimiterWithoutLimits It is also possible to implement your own IViewportLimiter. Added RefreshGraphics, RefreshData and Refresh Use RefreshGraphics if you know the data in the layer has changed and the graphics needs refreshing. Use RefreshData if you know there is new data available in the source. Use Refresh if you need to do both. These methods should only be needed if you manipulate data somehow in your own code. Renamed BoundingBox GetCentroid to Centroid and GetBoundingBox to BoundingBox Turned these methods into proper properties making user code a bit more compact. The Info event was moved from Map to MapControl The MapControl contains most other events as well Removed the InfoLayer list and add an InfoLayer boolean on ILayer To indicate that a layer is a info layer you now need to set it's InfoLayer property. In v1.4 it had to be added to the list of InfoLayers. Removed the HoverLayer method. This is because hover could not be implemented crossplatform and could harm performance. It it is still possible to implement hover yourself using a direct call to MapControl.GetMapInfo. Invert label alignment bottom/top. This was incorrect in v1.4. This will not cause a compile error so don't forget to do a search-replace to fix it. Removed ZoomIn/ZoomOut from WPF MapControl Use the ZoomIn/ZoomOut methode on the navigator. Some other changes Move Info event from Map to MapControl Do not derive ILayer from IAsyncDataFetcher. Remove WPFs MapControl.ErrorMessage Rename PanMode.None and ZoomMode.None. Remove the InfoLayer list and add an InfoLayer boolean on ILayer Remove the HoverLayer method. It is not crossplatform and can affect performance. Wrap Viewport in LimitingViewport which limits it to user settings, or access through Navigator. PanLock and ZoomLock working on all platforms. Rework ViewportLimiter"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mapsui documentation.",
    "keywords": "Mapsui documentation. This is the documentation of the Mapsui open source map component. The general documentation found here . The api documentation found here . The github repository, which also contains the samples, can be found here . Sponsors We are delightly with our first gold sponsor Sebastian Kruze, who has also contributed to Mapsui with informed test reports and expert advice. Sebastian Kruse Projects that use Mapsui Breath Companion Squadra @mapsui-users Please send info on other apps using Mapsui to add them here Support If you are interested in more support for Mapsui please mail pauldendulk@gmail.com ."
  }
}