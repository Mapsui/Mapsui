{
  "api/Mapsui.Geometries.WellKnownText.html": {
    "href": "api/Mapsui.Geometries.WellKnownText.html",
    "title": "Namespace Mapsui.Geometries.WellKnownText",
    "keywords": "Namespace Mapsui.Geometries.WellKnownText Classes GeometryFromWKT Converts a Well-known Text representation to a Geometry instance. GeometryToWKT Outputs the textual representation of a Geometry instance."
  },
  "api/Mapsui.Geometries.WellKnownText.GeometryToWKT.html": {
    "href": "api/Mapsui.Geometries.WellKnownText.GeometryToWKT.html",
    "title": "Class GeometryToWKT",
    "keywords": "Class GeometryToWKT Outputs the textual representation of a Geometry instance. Inheritance System.Object GeometryToWKT Namespace : Mapsui.Geometries.WellKnownText Assembly : Mapsui.Geometries.dll Syntax public static class GeometryToWKT : object Remarks The Well-Known Text (WKT) representation of Geometry is designed to exchange geometry data in ASCII form. Examples of WKT representations of geometry objects are: Geometry WKT Representation A Point POINT(15 20) Note that point coordinates are specified with no separating comma. A LineString with four points: LINESTRING(0 0, 10 10, 20 25, 50 60) A Polygon with one exterior ring and one interior ring: POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7, 5 5)) A MultiPoint with three Point values: MULTIPOINT(0 0, 20 20, 60 60) A MultiLineString with two LineString values: MULTILINESTRING((10 10, 20 20), (15 15, 30 15)) A MultiPolygon with two Polygon values: MULTIPOLYGON(((0 0,10 0,10 10,0 10,0 0)),((5 5,7 5,7 7,5 7, 5 5))) A GeometryCollection consisting of two Point values and one LineString: GEOMETRYCOLLECTION(POINT(10 10), POINT(30 30), LINESTRING(15 15, 20 20)) Methods | Improve this Doc View Source Write(IGeometry) Converts a Geometry to its Well-known Text representation. Declaration public static string Write(IGeometry geometry) Parameters Type Name Description IGeometry geometry A Geometry to write. Returns Type Description System.String A <Geometry Tagged Text> string (see the OpenGIS Simple Features Specification) | Improve this Doc View Source Write(IGeometry, StringWriter) Converts a Geometry to its Well-known Text representation. Declaration public static void Write(IGeometry geometry, StringWriter writer) Parameters Type Name Description IGeometry geometry A geometry to process. StringWriter writer Stream to write out the geometry's text representation. Remarks Geometry is written to the output stream as <Gemoetry Tagged Text> string (see the OpenGIS Simple Features Specification)."
  },
  "api/Mapsui.Geometries.WellKnownText.GeometryFromWKT.html": {
    "href": "api/Mapsui.Geometries.WellKnownText.GeometryFromWKT.html",
    "title": "Class GeometryFromWKT",
    "keywords": "Class GeometryFromWKT Converts a Well-known Text representation to a Geometry instance. Inheritance System.Object GeometryFromWKT Namespace : Mapsui.Geometries.WellKnownText Assembly : Mapsui.Geometries.dll Syntax public static class GeometryFromWKT : object Remarks The Well-Known Text (WKT) representation of Geometry is designed to exchange geometry data in ASCII form. Examples of WKT representations of geometry objects are: Geometry WKT Representation A Point POINT(15 20) Note that point coordinates are specified with no separating comma. A LineString with four points: LINESTRING(0 0, 10 10, 20 25, 50 60) A Polygon with one exterior ring and one interior ring: POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7, 5 5)) A MultiPoint with three Point values: MULTIPOINT(0 0, 20 20, 60 60) A MultiLineString with two LineString values: MULTILINESTRING((10 10, 20 20), (15 15, 30 15)) A MultiPolygon with two Polygon values: MULTIPOLYGON(((0 0,10 0,10 10,0 10,0 0)),((5 5,7 5,7 7,5 7, 5 5))) A GeometryCollection consisting of two Point values and one LineString: GEOMETRYCOLLECTION(POINT(10 10), POINT(30 30), LINESTRING(15 15, 20 20)) Methods | Improve this Doc View Source Parse(String) Converts a Well-known text representation to a Geometry . Declaration public static Geometry Parse(string wellKnownText) Parameters Type Name Description System.String wellKnownText A Geometry tagged text string ( see the OpenGIS Simple Features Specification. Returns Type Description Geometry Returns a Geometry specified by wellKnownText. Throws an exception if there is a parsing problem. | Improve this Doc View Source Parse(TextReader) Converts a Well-known Text representation to a Geometry . Declaration public static Geometry Parse(TextReader reader) Parameters Type Name Description TextReader reader A Reader which will return a Geometry Tagged Text string (see the OpenGIS Simple Features Specification) Returns Type Description Geometry Returns a Geometry read from StreamReader. An exception will be thrown if there is a parsing problem."
  },
  "api/Mapsui.Desktop.GeoTiff.GeoTiffProvider.html": {
    "href": "api/Mapsui.Desktop.GeoTiff.GeoTiffProvider.html",
    "title": "Class GeoTiffProvider",
    "keywords": "Class GeoTiffProvider Inheritance System.Object GeoTiffProvider Implements IProvider Namespace : Mapsui.Desktop.GeoTiff Assembly : Mapsui.Desktop.dll Syntax public class GeoTiffProvider : object, IProvider Constructors | Improve this Doc View Source GeoTiffProvider(String, List<Drawing.Color>) Declaration public GeoTiffProvider(string tiffPath, List<Drawing.Color> noDataColors = null) Parameters Type Name Description System.String tiffPath List < System.Drawing.Color > noDataColors Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > Implements IProvider"
  },
  "api/ConcurrentCollections.html": {
    "href": "api/ConcurrentCollections.html",
    "title": "Namespace ConcurrentCollections",
    "keywords": "Namespace ConcurrentCollections Classes ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection."
  },
  "api/BruTile.ExtentExtensions.html": {
    "href": "api/BruTile.ExtentExtensions.html",
    "title": "Class ExtentExtensions",
    "keywords": "Class ExtentExtensions Inheritance System.Object ExtentExtensions Namespace : BruTile Assembly : Mapsui.dll Syntax public static class ExtentExtensions : object Methods | Improve this Doc View Source ToBoundingBox(Extent) Declaration public static BoundingBox ToBoundingBox(this Extent extent) Parameters Type Name Description Extent extent Returns Type Description BoundingBox"
  },
  "api/Mapsui.Widgets.Widget.html": {
    "href": "api/Mapsui.Widgets.Widget.html",
    "title": "Class Widget",
    "keywords": "Class Widget Inheritance System.Object Widget ScaleBarWidget TextBox ZoomInOutWidget Implements IWidget Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class Widget : object, IWidget Properties | Improve this Doc View Source Envelope Declaration public BoundingBox Envelope { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source HorizontalAlignment Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration public float MarginX { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MarginY Declaration public float MarginY { get; set; } Property Value Type Description System.Single | Improve this Doc View Source VerticalAlignment Declaration public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source CalculatePositionX(Single, Single, Single) Declaration public float CalculatePositionX(float left, float right, float width) Parameters Type Name Description System.Single left System.Single right System.Single width Returns Type Description System.Single | Improve this Doc View Source CalculatePositionY(Single, Single, Single) Declaration public float CalculatePositionY(float top, float bottom, float height) Parameters Type Name Description System.Single top System.Single bottom System.Single height Returns Type Description System.Single | Improve this Doc View Source HandleWidgetTouched(INavigator, Point) Declaration public abstract bool HandleWidgetTouched(INavigator navigator, Point position) Parameters Type Name Description INavigator navigator Point position Returns Type Description System.Boolean Implements IWidget"
  },
  "api/Mapsui.Widgets.VerticalAlignment.html": {
    "href": "api/Mapsui.Widgets.VerticalAlignment.html",
    "title": "Enum VerticalAlignment",
    "keywords": "Enum VerticalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum VerticalAlignment : int Fields Name Description Bottom Center Top Extension Methods VerticalAligmentExtensions.ToXaml()"
  },
  "api/Mapsui.Widgets.TextBox.html": {
    "href": "api/Mapsui.Widgets.TextBox.html",
    "title": "Class TextBox",
    "keywords": "Class TextBox Inheritance System.Object Widget TextBox Hyperlink Implements IWidget Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Widget.HandleWidgetTouched(INavigator, Point) Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class TextBox : Widget, IWidget Properties | Improve this Doc View Source BackColor Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CornerRadius Declaration public int CornerRadius { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PaddingX Declaration public int PaddingX { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PaddingY Declaration public int PaddingY { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source TextColor Declaration public Color TextColor { get; set; } Property Value Type Description Color Implements IWidget"
  },
  "api/Mapsui.Widgets.ScaleBar.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.html",
    "title": "Namespace Mapsui.Widgets.ScaleBar",
    "keywords": "Namespace Mapsui.Widgets.ScaleBar Classes ImperialUnitConverter MetricUnitConverter NauticalUnitConverter ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determins, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determins the distance to the left PositionY: If VerticalAlignment is Position, this value determins the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Interfaces IUnitConverter Enums ScaleBarMode"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html",
    "title": "Class ScaleBarWidget",
    "keywords": "Class ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determins, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determins the distance to the left PositionY: If VerticalAlignment is Position, this value determins the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Inheritance System.Object Widget ScaleBarWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ScaleBarWidget : Widget, IWidget, INotifyPropertyChanged Constructors | Improve this Doc View Source ScaleBarWidget(Map) Declaration public ScaleBarWidget(Map map) Parameters Type Name Description Map map Properties | Improve this Doc View Source Font Font to use for drawing text Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source Halo Halo color of scalebar and text, so that it is better visible Declaration public Color Halo { get; set; } Property Value Type Description Color | Improve this Doc View Source Height Real height of scalebar. Depends on number of unit converters and text size. Is calculated by renderer. Declaration public float Height { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxWidth Maximum usable width for scalebar. The real used width could be less, because we want only integers as text. Declaration public float MaxWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scale Declaration public float Scale { get; } Property Value Type Description System.Single | Improve this Doc View Source ScaleBarMode ScaleBarMode of scalebar. Could be Single to show only one or Both for showing two units. Declaration public ScaleBarMode ScaleBarMode { get; set; } Property Value Type Description ScaleBarMode | Improve this Doc View Source SecondaryUnitConverter Secondary unit converter for lower text if ScaleBarMode is Both. Default is ImperialUnitConverter. Declaration public IUnitConverter SecondaryUnitConverter { get; set; } Property Value Type Description IUnitConverter | Improve this Doc View Source ShowEnvelop Draw a rectangle around the scale bar for testing Declaration public bool ShowEnvelop { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StrokeWidth Stroke width for lines Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StrokeWidthHalo Stroke width for halo of lines Declaration public float StrokeWidthHalo { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TextAlignment Alignment of text of scalebar Declaration public Alignment TextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source TextColor Foreground color of scalebar and text Declaration public Color TextColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextMargin Margin between end of tick and text Declaration public float TextMargin { get; } Property Value Type Description System.Single | Improve this Doc View Source TickLength Length of the ticks Declaration public float TickLength { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UnitConverter Normal unit converter for upper text. Default is MetricUnitConverter. Declaration public IUnitConverter UnitConverter { get; set; } Property Value Type Description IUnitConverter Methods | Improve this Doc View Source CanTransform() Declaration public bool CanTransform() Returns Type Description System.Boolean | Improve this Doc View Source GetScaleBarLengthAndText(IReadOnlyViewport) Calculates the length and text for both scalebars Declaration public (float scaleBarLength1, string scaleBarText1, float scaleBarLength2, string scaleBarText2)GetScaleBarLengthAndText(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Returns Type Description System.ValueTuple < System.Single , System.String , System.Single , System.String > Length of upper scalebar Text of upper scalebar Length of lower scalebar Text of lower scalebar | Improve this Doc View Source GetScaleBarLinePositions(IReadOnlyViewport, Single, Single, Single) Get pairs of points, which determin start and stop of the lines used to draw the scalebar Declaration public Point[] GetScaleBarLinePositions(IReadOnlyViewport viewport, float scaleBarLength1, float scaleBarLength2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport of the map System.Single scaleBarLength1 Length of upper scalebar System.Single scaleBarLength2 Length of lower scalebar System.Single stroke Width of line Returns Type Description Point [] Array with pairs of Points. First is always the start point, the second is the end point. | Improve this Doc View Source GetScaleBarTextPositions(IReadOnlyViewport, BoundingBox, BoundingBox, BoundingBox, Single) Calculates the top-left-position of upper and lower text Declaration public (float posX1, float posY1, float posX2, float posY2)GetScaleBarTextPositions(IReadOnlyViewport viewport, BoundingBox textSize, BoundingBox textSize1, BoundingBox textSize2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport BoundingBox textSize Default textsize for the string \"9999 m\" BoundingBox textSize1 Size of upper text of scalebar BoundingBox textSize2 Size of lower text of scalebar System.Single stroke Width of line Returns Type Description System.ValueTuple < System.Single , System.Single , System.Single , System.Single > posX1 as left position of upper scalebar text posY1 as top position of upper scalebar text posX2 as left position of lower scalebar text posY2 as top position of lower scalebar text | Improve this Doc View Source HandleWidgetTouched(INavigator, Point) Declaration public override bool HandleWidgetTouched(INavigator navigator, Point position) Parameters Type Name Description INavigator navigator Point position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, Point) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IWidget INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html",
    "title": "Enum ScaleBarMode",
    "keywords": "Enum ScaleBarMode Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public enum ScaleBarMode : int Fields Name Description Both Single"
  },
  "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html",
    "title": "Class NauticalUnitConverter",
    "keywords": "Class NauticalUnitConverter Inheritance System.Object NauticalUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class NauticalUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly NauticalUnitConverter Instance Field Value Type Description NauticalUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html",
    "title": "Class MetricUnitConverter",
    "keywords": "Class MetricUnitConverter Inheritance System.Object MetricUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class MetricUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly MetricUnitConverter Instance Field Value Type Description MetricUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html",
    "title": "Interface IUnitConverter",
    "keywords": "Interface IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public interface IUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String"
  },
  "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html",
    "title": "Class ImperialUnitConverter",
    "keywords": "Class ImperialUnitConverter Inheritance System.Object ImperialUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ImperialUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly ImperialUnitConverter Instance Field Value Type Description ImperialUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description System.Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < System.Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description System.Int32 mapScaleValue Returns Type Description System.String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.IWidgetRenderer.html": {
    "href": "api/Mapsui.Widgets.IWidgetRenderer.html",
    "title": "Interface IWidgetRenderer",
    "keywords": "Interface IWidgetRenderer Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidgetRenderer"
  },
  "api/Mapsui.Widgets.IWidget.html": {
    "href": "api/Mapsui.Widgets.IWidget.html",
    "title": "Interface IWidget",
    "keywords": "Interface IWidget Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidget Properties | Improve this Doc View Source Envelope The hit box of the widget. This needs to be updated from the widget renderer. Declaration BoundingBox Envelope { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source HorizontalAlignment Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration float MarginX { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MarginY Declaration float MarginY { get; set; } Property Value Type Description System.Single | Improve this Doc View Source VerticalAlignment Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, Point) Function, which is called, when a Widget is hiten Declaration bool HandleWidgetTouched(INavigator navigator, Point position) Parameters Type Name Description INavigator navigator Navigator of MapControl Point position Screen position Returns Type Description System.Boolean True, if the Widget had handled the touch event"
  },
  "api/Mapsui.Widgets.HyperlinkWidgetArguments.html": {
    "href": "api/Mapsui.Widgets.HyperlinkWidgetArguments.html",
    "title": "Class HyperlinkWidgetArguments",
    "keywords": "Class HyperlinkWidgetArguments Inheritance System.Object HyperlinkWidgetArguments Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class HyperlinkWidgetArguments : object Fields | Improve this Doc View Source Handled Declaration public bool Handled Field Value Type Description System.Boolean"
  },
  "api/Mapsui.Widgets.Hyperlink.html": {
    "href": "api/Mapsui.Widgets.Hyperlink.html",
    "title": "Class Hyperlink",
    "keywords": "Class Hyperlink Inheritance System.Object Widget TextBox Hyperlink Implements IWidget Inherited Members TextBox.PaddingX TextBox.PaddingY TextBox.CornerRadius TextBox.Text TextBox.BackColor TextBox.TextColor Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class Hyperlink : TextBox, IWidget Properties | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, Point) Declaration public override bool HandleWidgetTouched(INavigator navigator, Point position) Parameters Type Name Description INavigator navigator Point position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, Point) Events | Improve this Doc View Source Touched Declaration public event EventHandler<HyperlinkWidgetArguments> Touched Event Type Type Description EventHandler < HyperlinkWidgetArguments > Implements IWidget"
  },
  "api/Mapsui.Widgets.HorizontalAlignment.html": {
    "href": "api/Mapsui.Widgets.HorizontalAlignment.html",
    "title": "Enum HorizontalAlignment",
    "keywords": "Enum HorizontalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum HorizontalAlignment : int Fields Name Description Center Left Right Extension Methods HorizontaltExtensions.ToXaml()"
  },
  "api/Mapsui.Widgets.Alignment.html": {
    "href": "api/Mapsui.Widgets.Alignment.html",
    "title": "Enum Alignment",
    "keywords": "Enum Alignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum Alignment : int Fields Name Description Center Left Right"
  },
  "api/Mapsui.UI.Wpf.WindowsPointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.WindowsPointExtensions.html",
    "title": "Class WindowsPointExtensions",
    "keywords": "Class WindowsPointExtensions Inheritance System.Object WindowsPointExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class WindowsPointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static Point ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description Point"
  },
  "api/Mapsui.UI.Wpf.RenderMode.html": {
    "href": "api/Mapsui.UI.Wpf.RenderMode.html",
    "title": "Enum RenderMode",
    "keywords": "Enum RenderMode Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public enum RenderMode : int Fields Name Description Skia Wpf"
  },
  "api/Mapsui.UI.Wpf.PointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ApplyScale(Point, Double) Declaration public static Point ApplyScale(this Point point, double scale) Parameters Type Name Description Point point System.Double scale Returns Type Description Point"
  },
  "api/Mapsui.UI.Wpf.MouseButtonEventArgsExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.MouseButtonEventArgsExtensions.html",
    "title": "Class MouseButtonEventArgsExtensions",
    "keywords": "Class MouseButtonEventArgsExtensions Inheritance System.Object MouseButtonEventArgsExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class MouseButtonEventArgsExtensions : object Methods | Improve this Doc View Source GetMapInfo(MouseButtonEventArgs, MapControl) Declaration public static MapInfo GetMapInfo(this MouseButtonEventArgs e, MapControl mapControl) Parameters Type Name Description MouseButtonEventArgs e MapControl mapControl Returns Type Description MapInfo"
  },
  "api/Mapsui.UI.Wpf.MapControl.html": {
    "href": "api/Mapsui.UI.Wpf.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl Grid Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, Grid Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source RenderMode Declaration public RenderMode RenderMode { get; set; } Property Value Type Description RenderMode | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source WpfCanvas Declaration public Canvas WpfCanvas { get; } Property Value Type Description Canvas Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnRender(DrawingContext) Declaration protected override void OnRender(DrawingContext dc) Parameters Type Name Description DrawingContext dc | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() | Improve this Doc View Source ZoomIn() Declaration public void ZoomIn() | Improve this Doc View Source ZoomOut() Declaration public void ZoomOut() | Improve this Doc View Source ZoomToBox(Point, Point) Declaration public void ZoomToBox(Point beginPoint, Point endPoint) Parameters Type Name Description Point beginPoint Point endPoint Events | Improve this Doc View Source FeatureInfo Declaration public event EventHandler<FeatureInfoEventArgs> FeatureInfo Event Type Type Description EventHandler < FeatureInfoEventArgs > | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewChanged Declaration public event EventHandler<ViewChangedEventArgs> ViewChanged Event Type Type Description EventHandler < ViewChangedEventArgs > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl Grid"
  },
  "api/Mapsui.UI.ViewportLimiterWithoutLimits.html": {
    "href": "api/Mapsui.UI.ViewportLimiterWithoutLimits.html",
    "title": "Class ViewportLimiterWithoutLimits",
    "keywords": "Class ViewportLimiterWithoutLimits Inheritance System.Object ViewportLimiterWithoutLimits Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterWithoutLimits : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Declaration public BoundingBox PanLimits { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source ZoomLimits Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(IViewport, IReadOnlyList<Double>, BoundingBox) Declaration public void Limit(IViewport viewport, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope | Improve this Doc View Source LimitExtent(IViewport, BoundingBox) Declaration public void LimitExtent(IViewport viewport, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport BoundingBox mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, BoundingBox) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiterKeepWithin.html": {
    "href": "api/Mapsui.UI.ViewportLimiterKeepWithin.html",
    "title": "Class ViewportLimiterKeepWithin",
    "keywords": "Class ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. Inheritance System.Object ViewportLimiterKeepWithin Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterKeepWithin : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Set this property in combination KeepCenterWithinExtents or KeepViewportWithinExtents. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public BoundingBox PanLimits { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(IViewport, IReadOnlyList<Double>, BoundingBox) Declaration public void Limit(IViewport viewport, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope | Improve this Doc View Source LimitExtent(IViewport, BoundingBox) Declaration public void LimitExtent(IViewport viewport, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport BoundingBox mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, BoundingBox) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiter.html": {
    "href": "api/Mapsui.UI.ViewportLimiter.html",
    "title": "Class ViewportLimiter",
    "keywords": "Class ViewportLimiter Inheritance System.Object ViewportLimiter Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiter : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Set this property in combination KeepCenterWithinExtents or KeepViewportWithinExtents. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public BoundingBox PanLimits { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax | Improve this Doc View Source ZoomMode Zoom mode to use, when map is zoomed Declaration public ZoomMode ZoomMode { get; set; } Property Value Type Description ZoomMode Methods | Improve this Doc View Source Limit(IViewport, IReadOnlyList<Double>, BoundingBox) Declaration public void Limit(IViewport viewport, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope | Improve this Doc View Source LimitExtent(IViewport, BoundingBox) Declaration public void LimitExtent(IViewport viewport, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport BoundingBox mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, BoundingBox) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope Returns Type Description System.Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewChangedEventArgs.html": {
    "href": "api/Mapsui.UI.ViewChangedEventArgs.html",
    "title": "Class ViewChangedEventArgs",
    "keywords": "Class ViewChangedEventArgs Inheritance System.Object ViewChangedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewChangedEventArgs : EventArgs Properties | Improve this Doc View Source UserAction Declaration public bool UserAction { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Viewport Declaration public IViewport Viewport { get; set; } Property Value Type Description IViewport"
  },
  "api/Mapsui.UI.Utils.html": {
    "href": "api/Mapsui.UI.Utils.html",
    "title": "Namespace Mapsui.UI.Utils",
    "keywords": "Namespace Mapsui.UI.Utils Classes VelocityTracker"
  },
  "api/Mapsui.UI.Utils.VelocityTracker.html": {
    "href": "api/Mapsui.UI.Utils.VelocityTracker.html",
    "title": "Class VelocityTracker",
    "keywords": "Class VelocityTracker Inheritance System.Object VelocityTracker Namespace : Mapsui.UI.Utils Assembly : Mapsui.UI.Forms.dll Syntax public class VelocityTracker : object Constructors | Improve this Doc View Source VelocityTracker() Declaration public VelocityTracker() Methods | Improve this Doc View Source AddEvent(Int64, Point, Int64) Declaration public void AddEvent(long id, Point location, long ticks) Parameters Type Name Description System.Int64 id Point location System.Int64 ticks | Improve this Doc View Source CalcVelocity(Int64, Int64) Declaration public (double vx, double vy)CalcVelocity(long id, long now) Parameters Type Name Description System.Int64 id System.Int64 now Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source Clear() Declaration public void Clear()"
  },
  "api/Mapsui.UI.TouchMode.html": {
    "href": "api/Mapsui.UI.TouchMode.html",
    "title": "Enum TouchMode",
    "keywords": "Enum TouchMode Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public enum TouchMode : int Fields Name Description Dragging None Zooming"
  },
  "api/Mapsui.UI.TouchedEventArgs.html": {
    "href": "api/Mapsui.UI.TouchedEventArgs.html",
    "title": "Class TouchedEventArgs",
    "keywords": "Class TouchedEventArgs Inheritance System.Object TouchedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class TouchedEventArgs : EventArgs Constructors | Improve this Doc View Source TouchedEventArgs(List<Point>) Declaration public TouchedEventArgs(List<Point> screenPoints) Parameters Type Name Description List < Point > screenPoints Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPoints Declaration public List<Point> ScreenPoints { get; } Property Value Type Description List < Point >"
  },
  "api/Mapsui.UI.Forms.Extensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.html",
    "title": "Namespace Mapsui.UI.Forms.Extensions",
    "keywords": "Namespace Mapsui.UI.Forms.Extensions Classes ColorExtensions PositionExtensions"
  },
  "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance System.Object PositionExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class PositionExtensions : object Methods | Improve this Doc View Source ToForms(Point) Convert Mapsui.Geometries.Point to Xamarin.Forms.Maps.Position Declaration public static Position ToForms(this Point point) Parameters Type Name Description Point point Point in Mapsui format Returns Type Description Position Position in Xamarin.Forms.Maps format"
  },
  "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance System.Object ColorExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ColorExtensions : object Methods | Improve this Doc View Source ToForms(Color) Convert Mapsui.Styles.Color to Xamarin.Forms.Color Declaration public static Xamarin.Forms.Color ToForms(this Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description Xamarin.Forms.Color Color in Xamarin.Forms.Maps format | Improve this Doc View Source ToMapsui(Xamarin.Forms.Color) Convert Xamarin.Forms.Color to Mapsui.Style.Color Declaration public static Color ToMapsui(this Xamarin.Forms.Color color) Parameters Type Name Description Xamarin.Forms.Color color Color in Xamarin.Forms.Color format Returns Type Description Color Color in Mapsui.Styles.Color format"
  },
  "api/Mapsui.Styles.Style.html": {
    "href": "api/Mapsui.Styles.Style.html",
    "title": "Class Style",
    "keywords": "Class Style Defines a style used for rendering vector data Inheritance System.Object Style LabelStyle CustomTheme GradientTheme ThemeStyle VectorStyle Implements IStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Style : object, IStyle Constructors | Improve this Doc View Source Style() Declaration public Style() Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Gets or sets the objects base opacity Declaration public float Opacity { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Equals(Style) Declaration public bool Equals(Style style) Parameters Type Name Description Style style Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(Style, Style) Declaration public static bool operator ==(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Style, Style) Declaration public static bool operator !=(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.StrokeJoin.html": {
    "href": "api/Mapsui.Styles.StrokeJoin.html",
    "title": "Enum StrokeJoin",
    "keywords": "Enum StrokeJoin Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum StrokeJoin : int Fields Name Description Bevel Miter Round Extension Methods PenStrokeJoinExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.Sprite.html": {
    "href": "api/Mapsui.Styles.Sprite.html",
    "title": "Class Sprite",
    "keywords": "Class Sprite Inheritance System.Object Sprite Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Sprite : object Constructors | Improve this Doc View Source Sprite(Int32, Point, Size, Single) Declaration public Sprite(int atlas, Point p, Size s, float pixelRatio) Parameters Type Name Description System.Int32 atlas Point p Size s System.Single pixelRatio | Improve this Doc View Source Sprite(Int32, Int32, Int32, Int32, Int32, Single) Declaration public Sprite(int atlas, int x, int y, int width, int height, float pixelRatio) Parameters Type Name Description System.Int32 atlas System.Int32 x System.Int32 y System.Int32 width System.Int32 height System.Single pixelRatio Properties | Improve this Doc View Source Atlas Declaration public int Atlas { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Data Declaration public object Data { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Height Declaration public int Height { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PixelRatio Declaration public float PixelRatio { get; } Property Value Type Description System.Single | Improve this Doc View Source Width Declaration public int Width { get; } Property Value Type Description System.Int32 | Improve this Doc View Source X Declaration public int X { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y { get; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.Styles.Size.html": {
    "href": "api/Mapsui.Styles.Size.html",
    "title": "Class Size",
    "keywords": "Class Size Inheritance System.Object Size Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Size : object Constructors | Improve this Doc View Source Size() Declaration public Size() | Improve this Doc View Source Size(Size) Declaration public Size(Size size) Parameters Type Name Description Size size | Improve this Doc View Source Size(Double, Double) Declaration public Size(double width, double height) Parameters Type Name Description System.Double width System.Double height Properties | Improve this Doc View Source Height Declaration public double Height { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Width Declaration public double Width { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Styles.PenStyle.html": {
    "href": "api/Mapsui.Styles.PenStyle.html",
    "title": "Enum PenStyle",
    "keywords": "Enum PenStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStyle : int Fields Name Description Dash DashDot DashDotDot Dot LongDash LongDashDot ShortDash ShortDashDot ShortDashDotDot ShortDot Solid UserDefined Extension Methods PenStyleExtension.ToSkia(Single, Single[])"
  },
  "api/Mapsui.Styles.PenStrokeCap.html": {
    "href": "api/Mapsui.Styles.PenStrokeCap.html",
    "title": "Enum PenStrokeCap",
    "keywords": "Enum PenStrokeCap Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStrokeCap : int Fields Name Description Butt Round Square Extension Methods PenStrokeCapExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.Pen.html": {
    "href": "api/Mapsui.Styles.Pen.html",
    "title": "Class Pen",
    "keywords": "Class Pen Inheritance System.Object Pen Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Pen : object Constructors | Improve this Doc View Source Pen() Declaration public Pen() | Improve this Doc View Source Pen(Color, Double) Declaration public Pen(Color color, double width = null) Parameters Type Name Description Color color System.Double width Properties | Improve this Doc View Source Color Color of line Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source DashArray Array for drawing user defined dashes. Should be even and values are multiplied by line width before drawing. Declaration public float[] DashArray { get; set; } Property Value Type Description System.Single [] | Improve this Doc View Source PenStrokeCap Defines the end of a line Declaration public PenStrokeCap PenStrokeCap { get; set; } Property Value Type Description PenStrokeCap | Improve this Doc View Source PenStyle Style of the line (solid/dashed), which is drawn Declaration public PenStyle PenStyle { get; set; } Property Value Type Description PenStyle | Improve this Doc View Source StrokeJoin Defines how line parts are join together Declaration public StrokeJoin StrokeJoin { get; set; } Property Value Type Description StrokeJoin | Improve this Doc View Source StrokeMiterLimit Defines up to which width of line StrokeJoin is used Declaration public float StrokeMiterLimit { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Width Width of line Declaration public double Width { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Pen) Declaration public bool Equals(Pen pen) Parameters Type Name Description Pen pen Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(Pen, Pen) Declaration public static bool operator ==(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Pen, Pen) Declaration public static bool operator !=(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.Offset.html": {
    "href": "api/Mapsui.Styles.Offset.html",
    "title": "Class Offset",
    "keywords": "Class Offset Inheritance System.Object Offset Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Offset : object Constructors | Improve this Doc View Source Offset() Offset of images from the center of the image. If IsRelative, than the offset is between -0.5 and +0.5. Declaration public Offset() | Improve this Doc View Source Offset(Offset, Boolean) Declaration public Offset(Offset offset, bool isRelative = false) Parameters Type Name Description Offset offset System.Boolean isRelative | Improve this Doc View Source Offset(Double, Double, Boolean) Declaration public Offset(double x, double y, bool isRelative = false) Parameters Type Name Description System.Double x System.Double y System.Boolean isRelative Properties | Improve this Doc View Source IsRelative Declaration public bool IsRelative { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Offset) Declaration public bool Equals(Offset offset) Parameters Type Name Description Offset offset Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(Offset, Offset) Declaration public static bool operator ==(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Offset, Offset) Declaration public static bool operator !=(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.LabelStyle.html": {
    "href": "api/Mapsui.Styles.LabelStyle.html",
    "title": "Class LabelStyle",
    "keywords": "Class LabelStyle Defines a style used for rendering labels Inheritance System.Object Style LabelStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class LabelStyle : Style, IStyle Constructors | Improve this Doc View Source LabelStyle() Declaration public LabelStyle() | Improve this Doc View Source LabelStyle(LabelStyle) Declaration public LabelStyle(LabelStyle labelStyle) Parameters Type Name Description LabelStyle labelStyle Properties | Improve this Doc View Source BackColor The background color of the label. Set to transparent brush or null if background isn't needed Declaration public Brush BackColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source CollisionDetection Gets or sets whether Collision Detection is enabled for the labels. If set to true, label collision will be tested. Declaration public bool CollisionDetection { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Font Label Font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Halo Creates a halo around the text Declaration public Pen Halo { get; set; } Property Value Type Description Pen | Improve this Doc View Source HorizontalAlignment The horisontal alignment of the text in relation to the labelpoint Declaration public LabelStyle.HorizontalAlignmentEnum HorizontalAlignment { get; set; } Property Value Type Description LabelStyle.HorizontalAlignmentEnum | Improve this Doc View Source LabelColumn The column of the feature used by GetLabelText to return the label text. Declaration public string LabelColumn { get; set; } Property Value Type Description System.String Remarks Used only when LabelMethod is not set. Overrides use of the Text field. | Improve this Doc View Source LabelMethod Method used by GetLabelText to return the label text. Declaration public Func<IFeature, string> LabelMethod { get; set; } Property Value Type Description Func < IFeature , System.String > Remarks Overrides use of Text and LabelColumn fields. | Improve this Doc View Source LineHeight Space from one text line to next text line in em Declaration public double LineHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MaxWidth Maximum width of text in em. If text is wider than this, text is shorten or word wrapped regarding WordWrap. Declaration public double MaxWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Offset Specifies relative position of labels with respect to objects label point Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Improve this Doc View Source Text The text used for this specific label. Declaration public string Text { set; } Property Value Type Description System.String Remarks Used only when LabelColumn and LabelMethod are not set. | Improve this Doc View Source VerticalAlignment The horisontal alignment of the text in relation to the labelpoint Declaration public LabelStyle.VerticalAlignmentEnum VerticalAlignment { get; set; } Property Value Type Description LabelStyle.VerticalAlignmentEnum | Improve this Doc View Source WordWrap Line break mode for text, if width is bigger than MaxWidth Declaration public LabelStyle.LineBreakMode WordWrap { get; set; } Property Value Type Description LabelStyle.LineBreakMode Methods | Improve this Doc View Source GetLabelText(IFeature) The text used for this specific label. Declaration public string GetLabelText(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description System.String Implements IStyle"
  },
  "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html",
    "title": "Enum LabelStyle.VerticalAlignmentEnum",
    "keywords": "Enum LabelStyle.VerticalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum VerticalAlignmentEnum : short Fields Name Description Bottom Left oriented Center Centered Top Right oriented"
  },
  "api/Mapsui.Styles.LabelStyle.LineBreakMode.html": {
    "href": "api/Mapsui.Styles.LabelStyle.LineBreakMode.html",
    "title": "Enum LabelStyle.LineBreakMode",
    "keywords": "Enum LabelStyle.LineBreakMode Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum LineBreakMode : short Fields Name Description CharacterWrap Wrap at character boundaries HeadTruncation Truncate the head of text MiddleTruncation Truncate the middle of text. This may be done, for example, by replacing it with an ellipsis NoWrap Do not wrap text TailTruncation Truncate the tail of text WordWrap Wrap at word boundaries"
  },
  "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html",
    "title": "Enum LabelStyle.HorizontalAlignmentEnum",
    "keywords": "Enum LabelStyle.HorizontalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum HorizontalAlignmentEnum : short Fields Name Description Center Centered Left Left oriented Right Right oriented"
  },
  "api/Mapsui.Styles.IStyle.html": {
    "href": "api/Mapsui.Styles.IStyle.html",
    "title": "Interface IStyle",
    "keywords": "Interface IStyle Defines an interface for defining layer styles Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IStyle Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Gets or sets the objects overall opacity Declaration float Opacity { get; set; } Property Value Type Description System.Single"
  },
  "api/Mapsui.Rendering.Xaml.StyleConverter.html": {
    "href": "api/Mapsui.Rendering.Xaml.StyleConverter.html",
    "title": "Class StyleConverter",
    "keywords": "Class StyleConverter Inheritance System.Object StyleConverter Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class StyleConverter : object Methods | Improve this Doc View Source MapsuiBrushToXaml(Brush, SymbolCache, Double) Declaration public static Windows.Media.Brush MapsuiBrushToXaml(Brush brush, SymbolCache symbolCache = null, double rotate = null) Parameters Type Name Description Brush brush SymbolCache symbolCache System.Double rotate Returns Type Description System.Windows.Media.Brush | Improve this Doc View Source MapsuiPentoXaml(PenStyle, Single[]) Declaration public static DoubleCollection MapsuiPentoXaml(PenStyle penStyle, float[] dashArray = null) Parameters Type Name Description PenStyle penStyle System.Single [] dashArray Returns Type Description DoubleCollection | Improve this Doc View Source MapsuiStrokeCaptoPenLineCap(PenStrokeCap) Declaration public static PenLineCap MapsuiStrokeCaptoPenLineCap(PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description PenLineCap | Improve this Doc View Source MapsuiStrokeJointoPenLineJoin(StrokeJoin) Declaration public static PenLineJoin MapsuiStrokeJointoPenLineJoin(StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description PenLineJoin"
  },
  "api/Mapsui.Rendering.Xaml.StreamExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance System.Object StreamExtensions Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class StreamExtensions : object Methods | Improve this Doc View Source ToBitmapImage(Stream) Declaration public static BitmapImage ToBitmapImage(this Stream imageData) Parameters Type Name Description Stream imageData Returns Type Description BitmapImage"
  },
  "api/Mapsui.Rendering.Xaml.RectExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.RectExtensions.html",
    "title": "Class RectExtensions",
    "keywords": "Class RectExtensions Inheritance System.Object RectExtensions Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class RectExtensions : object Methods | Improve this Doc View Source ToMapsui(Rect) Declaration public static BoundingBox ToMapsui(this Rect rect) Parameters Type Name Description Rect rect Returns Type Description BoundingBox"
  },
  "api/Mapsui.Rendering.Xaml.HorizontaltExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.HorizontaltExtensions.html",
    "title": "Class HorizontaltExtensions",
    "keywords": "Class HorizontaltExtensions Inheritance System.Object HorizontaltExtensions Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class HorizontaltExtensions : object Methods | Improve this Doc View Source ToXaml(HorizontalAlignment) Declaration public static HorizontalAlignment ToXaml(this HorizontalAlignment horizontalAlignment) Parameters Type Name Description HorizontalAlignment horizontalAlignment Returns Type Description HorizontalAlignment"
  },
  "api/Mapsui.Rendering.Xaml.GeometryRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.GeometryRenderer.html",
    "title": "Class GeometryRenderer",
    "keywords": "Class GeometryRenderer Inheritance System.Object GeometryRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class GeometryRenderer : object Methods | Improve this Doc View Source CounterScaleLineWidth(UIElement, Double) Declaration public static void CounterScaleLineWidth(UIElement renderedGeometry, double resolution) Parameters Type Name Description UIElement renderedGeometry System.Double resolution | Improve this Doc View Source CreateTransformMatrix(IReadOnlyViewport) Declaration public static Windows.Media.Matrix CreateTransformMatrix(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Returns Type Description System.Windows.Media.Matrix | Improve this Doc View Source CreateTransformMatrix(IReadOnlyViewport, Point) Declaration public static Windows.Media.Matrix CreateTransformMatrix(IReadOnlyViewport viewport, Point point) Parameters Type Name Description IReadOnlyViewport viewport Point point Returns Type Description System.Windows.Media.Matrix | Improve this Doc View Source PositionGeometry(Windows.Shapes.Shape, IReadOnlyViewport) Declaration public static void PositionGeometry(Windows.Shapes.Shape renderedGeometry, IReadOnlyViewport viewport) Parameters Type Name Description System.Windows.Shapes.Shape renderedGeometry IReadOnlyViewport viewport | Improve this Doc View Source PositionRaster(UIElement, BoundingBox, IReadOnlyViewport) Declaration public static void PositionRaster(UIElement renderedGeometry, BoundingBox boundingBox, IReadOnlyViewport viewport) Parameters Type Name Description UIElement renderedGeometry BoundingBox boundingBox IReadOnlyViewport viewport | Improve this Doc View Source RenderMultiPoint(MultiPoint, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Windows.Shapes.Shape RenderMultiPoint(MultiPoint multiPoint, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description MultiPoint multiPoint IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape | Improve this Doc View Source RenderRaster(IRaster, IStyle, IReadOnlyViewport) Declaration public static Windows.Shapes.Path RenderRaster(IRaster raster, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description IRaster raster IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RoundToPixel(Rect) Declaration public static Rect RoundToPixel(Rect dest) Parameters Type Name Description Rect dest Returns Type Description Rect"
  },
  "api/Mapsui.Rendering.Xaml.BitmapRendering.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapRendering.html",
    "title": "Namespace Mapsui.Rendering.Xaml.BitmapRendering",
    "keywords": "Namespace Mapsui.Rendering.Xaml.BitmapRendering Classes BitmapConverter"
  },
  "api/Mapsui.Rendering.Xaml.BitmapRendering.BitmapConverter.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapRendering.BitmapConverter.html",
    "title": "Class BitmapConverter",
    "keywords": "Class BitmapConverter Inheritance System.Object BitmapConverter Namespace : Mapsui.Rendering.Xaml.BitmapRendering Assembly : Mapsui.Rendering.Xaml.dll Syntax public class BitmapConverter : object Methods | Improve this Doc View Source ToBitmapStream(UIElement, Double, Double) Declaration public static MemoryStream ToBitmapStream(UIElement uiElement, double width, double height) Parameters Type Name Description UIElement uiElement System.Double width System.Double height Returns Type Description MemoryStream"
  },
  "api/Mapsui.Rendering.Xaml.BitmapImageExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapImageExtensions.html",
    "title": "Class BitmapImageExtensions",
    "keywords": "Class BitmapImageExtensions Inheritance System.Object BitmapImageExtensions Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class BitmapImageExtensions : object Methods | Improve this Doc View Source ToImageBrush(ImageSource) Declaration public static Brush ToImageBrush(this ImageSource bitmapImage) Parameters Type Name Description ImageSource bitmapImage Returns Type Description Brush | Improve this Doc View Source ToTiledImageBrush(BitmapImage) Declaration public static ImageBrush ToTiledImageBrush(this BitmapImage bitmapImage) Parameters Type Name Description BitmapImage bitmapImage Returns Type Description ImageBrush"
  },
  "api/Mapsui.Rendering.VisibleFeatureIterator.html": {
    "href": "api/Mapsui.Rendering.VisibleFeatureIterator.html",
    "title": "Class VisibleFeatureIterator",
    "keywords": "Class VisibleFeatureIterator Inheritance System.Object VisibleFeatureIterator Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class VisibleFeatureIterator : object Methods | Improve this Doc View Source IterateLayers(IReadOnlyViewport, IEnumerable<ILayer>, Action<IReadOnlyViewport, IStyle, IFeature, Single>) Declaration public static void IterateLayers(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Action<IReadOnlyViewport, IStyle, IFeature, float> callback) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Action < IReadOnlyViewport , IStyle , IFeature , System.Single > callback"
  },
  "api/Mapsui.Rendering.Skia.html": {
    "href": "api/Mapsui.Rendering.Skia.html",
    "title": "Namespace Mapsui.Rendering.Skia",
    "keywords": "Namespace Mapsui.Rendering.Skia Classes BitmapHelper BitmapInfo BoundingBoxExtensions ClippingExtension IdentityComparer<T> LabelRenderer LineStringRenderer MapRenderer MultiLineStringRenderer MultiPointRenderer MultiPolygonRenderer PenStrokeCapExtensions PenStrokeJoinExtensions PenStyleExtension RasterRenderer SkiaExtensions SymbolCache ViewportExtensions Enums BitmapType Intersection Type of intersection"
  },
  "api/Mapsui.Rendering.Skia.ViewportExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.ViewportExtensions.html",
    "title": "Class ViewportExtensions",
    "keywords": "Class ViewportExtensions Inheritance System.Object ViewportExtensions Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ViewportExtensions : object Methods | Improve this Doc View Source ToSKMatrix(IViewport) Declaration public static SKMatrix ToSKMatrix(this IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description SKMatrix"
  },
  "api/Mapsui.Rendering.Skia.SymbolCache.html": {
    "href": "api/Mapsui.Rendering.Skia.SymbolCache.html",
    "title": "Class SymbolCache",
    "keywords": "Class SymbolCache Inheritance System.Object SymbolCache Implements ISymbolCache Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SymbolCache : object, ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration public BitmapInfo GetOrCreate(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description BitmapInfo | Improve this Doc View Source GetSize(Int32) Declaration public Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size Implements ISymbolCache"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance System.Object ZoomInOutWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ZoomInOutWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaWidgets",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaWidgets Classes HyperlinkWidgetRenderer ScaleBarWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer Interfaces ISkiaWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance System.Object WidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public static class WidgetRenderer : object Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>, Single) Declaration public static void Render(object target, IReadOnlyViewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renders, float layerOpacity) Parameters Type Name Description System.Object target IReadOnlyViewport viewport IEnumerable < IWidget > widgets IDictionary < Type , IWidgetRenderer > renders System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance System.Object ScaleBarWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ScaleBarWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html",
    "title": "Interface ISkiaWidgetRenderer",
    "keywords": "Interface ISkiaWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public interface ISkiaWidgetRenderer : IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html",
    "title": "Class HyperlinkWidgetRenderer",
    "keywords": "Class HyperlinkWidgetRenderer Inheritance System.Object HyperlinkWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class HyperlinkWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget System.Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaExtensions.html",
    "title": "Class SkiaExtensions",
    "keywords": "Class SkiaExtensions Inheritance System.Object SkiaExtensions Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SkiaExtensions : object Methods | Improve this Doc View Source ToSkia(Color, Single) Declaration public static SKColor ToSkia(this Color color, float layerOpacity) Parameters Type Name Description Color color System.Single layerOpacity Returns Type Description SKColor"
  },
  "api/Mapsui.Rendering.Skia.RasterRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.RasterRenderer.html",
    "title": "Class RasterRenderer",
    "keywords": "Class RasterRenderer Inheritance System.Object RasterRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class RasterRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, Single, IDictionary<Object, BitmapInfo>, Int64) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, float opacity, IDictionary<object, BitmapInfo> tileCache, long currentIteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature System.Single opacity IDictionary < System.Object , BitmapInfo > tileCache System.Int64 currentIteration"
  },
  "api/Mapsui.Rendering.Skia.PenStyleExtension.html": {
    "href": "api/Mapsui.Rendering.Skia.PenStyleExtension.html",
    "title": "Class PenStyleExtension",
    "keywords": "Class PenStyleExtension Inheritance System.Object PenStyleExtension Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStyleExtension : object Methods | Improve this Doc View Source ToSkia(PenStyle, Single, Single[]) Declaration public static SKPathEffect ToSkia(this PenStyle penStyle, float width, float[] dashArray = null) Parameters Type Name Description PenStyle penStyle System.Single width System.Single [] dashArray Returns Type Description SKPathEffect"
  },
  "api/Mapsui.Rendering.Skia.PenStrokeJoinExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.PenStrokeJoinExtensions.html",
    "title": "Class PenStrokeJoinExtensions",
    "keywords": "Class PenStrokeJoinExtensions Inheritance System.Object PenStrokeJoinExtensions Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeJoinExtensions : object Methods | Improve this Doc View Source ToSkia(StrokeJoin) Declaration public static SKStrokeJoin ToSkia(this StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description SKStrokeJoin"
  },
  "api/Mapsui.Rendering.Skia.PenStrokeCapExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.PenStrokeCapExtensions.html",
    "title": "Class PenStrokeCapExtensions",
    "keywords": "Class PenStrokeCapExtensions Inheritance System.Object PenStrokeCapExtensions Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeCapExtensions : object Methods | Improve this Doc View Source ToSkia(PenStrokeCap) Declaration public static SKStrokeCap ToSkia(this PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description SKStrokeCap"
  },
  "api/Mapsui.Rendering.Skia.MultiPolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiPolygonRenderer.html",
    "title": "Class MultiPolygonRenderer",
    "keywords": "Class MultiPolygonRenderer Inheritance System.Object MultiPolygonRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiPolygonRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, IGeometry, Single, SymbolCache) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, IGeometry geometry, float opacity, SymbolCache symbolCache = null) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature IGeometry geometry System.Single opacity SymbolCache symbolCache"
  },
  "api/Mapsui.Rendering.Skia.MultiPointRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiPointRenderer.html",
    "title": "Class MultiPointRenderer",
    "keywords": "Class MultiPointRenderer Inheritance System.Object MultiPointRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiPointRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, IGeometry, SymbolCache, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, IGeometry geometry, SymbolCache symbolCache, float opacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature IGeometry geometry SymbolCache symbolCache System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MultiLineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MultiLineStringRenderer.html",
    "title": "Class MultiLineStringRenderer",
    "keywords": "Class MultiLineStringRenderer Inheritance System.Object MultiLineStringRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MultiLineStringRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, IGeometry, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, IGeometry geometry, float opacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature IGeometry geometry System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MapRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance System.Object MapRenderer Implements IRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class MapRenderer : object, IRenderer Constructors | Improve this Doc View Source MapRenderer() Declaration public MapRenderer() Properties | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration public IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description IDictionary < Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration public void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport IEnumerable < ILayer > layers IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color) Declaration public MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Color background Returns Type Description MemoryStream Implements IRenderer"
  },
  "api/Mapsui.Rendering.Skia.LineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance System.Object LineStringRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class LineStringRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IStyle, IFeature, IGeometry, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IStyle style, IFeature feature, IGeometry geometry, float opacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IStyle style IFeature feature IGeometry geometry System.Single opacity"
  },
  "api/Mapsui.Rendering.Skia.LabelRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LabelRenderer.html",
    "title": "Class LabelRenderer",
    "keywords": "Class LabelRenderer Inheritance System.Object LabelRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class LabelRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, LabelStyle, IFeature, Single, Single, Single) Declaration public static void Draw(SKCanvas canvas, LabelStyle style, IFeature feature, float x, float y, float layerOpacity) Parameters Type Name Description SKCanvas canvas LabelStyle style IFeature feature System.Single x System.Single y System.Single layerOpacity | Improve this Doc View Source DrawAsBitmap(SKCanvas, LabelStyle, IFeature, Single, Single, Single) Declaration public static void DrawAsBitmap(SKCanvas canvas, LabelStyle style, IFeature feature, float x, float y, float layerOpacity) Parameters Type Name Description SKCanvas canvas LabelStyle style IFeature feature System.Single x System.Single y System.Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.Intersection.html": {
    "href": "api/Mapsui.Rendering.Skia.Intersection.html",
    "title": "Enum Intersection",
    "keywords": "Enum Intersection Type of intersection Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public enum Intersection : int Fields Name Description Both CompleteInside CompleteOutside FirstInside SecondInside Unknown"
  },
  "api/Mapsui.Rendering.Skia.IdentityComparer-1.html": {
    "href": "api/Mapsui.Rendering.Skia.IdentityComparer-1.html",
    "title": "Class IdentityComparer<T>",
    "keywords": "Class IdentityComparer<T> Inheritance System.Object IdentityComparer<T> Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class IdentityComparer<T> : IEqualityComparer<T> where T : class Type Parameters Name Description T Methods | Improve this Doc View Source Equals(T, T) Declaration public bool Equals(T obj, T otherObj) Parameters Type Name Description T obj T otherObj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(T) Declaration public int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description System.Int32"
  },
  "api/Mapsui.Rendering.Skia.ClippingExtension.html": {
    "href": "api/Mapsui.Rendering.Skia.ClippingExtension.html",
    "title": "Class ClippingExtension",
    "keywords": "Class ClippingExtension Inheritance System.Object ClippingExtension Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ClippingExtension : object Methods | Improve this Doc View Source ToSkiaPath(IEnumerable<Point>, IReadOnlyViewport, SKRect) Converts a LineString (list of Mapsui points) in world coordinates to a Skia path Declaration public static SKPath ToSkiaPath(this IEnumerable<Point> lineString, IReadOnlyViewport viewport, SKRect clipRect) Parameters Type Name Description IEnumerable < Point > lineString List of points in Mapsui world coordinates IReadOnlyViewport viewport Viewport implementation SKRect clipRect Rectangle to clip to. All lines outside aren't drawn. Returns Type Description SKPath | Improve this Doc View Source ToSkiaPath(Polygon, IReadOnlyViewport, SKRect, Single) Converts a Polygon into a SKPath, that is clipped to cliptRect, where exterior is bigger than interior Declaration public static SKPath ToSkiaPath(this Polygon polygon, IReadOnlyViewport viewport, SKRect clipRect, float strokeWidth) Parameters Type Name Description Polygon polygon Polygon to convert IReadOnlyViewport viewport Viewport implementation SKRect clipRect Rectangle to clip to. All lines outside aren't drawn. System.Single strokeWidth StrokeWidth for inflating cliptRect Returns Type Description SKPath"
  },
  "api/Mapsui.Rendering.Skia.BoundingBoxExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.BoundingBoxExtensions.html",
    "title": "Class BoundingBoxExtensions",
    "keywords": "Class BoundingBoxExtensions Inheritance System.Object BoundingBoxExtensions Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class BoundingBoxExtensions : object Methods | Improve this Doc View Source ToSkia(BoundingBox) Declaration public static SKRect ToSkia(this BoundingBox boundingBox) Parameters Type Name Description BoundingBox boundingBox Returns Type Description SKRect"
  },
  "api/Mapsui.Rendering.Skia.BitmapType.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapType.html",
    "title": "Enum BitmapType",
    "keywords": "Enum BitmapType Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public enum BitmapType : int Fields Name Description Bitmap Sprite Svg"
  },
  "api/Mapsui.Rendering.Skia.BitmapInfo.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapInfo.html",
    "title": "Class BitmapInfo",
    "keywords": "Class BitmapInfo Inheritance System.Object BitmapInfo Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class BitmapInfo : object Properties | Improve this Doc View Source Bitmap Declaration public SKImage Bitmap { get; set; } Property Value Type Description SKImage | Improve this Doc View Source Height Declaration public float Height { get; } Property Value Type Description System.Single | Improve this Doc View Source IterationUsed Declaration public long IterationUsed { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Sprite Declaration public Sprite Sprite { get; set; } Property Value Type Description Sprite | Improve this Doc View Source Svg Declaration public SkiaSharp.Extended.Svg.SKSvg Svg { get; set; } Property Value Type Description SkiaSharp.Extended.Svg.SKSvg | Improve this Doc View Source Type Declaration public BitmapType Type { get; } Property Value Type Description BitmapType | Improve this Doc View Source Width Declaration public float Width { get; } Property Value Type Description System.Single"
  },
  "api/Mapsui.Rendering.Skia.BitmapHelper.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapHelper.html",
    "title": "Class BitmapHelper",
    "keywords": "Class BitmapHelper Inheritance System.Object BitmapHelper Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class BitmapHelper : object Methods | Improve this Doc View Source LoadBitmap(Object) Declaration public static BitmapInfo LoadBitmap(object bitmapStream) Parameters Type Name Description System.Object bitmapStream Returns Type Description BitmapInfo | Improve this Doc View Source RenderBitmap(SKCanvas, SKImage, SKRect, Single) Declaration public static void RenderBitmap(SKCanvas canvas, SKImage bitmap, SKRect rect, float opacity = 1F) Parameters Type Name Description SKCanvas canvas SKImage bitmap SKRect rect System.Single opacity | Improve this Doc View Source RenderBitmap(SKCanvas, SKImage, Single, Single, Single, Single, Single, LabelStyle.HorizontalAlignmentEnum, LabelStyle.VerticalAlignmentEnum, Single, Single) Declaration public static void RenderBitmap(SKCanvas canvas, SKImage bitmap, float x, float y, float rotation = null, float offsetX = null, float offsetY = null, LabelStyle.HorizontalAlignmentEnum horizontalAlignment = default(LabelStyle.HorizontalAlignmentEnum), LabelStyle.VerticalAlignmentEnum verticalAlignment = default(LabelStyle.VerticalAlignmentEnum), float opacity = 1F, float scale = 1F) Parameters Type Name Description SKCanvas canvas SKImage bitmap System.Single x System.Single y System.Single rotation System.Single offsetX System.Single offsetY LabelStyle.HorizontalAlignmentEnum horizontalAlignment LabelStyle.VerticalAlignmentEnum verticalAlignment System.Single opacity System.Single scale | Improve this Doc View Source RenderRaster(SKCanvas, SKImage, SKRect, Single) Declaration public static void RenderRaster(SKCanvas canvas, SKImage bitmap, SKRect rect, float layerOpacity) Parameters Type Name Description SKCanvas canvas SKImage bitmap SKRect rect System.Single layerOpacity | Improve this Doc View Source RenderSvg(SKCanvas, SkiaSharp.Extended.Svg.SKSvg, Single, Single, Single, Single, Single, LabelStyle.HorizontalAlignmentEnum, LabelStyle.VerticalAlignmentEnum, Single, Single) Declaration public static void RenderSvg(SKCanvas canvas, SkiaSharp.Extended.Svg.SKSvg svg, float x, float y, float orientation = null, float offsetX = null, float offsetY = null, LabelStyle.HorizontalAlignmentEnum horizontalAlignment = default(LabelStyle.HorizontalAlignmentEnum), LabelStyle.VerticalAlignmentEnum verticalAlignment = default(LabelStyle.VerticalAlignmentEnum), float opacity = 1F, float scale = 1F) Parameters Type Name Description SKCanvas canvas SkiaSharp.Extended.Svg.SKSvg svg System.Single x System.Single y System.Single orientation System.Single offsetX System.Single offsetY LabelStyle.HorizontalAlignmentEnum horizontalAlignment LabelStyle.VerticalAlignmentEnum verticalAlignment System.Single opacity System.Single scale"
  },
  "api/Mapsui.Rendering.RenderGetStrategy.html": {
    "href": "api/Mapsui.Rendering.RenderGetStrategy.html",
    "title": "Class RenderGetStrategy",
    "keywords": "Class RenderGetStrategy Inheritance System.Object RenderGetStrategy Implements IRenderGetStrategy Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class RenderGetStrategy : object, IRenderGetStrategy Methods | Improve this Doc View Source GetFeatures(BoundingBox, Double, ITileSchema, ITileCache<Feature>) Declaration public IList<IFeature> GetFeatures(BoundingBox extent, double resolution, ITileSchema schema, ITileCache<Feature> memoryCache) Parameters Type Name Description BoundingBox extent System.Double resolution ITileSchema schema ITileCache < Feature > memoryCache Returns Type Description IList < IFeature > | Improve this Doc View Source GetRecursive(IDictionary<TileIndex, IFeature>, ITileSchema, ITileCache<Feature>, Extent, String) Declaration public static void GetRecursive(IDictionary<TileIndex, IFeature> resultTiles, ITileSchema schema, ITileCache<Feature> cache, Extent extent, string levelId) Parameters Type Name Description IDictionary < TileIndex , IFeature > resultTiles ITileSchema schema ITileCache < Feature > cache Extent extent System.String levelId Implements IRenderGetStrategy"
  },
  "api/Mapsui.Rendering.RenderException.html": {
    "href": "api/Mapsui.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance System.Object RenderException Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class RenderException : Exception Constructors | Improve this Doc View Source RenderException() Exception thrown when layer rendering has failed Declaration public RenderException() | Improve this Doc View Source RenderException(String) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source RenderException(String, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description System.String message Exception inner"
  },
  "api/Mapsui.Rendering.MinimalRenderGetStrategy.html": {
    "href": "api/Mapsui.Rendering.MinimalRenderGetStrategy.html",
    "title": "Class MinimalRenderGetStrategy",
    "keywords": "Class MinimalRenderGetStrategy Inheritance System.Object MinimalRenderGetStrategy Implements IRenderGetStrategy Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class MinimalRenderGetStrategy : object, IRenderGetStrategy Methods | Improve this Doc View Source GetFeatures(BoundingBox, Double, ITileSchema, ITileCache<Feature>) Declaration public IList<IFeature> GetFeatures(BoundingBox extent, double resolution, ITileSchema schema, ITileCache<Feature> memoryCache) Parameters Type Name Description BoundingBox extent System.Double resolution ITileSchema schema ITileCache < Feature > memoryCache Returns Type Description IList < IFeature > Implements IRenderGetStrategy"
  },
  "api/Mapsui.Rendering.ISymbolCache.html": {
    "href": "api/Mapsui.Rendering.ISymbolCache.html",
    "title": "Interface ISymbolCache",
    "keywords": "Interface ISymbolCache Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface ISymbolCache Methods | Improve this Doc View Source GetSize(Int32) Declaration Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsEqualToFilter_FE1_1_0 class. Declaration public PropertyIsEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html",
    "title": "Class PropertyIsBetweenFilter_FE1_1_0",
    "keywords": "Class PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsBetweenFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsBetweenFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsBetweenFilter_FE1_1_0(String, String, String) Initializes a new instance of the PropertyIsBetweenFilter_FE1_1_0 class. Declaration public PropertyIsBetweenFilter_FE1_1_0(string propertyName, string lowerBoundary, string upperBoundary) Parameters Type Name Description System.String propertyName System.String lowerBoundary System.String upperBoundary Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html",
    "title": "Class OGCFilterCollection",
    "keywords": "Class OGCFilterCollection This class hosts a collection of instances implementing IFilter . Inheritance System.Object OGCFilterCollection Implements IFilter Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class OGCFilterCollection : object, IFilter Constructors | Improve this Doc View Source OGCFilterCollection() Initializes a new instance of the OGCFilterCollection class. Declaration public OGCFilterCollection() Properties | Improve this Doc View Source Filters Gets and sets a collection of instances implementing IFilter . Declaration public List<IFilter> Filters { get; set; } Property Value Type Description List < IFilter > | Improve this Doc View Source Junctor Gets and sets the operator for combining the filters. Declaration public OGCFilterCollection.JunctorEnum Junctor { get; set; } Property Value Type Description OGCFilterCollection.JunctorEnum Methods | Improve this Doc View Source AddFilter(IFilter) This method adds an instance implementing IFilter . Declaration public void AddFilter(IFilter filter) Parameters Type Name Description IFilter filter | Improve this Doc View Source AddFilterCollection(OGCFilterCollection) This method adds an instance of OGCFilterCollection . Declaration public void AddFilterCollection(OGCFilterCollection filterCollection) Parameters Type Name Description OGCFilterCollection filterCollection | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.StackedLabelProvider.html": {
    "href": "api/Mapsui.Providers.StackedLabelProvider.html",
    "title": "Class StackedLabelProvider",
    "keywords": "Class StackedLabelProvider Inheritance System.Object StackedLabelProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class StackedLabelProvider : object, IProvider Constructors | Improve this Doc View Source StackedLabelProvider(IProvider, LabelStyle, Pen, Brush) Declaration public StackedLabelProvider(IProvider provider, LabelStyle labelStyle, Pen rectangleLine = null, Brush rectangleFill = null) Parameters Type Name Description IProvider provider LabelStyle labelStyle Pen rectangleLine Brush rectangleFill Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Implements IProvider"
  },
  "api/Mapsui.Providers.MemoryProvider.html": {
    "href": "api/Mapsui.Providers.MemoryProvider.html",
    "title": "Class MemoryProvider",
    "keywords": "Class MemoryProvider Datasource for storing a limited set of geometries. Inheritance System.Object MemoryProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class MemoryProvider : object, IProvider Remarks The MemoryProvider doesn’t utilize performance optimizations of spatial indexing, and thus is primarily meant for rendering a limited set of Geometries. A common use of the MemoryProvider is for highlighting a set of selected features. The following example gets data within a BoundingBox of another datasource and adds it to the map. List<Geometry> geometries = myMap.Layers[0].DataSource.GetGeometriesInView(myBox); VectorLayer laySelected = new VectorLayer(\"Selected Features\"); laySelected.DataSource = new MemoryProvider(geometries); laySelected.Style.Outline = new Pen(Color.Magenta, 3f); laySelected.Style.EnableOutline = true; myMap.Layers.Add(laySelected); Adding points of interest to the map. This is useful for vehicle tracking etc. List<Mapsui.Geometries.Geometry> geometries = new List<Mapsui.Geometries.Geometry>(); //Add two points geometries.Add(new Mapsui.Geometries.Point(23.345,64.325)); geometries.Add(new Mapsui.Geometries.Point(23.879,64.194)); Mapsui.Layers.VectorLayer layerVehicles = new Mapsui.Layers.VectorLayer(\"Vechicles\"); layerVehicles.DataSource = new Mapsui.Data.Providers.MemoryProvider(geometries); layerVehicles.Style.Symbol = Bitmap.FromFile(@\"C:\\data\\car.gif\"); myMap.Layers.Add(layerVehicles); Constructors | Improve this Doc View Source MemoryProvider() Declaration public MemoryProvider() | Improve this Doc View Source MemoryProvider(IEnumerable<IGeometry>) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IEnumerable<IGeometry> geometries) Parameters Type Name Description IEnumerable < IGeometry > geometries Set of geometries that this datasource should contain | Improve this Doc View Source MemoryProvider(IEnumerable<IFeature>) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Features to be included in this datasource | Improve this Doc View Source MemoryProvider(Geometry) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(Geometry geometry) Parameters Type Name Description Geometry geometry Geometry to be in this datasource | Improve this Doc View Source MemoryProvider(IFeature) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IFeature feature) Parameters Type Name Description IFeature feature Feature to be in this datasource | Improve this Doc View Source MemoryProvider(Byte[]) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(byte[] wellKnownBinaryGeometry) Parameters Type Name Description System.Byte [] wellKnownBinaryGeometry Geometry as Well-known Binary to be included in this datasource | Improve this Doc View Source MemoryProvider(String) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(string wellKnownTextGeometry) Parameters Type Name Description System.String wellKnownTextGeometry Geometry as Well-known Text to be included in this datasource Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Features Gets or sets the geometries this datasource contains Declaration public IReadOnlyList<IFeature> Features { get; } Property Value Type Description IReadOnlyList < IFeature > | Improve this Doc View Source SymbolSize Declaration public double SymbolSize { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(Object, String) Declaration public IFeature Find(object value, string primaryKey) Parameters Type Name Description System.Object value System.String primaryKey Returns Type Description IFeature | Improve this Doc View Source GetExtents() Boundingbox of dataset Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox boundingbox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public virtual IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source ReplaceFeatures(IEnumerable<IFeature>) Declaration public void ReplaceFeatures(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Implements IProvider"
  },
  "api/Mapsui.Providers.IProvider.html": {
    "href": "api/Mapsui.Providers.IProvider.html",
    "title": "Interface IProvider",
    "keywords": "Interface IProvider Interface for data providers Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProvider Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() BoundingBox of dataset Declaration BoundingBox GetExtents() Returns Type Description BoundingBox boundingbox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature >"
  },
  "api/Mapsui.Providers.IProjectingProvider.html": {
    "href": "api/Mapsui.Providers.IProjectingProvider.html",
    "title": "Interface IProjectingProvider",
    "keywords": "Interface IProjectingProvider Inherited Members IProvider.CRS IProvider.GetFeaturesInView(BoundingBox, Double) IProvider.GetExtents() Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProjectingProvider : IProvider Methods | Improve this Doc View Source IsCrsSupported(String) Queries whether a provider supports projection to a certain CRS. Declaration bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown"
  },
  "api/Mapsui.Providers.IFeatures.html": {
    "href": "api/Mapsui.Providers.IFeatures.html",
    "title": "Interface IFeatures",
    "keywords": "Interface IFeatures Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IFeatures : IEnumerable<IFeature> Properties | Improve this Doc View Source PrimaryKey Declaration string PrimaryKey { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Add(IFeature) Declaration void Add(IFeature feature) Parameters Type Name Description IFeature feature | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source Delete(Object) Declaration void Delete(object id) Parameters Type Name Description System.Object id | Improve this Doc View Source New() Declaration IFeature New() Returns Type Description IFeature"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendEventHandler.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendEventHandler.html",
    "title": "Delegate ArcGISLegendEventHandler",
    "keywords": "Delegate ArcGISLegendEventHandler Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public delegate void ArcGISLegendEventHandler(object sender, ArcGISLegendResponse legendInfo); Parameters Type Name Description System.Object sender ArcGISLegendResponse legendInfo"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGisLegend.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGisLegend.html",
    "title": "Class ArcGisLegend",
    "keywords": "Class ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up Inheritance System.Object ArcGisLegend Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGisLegend : object Constructors | Improve this Doc View Source ArcGisLegend() Declaration public ArcGisLegend() Properties | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetLegendInfo(String, ICredentials) Declaration public ArcGISLegendResponse GetLegendInfo(string serviceUrl, ICredentials credentials = null) Parameters Type Name Description System.String serviceUrl ICredentials credentials Returns Type Description ArcGISLegendResponse | Improve this Doc View Source GetLegendInfoAsync(String, ICredentials) Get the legend for the given mapserver Declaration public void GetLegendInfoAsync(string serviceUrl, ICredentials credentials = null) Parameters Type Name Description System.String serviceUrl Url to the mapserver ICredentials credentials Credentials Events | Improve this Doc View Source LegendFailed Declaration public event ArcGISLegendEventHandler LegendFailed Event Type Type Description ArcGISLegendEventHandler | Improve this Doc View Source LegendReceived Declaration public event ArcGISLegendEventHandler LegendReceived Event Type Type Description ArcGISLegendEventHandler"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLayer.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLayer.html",
    "title": "Class ArcGISLayer",
    "keywords": "Class ArcGISLayer Inheritance System.Object ArcGISLayer Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISLayer : object Properties | Improve this Doc View Source defaultVisibility Declaration public bool defaultVisibility { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source id Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description System.Double | Improve this Doc View Source minScale Declaration public double minScale { get; set; } Property Value Type Description System.Double | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source parentLayerId Declaration public int parentLayerId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source subLayerIds Declaration public int[] subLayerIds { get; set; } Property Value Type Description System.Int32 []"
  },
  "api/Mapsui.Projection.Transformer.html": {
    "href": "api/Mapsui.Projection.Transformer.html",
    "title": "Class Transformer",
    "keywords": "Class Transformer Inheritance System.Object Transformer Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public class Transformer : object Properties | Improve this Doc View Source FromCRS Declaration public string FromCRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source ToCrs Declaration public string ToCrs { get; set; } Property Value Type Description System.String | Improve this Doc View Source Transformation Declaration public ITransformation Transformation { get; set; } Property Value Type Description ITransformation Methods | Improve this Doc View Source Transform(IEnumerable<IFeature>) Declaration public IEnumerable<IFeature> Transform(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source Transform(BoundingBox) Declaration public BoundingBox Transform(BoundingBox extent) Parameters Type Name Description BoundingBox extent Returns Type Description BoundingBox | Improve this Doc View Source TransformBack(IEnumerable<IFeature>) Declaration public IEnumerable<IFeature> TransformBack(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source TransformBack(BoundingBox) Declaration public BoundingBox TransformBack(BoundingBox extent) Parameters Type Name Description BoundingBox extent Returns Type Description BoundingBox"
  },
  "api/Mapsui.Projection.SphericalMercator.html": {
    "href": "api/Mapsui.Projection.SphericalMercator.html",
    "title": "Class SphericalMercator",
    "keywords": "Class SphericalMercator Inheritance System.Object SphericalMercator Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public class SphericalMercator : object Methods | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static Point FromLonLat(double lon, double lat) Parameters Type Name Description System.Double lon System.Double lat Returns Type Description Point | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static Point ToLonLat(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description Point"
  },
  "api/Mapsui.Projection.MinimalTransformation.html": {
    "href": "api/Mapsui.Projection.MinimalTransformation.html",
    "title": "Class MinimalTransformation",
    "keywords": "Class MinimalTransformation A very minimal implementation of ITransformation. It is only capable of projecting between SphericalMercator and WGS84. Inheritance System.Object MinimalTransformation Implements ITransformation Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public class MinimalTransformation : object, ITransformation Constructors | Improve this Doc View Source MinimalTransformation() Declaration public MinimalTransformation() Methods | Improve this Doc View Source IsProjectionSupported(String, String) Declaration public bool? IsProjectionSupported(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Transform(String, String, BoundingBox) Declaration public BoundingBox Transform(string fromCRS, string toCRS, BoundingBox boundingBox) Parameters Type Name Description System.String fromCRS System.String toCRS BoundingBox boundingBox Returns Type Description BoundingBox | Improve this Doc View Source Transform(String, String, IGeometry) Declaration public IGeometry Transform(string fromCRS, string toCRS, IGeometry geometry) Parameters Type Name Description System.String fromCRS System.String toCRS IGeometry geometry Returns Type Description IGeometry Implements ITransformation"
  },
  "api/Mapsui.Projection.Mercator.html": {
    "href": "api/Mapsui.Projection.Mercator.html",
    "title": "Class Mercator",
    "keywords": "Class Mercator Inheritance System.Object Mercator Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public class Mercator : object Methods | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static Point FromLonLat(double lon, double lat) Parameters Type Name Description System.Double lon System.Double lat Returns Type Description Point | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static Point ToLonLat(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description Point"
  },
  "api/Mapsui.Map.html": {
    "href": "api/Mapsui.Map.html",
    "title": "Class Map",
    "keywords": "Class Map Map class Inheritance System.Object Map Implements IMap Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Map : INotifyPropertyChanged, IMap Remarks Map holds all map related infos like transformation, layers, widgets and so on. Constructors | Improve this Doc View Source Map() Initializes a new map Declaration public Map() Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Envelope Gets the extents of the map based on the extents of all the layers in the layers collection Declaration public BoundingBox Envelope { get; } Property Value Type Description BoundingBox Full map extents | Improve this Doc View Source Home Declaration public Action<INavigator> Home { get; set; } Property Value Type Description Action < INavigator > | Improve this Doc View Source HoverLayers Declaration public IList<ILayer> HoverLayers { get; } Property Value Type Description IList < ILayer > | Improve this Doc View Source InfoLayers Declaration public IList<ILayer> InfoLayers { get; } Property Value Type Description IList < ILayer > | Improve this Doc View Source Initialized To register if the initial Home call has been done. Declaration public bool Initialized { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Limiter Limit the extent to which the user can navigate Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source PanLock When true the user can not pan (move) the map. Declaration public bool PanLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration public IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < System.Double > | Improve this Doc View Source RotationLock When true the user can not zoom into the map Declaration public bool RotationLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Transformation Transformation to use for the different coordinate systems Declaration public ITransformation Transformation { get; set; } Property Value Type Description ITransformation | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration public List<IWidget> Widgets { get; } Property Value Type Description List < IWidget > | Improve this Doc View Source ZoomLock When true the user an not rotate the map Declaration public bool ZoomLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration public void ClearCache() | Improve this Doc View Source GetWidgetsOfMapAndLayers() Declaration public IEnumerable<IWidget> GetWidgetsOfMapAndLayers() Returns Type Description IEnumerable < IWidget > | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source Hover Declaration public event EventHandler<MapInfoEventArgs> Hover Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source Info Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source RefreshGraphics Declaration public event EventHandler RefreshGraphics Event Type Type Description EventHandler Implements IMap"
  },
  "api/Mapsui.Logging.html": {
    "href": "api/Mapsui.Logging.html",
    "title": "Namespace Mapsui.Logging",
    "keywords": "Namespace Mapsui.Logging Classes Logger Enums LogLevel"
  },
  "api/Mapsui.Logging.LogLevel.html": {
    "href": "api/Mapsui.Logging.LogLevel.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public enum LogLevel : int Fields Name Description Debug Error Information Trace Warning"
  },
  "api/Mapsui.Logging.Logger.html": {
    "href": "api/Mapsui.Logging.Logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance System.Object Logger Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public static class Logger : object Properties | Improve this Doc View Source LogDelegate Declaration public static Action<LogLevel, string, Exception> LogDelegate { get; set; } Property Value Type Description Action < LogLevel , System.String , Exception > Methods | Improve this Doc View Source Log(LogLevel, String, Exception) Declaration public static void Log(LogLevel level, string message, Exception exception = null) Parameters Type Name Description LogLevel level System.String message Exception exception"
  },
  "api/Mapsui.Layers.TileLayer.html": {
    "href": "api/Mapsui.Layers.TileLayer.html",
    "title": "Class TileLayer",
    "keywords": "Class TileLayer Layer, which displays a map consisting of individual tiles Inheritance System.Object BaseLayer TileLayer Implements ILayer INotifyPropertyChanged IAsyncDataFetcher Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class TileLayer : BaseLayer, ILayer, INotifyPropertyChanged, IAsyncDataFetcher Constructors | Improve this Doc View Source TileLayer(Func<ITileSource>) Create tile layer from tile source initializer function Declaration public TileLayer(Func<ITileSource> tileSourceInitializer) Parameters Type Name Description Func < ITileSource > tileSourceInitializer Initializer to create a tile layer source | Improve this Doc View Source TileLayer(ITileSource, Int32, Int32, Int32, IFetchStrategy, IRenderGetStrategy, Int32, Int32) Create tile layer for given tile source Declaration public TileLayer(ITileSource source = null, int minTiles = 200, int maxTiles = 300, int maxRetries = 2, IFetchStrategy fetchStrategy = null, IRenderGetStrategy renderGetStrategy = null, int minExtraTiles = null, int maxExtraTiles = null) Parameters Type Name Description ITileSource source Tile source to use for this layer System.Int32 minTiles Minimum number of tiles to cache System.Int32 maxTiles Maximum number of tiles to cache System.Int32 maxRetries Unused IFetchStrategy fetchStrategy Strategy to get list of tiles for given extent IRenderGetStrategy renderGetStrategy System.Int32 minExtraTiles Number of minimum extra tiles for memory cache System.Int32 maxExtraTiles Number of maximum extra tiles for memory cache Properties | Improve this Doc View Source Envelope Returns the envelope of all avaiable data in the layer Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Overrides BaseLayer.Envelope | Improve this Doc View Source Resolutions List of native resolutions Declaration public override IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < System.Double > Overrides BaseLayer.Resolutions | Improve this Doc View Source TileSource Tile source for this layer Declaration public ITileSource TileSource { get; set; } Property Value Type Description ITileSource Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Get all features in a given BoundingBox for a given resolution Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source IsCrsSupported(String) Queries whether a layer supports projection to a certain CRS. Declaration public override bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown Overrides BaseLayer.IsCrsSupported(String) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Indicates that there has been a change in the view of the map Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent The new extent of the visible map System.Double resolution The new resolution of the visible map System.Boolean majorChange If true an implementation should always refresh it's data. If false (minorChange) the implementation could ignore it. Example: During dragging a map a WMS layer would not want to fetch data, only on the drag end. Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) Implements ILayer INotifyPropertyChanged IAsyncDataFetcher"
  },
  "api/Mapsui.Geometries.Polygon.html": {
    "href": "api/Mapsui.Geometries.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon A Polygon is a planar Surface, defined by 1 exterior boundary and 0 or more interior boundaries. Each interior boundary defines a hole in the Polygon. Inheritance System.Object Geometry Polygon Implements IGeometry IEquatable < Geometry > Inherited Members Geometry.Envelope Geometry.GetBoundingBox() Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class Polygon : Geometry, IGeometry, IEquatable<Geometry> Remarks Vertices of rings defining holes in polygons are in the opposite direction of the exterior ring. Constructors | Improve this Doc View Source Polygon() Instatiates a polygon Declaration public Polygon() | Improve this Doc View Source Polygon(LinearRing) Instatiates a polygon based on one extorier ring. Declaration public Polygon(LinearRing exteriorRing) Parameters Type Name Description LinearRing exteriorRing Exterior ring | Improve this Doc View Source Polygon(LinearRing, IList<LinearRing>) Instatiates a polygon based on one extorier ring and a collection of interior rings. Declaration public Polygon(LinearRing exteriorRing, IList<LinearRing> interiorRings) Parameters Type Name Description LinearRing exteriorRing Exterior ring IList < LinearRing > interiorRings Interior rings Properties | Improve this Doc View Source Area The area of this Surface, as measured in the spatial reference system of this Surface. Declaration public double Area { get; } Property Value Type Description System.Double | Improve this Doc View Source BoundingBox Returns the bounding box of the object Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox bounding box Overrides Geometry.BoundingBox | Improve this Doc View Source ExteriorRing Gets or sets the exterior ring of this Polygon Declaration public LinearRing ExteriorRing { get; set; } Property Value Type Description LinearRing Remarks This method is supplied as part of the OpenGIS Simple Features Specification | Improve this Doc View Source InteriorRings Gets or sets the interior rings of this Polygon Declaration public IList<LinearRing> InteriorRings { get; set; } Property Value Type Description IList < LinearRing > | Improve this Doc View Source NumInteriorRing Returns the number of interior rings in this Polygon Declaration public int NumInteriorRing { get; } Property Value Type Description System.Int32 Remarks This method is supplied as part of the OpenGIS Simple Features Specification Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public Polygon Clone() Returns Type Description Polygon Copy of Geometry | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Returns Type Description System.Double Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source Equals(Polygon) Determines if this Polygon and the specified Polygon object has the same values Declaration public bool Equals(Polygon p) Parameters Type Name Description Polygon p Polygon to compare with Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . Overrides Geometry.GetHashCode() | Improve this Doc View Source InteriorRing(Int32) Returns the Nth interior ring for this Polygon as a LineString Declaration public LinearRing InteriorRing(int n) Parameters Type Name Description System.Int32 n Returns Type Description LinearRing Remarks This method is supplied as part of the OpenGIS Simple Features Specification | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides Geometry.IsEmpty() | Improve this Doc View Source Rotate(Double) Declaration public Polygon Rotate(double degrees) Parameters Type Name Description System.Double degrees Returns Type Description Polygon | Improve this Doc View Source Rotate(Double, Point) Declaration public Polygon Rotate(double degrees, Point center) Parameters Type Name Description System.Double degrees Point center Returns Type Description Polygon Implements IGeometry IEquatable<> Extension Methods ClippingExtension.ToSkiaPath(Polygon, IReadOnlyViewport, SKRect, Single)"
  },
  "api/Mapsui.Geometries.Point.html": {
    "href": "api/Mapsui.Geometries.Point.html",
    "title": "Class Point",
    "keywords": "Class Point A Point is a 0-dimensional geometry and represents a single location in 2D coordinate space. A Point has a x coordinate value and a y-coordinate value. The boundary of a Point is the empty set. Inheritance System.Object Geometry Point Implements IGeometry IEquatable < Geometry > IComparable < Point > Inherited Members Geometry.Envelope Geometry.GetBoundingBox() Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class Point : Geometry, IGeometry, IEquatable<Geometry>, IComparable<Point> Constructors | Improve this Doc View Source Point() Initializes a new empty Point Declaration public Point() | Improve this Doc View Source Point(Double, Double) Initializes a new Point Declaration public Point(double x, double y) Parameters Type Name Description System.Double x X coordinate System.Double y Y coordinate | Improve this Doc View Source Point(Double[]) Create a new point by a douuble[] array Declaration public Point(double[] point) Parameters Type Name Description System.Double [] point Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry. Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox Overrides Geometry.BoundingBox | Improve this Doc View Source Item[UInt32] Returns part of coordinate. Index 0 = X, Index 1 = Y Declaration public virtual double this[uint index] { get; set; } Parameters Type Name Description System.UInt32 index Property Value Type Description System.Double | Improve this Doc View Source NumOrdinates Returns the number of ordinates for this point Declaration public virtual int NumOrdinates { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SetIsEmpty Sets whether this object is empty Declaration protected bool SetIsEmpty { set; } Property Value Type Description System.Boolean | Improve this Doc View Source X Gets or sets the X coordinate of the point Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Gets or sets the Y coordinate of the point Declaration public double Y { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source AsPoint() Returns a 2D Point instance from this Declaration public Point AsPoint() Returns Type Description Point Point | Improve this Doc View Source Clone() This method must be overridden using 'public new [derived_data_type] Clone()' Declaration public Point Clone() Returns Type Description Point Clone | Improve this Doc View Source CompareTo(Point) Comparator used for ordering point first by ascending X, then by ascending Y. Declaration public virtual int CompareTo(Point other) Parameters Type Name Description Point other Returns Type Description System.Int32 | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(BoundingBox) Returns the distance between this point and a BoundingBox Declaration public double Distance(BoundingBox box) Parameters Type Name Description BoundingBox box Returns Type Description System.Double | Improve this Doc View Source Distance(Point) Returns the distance between this geometry instance and another geometry, as measured in the spatial reference system of this instance. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Returns Type Description System.Double Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source Equals(Point) Checks whether this instance is spatially equal to the Point 'o' Declaration public virtual bool Equals(Point p) Parameters Type Name Description Point p Point to compare to Returns Type Description System.Boolean | Improve this Doc View Source FromDMS(Double, Double, Double, Double, Double, Double) Returns a point based on degrees, minutes and seconds notation. For western or southern coordinates, add minus '-' in front of all longitude and/or latitude values Declaration public static Point FromDMS(double longDegrees, double longMinutes, double longSeconds, double latDegrees, double latMinutes, double latSeconds) Parameters Type Name Description System.Double longDegrees Longitude degrees System.Double longMinutes Longitude minutes System.Double longSeconds Longitude seconds System.Double latDegrees Latitude degrees System.Double latMinutes Latitude minutes System.Double latSeconds Latitude seconds Returns Type Description Point Point | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . Overrides Geometry.GetHashCode() | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides Geometry.IsEmpty() | Improve this Doc View Source Offset(Double, Double) Calculates a new point by translating this point by the specified offset Declaration public Point Offset(double offsetX, double offsetY) Parameters Type Name Description System.Double offsetX Offset to translate in X axis System.Double offsetY Offset to translate in Y axis Returns Type Description Point Returns the offset point | Improve this Doc View Source Rotate(Double, Point) Calculates a new point by rotating this point clockwise about the specified center point Declaration public Point Rotate(double degrees, Point center) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) Point center Point about which to rotate Returns Type Description Point Returns the rotated point | Improve this Doc View Source Rotate(Double, Double, Double) Calculates a new point by rotating this point clockwise about the specified center point Declaration public Point Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) System.Double centerX X coordinate of point about which to rotate System.Double centerY Y coordinate of point about which to rotate Returns Type Description Point Returns the rotated point | Improve this Doc View Source ToDoubleArray() exports a point into a 2-dimensional double array Declaration public double[] ToDoubleArray() Returns Type Description System.Double [] Operators | Improve this Doc View Source Addition(Point, Point) Vector + Vector Declaration public static Point operator +(Point v1, Point v2) Parameters Type Name Description Point v1 Vector Point v2 Vector Returns Type Description Point | Improve this Doc View Source Multiply(Point, Double) Vector * Scalar Declaration public static Point operator *(Point m, double d) Parameters Type Name Description Point m Vector System.Double d Scalar (double) Returns Type Description Point | Improve this Doc View Source Subtraction(Point, Point) Vector - Vector Declaration public static Point operator -(Point v1, Point v2) Parameters Type Name Description Point v1 Vector Point v2 Vector Returns Type Description Point Cross product Implements IGeometry IEquatable<> IComparable<> Extension Methods PointExtensions.ToDeviceIndependentUnits(Point, Single) PositionExtensions.ToForms(Point) PointExtensions.ApplyScale(Point, Double)"
  },
  "api/Mapsui.Geometries.MultiPolygon.html": {
    "href": "api/Mapsui.Geometries.MultiPolygon.html",
    "title": "Class MultiPolygon",
    "keywords": "Class MultiPolygon A MultiPolygon is a MultiSurface whose elements are Polygons. Inheritance System.Object Geometry MultiPolygon Implements IEquatable < Geometry > IGeometryCollection IGeometry IEnumerable < Geometry > Inherited Members Geometry.Envelope Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Geometry.GetHashCode() Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class MultiPolygon : Geometry, IEquatable<Geometry>, IGeometryCollection, IGeometry, IEnumerable<Geometry> Constructors | Improve this Doc View Source MultiPolygon() Instantiates a MultiPolygon Declaration public MultiPolygon() Properties | Improve this Doc View Source Area Returns summed area of the Polygons in the MultiPolygon collection Declaration public double Area { get; } Property Value Type Description System.Double | Improve this Doc View Source BoundingBox Returns the bounding box of the object Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox bounding box Overrides Geometry.BoundingBox | Improve this Doc View Source Item[Int32] Returns an indexed geometry in the collection Declaration public Polygon this[int index] { get; } Parameters Type Name Description System.Int32 index Geometry index Property Value Type Description Polygon Geometry at index | Improve this Doc View Source NumGeometries Returns the number of geometries in the collection. Declaration public int NumGeometries { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Polygons Collection of polygons in the multipolygon Declaration public IList<Polygon> Polygons { get; set; } Property Value Type Description IList < Polygon > Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public MultiPolygon Clone() Returns Type Description MultiPolygon Copy of Geometry | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Geometry to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source Geometry(Int32) Returns an indexed geometry in the collection Declaration public Geometry Geometry(int n) Parameters Type Name Description System.Int32 n Geometry index Returns Type Description Geometry Geometry at index N | Improve this Doc View Source GetBoundingBox() Declaration public BoundingBox GetBoundingBox() Returns Type Description BoundingBox | Improve this Doc View Source GetEnumerator() Gets an enumerator for enumerating the geometries in the GeometryCollection Declaration public IEnumerator<Geometry> GetEnumerator() Returns Type Description IEnumerator < Geometry > | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides Geometry.IsEmpty() Implements IEquatable<> IGeometryCollection IGeometry IEnumerable<>"
  },
  "api/Mapsui.Geometries.IRaster.html": {
    "href": "api/Mapsui.Geometries.IRaster.html",
    "title": "Interface IRaster",
    "keywords": "Interface IRaster Inherited Members IGeometry.Envelope IGeometry.GetBoundingBox() IGeometry.AsText() IGeometry.AsBinary() IGeometry.ToString() IGeometry.IsEmpty() IGeometry.Clone() IGeometry.Equals(Geometry) IGeometry.Distance(Point) IGeometry.Contains(Point) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public interface IRaster : IGeometry Properties | Improve this Doc View Source BoundingBox Declaration BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox | Improve this Doc View Source Data Declaration MemoryStream Data { get; } Property Value Type Description MemoryStream | Improve this Doc View Source TickFetched Declaration long TickFetched { get; } Property Value Type Description System.Int64 Extension Methods GeometryExtensions.Copy(IGeometry) GeometryIterator.AllVertices(IGeometry)"
  },
  "api/Mapsui.Geometries.IGeometryCollection.html": {
    "href": "api/Mapsui.Geometries.IGeometryCollection.html",
    "title": "Interface IGeometryCollection",
    "keywords": "Interface IGeometryCollection Interface for a GeometryCollection. A GeometryCollection is a collection of 1 or more geometries. Inherited Members IGeometry.Envelope IGeometry.BoundingBox IGeometry.GetBoundingBox() IGeometry.AsText() IGeometry.AsBinary() IGeometry.ToString() IGeometry.IsEmpty() IGeometry.Clone() IGeometry.Equals(Geometry) IGeometry.Distance(Point) IGeometry.Contains(Point) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public interface IGeometryCollection : IGeometry Properties | Improve this Doc View Source NumGeometries Returns the number of geometries in the collection. Declaration int NumGeometries { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Geometry(Int32) Returns an indexed geometry in the collection Declaration Geometry Geometry(int n) Parameters Type Name Description System.Int32 n Geometry index Returns Type Description Geometry Geometry at index N Extension Methods GeometryExtensions.Copy(IGeometry) GeometryIterator.AllVertices(IGeometry)"
  },
  "api/Mapsui.Geometries.IGeometry.html": {
    "href": "api/Mapsui.Geometries.IGeometry.html",
    "title": "Interface IGeometry",
    "keywords": "Interface IGeometry Defines basic interface for a Geometry Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public interface IGeometry Properties | Improve this Doc View Source BoundingBox The minimum BoundingBox for this Geometry . Declaration BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox BoundingBox for this Geometry | Improve this Doc View Source Envelope The minimum bounding box for this Geometry, returned as a Geometry . The polygon is defined by the corner points of the bounding box ((MINX, MINY), (MAXX, MINY), (MAXX, MAXY), (MINX, MAXY), (MINX, MINY)). Declaration Geometry Envelope { get; } Property Value Type Description Geometry Methods | Improve this Doc View Source AsBinary() Exports this Geometry to a specific well-known binary representation of Geometry . Declaration byte[] AsBinary() Returns Type Description System.Byte [] | Improve this Doc View Source AsText() Exports this Geometry to a specific well-known text representation of Geometry . Declaration string AsText() Returns Type Description System.String | Improve this Doc View Source Clone() This method must be overridden using 'public new [derived_data_type] Clone()' Declaration Geometry Clone() Returns Type Description Geometry Copy of Geometry | Improve this Doc View Source Contains(Point) Declaration bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry . Declaration double Distance(Point point) Parameters Type Name Description Point point Point to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries | Improve this Doc View Source Equals(Geometry) Returns 'true' if this Geometry is 'spatially equal' to another Geometry Declaration bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean | Improve this Doc View Source GetBoundingBox() Declaration BoundingBox GetBoundingBox() Returns Type Description BoundingBox | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry | Improve this Doc View Source ToString() Returns a WellKnownText representation of the Geometry Declaration string ToString() Returns Type Description System.String Well-known text Extension Methods GeometryExtensions.Copy(IGeometry) GeometryIterator.AllVertices(IGeometry)"
  },
  "api/Mapsui.Geometries.GeometryExtensions.html": {
    "href": "api/Mapsui.Geometries.GeometryExtensions.html",
    "title": "Class GeometryExtensions",
    "keywords": "Class GeometryExtensions Inheritance System.Object GeometryExtensions Namespace : Mapsui.Geometries Assembly : Mapsui.dll Syntax public static class GeometryExtensions : object Methods | Improve this Doc View Source Copy(IGeometry) Declaration public static IGeometry Copy(this IGeometry original) Parameters Type Name Description IGeometry original Returns Type Description IGeometry"
  },
  "api/Mapsui.Fetcher.html": {
    "href": "api/Mapsui.Fetcher.html",
    "title": "Namespace Mapsui.Fetcher",
    "keywords": "Namespace Mapsui.Fetcher Classes DataChangedEventArgs FetchStrategy FetchTileCompletedEventArgs MinimalFetchStrategy TileFetcher Interfaces IAsyncDataFetcher IFetchStrategy Delegates DataChangedEventHandler FetchTileCompletedEventHandler"
  },
  "api/Mapsui.Fetcher.TileFetcher.html": {
    "href": "api/Mapsui.Fetcher.TileFetcher.html",
    "title": "Class TileFetcher",
    "keywords": "Class TileFetcher Inheritance System.Object TileFetcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class TileFetcher : INotifyPropertyChanged Constructors | Improve this Doc View Source TileFetcher(ITileSource, MemoryCache<Feature>, Int32, Int32, IFetchStrategy) Declaration public TileFetcher(ITileSource tileSource, MemoryCache<Feature> memoryCache, int maxAttempts = null, int maxThreads = null, IFetchStrategy strategy = null) Parameters Type Name Description ITileSource tileSource MemoryCache < Feature > memoryCache System.Int32 maxAttempts System.Int32 maxThreads IFetchStrategy strategy Fields | Improve this Doc View Source DefaultMaxAttempts Declaration public const int DefaultMaxAttempts = null Field Value Type Description System.Int32 | Improve this Doc View Source DefaultMaxThreads Declaration public const int DefaultMaxThreads = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source Busy Declaration public bool Busy { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NumberTilesNeeded Declaration public int NumberTilesNeeded { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ViewChanged(BoundingBox, Double) Declaration public void ViewChanged(BoundingBox newExtent, double newResolution) Parameters Type Name Description BoundingBox newExtent System.Double newResolution Events | Improve this Doc View Source DataChanged Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.Fetcher.IAsyncDataFetcher.html": {
    "href": "api/Mapsui.Fetcher.IAsyncDataFetcher.html",
    "title": "Interface IAsyncDataFetcher",
    "keywords": "Interface IAsyncDataFetcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IAsyncDataFetcher Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration void ClearCache()"
  },
  "api/Mapsui.Desktop.Wms.StatusEventHandler.html": {
    "href": "api/Mapsui.Desktop.Wms.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public delegate void StatusEventHandler(object sender, FeatureInfo featureInfo); Parameters Type Name Description System.Object sender FeatureInfo featureInfo"
  },
  "api/Mapsui.Desktop.Wms.GetFeatureInfo.html": {
    "href": "api/Mapsui.Desktop.Wms.GetFeatureInfo.html",
    "title": "Class GetFeatureInfo",
    "keywords": "Class GetFeatureInfo Inheritance System.Object GetFeatureInfo Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class GetFeatureInfo : object Constructors | Improve this Doc View Source GetFeatureInfo(Func<String, Task<Stream>>) Declaration public GetFeatureInfo(Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description Func < System.String , Task < Stream >> getStreamAsync Properties | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string> ExtraParams { get; set; } Property Value Type Description Dictionary < System.String , System.String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 7 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Request(String, String, String, String, String, Double, Double, Double, Double, Int32, Int32, Int32, Int32) Request FeatureInfo for a WMS Server Declaration public void Request(string baseUrl, string wmsVersion, string infoFormat, string srs, string layer, double extendXmin, double extendYmin, double extendXmax, double extendYmax, int x, int y, int mapWidth, int mapHeight) Parameters Type Name Description System.String baseUrl Base URL of the WMS server System.String wmsVersion WMS Version System.String infoFormat Format of response (text/xml, text/plain, etc) System.String srs EPSG Code of the coordinate system System.String layer Layer to get FeatureInfo From System.Double extendXmin System.Double extendYmin System.Double extendXmax System.Double extendYmax System.Int32 x Coordinate in pixels x System.Int32 y Coordinate in pixels y System.Int32 mapWidth Width of the map System.Int32 mapHeight Height of the map Events | Improve this Doc View Source IdentifyFailed Declaration public event StatusEventHandler IdentifyFailed Event Type Type Description StatusEventHandler | Improve this Doc View Source IdentifyFinished Declaration public event StatusEventHandler IdentifyFinished Event Type Type Description StatusEventHandler"
  },
  "api/Mapsui.Desktop.Shapefile.ShapeFile.html": {
    "href": "api/Mapsui.Desktop.Shapefile.ShapeFile.html",
    "title": "Class ShapeFile",
    "keywords": "Class ShapeFile Shapefile dataprovider Inheritance System.Object ShapeFile Implements IProvider IDisposable Namespace : Mapsui.Desktop.Shapefile Assembly : Mapsui.Desktop.dll Syntax public class ShapeFile : object, IProvider, IDisposable Remarks The ShapeFile provider is used for accessing ESRI ShapeFiles. The ShapeFile should at least contain the [filename].shp, [filename].idx, and if feature-data is to be used, also [filename].dbf file. The first time the ShapeFile is accessed, Mapsui will automatically create a spatial index of the shp-file, and save it as [filename].shp.sidx. If you change or update the contents of the .shp file, delete the .sidx file to force Mapsui to rebuilt it. In web applications, the index will automatically be cached to memory for faster access, so to reload the index, you will need to restart the web application as well. M and Z values in a shapefile is ignored by Mapsui. Examples Adding a datasource to a layer: Mapsui.Layers.VectorLayer myLayer = new Mapsui.Layers.VectorLayer(\"My layer\"); myLayer.DataSource = new Mapsui.Data.Providers.ShapeFile(@\"C:\\data\\MyShapeData.shp\"); Constructors | Improve this Doc View Source ShapeFile(String, Boolean) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex = false) Parameters Type Name Description System.String filename Path to shape file System.Boolean fileBasedIndex Use file-based spatial index Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. Properties | Improve this Doc View Source CRS Gets or sets the spatial reference ID (CRS) Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Encoding Gets or sets the encoding used for parsing strings from the DBase DBF file. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding Remarks The DBase default encoding is . | Improve this Doc View Source Filename Gets or sets the filename of the shapefile Declaration public string Filename { get; set; } Property Value Type Description System.String Remarks If the filename changes, indexes will be rebuilt | Improve this Doc View Source FilterDelegate Filter Delegate Method for limiting the datasource Declaration public ShapeFile.FilterMethod FilterDelegate { get; set; } Property Value Type Description ShapeFile.FilterMethod Remarks Using an anonymous method for filtering all features where the NAME column starts with S: myShapeDataSource.FilterDelegate = new Mapsui.Data.Providers.ShapeFile.FilterMethod(delegate(Mapsui.Data.FeatureDataRow row) { return (!row[\"NAME\"].ToString().StartsWith(\"S\")); }); Declaring a delegate method for filtering (multi)polygon-features whose area is larger than 5. myShapeDataSource.FilterDelegate = CountryFilter; [...] public static bool CountryFilter(Mapsui.Data.FeatureDataRow row) { if(row.Geometry.GetType()==typeof(Mapsui.Geometries.Polygon)) return ((row.Geometry as Mapsui.Geometries.Polygon).Area>5); if (row.Geometry.GetType() == typeof(Mapsui.Geometries.MultiPolygon)) return ((row.Geometry as Mapsui.Geometries.MultiPolygon).Area > 5); else return true; } See Also ShapeFile.FilterMethod | Improve this Doc View Source ShapeType Gets the ShapeType in this shapefile. Declaration public ShapeType ShapeType { get; } Property Value Type Description ShapeType Remarks The property isn't set until the first time the datasource has been opened, and will throw an exception if this property has been called since initialization. All the non-Null shapes in a shapefile are required to be of the same shape type. Methods | Improve this Doc View Source Dispose() Disposes the object Declaration public void Dispose() | Improve this Doc View Source Finalize() Finalizes the object Declaration protected void Finalize() | Improve this Doc View Source GetExtents() Returns the extents of the datasource Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeature(UInt32, IFeatures) Gets a datarow from the datasource at the specified index belonging to the specified datatable Declaration public IFeature GetFeature(uint rowId, IFeatures feature = null) Parameters Type Name Description System.UInt32 rowId IFeatures feature Datatable to feature should belong to. Returns Type Description IFeature | Improve this Doc View Source GetFeatureCount() Returns the total number of features in the datasource (without any filter applied) Declaration public int GetFeatureCount() Returns Type Description System.Int32 | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetGeometriesInView(BoundingBox) Returns geometries whose bounding box intersects 'bbox' Declaration public Collection<IGeometry> GetGeometriesInView(BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Returns Type Description Collection < IGeometry > Remarks Please note that this method doesn't guarantee that the geometries returned actually intersect 'bbox', but only that their boundingbox intersects 'bbox'. This method is much faster than the QueryFeatures method, because intersection tests are performed on objects simplifed by their boundingbox, and using the Spatial Index. | Improve this Doc View Source GetGeometry(UInt32) Returns the geometry corresponding to the Object ID Declaration public IGeometry GetGeometry(uint oid) Parameters Type Name Description System.UInt32 oid Object ID Returns Type Description IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(BoundingBox) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public Collection<uint> GetObjectIDsInView(BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Returns Type Description Collection < System.UInt32 > | Improve this Doc View Source RebuildSpatialIndex() Forces a rebuild of the spatial index. If the instance of the ShapeFile provider uses a file-based index the file is rewritten to disk. Declaration public void RebuildSpatialIndex() Implements IProvider IDisposable"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.html",
    "title": "Class QuadTree",
    "keywords": "Class QuadTree Constructs a Quad-tree node from a object list and creates its children recursively Inheritance System.Object QuadTree Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public class QuadTree : IDisposable Constructors | Improve this Doc View Source QuadTree(List<QuadTree.BoxObjects>, UInt32, Heuristic) Creates a node and either splits the objects recursively into sub-nodes, or stores them at the node depending on the heuristics. Tree is built top->down Declaration public QuadTree(List<QuadTree.BoxObjects> objList, uint depth, Heuristic heurdata) Parameters Type Name Description List < QuadTree.BoxObjects > objList Geometries to index System.UInt32 depth Current depth of tree Heuristic heurdata Heuristics data Properties | Improve this Doc View Source Box Gets/sets the Axis Aligned Bounding Box Declaration public BoundingBox Box { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source Child0 Gets/sets the left child node Declaration public QuadTree Child0 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Child1 Gets/sets the right child node Declaration public QuadTree Child1 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Depth Gets the depth of the current node in the tree Declaration public uint Depth { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsLeaf Determines whether the node is a leaf (if data is stored at the node, we assume the node is a leaf) Declaration public bool IsLeaf { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Disposes the node Declaration public void Dispose() | Improve this Doc View Source ErrorMetric(BoundingBox) Calculate the floating point error metric Declaration public double ErrorMetric(BoundingBox box) Parameters Type Name Description BoundingBox box Returns Type Description System.Double | Improve this Doc View Source FromFile(String) Loads a quadtree from a file Declaration public static QuadTree FromFile(string filename) Parameters Type Name Description System.String filename Returns Type Description QuadTree | Improve this Doc View Source SaveIndex(String) Saves the Quadtree to a file Declaration public void SaveIndex(string filename) Parameters Type Name Description System.String filename | Improve this Doc View Source Search(BoundingBox) Searches the tree and looks for intersections with the boundingbox 'bbox' Declaration public Collection<uint> Search(BoundingBox box) Parameters Type Name Description BoundingBox box Boundingbox to intersect with Returns Type Description Collection < System.UInt32 >"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.BoxObjects.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.BoxObjects.html",
    "title": "Struct QuadTree.BoxObjects",
    "keywords": "Struct QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public struct BoxObjects Fields | Improve this Doc View Source Box Boundingbox Declaration public BoundingBox Box Field Value Type Description BoundingBox | Improve this Doc View Source Id Feature ID Declaration public uint Id Field Value Type Description System.UInt32"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.BinaryTree-2.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.BinaryTree-2.html",
    "title": "Class BinaryTree<T, TU>",
    "keywords": "Class BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries Inheritance System.Object BinaryTree<T, TU> Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public class BinaryTree<T, TU> : object where T : IComparable<T> Type Parameters Name Description T Value type to be indexed TU Value ID type Constructors | Improve this Doc View Source BinaryTree() Initializes a new instance of the generic binary tree. Declaration public BinaryTree() Properties | Improve this Doc View Source InOrder Gets an enumerator for all the values in the tree in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> InOrder { get; } Property Value Type Description IEnumerable < BinaryTree.ItemValue <>> Methods | Improve this Doc View Source Add(BinaryTree<T, TU>.ItemValue) Inserts a value into the tree Declaration public void Add(BinaryTree<T, TU>.ItemValue item) Parameters Type Name Description BinaryTree.ItemValue <> item | Improve this Doc View Source Add(BinaryTree<T, TU>.ItemValue[]) Inserts a value into the tree Declaration public void Add(params BinaryTree<T, TU>.ItemValue[] items) Parameters Type Name Description BinaryTree.ItemValue <>[] items | Improve this Doc View Source Between(T, T) Gets and enumerator for the values between min and max in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Between(T min, T max) Parameters Type Name Description T min T max Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source Find(T) Enumerates all objects with the specified value Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Find(T value) Parameters Type Name Description T value Value to search for Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source StartsWith(String) Enumerates the objects whose string-representation starts with 'str' Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> StartsWith(string str) Parameters Type Name Description System.String str Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source TraceTree() This is the classic computer science binary tree iteration Declaration public void TraceTree()"
  },
  "api/Mapsui.Desktop.GeoTiff.html": {
    "href": "api/Mapsui.Desktop.GeoTiff.html",
    "title": "Namespace Mapsui.Desktop.GeoTiff",
    "keywords": "Namespace Mapsui.Desktop.GeoTiff Classes GeoTiffProvider"
  },
  "api/Mapsui.Desktop.Wms.Client.WmsOnlineResource.html": {
    "href": "api/Mapsui.Desktop.Wms.Client.WmsOnlineResource.html",
    "title": "Struct Client.WmsOnlineResource",
    "keywords": "Struct Client.WmsOnlineResource Structure for storing info on an Online Resource Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsOnlineResource Fields | Improve this Doc View Source OnlineResource URI of online resource Declaration public string OnlineResource Field Value Type Description System.String | Improve this Doc View Source Type Type of online resource (Ex. request method 'Get' or 'Post') Declaration public string Type Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Capabilities.WmsServiceDescription.html": {
    "href": "api/Mapsui.Desktop.Wms.Capabilities.WmsServiceDescription.html",
    "title": "Struct Capabilities.WmsServiceDescription",
    "keywords": "Struct Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsServiceDescription Fields | Improve this Doc View Source Abstract Optional narrative description providing additional information Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source AccessConstraints The optional element \"AccessConstraints\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no access constraints, as follows: \"none\". When constraints are imposed, no precise syntax has been defined for the text content of these elements, but client applications may display the content for user information and action. Declaration public string AccessConstraints Field Value Type Description System.String | Improve this Doc View Source ContactInformation Optional WMS contact information Declaration public Capabilities.WmsContactInformation ContactInformation Field Value Type Description Capabilities.WmsContactInformation | Improve this Doc View Source Fees The optional element \"Fees\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no fees, as follows: \"none\". Declaration public string Fees Field Value Type Description System.String | Improve this Doc View Source Keywords Optional list of keywords or keyword phrases describing the server as a whole to help catalog searching Declaration public string[] Keywords Field Value Type Description System.String [] | Improve this Doc View Source LayerLimit Maximum number of layers allowed (0=no restrictions) Declaration public uint LayerLimit Field Value Type Description System.UInt32 | Improve this Doc View Source MaxHeight Maximum height allowed in pixels (0=no restrictions) Declaration public uint MaxHeight Field Value Type Description System.UInt32 | Improve this Doc View Source MaxWidth Maximum width allowed in pixels (0=no restrictions) Declaration public uint MaxWidth Field Value Type Description System.UInt32 | Improve this Doc View Source OnlineResource Mandatory Top-level web address of service or service provider. Declaration public string OnlineResource Field Value Type Description System.String | Improve this Doc View Source Title Mandatory Human-readable title for pick lists Declaration public string Title Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.html": {
    "href": "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.html",
    "title": "Struct Capabilities.WmsContactInformation",
    "keywords": "Struct Capabilities.WmsContactInformation Stores contact metadata about WMS service Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsContactInformation Fields | Improve this Doc View Source Address Address Declaration public Capabilities.WmsContactInformation.ContactAddress Address Field Value Type Description Capabilities.WmsContactInformation.ContactAddress | Improve this Doc View Source ElectronicMailAddress Email address Declaration public string ElectronicMailAddress Field Value Type Description System.String | Improve this Doc View Source FacsimileTelephone Fax number Declaration public string FacsimileTelephone Field Value Type Description System.String | Improve this Doc View Source PersonPrimary Primary contact person Declaration public Capabilities.WmsContactInformation.ContactPerson PersonPrimary Field Value Type Description Capabilities.WmsContactInformation.ContactPerson | Improve this Doc View Source Position Position of contact person Declaration public string Position Field Value Type Description System.String | Improve this Doc View Source VoiceTelephone Telephone Declaration public string VoiceTelephone Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Shapefile.html": {
    "href": "api/Mapsui.Desktop.Shapefile.html",
    "title": "Namespace Mapsui.Desktop.Shapefile",
    "keywords": "Namespace Mapsui.Desktop.Shapefile Classes ShapeFile Shapefile dataprovider Enums ShapeType Shapefile geometry type. Delegates ShapeFile.FilterMethod Filter Delegate Method"
  },
  "api/Mapsui.Desktop.Shapefile.ShapeType.html": {
    "href": "api/Mapsui.Desktop.Shapefile.ShapeType.html",
    "title": "Enum ShapeType",
    "keywords": "Enum ShapeType Shapefile geometry type. Namespace : Mapsui.Desktop.Shapefile Assembly : Mapsui.Desktop.dll Syntax public enum ShapeType : int Fields Name Description MultiPatch A MultiPatch consists of a number of surface patches. Each surface patch describes a surface. The surface patches of a MultiPatch are referred to as its parts, and the type of part controls how the order of vertices of an MultiPatch part is interpreted. Mapsui doesn't support this feature type. Multipoint A MultiPoint represents a set of points. Mapsui interpretes this as MultiPoint MultiPointM A MultiPointM represents a set of PointM s. Mapsui interpretes this as MultiPoint MultiPointZ A MultiPointZ represents a set of PointZ s. Mapsui interpretes this as MultiPoint Null Null shape with no geometric data Point A point consists of a pair of double-precision coordinates. Mapsui interpretes this as Point PointM A PointM consists of a pair of double-precision coordinates in the order X, Y, plus a measure M. Mapsui interpretes this as Point PointZ A PointZ consists of a triplet of double-precision coordinates plus a measure. Mapsui interpretes this as Point Polygon A polygon consists of one or more rings. A ring is a connected sequence of four or more points that form a closed, non-self-intersecting loop. A polygon may contain multiple outer rings. The order of vertices or orientation for a ring indicates which side of the ring is the interior of the polygon. The neighborhood to the right of an observer walking along the ring in vertex order is the neighborhood inside the polygon. Vertices of rings defining holes in polygons are in a counterclockwise direction. Vertices for a single, ringed polygon are, therefore, always in clockwise order. The rings of a polygon are referred to as its parts. Mapsui interpretes this as either Polygon or MultiPolygon PolygonM A PolygonM consists of a number of rings. A ring is a closed, non-self-intersecting loop. Mapsui interpretes this as either Polygon or MultiPolygon PolygonZ A PolygonZ consists of a number of rings. A ring is a closed, non-self-intersecting loop. A PolygonZ may contain multiple outer rings. The rings of a PolygonZ are referred to as its parts. Mapsui interpretes this as either Polygon or MultiPolygon PolyLine PolyLine is an ordered set of vertices that consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interpretes this as either LineString or MultiLineString PolyLineM A shapefile PolyLineM consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interpretes this as LineString or MultiLineString PolyLineZ A PolyLineZ consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interpretes this as LineString or MultiLineString"
  },
  "api/ConcurrentCollections.ConcurrentHashSet-1.html": {
    "href": "api/ConcurrentCollections.ConcurrentHashSet-1.html",
    "title": "Class ConcurrentHashSet<T>",
    "keywords": "Class ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection. Inheritance System.Object ConcurrentHashSet<T> Implements ICollection <T> Namespace : ConcurrentCollections Assembly : Mapsui.dll Syntax public class ConcurrentHashSet<T> : IReadOnlyCollection<T>, ICollection<T> Type Parameters Name Description T The type of the items in the collection. Remarks All public members of ConcurrentHashSet<T> are thread-safe and may be used concurrently from multiple threads. Constructors | Improve this Doc View Source ConcurrentHashSet() Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet() | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable{T} , has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . Exceptions Type Condition System.ArgumentNullException collection is a null reference. | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable , has the default concurrency level, has the default initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentNullException collection is a null reference (Nothing in Visual Basic). | Improve this Doc View Source ConcurrentHashSet(IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEqualityComparer<T> comparer) Parameters Type Name Description IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. | Improve this Doc View Source ConcurrentHashSet(Int32, IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable , has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentNullException collection is a null reference. System.ArgumentOutOfRangeException concurrencyLevel is less than 1. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. System.Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. Exceptions Type Condition System.ArgumentOutOfRangeException concurrencyLevel is less than 1. System.ArgumentOutOfRangeException capacity is less than 0. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. System.Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition System.ArgumentOutOfRangeException concurrencyLevel is less than 1. -or- capacity is less than 0. Properties | Improve this Doc View Source Count Gets the number of items contained in the ConcurrentHashSet<T> . Declaration public int Count { get; } Property Value Type Description System.Int32 The number of items contained in the ConcurrentHashSet<T> . Remarks Count has snapshot semantics and represents the number of items in the ConcurrentHashSet<T> at the moment when Count was accessed. | Improve this Doc View Source IsEmpty Gets a value that indicates whether the ConcurrentHashSet<T> is empty. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean true if the ConcurrentHashSet<T> is empty; otherwise, false. Methods | Improve this Doc View Source Add(T) Adds the specified item to the ConcurrentHashSet<T> . Declaration public bool Add(T item) Parameters Type Name Description T item The item to add. Returns Type Description System.Boolean true if the items was added to the ConcurrentHashSet<T> successfully; false if it already exists. Exceptions Type Condition System.OverflowException The ConcurrentHashSet<T> contains too many items. | Improve this Doc View Source Clear() Removes all items from the ConcurrentHashSet<T> . Declaration public void Clear() | Improve this Doc View Source Contains(T) Determines whether the ConcurrentHashSet<T> contains the specified item. Declaration public bool Contains(T item) Parameters Type Name Description T item The item to locate in the ConcurrentHashSet<T> . Returns Type Description System.Boolean true if the ConcurrentHashSet<T> contains the item; otherwise, false. | Improve this Doc View Source GetEnumerator() Returns an enumerator that iterates through the ConcurrentHashSet<T> . Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> An enumerator for the ConcurrentHashSet<T> . Remarks The enumerator returned from the collection is safe to use concurrently with reads and writes to the collection, however it does not represent a moment-in-time snapshot of the collection. The contents exposed through the enumerator may contain modifications made to the collection after GetEnumerator() was called. | Improve this Doc View Source TryRemove(T) Attempts to remove the item from the ConcurrentHashSet<T> . Declaration public bool TryRemove(T item) Parameters Type Name Description T item The item to remove. Returns Type Description System.Boolean true if an item was removed successfully; otherwise, false. Implements ICollection<>"
  },
  "api/BruTile.html": {
    "href": "api/BruTile.html",
    "title": "Namespace BruTile",
    "keywords": "Namespace BruTile Classes ExtentExtensions"
  },
  "api/System.html": {
    "href": "api/System.html",
    "title": "Namespace System",
    "keywords": "Namespace System Classes DoubleExtensions FloatExtensions"
  },
  "api/System.IO.html": {
    "href": "api/System.IO.html",
    "title": "Namespace System.IO",
    "keywords": "Namespace System.IO Classes StreamExtensions"
  },
  "api/System.IO.StreamExtensions.html": {
    "href": "api/System.IO.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance System.Object StreamExtensions Namespace : System.IO Assembly : Mapsui.dll Syntax public static class StreamExtensions : object Methods | Improve this Doc View Source ToBytes(Stream) Declaration public static byte[] ToBytes(this Stream input) Parameters Type Name Description Stream input Returns Type Description System.Byte []"
  },
  "api/System.FloatExtensions.html": {
    "href": "api/System.FloatExtensions.html",
    "title": "Class FloatExtensions",
    "keywords": "Class FloatExtensions Inheritance System.Object FloatExtensions Namespace : System Assembly : Mapsui.dll Syntax public static class FloatExtensions : object Methods | Improve this Doc View Source IsNanOrZero(Single) Declaration public static bool IsNanOrZero(this float target) Parameters Type Name Description System.Single target Returns Type Description System.Boolean"
  },
  "api/System.DoubleExtensions.html": {
    "href": "api/System.DoubleExtensions.html",
    "title": "Class DoubleExtensions",
    "keywords": "Class DoubleExtensions Inheritance System.Object DoubleExtensions Namespace : System Assembly : Mapsui.dll Syntax public static class DoubleExtensions : object Methods | Improve this Doc View Source IsNanOrInfOrZero(Double) Declaration public static bool IsNanOrInfOrZero(this double target) Parameters Type Name Description System.Double target Returns Type Description System.Boolean"
  },
  "api/Mapsui.html": {
    "href": "api/Mapsui.html",
    "title": "Namespace Mapsui",
    "keywords": "Namespace Mapsui Classes LimitedViewport Map Map class Navigator Viewport Viewport holds all informations about the visible part of the map. Interfaces IMap INavigator IReadOnlyViewport IViewport"
  },
  "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html": {
    "href": "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html",
    "title": "Class ZoomInOutWidget",
    "keywords": "Class ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Inheritance System.Object Widget ZoomInOutWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public class ZoomInOutWidget : Widget, IWidget, INotifyPropertyChanged Properties | Improve this Doc View Source BackColor Color of background Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Orientation Orientation of buttons Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source Size Width and height of buttons Declaration public float Size { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StrokeColor Color of button frames Declaration public Color StrokeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextColor Color of \"+\" and \"-\" sign Declaration public Color TextColor { get; set; } Property Value Type Description Color Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, Point) Declaration public override bool HandleWidgetTouched(INavigator navigator, Point position) Parameters Type Name Description INavigator navigator Point position Returns Type Description System.Boolean Overrides Widget.HandleWidgetTouched(INavigator, Point) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source WidgetTouched Event handler which is called, when buttons are touched. If there isn't one, than the default handler is used, which change the Resolution of Viewport. Declaration public event EventHandler<WidgetTouchedEventArgs> WidgetTouched Event Type Type Description EventHandler < WidgetTouchedEventArgs > Implements IWidget INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.Zoom.html": {
    "href": "api/Mapsui.Widgets.Zoom.html",
    "title": "Namespace Mapsui.Widgets.Zoom",
    "keywords": "Namespace Mapsui.Widgets.Zoom Classes ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Enums Orientation"
  },
  "api/Mapsui.Widgets.Zoom.Orientation.html": {
    "href": "api/Mapsui.Widgets.Zoom.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public enum Orientation : int Fields Name Description Horizontal Vertical"
  },
  "api/Mapsui.Widgets.html": {
    "href": "api/Mapsui.Widgets.html",
    "title": "Namespace Mapsui.Widgets",
    "keywords": "Namespace Mapsui.Widgets Classes Hyperlink HyperlinkWidgetArguments TextBox Widget WidgetTouch WidgetTouchedEventArgs Interfaces IWidget IWidgetRenderer Enums Alignment HorizontalAlignment VerticalAlignment"
  },
  "api/Mapsui.Widgets.WidgetTouchedEventArgs.html": {
    "href": "api/Mapsui.Widgets.WidgetTouchedEventArgs.html",
    "title": "Class WidgetTouchedEventArgs",
    "keywords": "Class WidgetTouchedEventArgs Inheritance System.Object WidgetTouchedEventArgs Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class WidgetTouchedEventArgs : EventArgs Constructors | Improve this Doc View Source WidgetTouchedEventArgs(Point) Declaration public WidgetTouchedEventArgs(Point position) Parameters Type Name Description Point position Properties | Improve this Doc View Source Handled True, if this Widget had handled this event Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position Declaration public Point Position { get; } Property Value Type Description Point"
  },
  "api/Mapsui.Widgets.WidgetTouch.html": {
    "href": "api/Mapsui.Widgets.WidgetTouch.html",
    "title": "Class WidgetTouch",
    "keywords": "Class WidgetTouch Inheritance System.Object WidgetTouch Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public static class WidgetTouch : object Methods | Improve this Doc View Source GetTouchedWidget(Point, Point, IEnumerable<IWidget>) Gets the widget selected by touch positions Declaration public static IEnumerable<IWidget> GetTouchedWidget(Point screenPosition, Point startScreenPosition, IEnumerable<IWidget> widgets) Parameters Type Name Description Point screenPosition The screen position in device independent units (or DIP or DP) Point startScreenPosition The start screen position in device independent units (or DIP or DP) IEnumerable < IWidget > widgets The widgets to select from. Returns Type Description IEnumerable < IWidget > Returns the first Widget in the list that contains the screenPosition within it's Envelope. Returns null if there are none."
  },
  "api/Mapsui.Viewport.html": {
    "href": "api/Mapsui.Viewport.html",
    "title": "Class Viewport",
    "keywords": "Class Viewport Viewport holds all informations about the visible part of the map. Inheritance System.Object Viewport Implements IViewport IReadOnlyViewport Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Viewport : object, IViewport, IReadOnlyViewport Remarks Viewport is the connection between Map and MapControl. It tells MapControl, which part of Map should be displayed on screen. Constructors | Improve this Doc View Source Viewport() Create a new viewport Declaration public Viewport() | Improve this Doc View Source Viewport(Viewport) Create a new viewport from another viewport Declaration public Viewport(Viewport viewport) Parameters Type Name Description Viewport viewport Viewport from which to copy all values Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration public ReadOnlyPoint Center { get; set; } Property Value Type Description ReadOnlyPoint | Improve this Doc View Source Extent BoundingBox of viewport in map coordinates respection Rotation Declaration public BoundingBox Extent { get; } Property Value Type Description BoundingBox Remarks This BoundingBox is horizontally and vertically aligned, even if the viewport is rotated. So this BoundingBox perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration public double Height { get; set; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration public bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration public double Resolution { get; set; } Property Value Type Description System.Double Remarks Resolution is Mapsuis form of zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration public double Rotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration public double Width { get; set; } Property Value Type Description System.Double | Improve this Doc View Source WindowExtent WindowExtend gives the four corner points of viewport in map coordinates Declaration public Quad WindowExtent { get; } Property Value Type Description Quad Remarks If viewport is rotated, this corner points are not horizontally or vertically aligned. Methods | Improve this Doc View Source ScreenToWorld(Point) Converts a point in screen pixels to one in map units, respecting rotation Declaration public Point ScreenToWorld(Point position) Parameters Type Name Description Point position Coordinate in map units Returns Type Description Point Point in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration public Point ScreenToWorld(double screenX, double screenY) Parameters Type Name Description System.Double screenX System.Double screenY Returns Type Description Point Point in map units | Improve this Doc View Source SetCenter(ReadOnlyPoint) Declaration public void SetCenter(ReadOnlyPoint center) Parameters Type Name Description ReadOnlyPoint center | Improve this Doc View Source SetCenter(Double, Double) Declaration public void SetCenter(double x, double y) Parameters Type Name Description System.Double x System.Double y | Improve this Doc View Source SetResolution(Double) Declaration public void SetResolution(double resolution) Parameters Type Name Description System.Double resolution | Improve this Doc View Source SetRotation(Double) Declaration public void SetRotation(double rotation) Parameters Type Name Description System.Double rotation | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(Point, Point, Double, Double) Moving the position of viewport to a new one Declaration public void Transform(Point positionScreen, Point previousPositionScreen, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description Point positionScreen Point previousPositionScreen System.Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) System.Double deltaRotation Change of rotation | Improve this Doc View Source WorldToScreen(Point) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration public Point WorldToScreen(Point worldPosition) Parameters Type Name Description Point worldPosition Coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public Point WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Point) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public Point WorldToScreenUnrotated(Point worldPosition) Parameters Type Name Description Point worldPosition Coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public Point WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description Point Point in screen pixels Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler ViewportChanged Event Type Type Description PropertyChangedEventHandler Implements IViewport IReadOnlyViewport"
  },
  "api/Mapsui.Utilities.ZoomHelper.html": {
    "href": "api/Mapsui.Utilities.ZoomHelper.html",
    "title": "Class ZoomHelper",
    "keywords": "Class ZoomHelper Inheritance System.Object ZoomHelper Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class ZoomHelper : object Methods | Improve this Doc View Source ClipResolutionToExtremes(IReadOnlyList<Double>, Double) Declaration public static double ClipResolutionToExtremes(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source DetermineResolution(Double, Double, Double, Double, ScaleMethod) Declaration public static double DetermineResolution(double worldWidth, double worldHeight, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description System.Double worldWidth System.Double worldHeight System.Double screenWidth System.Double screenHeight ScaleMethod scaleMethod Returns Type Description System.Double | Improve this Doc View Source ZoomIn(IReadOnlyList<Double>, Double) Declaration public static double ZoomIn(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source ZoomOut(IReadOnlyList<Double>, Double) Declaration public static double ZoomOut(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description IReadOnlyList < System.Double > resolutions System.Double resolution Returns Type Description System.Double | Improve this Doc View Source ZoomToBoudingbox(Viewport, Double, Double, Double, Double, Double, Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(Viewport viewport, double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description Viewport viewport System.Double x1 System.Double y1 System.Double x2 System.Double y2 System.Double screenWidth System.Double screenHeight ScaleMethod scaleMethod | Improve this Doc View Source ZoomToBoudingbox(Double, Double, Double, Double, Double, Double, out Double, out Double, out Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, out double x, out double y, out double resolution, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description System.Double x1 System.Double y1 System.Double x2 System.Double y2 System.Double screenWidth System.Double screenHeight System.Double x System.Double y System.Double resolution ScaleMethod scaleMethod"
  },
  "api/Mapsui.Utilities.html": {
    "href": "api/Mapsui.Utilities.html",
    "title": "Namespace Mapsui.Utilities",
    "keywords": "Namespace Mapsui.Utilities Classes Constants DeveloperTools EmbeddedResourceLoader OpenStreetMap ProjectionHelper Version Version information helper class ZoomHelper Enums CrsType ScaleMethod"
  },
  "api/Mapsui.UI.FeatureInfoEventArgs.html": {
    "href": "api/Mapsui.UI.FeatureInfoEventArgs.html",
    "title": "Class FeatureInfoEventArgs",
    "keywords": "Class FeatureInfoEventArgs Inheritance System.Object FeatureInfoEventArgs Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class FeatureInfoEventArgs : EventArgs Properties | Improve this Doc View Source FeatureInfo Declaration public IDictionary<string, IEnumerable<IFeature>> FeatureInfo { get; set; } Property Value Type Description IDictionary < System.String , IEnumerable < IFeature >>"
  },
  "api/Mapsui.UI.Android.html": {
    "href": "api/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl PointExtensions Resource Resource.Attribute Resource.String Resource.Styleable"
  },
  "api/Mapsui.UI.Android.Resource.html": {
    "href": "api/Mapsui.UI.Android.Resource.html",
    "title": "Class Resource",
    "keywords": "Class Resource Inheritance System.Object Resource Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Resource : object"
  },
  "api/Mapsui.UI.Android.Resource.Styleable.html": {
    "href": "api/Mapsui.UI.Android.Resource.Styleable.html",
    "title": "Class Resource.Styleable",
    "keywords": "Class Resource.Styleable Inheritance System.Object Resource.Styleable Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Styleable : object Fields | Improve this Doc View Source start_with_openstreetmap_style Declaration public static int[] start_with_openstreetmap_style Field Value Type Description System.Int32 [] | Improve this Doc View Source start_with_openstreetmap_style_start_with_openstreetmap Declaration public static int start_with_openstreetmap_style_start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.String.html": {
    "href": "api/Mapsui.UI.Android.Resource.String.html",
    "title": "Class Resource.String",
    "keywords": "Class Resource.String Inheritance System.Object Resource.String Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class String : object Fields | Improve this Doc View Source ApplicationName Declaration public static int ApplicationName Field Value Type Description System.Int32 | Improve this Doc View Source Hello Declaration public static int Hello Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.Attribute.html": {
    "href": "api/Mapsui.UI.Android.Resource.Attribute.html",
    "title": "Class Resource.Attribute",
    "keywords": "Class Resource.Attribute Inheritance System.Object Resource.Attribute Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Attribute : object Fields | Improve this Doc View Source start_with_openstreetmap Declaration public static int start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.PointExtensions.html": {
    "href": "api/Mapsui.UI.Android.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToDeviceIndependentUnits(Point, Single) Declaration public static Point ToDeviceIndependentUnits(this Point point, float pixelsPerDeviceIndependentUnit) Parameters Type Name Description Point point System.Single pixelsPerDeviceIndependentUnit Returns Type Description Point"
  },
  "api/Mapsui.UI.Android.MapControl.html": {
    "href": "api/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl ViewGroup Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, ViewGroup Constructors | Improve this Doc View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Context context IAttributeSet attrs | Improve this Doc View Source MapControl(Context, IAttributeSet, Int32) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Context context IAttributeSet attrs System.Int32 defStyle Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source MapView_Touch(Object, TouchEventArgs) Declaration public void MapView_Touch(object sender, TouchEventArgs args) Parameters Type Name Description System.Object sender TouchEventArgs args | Improve this Doc View Source OnLayout(Boolean, Int32, Int32, Int32, Int32) Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description System.Boolean changed System.Int32 l System.Int32 t System.Int32 r System.Int32 b | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnSizeChanged(Int32, Int32, Int32, Int32) Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description System.Int32 width System.Int32 height System.Int32 oldWidth System.Int32 oldHeight | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl ViewGroup"
  },
  "api/Mapsui.Styles.html": {
    "href": "api/Mapsui.Styles.html",
    "title": "Namespace Mapsui.Styles",
    "keywords": "Namespace Mapsui.Styles Classes Bitmap This class has been replaced with BitmapID/BitmapRegistry. It is left in for backward compatibility. The problem with this class is that the renderer creates instances for each bitmap even if this same bitmap is used. BitmapDataAddedEventArgs BitmapRegistry Brush Color Font LabelStyle Defines a style used for rendering labels Offset Pen Size Sprite Style Defines a style used for rendering vector data StyleCollection SymbolStyle VectorStyle Interfaces IStyle Defines an interface for defining layer styles Enums FillStyle LabelStyle.HorizontalAlignmentEnum Label text alignment LabelStyle.LineBreakMode LabelStyle.VerticalAlignmentEnum Label text alignment PenStrokeCap PenStyle StrokeJoin SymbolType UnitType"
  },
  "api/Mapsui.Styles.VectorStyle.html": {
    "href": "api/Mapsui.Styles.VectorStyle.html",
    "title": "Class VectorStyle",
    "keywords": "Class VectorStyle Inheritance System.Object Style VectorStyle SymbolStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class VectorStyle : Style, IStyle Constructors | Improve this Doc View Source VectorStyle() Declaration public VectorStyle() Properties | Improve this Doc View Source Fill Fillstyle for Polygon geometries Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Line Linestyle for line geometries Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source Outline Outline style for line and polygon geometries Declaration public Pen Outline { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source Equals(VectorStyle) Declaration public bool Equals(VectorStyle vectorStyle) Parameters Type Name Description VectorStyle vectorStyle Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides Style.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Style.GetHashCode() Operators | Improve this Doc View Source Equality(VectorStyle, VectorStyle) Declaration public static bool operator ==(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(VectorStyle, VectorStyle) Declaration public static bool operator !=(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.UnitType.html": {
    "href": "api/Mapsui.Styles.UnitType.html",
    "title": "Enum UnitType",
    "keywords": "Enum UnitType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum UnitType : int Fields Name Description Pixel WorldUnit"
  },
  "api/Mapsui.Styles.Thematics.html": {
    "href": "api/Mapsui.Styles.Thematics.html",
    "title": "Namespace Mapsui.Styles.Thematics",
    "keywords": "Namespace Mapsui.Styles.Thematics Classes ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. ThemeStyle Interfaces IThemeStyle Interface for rendering a thematic layer Delegates CustomTheme.GetStyleMethod Custom Style Delegate method"
  },
  "api/Mapsui.Styles.Thematics.ThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.ThemeStyle.html",
    "title": "Class ThemeStyle",
    "keywords": "Class ThemeStyle Inheritance System.Object Style ThemeStyle Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ThemeStyle : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source ThemeStyle(Func<IFeature, IStyle>) Declaration public ThemeStyle(Func<IFeature, IStyle> method) Parameters Type Name Description Func < IFeature , IStyle > method Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature attribute) Parameters Type Name Description IFeature attribute Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.IThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.IThemeStyle.html",
    "title": "Interface IThemeStyle",
    "keywords": "Interface IThemeStyle Interface for rendering a thematic layer Inherited Members IStyle.MinVisible IStyle.MaxVisible IStyle.Enabled IStyle.Opacity Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public interface IThemeStyle : IStyle Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a feature Declaration IStyle GetStyle(IFeature feature) Parameters Type Name Description IFeature feature Feature to calculate color from Returns Type Description IStyle Color"
  },
  "api/Mapsui.Styles.Thematics.GradientTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.GradientTheme.html",
    "title": "Class GradientTheme",
    "keywords": "Class GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. Inheritance System.Object Style GradientTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class GradientTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source GradientTheme(String, Double, Double, IStyle, IStyle) Initializes a new instance of the GradientTheme class Declaration public GradientTheme(string columnName, double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description System.String columnName Name of column to extract the attribute System.Double minValue Minimum value System.Double maxValue Maximum value IStyle minStyle Color for minimum value IStyle maxStyle Color for maximum value Remarks The gradient theme interpolates linearly between two styles based on a numerical attribute in the datasource. This is useful for scaling symbols, line widths, line and fill colors from numerical attributes. Colors are interpolated between two colors, but if you want to interpolate through more colors (fx. a rainbow), set the TextColorBlend , LineColorBlend and FillColorBlend properties to a custom ColorBlend . The following properties are scaled (properties not mentioned here are not interpolated): Property Remarks Color Red, Green, Blue and Alpha values are linearly interpolated. Pen The color, width, color of pens are interpolated. MiterLimit,StartCap,EndCap,LineJoin,DashStyle,DashPattern,DashOffset,DashCap,CompoundArray, and Alignment are switched in the middle of the min/max values. Brush Brush color are interpolated. Other brushes are not supported. VectorStyle MaxVisible, MinVisible, Line, Outline, Fill and SymbolScale are scaled linearly. Symbol, EnableOutline and Enabled switch in the middle of the min/max values. LabelStyle FontSize, BackColor, ForeColor, MaxVisible, MinVisible, Offset are scaled linearly. All other properties use min-style. Creating a rainbow colorblend showing colors from red, through yellow, green and blue depicting the population density of a country. //Create two vector styles to interpolate between Mapsui.Styles.VectorStyle min = new Mapsui.Styles.VectorStyle(); Mapsui.Styles.VectorStyle max = new Mapsui.Styles.VectorStyle(); min.Outline.Width = 1f; //Outline width of the minimum value max.Outline.Width = 3f; //Outline width of the maximum value //Create a theme interpolating population density between 0 and 400 Mapsui.Rendering.Thematics.GradientTheme popdens = new Mapsui.Rendering.Thematics.GradientTheme(\"PopDens\", 0, 400, min, max); //Set the fill-style colors to be a rainbow blend from red to blue. popdens.FillColorBlend = Mapsui.Rendering.Thematics.ColorBlend.Rainbow5; myVectorLayer.Styles.Add(popdens); Properties | Improve this Doc View Source ColumnName Gets or sets the column name from where to get the attribute value Declaration public string ColumnName { get; set; } Property Value Type Description System.String | Improve this Doc View Source FillColorBlend Gets or sets the ColorBlend used as Fill Declaration public ColorBlend FillColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source LineColorBlend Gets or sets the ColorBlend used on lines Declaration public ColorBlend LineColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source Max Gets or sets the maximum value of the gradient Declaration public double Max { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MaxStyle Gets or sets the IStyle for the maximum value Declaration public IStyle MaxStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Min Gets or sets the minimum value of the gradient Declaration public double Min { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinStyle Gets or sets the IStyle for the minimum value Declaration public IStyle MinStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source TextColorBlend Gets or sets the ColorBlend used on labels Declaration public ColorBlend TextColorBlend { get; set; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a numeric DataColumn, where style properties are linearly interpolated between max and min values. Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Feature Returns Type Description IStyle IStyle calculated by a linear interpolation between the min/max styles Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.html",
    "title": "Class CustomTheme",
    "keywords": "Class CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. Inheritance System.Object Style CustomTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Object) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class CustomTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source CustomTheme(CustomTheme.GetStyleMethod) Initializes a new instance of the CustomTheme class Declaration public CustomTheme(CustomTheme.GetStyleMethod getStyleMethod) Parameters Type Name Description CustomTheme.GetStyleMethod getStyleMethod Properties | Improve this Doc View Source DefaultStyle Gets or sets the default style when an attribute isn't found in any bucket Declaration public IStyle DefaultStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source StyleDelegate Gets or sets the style delegate used for determining the style of a feature Declaration public CustomTheme.GetStyleMethod StyleDelegate { get; set; } Property Value Type Description CustomTheme.GetStyleMethod See Also CustomTheme.GetStyleMethod Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html",
    "title": "Delegate CustomTheme.GetStyleMethod",
    "keywords": "Delegate CustomTheme.GetStyleMethod Custom Style Delegate method Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public delegate IStyle GetStyleMethod(IFeature feature); Parameters Type Name Description IFeature feature Feature Returns Type Description IStyle Style to be applied to feature"
  },
  "api/Mapsui.Styles.Thematics.ColorBlend.html": {
    "href": "api/Mapsui.Styles.Thematics.ColorBlend.html",
    "title": "Class ColorBlend",
    "keywords": "Class ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. Inheritance System.Object ColorBlend Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ColorBlend : object Constructors | Improve this Doc View Source ColorBlend(Color[], Double[]) Initializes a new instance of the ColorBlend class. Declaration public ColorBlend(Color[] colors, double[] positions) Parameters Type Name Description Color [] colors An array of Color structures that represents the colors to use at corresponding positions along a gradient. System.Double [] positions An array of values that specify percentages of distance along the gradient line. Properties | Improve this Doc View Source BlackToWhite Gets a linear gradient scale from black to white Declaration public static ColorBlend BlackToWhite { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToGreen Gets a linear gradient scale from blue to green Declaration public static ColorBlend BlueToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToRed Gets a linear gradient scale from blue to red Declaration public static ColorBlend BlueToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Colors Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient. Declaration public Color[] Colors { get; set; } Property Value Type Description Color [] | Improve this Doc View Source GreenToBlue Gets a linear gradient scale from green to blue Declaration public static ColorBlend GreenToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source GreenToRed Gets a linear gradient scale from green to red Declaration public static ColorBlend GreenToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Positions Gets or sets the positions along a gradient line. Declaration public double[] Positions { get; set; } Property Value Type Description System.Double [] An array of values that specify percentages of distance along the gradient line. Remarks The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f, and the first element of the array must be 0.0f and the last element must be 1.0f. Along with the Colors property, this property defines a multicolor gradient. | Improve this Doc View Source Rainbow5 Gets a linear gradient scale with five colours making a rainbow from red to blue. Declaration public static ColorBlend Rainbow5 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 0.25: { Color.Red, Color.Yellow, Color.Green, Color.Cyan, Color.Blue } | Improve this Doc View Source Rainbow7 Gets a linear gradient scale with seven colours making a rainbow from red to violet. Declaration public static ColorBlend Rainbow7 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 1/6: { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Violet } | Improve this Doc View Source RedToBlue Gets a linear gradient scale from red to blue Declaration public static ColorBlend RedToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source RedToGreen Gets a linear gradient scale from red to green Declaration public static ColorBlend RedToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source WhiteToBlack Gets a linear gradient scale from white to black Declaration public static ColorBlend WhiteToBlack { get; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetColor(Double) Gets the color from the scale at position 'pos'. Declaration public Color GetColor(double pos) Parameters Type Name Description System.Double pos Position on scale between 0.0f and 1.0f Returns Type Description Color Color on scale Remarks If the position is outside the scale [0..1] only the fractional part is used (in other words the scale restarts for each integer-part). | Improve this Doc View Source ThreeColors(Color, Color, Color) Creates a linear gradient scale from three colors Declaration public static ColorBlend ThreeColors(Color fromColor, Color middleColor, Color toColor) Parameters Type Name Description Color fromColor Color middleColor Color toColor Returns Type Description ColorBlend | Improve this Doc View Source TwoColors(Color, Color) Creates a linear gradient scale from two colors Declaration public static ColorBlend TwoColors(Color fromColor, Color toColor) Parameters Type Name Description Color fromColor Color toColor Returns Type Description ColorBlend"
  },
  "api/Mapsui.Styles.SymbolType.html": {
    "href": "api/Mapsui.Styles.SymbolType.html",
    "title": "Enum SymbolType",
    "keywords": "Enum SymbolType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum SymbolType : int Fields Name Description Bitmap Ellipse Rectangle Svg Triangle"
  },
  "api/Mapsui.Styles.SymbolStyle.html": {
    "href": "api/Mapsui.Styles.SymbolStyle.html",
    "title": "Class SymbolStyle",
    "keywords": "Class SymbolStyle Inheritance System.Object Style VectorStyle SymbolStyle Implements IStyle Inherited Members VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class SymbolStyle : VectorStyle, IStyle Constructors | Improve this Doc View Source SymbolStyle() Declaration public SymbolStyle() Properties | Improve this Doc View Source BitmapId This identifies bitmap in the BitmapRegistry. Declaration public int BitmapId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The is useful if you need to symbolize the direction in which a vehicle is moving. When the symbol is false it will retain it's position to the screen. This is useful for pins like symbols. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SymbolOffset Gets or sets the offset in pixels of the symbol. Declaration public Offset SymbolOffset { get; set; } Property Value Type Description Offset Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset of SymbolScale =1.0. | Improve this Doc View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public double SymbolRotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public double SymbolScale { get; set; } Property Value Type Description System.Double Remarks Setting the symbolscale to '2.0' doubles the size of the symbol, where a scale of 0.5 makes the scale half the size of the original image | Improve this Doc View Source SymbolType Declaration public SymbolType SymbolType { get; set; } Property Value Type Description SymbolType | Improve this Doc View Source UnitType Declaration public UnitType UnitType { get; set; } Property Value Type Description UnitType Methods | Improve this Doc View Source Equals(SymbolStyle) Declaration public bool Equals(SymbolStyle symbolStyle) Parameters Type Name Description SymbolStyle symbolStyle Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides VectorStyle.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides VectorStyle.GetHashCode() Operators | Improve this Doc View Source Equality(SymbolStyle, SymbolStyle) Declaration public static bool operator ==(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(SymbolStyle, SymbolStyle) Declaration public static bool operator !=(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description System.Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.StyleCollection.html": {
    "href": "api/Mapsui.Styles.StyleCollection.html",
    "title": "Class StyleCollection",
    "keywords": "Class StyleCollection Inheritance System.Object StyleCollection Implements IStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class StyleCollection : Collection<IStyle>, IStyle Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Opacity Declaration public float Opacity { get; set; } Property Value Type Description System.Single Implements IStyle"
  },
  "api/Mapsui.Rendering.Xaml.PolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.PolygonRenderer.html",
    "title": "Class PolygonRenderer",
    "keywords": "Class PolygonRenderer Inheritance System.Object PolygonRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class PolygonRenderer : object Methods | Improve this Doc View Source CreatePolygonPath(VectorStyle, Double, SymbolCache, Single) Declaration public static Windows.Shapes.Path CreatePolygonPath(VectorStyle style, double resolution, SymbolCache symbolCache, float rotate = 0F) Parameters Type Name Description VectorStyle style System.Double resolution SymbolCache symbolCache System.Single rotate Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RenderPolygon(Polygon, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Windows.Shapes.Shape RenderPolygon(Polygon polygon, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description Polygon polygon IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.PointRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.PointRenderer.html",
    "title": "Class PointRenderer",
    "keywords": "Class PointRenderer Inheritance System.Object PointRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class PointRenderer : object Methods | Improve this Doc View Source PositionPoint(UIElement, Point, IStyle, IReadOnlyViewport) Declaration public static void PositionPoint(UIElement renderedGeometry, Point point, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description UIElement renderedGeometry Point point IStyle style IReadOnlyViewport viewport | Improve this Doc View Source RenderPoint(Point, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Windows.Shapes.Shape RenderPoint(Point point, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description Point point IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.OutlinedTextBlock.html": {
    "href": "api/Mapsui.Rendering.Xaml.OutlinedTextBlock.html",
    "title": "Class OutlinedTextBlock",
    "keywords": "Class OutlinedTextBlock Inheritance System.Object OutlinedTextBlock Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class OutlinedTextBlock : FrameworkElement Constructors | Improve this Doc View Source OutlinedTextBlock() Declaration public OutlinedTextBlock() Fields | Improve this Doc View Source FillProperty Declaration public static readonly DependencyProperty FillProperty Field Value Type Description DependencyProperty | Improve this Doc View Source FontFamilyProperty Declaration public static readonly DependencyProperty FontFamilyProperty Field Value Type Description DependencyProperty | Improve this Doc View Source FontSizeProperty Declaration public static readonly DependencyProperty FontSizeProperty Field Value Type Description DependencyProperty | Improve this Doc View Source FontStretchProperty Declaration public static readonly DependencyProperty FontStretchProperty Field Value Type Description DependencyProperty | Improve this Doc View Source FontStyleProperty Declaration public static readonly DependencyProperty FontStyleProperty Field Value Type Description DependencyProperty | Improve this Doc View Source FontWeightProperty Declaration public static readonly DependencyProperty FontWeightProperty Field Value Type Description DependencyProperty | Improve this Doc View Source StrokeProperty Declaration public static readonly DependencyProperty StrokeProperty Field Value Type Description DependencyProperty | Improve this Doc View Source StrokeThicknessProperty Declaration public static readonly DependencyProperty StrokeThicknessProperty Field Value Type Description DependencyProperty | Improve this Doc View Source TextAlignmentProperty Declaration public static readonly DependencyProperty TextAlignmentProperty Field Value Type Description DependencyProperty | Improve this Doc View Source TextDecorationsProperty Declaration public static readonly DependencyProperty TextDecorationsProperty Field Value Type Description DependencyProperty | Improve this Doc View Source TextProperty Declaration public static readonly DependencyProperty TextProperty Field Value Type Description DependencyProperty | Improve this Doc View Source TextTrimmingProperty Declaration public static readonly DependencyProperty TextTrimmingProperty Field Value Type Description DependencyProperty | Improve this Doc View Source TextWrappingProperty Declaration public static readonly DependencyProperty TextWrappingProperty Field Value Type Description DependencyProperty Properties | Improve this Doc View Source Fill Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source FontFamily Declaration public FontFamily FontFamily { get; set; } Property Value Type Description FontFamily | Improve this Doc View Source FontSize Declaration public double FontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source FontStretch Declaration public FontStretch FontStretch { get; set; } Property Value Type Description FontStretch | Improve this Doc View Source FontStyle Declaration public FontStyle FontStyle { get; set; } Property Value Type Description FontStyle | Improve this Doc View Source FontWeight Declaration public FontWeight FontWeight { get; set; } Property Value Type Description FontWeight | Improve this Doc View Source Stroke Declaration public Brush Stroke { get; set; } Property Value Type Description Brush | Improve this Doc View Source StrokeThickness Declaration public double StrokeThickness { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source TextAlignment Declaration public TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source TextDecorations Declaration public TextDecorationCollection TextDecorations { get; set; } Property Value Type Description TextDecorationCollection | Improve this Doc View Source TextTrimming Declaration public TextTrimming TextTrimming { get; set; } Property Value Type Description TextTrimming | Improve this Doc View Source TextWrapping Declaration public TextWrapping TextWrapping { get; set; } Property Value Type Description TextWrapping Methods | Improve this Doc View Source ArrangeOverride(Size) Declaration protected override Size ArrangeOverride(Size finalSize) Parameters Type Name Description Size finalSize Returns Type Description Size | Improve this Doc View Source MeasureOverride(Size) Declaration protected override Size MeasureOverride(Size availableSize) Parameters Type Name Description Size availableSize Returns Type Description Size | Improve this Doc View Source MeasureText() Declaration public Size MeasureText() Returns Type Description Size | Improve this Doc View Source OnRender(DrawingContext) Declaration protected override void OnRender(DrawingContext drawingContext) Parameters Type Name Description DrawingContext drawingContext"
  },
  "api/Mapsui.Rendering.Xaml.MultiPolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MultiPolygonRenderer.html",
    "title": "Class MultiPolygonRenderer",
    "keywords": "Class MultiPolygonRenderer Inheritance System.Object MultiPolygonRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MultiPolygonRenderer : object Methods | Improve this Doc View Source RenderMultiPolygon(MultiPolygon, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Windows.Shapes.Path RenderMultiPolygon(MultiPolygon geometry, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description MultiPolygon geometry IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Path"
  },
  "api/Mapsui.Rendering.Xaml.MultiLineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MultiLineStringRenderer.html",
    "title": "Class MultiLineStringRenderer",
    "keywords": "Class MultiLineStringRenderer Inheritance System.Object MultiLineStringRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MultiLineStringRenderer : object Methods | Improve this Doc View Source Render(MultiLineString, IStyle, IReadOnlyViewport) Declaration public static Windows.Shapes.Shape Render(MultiLineString multiLineString, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description MultiLineString multiLineString IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.MatrixHelper.html": {
    "href": "api/Mapsui.Rendering.Xaml.MatrixHelper.html",
    "title": "Class MatrixHelper",
    "keywords": "Class MatrixHelper Inheritance System.Object MatrixHelper Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MatrixHelper : object Methods | Improve this Doc View Source Append(ref Matrix, Matrix) Declaration public static void Append(ref Matrix matrix, Matrix matrixOther) Parameters Type Name Description Matrix matrix Matrix matrixOther | Improve this Doc View Source CreateScaling(Double, Double, Double, Double) Declaration public static Matrix CreateScaling(double scaleX, double scaleY, double centerX, double centerY) Parameters Type Name Description System.Double scaleX System.Double scaleY System.Double centerX System.Double centerY Returns Type Description Matrix | Improve this Doc View Source InvertX(ref Matrix, Double) Declaration public static void InvertX(ref Matrix matrix, double centerX = null) Parameters Type Name Description Matrix matrix System.Double centerX | Improve this Doc View Source InvertY(ref Matrix, Double) Declaration public static void InvertY(ref Matrix matrix, double centerY = null) Parameters Type Name Description Matrix matrix System.Double centerY | Improve this Doc View Source Multiply(ref Matrix, Matrix) Declaration public static void Multiply(ref Matrix trans1, Matrix trans2) Parameters Type Name Description Matrix trans1 Matrix trans2 | Improve this Doc View Source Rotate(ref Matrix, Double) Declaration public static void Rotate(ref Matrix matrix, double angle) Parameters Type Name Description Matrix matrix System.Double angle | Improve this Doc View Source RotateAt(ref Matrix, Double, Double, Double) Declaration public static void RotateAt(ref Matrix matrix, double angle, double centerX = null, double centerY = null) Parameters Type Name Description Matrix matrix System.Double angle System.Double centerX System.Double centerY | Improve this Doc View Source ScaleAt(ref Matrix, Double, Double, Double, Double) Declaration public static void ScaleAt(ref Matrix matrix, double scaleX, double scaleY, double centerX = null, double centerY = null) Parameters Type Name Description Matrix matrix System.Double scaleX System.Double scaleY System.Double centerX System.Double centerY | Improve this Doc View Source Translate(ref Matrix, Double, Double) Declaration public static void Translate(ref Matrix matrix, double offsetX, double offsetY) Parameters Type Name Description Matrix matrix System.Double offsetX System.Double offsetY"
  },
  "api/Mapsui.Rendering.Xaml.MapRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance System.Object MapRenderer Implements IRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class MapRenderer : object, IRenderer Constructors | Improve this Doc View Source MapRenderer() Declaration public MapRenderer() Properties | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration public IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description IDictionary < Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration public void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport IEnumerable < ILayer > layers IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderLayer(Canvas, IReadOnlyViewport, ILayer, SymbolCache, Boolean) Declaration public static void RenderLayer(Canvas target, IReadOnlyViewport viewport, ILayer layer, SymbolCache symbolCache, bool rasterizing = false) Parameters Type Name Description Canvas target IReadOnlyViewport viewport ILayer layer SymbolCache symbolCache System.Boolean rasterizing | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color) Declaration public MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Color background Returns Type Description MemoryStream Implements IRenderer"
  },
  "api/Mapsui.Rendering.Xaml.LineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance System.Object LineStringRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class LineStringRenderer : object Methods | Improve this Doc View Source CreateLineStringPath(VectorStyle) Declaration public static Windows.Shapes.Path CreateLineStringPath(VectorStyle style) Parameters Type Name Description VectorStyle style Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RenderLineString(LineString, IStyle, IReadOnlyViewport) Declaration public static Windows.Shapes.Shape RenderLineString(LineString lineString, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description LineString lineString IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Providers.html": {
    "href": "api/Mapsui.Providers.html",
    "title": "Namespace Mapsui.Providers",
    "keywords": "Namespace Mapsui.Providers Classes Feature FeatureExtensions Features MemoryProvider Datasource for storing a limited set of geometries. StackedLabelProvider TileProvider Interfaces IFeature IFeatures IProjectingProvider IProvider Interface for data providers"
  },
  "api/Mapsui.Providers.Wfs.html": {
    "href": "api/Mapsui.Providers.Wfs.html",
    "title": "Namespace Mapsui.Providers.Wfs",
    "keywords": "Namespace Mapsui.Providers.Wfs Classes WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Enums WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions."
  },
  "api/Mapsui.Providers.Wfs.Xml.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.html",
    "title": "Namespace Mapsui.Providers.Wfs.Xml",
    "keywords": "Namespace Mapsui.Providers.Wfs.Xml Classes XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager . Interfaces IXPathQueryManager XPathQueryManager interface"
  },
  "api/Mapsui.Providers.ArcGIS.Image.ArcGISImageServiceProvider.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.ArcGISImageServiceProvider.html",
    "title": "Class ArcGISImageServiceProvider",
    "keywords": "Class ArcGISImageServiceProvider Inheritance System.Object ArcGISImageServiceProvider Implements IProjectingProvider IProvider Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class ArcGISImageServiceProvider : object, IProjectingProvider, IProvider Constructors | Improve this Doc View Source ArcGISImageServiceProvider(ArcGISImageCapabilities, Boolean, String) Declaration public ArcGISImageServiceProvider(ArcGISImageCapabilities capabilities, bool continueOnError = true, string token = null) Parameters Type Name Description ArcGISImageCapabilities capabilities System.Boolean continueOnError System.String token | Improve this Doc View Source ArcGISImageServiceProvider(String, Boolean, String, InterpolationType, Int64, Int64, String) Declaration public ArcGISImageServiceProvider(string url, bool continueOnError = false, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor, long startTime = null, long endTime = null, string token = null) Parameters Type Name Description System.String url System.Boolean continueOnError System.String format InterpolationType interpolation System.Int64 startTime System.Int64 endTime System.String token Properties | Improve this Doc View Source ArcGisImageCapabilities Declaration public ArcGISImageCapabilities ArcGisImageCapabilities { get; } Property Value Type Description ArcGISImageCapabilities | Improve this Doc View Source ContinueOnError Declaration public bool ContinueOnError { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Credentials Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public Collections.Generic.IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature > | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source TryGetMap(IViewport, ref IRaster) Declaration public bool TryGetMap(IViewport viewport, ref IRaster raster) Parameters Type Name Description IViewport viewport IRaster raster Returns Type Description System.Boolean Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.Providers.ArcGIS.Image.ArcGISImageCapabilities.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.ArcGISImageCapabilities.html",
    "title": "Class ArcGISImageCapabilities",
    "keywords": "Class ArcGISImageCapabilities Inheritance System.Object ArcGISImageCapabilities Implements IArcGISCapabilities Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class ArcGISImageCapabilities : object, IArcGISCapabilities Constructors | Improve this Doc View Source ArcGISImageCapabilities() Declaration public ArcGISImageCapabilities() | Improve this Doc View Source ArcGISImageCapabilities(String, Int64, Int64, String, InterpolationType) Declaration public ArcGISImageCapabilities(string url, long startTime = null, long endTime = null, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor) Parameters Type Name Description System.String url System.Int64 startTime System.Int64 endTime System.String format InterpolationType interpolation Properties | Improve this Doc View Source allowComputeTiePoints Declaration public bool allowComputeTiePoints { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source allowedMosaicMethods Declaration public string allowedMosaicMethods { get; set; } Property Value Type Description System.String | Improve this Doc View Source allowRasterFunction Declaration public bool allowRasterFunction { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source bandCount Declaration public int bandCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source cacheDirectory Declaration public string cacheDirectory { get; set; } Property Value Type Description System.String | Improve this Doc View Source capabilities Declaration public string capabilities { get; set; } Property Value Type Description System.String | Improve this Doc View Source copyrightText Declaration public string copyrightText { get; set; } Property Value Type Description System.String | Improve this Doc View Source currentVersion Declaration public string currentVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source defaultCompressionQuality Declaration public string defaultCompressionQuality { get; set; } Property Value Type Description System.String | Improve this Doc View Source defaultMosaicMethod Declaration public string defaultMosaicMethod { get; set; } Property Value Type Description System.String | Improve this Doc View Source defaultResamplingMethod Declaration public string defaultResamplingMethod { get; set; } Property Value Type Description System.String | Improve this Doc View Source description Declaration public string description { get; set; } Property Value Type Description System.String | Improve this Doc View Source editFieldsInfo Declaration public EditFieldsInfo editFieldsInfo { get; set; } Property Value Type Description EditFieldsInfo | Improve this Doc View Source EndTime Declaration public long EndTime { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source fields Declaration public Field[] fields { get; set; } Property Value Type Description Field [] | Improve this Doc View Source Format Declaration public string Format { get; set; } Property Value Type Description System.String | Improve this Doc View Source fullExtent Declaration public Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source hasColormap Declaration public bool hasColormap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source hasHistograms Declaration public bool hasHistograms { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source hasRasterAttributeTable Declaration public bool hasRasterAttributeTable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source initialExtent Declaration public Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source Interpolation Declaration public InterpolationType Interpolation { get; set; } Property Value Type Description InterpolationType | Improve this Doc View Source maxDownloadImageCount Declaration public double maxDownloadImageCount { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxDownloadSizeLimit Declaration public double maxDownloadSizeLimit { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxImageHeight Declaration public double maxImageHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxImageWidth Declaration public double maxImageWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxMosaicImageCount Declaration public double maxMosaicImageCount { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxPixelSize Declaration public double maxPixelSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxRecordCount Declaration public double maxRecordCount { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description System.Double | Improve this Doc View Source maxValues Declaration public double[] maxValues { get; set; } Property Value Type Description System.Double [] | Improve this Doc View Source mensurationCapabilities Declaration public string mensurationCapabilities { get; set; } Property Value Type Description System.String | Improve this Doc View Source minPixelSize Declaration public double minPixelSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source minScale Declaration public double minScale { get; set; } Property Value Type Description System.Double | Improve this Doc View Source minValues Declaration public double[] minValues { get; set; } Property Value Type Description System.Double [] | Improve this Doc View Source mosaicOperator Declaration public string mosaicOperator { get; set; } Property Value Type Description System.String | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source objectIdField Declaration public string objectIdField { get; set; } Property Value Type Description System.String | Improve this Doc View Source ownershipBasedAccessControlForRasters Declaration public OwnershipBasedAccessControlForRasters ownershipBasedAccessControlForRasters { get; set; } Property Value Type Description OwnershipBasedAccessControlForRasters | Improve this Doc View Source pixelSizeX Declaration public double pixelSizeX { get; set; } Property Value Type Description System.Double | Improve this Doc View Source pixelSizeY Declaration public double pixelSizeY { get; set; } Property Value Type Description System.Double | Improve this Doc View Source pixelType Declaration public string pixelType { get; set; } Property Value Type Description System.String | Improve this Doc View Source rasterFunctionInfos Declaration public RasterFunctionInfo[] rasterFunctionInfos { get; set; } Property Value Type Description RasterFunctionInfo [] | Improve this Doc View Source rasterTypeInfos Declaration public RasterTypeInfo[] rasterTypeInfos { get; set; } Property Value Type Description RasterTypeInfo [] | Improve this Doc View Source serviceDataType Declaration public string serviceDataType { get; set; } Property Value Type Description System.String | Improve this Doc View Source serviceDescription Declaration public string serviceDescription { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source sortField Declaration public string sortField { get; set; } Property Value Type Description System.String | Improve this Doc View Source sortValue Declaration public string sortValue { get; set; } Property Value Type Description System.String | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source StartTime Declaration public long StartTime { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source stdvValues Declaration public double[] stdvValues { get; set; } Property Value Type Description System.Double [] | Improve this Doc View Source supportsAdvancedQueries Declaration public bool supportsAdvancedQueries { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source supportsStatistics Declaration public bool supportsStatistics { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source tileInfo Declaration public TileInfo tileInfo { get; set; } Property Value Type Description TileInfo | Improve this Doc View Source timeInfo Declaration public TimeInfo timeInfo { get; set; } Property Value Type Description TimeInfo | Improve this Doc View Source useStandardizedQueries Declaration public bool useStandardizedQueries { get; set; } Property Value Type Description System.Boolean Implements IArcGISCapabilities"
  },
  "api/Mapsui.Providers.ArcGIS.IArcGISCapabilities.html": {
    "href": "api/Mapsui.Providers.ArcGIS.IArcGISCapabilities.html",
    "title": "Interface IArcGISCapabilities",
    "keywords": "Interface IArcGISCapabilities Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public interface IArcGISCapabilities Properties | Improve this Doc View Source capabilities Declaration string capabilities { get; set; } Property Value Type Description System.String | Improve this Doc View Source copyrightText Declaration string copyrightText { get; set; } Property Value Type Description System.String | Improve this Doc View Source currentVersion Declaration string currentVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source description Declaration string description { get; set; } Property Value Type Description System.String | Improve this Doc View Source fullExtent Declaration Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source initialExtent Declaration Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source serviceDescription Declaration string serviceDescription { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServiceUrl Declaration string ServiceUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source singleFusedMapCache Declaration bool singleFusedMapCache { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source tileInfo Declaration TileInfo tileInfo { get; set; } Property Value Type Description TileInfo"
  },
  "api/Mapsui.Providers.ArcGIS.Extent.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Extent.html",
    "title": "Class Extent",
    "keywords": "Class Extent Inheritance System.Object Extent Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class Extent : object Properties | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source xmax Declaration public double xmax { get; set; } Property Value Type Description System.Double | Improve this Doc View Source xmin Declaration public double xmin { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ymax Declaration public double ymax { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ymin Declaration public double ymin { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.html",
    "title": "Namespace Mapsui.Providers.ArcGIS.Dynamic",
    "keywords": "Namespace Mapsui.Providers.ArcGIS.Dynamic Classes ArcGISDynamicCapabilities ArcGISDynamicProvider ArcGISFeatureInfo ArcGISIdentify ArcGISLayer ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up ArcGISLegendResponse ArcGISLegendResponseLayer ArcGISLegendResponseLegend Result Delegates ArcGISLegendEventHandler StatusEventHandler"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISIdentify.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISIdentify.html",
    "title": "Class ArcGISIdentify",
    "keywords": "Class ArcGISIdentify Inheritance System.Object ArcGISIdentify Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISIdentify : object Constructors | Improve this Doc View Source ArcGISIdentify() Declaration public ArcGISIdentify() Properties | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Request(String, Double, Double, Int32, String[], Double, Double, Double, Double, Double, Double, Double, Boolean, ICredentials, Int32) Request a ArcGIS Service for FeatureInfo Declaration public void Request(string url, double x, double y, int tolerance, string[] layers, double extendXmin, double extendYmin, double extendXmax, double extendYmax, double mapWidth, double mapHeight, double mapDpi, bool returnGeometry, ICredentials credentials = null, int sr = null) Parameters Type Name Description System.String url Mapserver url System.Double x x coordinate System.Double y y coordinate System.Int32 tolerance The distance in screen pixels from the specified geometry within which the identify should be performed System.String [] layers The layers to perform the identify operation on System.Double extendXmin The extent or bounding box of the map currently being viewed. System.Double extendYmin The extent or bounding box of the map currently being viewed. System.Double extendXmax The extent or bounding box of the map currently being viewed. System.Double extendYmax The extent or bounding box of the map currently being viewed. System.Double mapWidth The screen image display width System.Double mapHeight The screen image display height System.Double mapDpi The screen image display dpi, default is: 96 System.Boolean returnGeometry ICredentials credentials System.Int32 sr sr code of input geometry Events | Improve this Doc View Source IdentifyFailed Declaration public event StatusEventHandler IdentifyFailed Event Type Type Description StatusEventHandler | Improve this Doc View Source IdentifyFinished Declaration public event StatusEventHandler IdentifyFinished Event Type Type Description StatusEventHandler"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISFeatureInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISFeatureInfo.html",
    "title": "Class ArcGISFeatureInfo",
    "keywords": "Class ArcGISFeatureInfo Inheritance System.Object ArcGISFeatureInfo Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISFeatureInfo : object Properties | Improve this Doc View Source results Declaration public Result[] results { get; set; } Property Value Type Description Result []"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISDynamicProvider.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISDynamicProvider.html",
    "title": "Class ArcGISDynamicProvider",
    "keywords": "Class ArcGISDynamicProvider Inheritance System.Object ArcGISDynamicProvider Implements IProjectingProvider IProvider Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISDynamicProvider : object, IProjectingProvider, IProvider Constructors | Improve this Doc View Source ArcGISDynamicProvider(String, ArcGISDynamicCapabilities, String) Create ArcGisDynamicProvider based on a given capabilities file Declaration public ArcGISDynamicProvider(string url, ArcGISDynamicCapabilities arcGisDynamicCapabilities, string token = null) Parameters Type Name Description System.String url url to map service example: http://url/arcgis/rest/services/test/MapServer ArcGISDynamicCapabilities arcGisDynamicCapabilities System.String token token to request service | Improve this Doc View Source ArcGISDynamicProvider(String, String) Create ArcGisDynamicProvider, capabilities will be parsed automatically Declaration public ArcGISDynamicProvider(string url, string token = null) Parameters Type Name Description System.String url url to map service example: http://url/arcgis/rest/services/test/MapServer System.String token token to request service Properties | Improve this Doc View Source ArcGisDynamicCapabilities Declaration public ArcGISDynamicCapabilities ArcGisDynamicCapabilities { get; } Property Value Type Description ArcGISDynamicCapabilities | Improve this Doc View Source Credentials Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetRequestUrl(BoundingBox, Int32, Int32) Gets the URL for a map export request base on current settings, the image size and boundingbox Declaration public string GetRequestUrl(BoundingBox box, int width, int height) Parameters Type Name Description BoundingBox box Area the request should cover System.Int32 width System.Int32 height Returns Type Description System.String URL for ArcGIS Dynamic request | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source TryGetMap(IViewport, ref IRaster) Retrieves the bitmap from ArcGIS Dynamic service Declaration public bool TryGetMap(IViewport viewport, ref IRaster raster) Parameters Type Name Description IViewport viewport IRaster raster Returns Type Description System.Boolean Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISDynamicCapabilities.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISDynamicCapabilities.html",
    "title": "Class ArcGISDynamicCapabilities",
    "keywords": "Class ArcGISDynamicCapabilities Inheritance System.Object ArcGISDynamicCapabilities Implements IArcGISCapabilities Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISDynamicCapabilities : object, IArcGISCapabilities Fields | Improve this Doc View Source tables Declaration public Table[] tables Field Value Type Description Table [] Properties | Improve this Doc View Source capabilities Declaration public string capabilities { get; set; } Property Value Type Description System.String | Improve this Doc View Source copyrightText Declaration public string copyrightText { get; set; } Property Value Type Description System.String | Improve this Doc View Source currentVersion Declaration public string currentVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source description Declaration public string description { get; set; } Property Value Type Description System.String | Improve this Doc View Source documentInfo Declaration public IDictionary<string, string> documentInfo { get; set; } Property Value Type Description IDictionary < System.String , System.String > | Improve this Doc View Source fullExtent Declaration public Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source initialExtent Declaration public Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source layers Declaration public ArcGISLayer[] layers { get; set; } Property Value Type Description ArcGISLayer [] | Improve this Doc View Source mapName Declaration public string mapName { get; set; } Property Value Type Description System.String | Improve this Doc View Source serviceDescription Declaration public string serviceDescription { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source supportedImageFormatTypes Declaration public string supportedImageFormatTypes { get; set; } Property Value Type Description System.String | Improve this Doc View Source tileInfo Declaration public TileInfo tileInfo { get; set; } Property Value Type Description TileInfo | Improve this Doc View Source units Declaration public string units { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetSupportedImageFormatTypes() Declaration public string[] GetSupportedImageFormatTypes() Returns Type Description System.String [] Implements IArcGISCapabilities"
  },
  "api/Mapsui.Providers.ArcGIS.CapabilitiesType.html": {
    "href": "api/Mapsui.Providers.ArcGIS.CapabilitiesType.html",
    "title": "Enum CapabilitiesType",
    "keywords": "Enum CapabilitiesType Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public enum CapabilitiesType : int Fields Name Description DynamicServiceCapabilities ImageServiceCapabilities"
  },
  "api/Mapsui.Providers.ArcGIS.CapabilitiesHelper.html": {
    "href": "api/Mapsui.Providers.ArcGIS.CapabilitiesHelper.html",
    "title": "Class CapabilitiesHelper",
    "keywords": "Class CapabilitiesHelper Inheritance System.Object CapabilitiesHelper Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class CapabilitiesHelper : object Constructors | Improve this Doc View Source CapabilitiesHelper() Helper class for getting capabilities of an ArcGIS service + extras Declaration public CapabilitiesHelper() Properties | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetCapabilities(String, CapabilitiesType) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType) Parameters Type Name Description System.String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType | Improve this Doc View Source GetCapabilities(String, CapabilitiesType, ICredentials) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, ICredentials credentials = null) Parameters Type Name Description System.String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType ICredentials credentials Credentials to access the service | Improve this Doc View Source GetCapabilities(String, CapabilitiesType, String) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, string token = null) Parameters Type Name Description System.String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType System.String token Token string to access the service | Improve this Doc View Source GetTileSchema(ArcGISDynamicCapabilities) Generate BruTile TileSchema based on ArcGIS Capabilities Declaration public static ITileSchema GetTileSchema(ArcGISDynamicCapabilities arcGisDynamicCapabilities) Parameters Type Name Description ArcGISDynamicCapabilities arcGisDynamicCapabilities Returns Type Description ITileSchema TileSchema, returns null if service is not tiled | Improve this Doc View Source OnCapabilitiesFailed(EventArgs) Declaration protected virtual void OnCapabilitiesFailed(EventArgs e) Parameters Type Name Description EventArgs e | Improve this Doc View Source OnFinished(EventArgs) Declaration protected virtual void OnFinished(EventArgs e) Parameters Type Name Description EventArgs e Events | Improve this Doc View Source CapabilitiesFailed Triggered when failed parsing or getting capabilities Declaration public event CapabilitiesHelper.StatusEventHandler CapabilitiesFailed Event Type Type Description CapabilitiesHelper.StatusEventHandler | Improve this Doc View Source CapabilitiesReceived Triggered when finished parsing capabilities, returns Capabilities object Declaration public event CapabilitiesHelper.StatusEventHandler CapabilitiesReceived Event Type Type Description CapabilitiesHelper.StatusEventHandler"
  },
  "api/Mapsui.Providers.ArcGIS.CapabilitiesHelper.StatusEventHandler.html": {
    "href": "api/Mapsui.Providers.ArcGIS.CapabilitiesHelper.StatusEventHandler.html",
    "title": "Delegate CapabilitiesHelper.StatusEventHandler",
    "keywords": "Delegate CapabilitiesHelper.StatusEventHandler Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public delegate void StatusEventHandler(object sender, EventArgs e); Parameters Type Name Description System.Object sender EventArgs e"
  },
  "api/Mapsui.Projection.html": {
    "href": "api/Mapsui.Projection.html",
    "title": "Namespace Mapsui.Projection",
    "keywords": "Namespace Mapsui.Projection Classes BoundingBoxIterator GeometryIterator Mercator MinimalTransformation A very minimal implementation of ITransformation. It is only capable of projecting between SphericalMercator and WGS84. SphericalMercator Transformer Interfaces ITransformation"
  },
  "api/Mapsui.Projection.ITransformation.html": {
    "href": "api/Mapsui.Projection.ITransformation.html",
    "title": "Interface ITransformation",
    "keywords": "Interface ITransformation Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public interface ITransformation Methods | Improve this Doc View Source IsProjectionSupported(String, String) Declaration bool? IsProjectionSupported(string fromCRS, string toCRS) Parameters Type Name Description System.String fromCRS System.String toCRS Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Transform(String, String, BoundingBox) Declaration BoundingBox Transform(string fromCRS, string toCRS, BoundingBox boundingBox) Parameters Type Name Description System.String fromCRS System.String toCRS BoundingBox boundingBox Returns Type Description BoundingBox | Improve this Doc View Source Transform(String, String, IGeometry) Declaration IGeometry Transform(string fromCRS, string toCRS, IGeometry geometry) Parameters Type Name Description System.String fromCRS System.String toCRS IGeometry geometry Returns Type Description IGeometry"
  },
  "api/Mapsui.Projection.GeometryIterator.html": {
    "href": "api/Mapsui.Projection.GeometryIterator.html",
    "title": "Class GeometryIterator",
    "keywords": "Class GeometryIterator Inheritance System.Object GeometryIterator Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public static class GeometryIterator : object Methods | Improve this Doc View Source AllVertices(IGeometry) Declaration public static IEnumerable<Point> AllVertices(this IGeometry geometry) Parameters Type Name Description IGeometry geometry Returns Type Description IEnumerable < Point >"
  },
  "api/Mapsui.Projection.BoundingBoxIterator.html": {
    "href": "api/Mapsui.Projection.BoundingBoxIterator.html",
    "title": "Class BoundingBoxIterator",
    "keywords": "Class BoundingBoxIterator Inheritance System.Object BoundingBoxIterator Namespace : Mapsui.Projection Assembly : Mapsui.dll Syntax public static class BoundingBoxIterator : object Methods | Improve this Doc View Source AllVertices(BoundingBox) Declaration public static IEnumerable<Point> AllVertices(this BoundingBox boundingBox) Parameters Type Name Description BoundingBox boundingBox Returns Type Description IEnumerable < Point > | Improve this Doc View Source GetCornerVertices(BoundingBox) Declaration public static IEnumerable<Point> GetCornerVertices(this BoundingBox boundingBox) Parameters Type Name Description BoundingBox boundingBox Returns Type Description IEnumerable < Point >"
  },
  "api/Mapsui.Navigator.html": {
    "href": "api/Mapsui.Navigator.html",
    "title": "Class Navigator",
    "keywords": "Class Navigator Inheritance System.Object Navigator Implements INavigator Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Navigator : object, INavigator Constructors | Improve this Doc View Source Navigator(Map, IViewport) Declaration public Navigator(Map map, IViewport viewport) Parameters Type Name Description Map map IViewport viewport Properties | Improve this Doc View Source Navigated Declaration public EventHandler Navigated { get; set; } Property Value Type Description EventHandler Methods | Improve this Doc View Source CenterOn(Point) Change center of viewport Declaration public void CenterOn(Point center) Parameters Type Name Description Point center New center point of viewport | Improve this Doc View Source CenterOn(Double, Double) Change center of viewport to X/Y coordinates Declaration public void CenterOn(double x, double y) Parameters Type Name Description System.Double x X value of the new center System.Double y Y value of the new center | Improve this Doc View Source NavigateTo(BoundingBox, ScaleMethod) Navigate center of viewport to center of extent and change resolution Declaration public void NavigateTo(BoundingBox extent, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description BoundingBox extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determine resolution | Improve this Doc View Source NavigateTo(Point, Double) Change both center and resolution of the viewport Declaration public void NavigateTo(Point center, double resolution) Parameters Type Name Description Point center The new center System.Double resolution The new resolution | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod) Declaration public void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill) Parameters Type Name Description ScaleMethod scaleMethod | Improve this Doc View Source RotateTo(Double) Change rotation of viewport Declaration public void RotateTo(double rotation) Parameters Type Name Description System.Double rotation New rotation in degrees of viewport> | Improve this Doc View Source ZoomIn() Declaration public void ZoomIn() | Improve this Doc View Source ZoomIn(Point) Declaration public void ZoomIn(Point centerOfZoom) Parameters Type Name Description Point centerOfZoom | Improve this Doc View Source ZoomOut() Declaration public void ZoomOut() | Improve this Doc View Source ZoomOut(Point) Declaration public void ZoomOut(Point centerOfZoom) Parameters Type Name Description Point centerOfZoom | Improve this Doc View Source ZoomTo(Double) Change resolution of viewport Declaration public void ZoomTo(double resolution) Parameters Type Name Description System.Double resolution New resolution to use | Improve this Doc View Source ZoomTo(Double, Point) Declaration public void ZoomTo(double resolution, Point centerOfZoom) Parameters Type Name Description System.Double resolution Point centerOfZoom Implements INavigator"
  },
  "api/Mapsui.LimitedViewport.html": {
    "href": "api/Mapsui.LimitedViewport.html",
    "title": "Class LimitedViewport",
    "keywords": "Class LimitedViewport Inheritance System.Object LimitedViewport Implements IViewport IReadOnlyViewport Namespace : Mapsui Assembly : Mapsui.dll Syntax public class LimitedViewport : object, IViewport, IReadOnlyViewport Constructors | Improve this Doc View Source LimitedViewport() Declaration public LimitedViewport() Properties | Improve this Doc View Source Center Declaration public ReadOnlyPoint Center { get; } Property Value Type Description ReadOnlyPoint | Improve this Doc View Source Extent Declaration public BoundingBox Extent { get; } Property Value Type Description BoundingBox | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated Declaration public bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Limiter Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source Map Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Resolution Declaration public double Resolution { get; } Property Value Type Description System.Double | Improve this Doc View Source Rotation Declaration public double Rotation { get; } Property Value Type Description System.Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description System.Double | Improve this Doc View Source WindowExtent Declaration public Quad WindowExtent { get; } Property Value Type Description Quad Methods | Improve this Doc View Source ScreenToWorld(Point) Declaration public Point ScreenToWorld(Point position) Parameters Type Name Description Point position Returns Type Description Point | Improve this Doc View Source ScreenToWorld(Double, Double) Declaration public Point ScreenToWorld(double x, double y) Parameters Type Name Description System.Double x System.Double y Returns Type Description Point | Improve this Doc View Source SetCenter(ReadOnlyPoint) Declaration public void SetCenter(ReadOnlyPoint center) Parameters Type Name Description ReadOnlyPoint center | Improve this Doc View Source SetCenter(Double, Double) Declaration public virtual void SetCenter(double x, double y) Parameters Type Name Description System.Double x System.Double y | Improve this Doc View Source SetResolution(Double) Declaration public void SetResolution(double resolution) Parameters Type Name Description System.Double resolution | Improve this Doc View Source SetRotation(Double) Declaration public void SetRotation(double rotation) Parameters Type Name Description System.Double rotation | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(Point, Point, Double, Double) Declaration public void Transform(Point position, Point previousPosition, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description Point position Point previousPosition System.Double deltaResolution System.Double deltaRotation | Improve this Doc View Source WorldToScreen(Point) Declaration public Point WorldToScreen(Point worldPosition) Parameters Type Name Description Point worldPosition Returns Type Description Point | Improve this Doc View Source WorldToScreen(Double, Double) Declaration public Point WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX System.Double worldY Returns Type Description Point | Improve this Doc View Source WorldToScreenUnrotated(Point) Declaration public Point WorldToScreenUnrotated(Point worldPosition) Parameters Type Name Description Point worldPosition Returns Type Description Point | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Declaration public Point WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX System.Double worldY Returns Type Description Point Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler ViewportChanged Event Type Type Description PropertyChangedEventHandler Implements IViewport IReadOnlyViewport"
  },
  "api/Mapsui.Layers.html": {
    "href": "api/Mapsui.Layers.html",
    "title": "Namespace Mapsui.Layers",
    "keywords": "Namespace Mapsui.Layers Classes AnimatedFeatures AnimatedPointLayer BaseLayer ImageLayer Layer LayerCollection MemoryLayer A layer to use, when DataSource doesn't fetch anything because it is already in memory RasterizingLayer TileLayer Layer, which displays a map consisting of individual tiles TmsTileSourceBuilder WritableLayer Interfaces IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. ILayer Interface for map layers Enums EasingFunction Delegates LayerCollection.LayerAddedEventHandler LayerCollection.LayerMovedEventHandler LayerCollection.LayerRemovedEventHandler"
  },
  "api/Mapsui.Layers.WritableLayer.html": {
    "href": "api/Mapsui.Layers.WritableLayer.html",
    "title": "Class WritableLayer",
    "keywords": "Class WritableLayer Inheritance System.Object BaseLayer WritableLayer Implements ILayer INotifyPropertyChanged Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.IsCrsSupported(String) BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class WritableLayer : BaseLayer, ILayer, INotifyPropertyChanged Properties | Improve this Doc View Source Envelope Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Overrides BaseLayer.Envelope Methods | Improve this Doc View Source Add(IFeature) Declaration public void Add(IFeature feature) Parameters Type Name Description IFeature feature | Improve this Doc View Source AddRange(IEnumerable<IFeature>) Declaration public void AddRange(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(IFeature) Declaration public IFeature Find(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description IFeature | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) | Improve this Doc View Source SignalDataChanged() Declaration public void SignalDataChanged() | Improve this Doc View Source TryRemove(IFeature, Func<IFeature, IFeature, Boolean>) Tries to remove a feature. Declaration public bool TryRemove(IFeature feature, Func<IFeature, IFeature, bool> compare = null) Parameters Type Name Description IFeature feature Feature to remove Func < IFeature , IFeature , System.Boolean > compare Optional method to compare the feature with any of the other features in the list. If omitted a reference compare is done. Returns Type Description System.Boolean Implements ILayer INotifyPropertyChanged"
  },
  "api/Mapsui.Layers.TmsTileSourceBuilder.html": {
    "href": "api/Mapsui.Layers.TmsTileSourceBuilder.html",
    "title": "Class TmsTileSourceBuilder",
    "keywords": "Class TmsTileSourceBuilder Inheritance System.Object TmsTileSourceBuilder Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public static class TmsTileSourceBuilder : object Methods | Improve this Doc View Source Build(String, Boolean) Declaration public static ITileSource Build(string urlToTileMapXml, bool overrideTmsUrlWithUrlToTileMapXml) Parameters Type Name Description System.String urlToTileMapXml System.Boolean overrideTmsUrlWithUrlToTileMapXml Returns Type Description ITileSource | Improve this Doc View Source LoadTmsLayer(IAsyncResult) Declaration public static void LoadTmsLayer(IAsyncResult result) Parameters Type Name Description IAsyncResult result"
  },
  "api/Mapsui.Layers.ImageLayer.html": {
    "href": "api/Mapsui.Layers.ImageLayer.html",
    "title": "Class ImageLayer",
    "keywords": "Class ImageLayer Inheritance System.Object BaseLayer ImageLayer Implements ILayer INotifyPropertyChanged IAsyncDataFetcher Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Envelope BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class ImageLayer : BaseLayer, ILayer, INotifyPropertyChanged, IAsyncDataFetcher Constructors | Improve this Doc View Source ImageLayer(String) Declaration public ImageLayer(string layername) Parameters Type Name Description System.String layername Properties | Improve this Doc View Source DataSource Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source FetchDelay Delay before fetching a new wms image from the server after the view has changed. Specified in milliseconds. Declaration public int FetchDelay { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source IsCrsSupported(String) Declaration public override bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > Overrides BaseLayer.IsCrsSupported(String) | Improve this Doc View Source OnPropertyChanged(Object, PropertyChangedEventArgs) Declaration protected void OnPropertyChanged(object sender, PropertyChangedEventArgs e) Parameters Type Name Description System.Object sender PropertyChangedEventArgs e | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) Implements ILayer INotifyPropertyChanged IAsyncDataFetcher"
  },
  "api/Mapsui.Layers.ILayer.html": {
    "href": "api/Mapsui.Layers.ILayer.html",
    "title": "Interface ILayer",
    "keywords": "Interface ILayer Interface for map layers Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface ILayer : INotifyPropertyChanged Properties | Improve this Doc View Source Attribution Attribution for layer Declaration Hyperlink Attribution { get; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration bool Busy { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CRS The spatial reference CRS. This always needs to be equal to the CRS or the map. It should eventually be removed altogether Declaration string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Envelope Gets the boundingbox of the entire layer Declaration BoundingBox Envelope { get; } Property Value Type Description BoundingBox | Improve this Doc View Source Exclusive Of all layers with Exclusive is true only one will be Enabled at a time. This can be used for radiobuttons. Declaration bool Exclusive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Numerical Id of layer Declaration int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration bool IsMapInfoLayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration double MaxVisible { get; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration double MinVisible { get; } Property Value Type Description System.Double | Improve this Doc View Source Name Name of layer Declaration string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Opacity Opacity of layer Declaration double Opacity { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Resolutions List of native resolutions Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < System.Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Transformation The coordinate transformation Declaration ITransformation Transformation { get; set; } Property Value Type Description ITransformation Methods | Improve this Doc View Source DataHasChanged() To indicate the data withing the layer has changed. This triggers a DataChanged event. This is necessary for situations where the layer can not know about changes to it's data as in the case of editing of a geometry. Declaration void DataHasChanged() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Get all features in a given BoundingBox for a given resolution Declaration IEnumerable<IFeature> GetFeaturesInView(BoundingBox extent, double resolution) Parameters Type Name Description BoundingBox extent Bounding box System.Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source IsCrsSupported(String) Queries whether a layer supports projection to a certain CRS. Declaration bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Indicates that there has been a change in the view of the map Declaration void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent The new extent of the visible map System.Double resolution The new resolution of the visible map System.Boolean majorChange If true an implementation should always refresh it's data. If false (minorChange) the implementation could ignore it. Example: During dragging a map a WMS layer would not want to fetch data, only on the drag end. Events | Improve this Doc View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler"
  },
  "api/Mapsui.Layers.IFeatureInfo.html": {
    "href": "api/Mapsui.Layers.IFeatureInfo.html",
    "title": "Interface IFeatureInfo",
    "keywords": "Interface IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface IFeatureInfo Methods | Improve this Doc View Source GetFeatureInfo(IReadOnlyViewport, Double, Double, Action<IDictionary<String, IEnumerable<IFeature>>>) Declaration void GetFeatureInfo(IReadOnlyViewport viewport, double x, double y, Action<IDictionary<string, IEnumerable<IFeature>>> callback) Parameters Type Name Description IReadOnlyViewport viewport System.Double x System.Double y Action < IDictionary < System.String , IEnumerable < IFeature >>> callback"
  },
  "api/Mapsui.Layers.EasingFunction.html": {
    "href": "api/Mapsui.Layers.EasingFunction.html",
    "title": "Enum EasingFunction",
    "keywords": "Enum EasingFunction Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public enum EasingFunction : int Fields Name Description CubicEaseOut Linear"
  },
  "api/Mapsui.IReadOnlyViewport.html": {
    "href": "api/Mapsui.IReadOnlyViewport.html",
    "title": "Interface IReadOnlyViewport",
    "keywords": "Interface IReadOnlyViewport Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IReadOnlyViewport Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration ReadOnlyPoint Center { get; } Property Value Type Description ReadOnlyPoint | Improve this Doc View Source Extent BoundingBox of viewport in map coordinates respection Rotation Declaration BoundingBox Extent { get; } Property Value Type Description BoundingBox Remarks This BoundingBox is horizontally and vertically aligned, even if the viewport is rotated. So this BoundingBox perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration bool HasSize { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration bool IsRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration double Resolution { get; } Property Value Type Description System.Double Remarks Resolution is Mapsuis form of zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration double Rotation { get; } Property Value Type Description System.Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration double Width { get; } Property Value Type Description System.Double | Improve this Doc View Source WindowExtent WindowExtend gives the four corner points of viewport in map coordinates Declaration Quad WindowExtent { get; } Property Value Type Description Quad Remarks If viewport is rotated, this corner points are not horizontally or vertically aligned. Methods | Improve this Doc View Source ScreenToWorld(Point) Converts a point in screen pixels to one in map units, respecting rotation Declaration Point ScreenToWorld(Point position) Parameters Type Name Description Point position Coordinate in map units Returns Type Description Point Point in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration Point ScreenToWorld(double x, double y) Parameters Type Name Description System.Double x Screen position x coordinate System.Double y Screen position y coordinate Returns Type Description Point Point in map units | Improve this Doc View Source WorldToScreen(Point) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration Point WorldToScreen(Point worldPosition) Parameters Type Name Description Point worldPosition Coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration Point WorldToScreen(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Point) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration Point WorldToScreenUnrotated(Point worldPosition) Parameters Type Name Description Point worldPosition Coordinate in map units Returns Type Description Point Point in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration Point WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description System.Double worldX X coordinate in map units System.Double worldY Y coordinate in map units Returns Type Description Point Point in screen pixels Events | Improve this Doc View Source ViewportChanged Declaration event PropertyChangedEventHandler ViewportChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.INavigator.html": {
    "href": "api/Mapsui.INavigator.html",
    "title": "Interface INavigator",
    "keywords": "Interface INavigator Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface INavigator Properties | Improve this Doc View Source Navigated Called each time one of the navigation methods is called Declaration EventHandler Navigated { get; set; } Property Value Type Description EventHandler Methods | Improve this Doc View Source CenterOn(Point) Change center of viewport Declaration void CenterOn(Point center) Parameters Type Name Description Point center New center point of viewport | Improve this Doc View Source CenterOn(Double, Double) Change center of viewport to X/Y coordinates Declaration void CenterOn(double x, double y) Parameters Type Name Description System.Double x X value of the new center System.Double y Y value of the new center | Improve this Doc View Source NavigateTo(BoundingBox, ScaleMethod) Navigate center of viewport to center of extent and change resolution Declaration void NavigateTo(BoundingBox extent, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description BoundingBox extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determin resolution | Improve this Doc View Source NavigateTo(Point, Double) Change both center and resolution of the viewport Declaration void NavigateTo(Point center, double resolution) Parameters Type Name Description Point center The new center System.Double resolution The new resolution | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod) Declaration void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill) Parameters Type Name Description ScaleMethod scaleMethod | Improve this Doc View Source RotateTo(Double) Change rotation of viewport Declaration void RotateTo(double rotation) Parameters Type Name Description System.Double rotation New rotation in degrees of viewport> | Improve this Doc View Source ZoomIn() Declaration void ZoomIn() | Improve this Doc View Source ZoomIn(Point) Declaration void ZoomIn(Point centerOfZoom) Parameters Type Name Description Point centerOfZoom | Improve this Doc View Source ZoomOut() Declaration void ZoomOut() | Improve this Doc View Source ZoomOut(Point) Declaration void ZoomOut(Point centerOfZoom) Parameters Type Name Description Point centerOfZoom | Improve this Doc View Source ZoomTo(Double) Change resolution of viewport Declaration void ZoomTo(double resolution) Parameters Type Name Description System.Double resolution New resolution to use | Improve this Doc View Source ZoomTo(Double, Point) Declaration void ZoomTo(double resolution, Point centerOfZoom) Parameters Type Name Description System.Double resolution Point centerOfZoom"
  },
  "api/Mapsui.IMap.html": {
    "href": "api/Mapsui.IMap.html",
    "title": "Interface IMap",
    "keywords": "Interface IMap Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IMap Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Envelope Gets the extents of the map based on the extents of all the layers in the layers collection Declaration BoundingBox Envelope { get; } Property Value Type Description BoundingBox Full map extents | Improve this Doc View Source Home Declaration Action<INavigator> Home { get; set; } Property Value Type Description Action < INavigator > | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < System.Double > | Improve this Doc View Source Transformation Transformation to use for the different coordinate systems Declaration ITransformation Transformation { get; set; } Property Value Type Description ITransformation | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration List<IWidget> Widgets { get; } Property Value Type Description List < IWidget > Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration void ClearCache() | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.Geometries.html": {
    "href": "api/Mapsui.Geometries.html",
    "title": "Namespace Mapsui.Geometries",
    "keywords": "Namespace Mapsui.Geometries Classes BoundingBox Bounding box type with double precision BoundingBoxExtensions Geometry Geometry is the root class of the Geometry Object Model hierarchy. Geometry is an abstract (non-instantiable) class. GeometryCollection A GeometryCollection is a geometry that is a collection of 1 or more geometries. GeometryExtensions LinearRing A LinearRing is a LineString that is both closed and simple. LineString A LineString is a Curve with linear interpolation between points. Each consecutive pair of points defines a line segment. MultiLineString A MultiLineString is a MultiCurve whose elements are LineStrings. MultiPoint A MultiPoint is a 0 dimensional geometric collection. The elements of a MultiPoint are restricted to Points. The points are not connected or ordered. MultiPolygon A MultiPolygon is a MultiSurface whose elements are Polygons. Point A Point is a 0-dimensional geometry and represents a single location in 2D coordinate space. A Point has a x coordinate value and a y-coordinate value. The boundary of a Point is the empty set. Polygon A Polygon is a planar Surface, defined by 1 exterior boundary and 0 or more interior boundaries. Each interior boundary defines a hole in the Polygon. Quad Double precision polygon with 4 explicit vertices. This is useful to represent a BoundingBox that has been rotated. Raster ReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. Interfaces IGeometry Defines basic interface for a Geometry IGeometryCollection Interface for a GeometryCollection. A GeometryCollection is a collection of 1 or more geometries. IRaster"
  },
  "documentation/Development-constraints.html": {
    "href": "documentation/Development-constraints.html",
    "title": "Development constraints",
    "keywords": "Development constraints When developing for Mapsui we take into account the following constraints. Not limited to certain coordinate system Mapsui's Map can be in any coordinate system. If you do not specify a coordinate system in the Map and Layers it assumes they are in the same coordinate system (whatever they are). In this case it only transforms these unspecified 'world-coordinates' to 'screen-coordinates' and nothing more. It is also possible to setup a coordinate transformation system using Map.CRS, DataSource.CRS and Map.Transformation. See projections . Full implementation of the feature matrix These are some of the feature dimensions: Renderers: WPF and Skia Geometries: Point, LineString, Polygon etc. Operations on Geometries: Distance, Contains. Coordinate projection support Style: fill color, line color, line cap, symbol opacity, symbol scale If we choose to support a feature each 'cell' of the multi dimensional matrix should be supported. No surprises for the user. Currently there are holes in the matrix on some point (like differences between WPF and Skia). The current focus is to fill these holes. If this support does not seem attainable (is that proper English?) but does seem very useful we should look for ways to make Mapsui extendable Write clear, simple and little code Maintenance is enemy that can bring a project like this to a halt. We should look for ways to implement the functionality with the simplest possible code."
  },
  "documentation/Contributors-Guidelines.html": {
    "href": "documentation/Contributors-Guidelines.html",
    "title": "Mapsui Contributor Guidelines",
    "keywords": "Mapsui Contributor Guidelines CLA To contribute you need to sign our CLA Complexity Complexity is the biggest problem in software development. The primary effort should be to keep the complexity low. Complexity can be caused by clueless spaghetti code but also by astronaut architectures . Keeping things simple is not easy but hard work. It involves thinking up several solutions to your problem weighing the pros and cons and moving it around and upside down to look for even better (simpler) solutions. Continuous Refactoring Mapsui has some older code in it. Don't despair. We continuously improve or replace older code. It is a gradual process. We do it step by step. We have made major changes in the past; From WinForms to WPF, From GDI+ to SL rendering. From .NET Framework to PCL. From WPF rendering to SkiaSharp. We are working toward the next steps: From PCL to .NET Standard, support for full Xamarin.Forms. Taking these steps will cause breaking changes. We should be aware of this and clearly communicate it with the user. We should use semver (although we still violate it now and then). Issue first Submit an issue before a pull request co we can discuss the possible solutions to the problem. Use ReSharper Mapsui uses the resharper team settings by committing the DotSettings to git, so that all developers can use the same settings. We should have zero warnings. Suggestions should be treated as actual suggestions, use them only when you think it improves the code."
  },
  "documentation/Async-Fetching.html": {
    "href": "documentation/Async-Fetching.html",
    "title": "Asynchronous Data Fetching",
    "keywords": "Asynchronous Data Fetching Some background In most mapping clients drawing a map means first gathering data from disk, database or web and after that a map is drawn. Because gathering data takes time the user has to wait for this process to complete. During this process sometimes a white map is shown and the user cannot interact with the map. This experience can be improved by drawing a buffer of the previous image during pan and zoom. But this results in white space along the edged. This can again be countered by other optimizations but there are limits to what can be done along this design path and it tends to lead to hacked up solutions. In Mapsui we completely seperated drawing from fetching data. The renderer only renders the data it has available in memory at that instant. The fetcher runs on a background thread receives messages from the UI thread telling it what to fetch. The async data fetcher architecture The diagram above shows how Mapsui's data fetcher works. The data fetcher runs on a background thread. The UI and Fetcher communicate through non blocking messages. Whenever the user pans or zooms a View Changed message is sent to the Fetcher. Whenever new data arrives a Data Changed message is sent to the UI so that it knows it should redraw the map. The fetcher dumps incoming data into a cache. The UI renderer retrieves whatever is needed from that cache when rendering. Both the fetcher and the renderer can use all kinds of smart tricks. In case of tiling the fetcher can pre‐fetch tiles based on its current view, or on the way the view changes over time. The renderer could search for alternative tiles (higher or lower levels) when the optimal tiles are not available. Those strategies should be tuned to support each other. For instance, in the current implementation the renderer uses higher level tiles when the optimal tiles are not available, and the fetcher pre‐fetches higher level tiles to assist the renderer. But the way they play together is not specified in the interface. This loose coupling keeps things simple and flexible and the renderer never has to wait for the fetcher which results in a smooth (perceived) performance."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Mapsui API",
    "keywords": "Mapsui API This is the API description of Mapsui"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mapsui documentation.",
    "keywords": "Mapsui documentation. The Mapsui documentation consists of two parts. The general documentation found here . The api documentation found here ."
  },
  "documentation/v2.0-upgrade-guide.html": {
    "href": "documentation/v2.0-upgrade-guide.html",
    "title": "v2.0 upgrade guide",
    "keywords": "v2.0 upgrade guide This is the incomplete upgrade guide from v1.4 to v2.0. The most apparent changes will be mentioned here. If you notice important things missing then please post an issue. Moved from PCL to .NET Standard 2.0 Look up compatible frameworks in this table . Viewport moved from Map to MapControl and is readonly Use MapControl.Navigator instead. Moved MapControl.NavigateTo methods to MapControl.Navigator All user map manipulation should go the the Navigator. Introduced Map.Home to initialze the map viewport There is now a Home delegate on the Map object that should be used to set the initial state of the map. MapControl.Map.Home = n => n.NavigateTo(myCenter, myResolution); Reason: This is because in some cases the Navigate methods depend on the envelope and resolutions of the layers and in some cases it takes time for these layers to load their data. Added Map.PanLock, Map.ZoomLock and Map.RotationLock The lock fields can be used on all platforms to lock the user from a certain kind of map manipulation. Added Map.Limiter to limit the extent to which the user can navigate The Limter is an implementation of IViewportLimiter. There are currently three limiters part of Mapsui: ViewportLimiter (default) ViewportLimiterKeepWithin ViewportLimiterWithoutLimits It is also possible to implement your own IViewportLimiter. Added RefreshGraphics, RefreshData and Refresh Use RefreshGraphics if you know the data in the layer has changed and the graphics needs refreshing. Use RefreshData if you know there is new data available in the source. Use Refresh if you need to do both. These methods should only be needed if you manipulate data somehow in your own code. Renamed BoundingBox GetCentroid to Centroid and GetBoundingBox to BoundingBox Turned these methods into proper properties making user code a bit more compact. The Info event was moved from Map to MapControl The MapControl contains most other events as well Removed the InfoLayer list and add an InfoLayer boolean on ILayer To indicate that a layer is a info layer you now need to set it's InfoLayer property. In v1.4 it had to be added to the list of InfoLayers. Removed the HoverLayer method. This is because hover could not be implemented crossplatform and could harm performance. It it is still possible to implement hover yourself using a direct call to MapControl.GetMapInfo. Invert label alignment bottom/top. This was incorrect in v1.4. This will not cause a compile error so don't forget to do a search-replace to fix it. Removed ZoomIn/ZoomOut from WPF MapControl Use the ZoomIn/ZoomOut methode on the navigator."
  },
  "documentation/skia-scale.html": {
    "href": "documentation/skia-scale.html",
    "title": "Skia Scale",
    "keywords": "Skia Scale We have a separate page about this topic because skia scale has caused some confusion in the past and bugs as a consequence. Some context: Device Independent Units Modern devices have a very high resolution. If something is drawn onto the canvas using raw pixels as coordinates the fonts would become tiny and unreadable and lines would become very thin. To correct for this a scale factor is used. Those scaled-up coordinates are called device independent units. Most of the time you deal with the device independent units. Coordinates in SkiaSharp Most (all?) views in SkiaSharp use pixels as coordinates by default but for our purposes we need to use device independent units, so we need to correct for this. There are two ways this can be done: Set the skia view's IgnorePixelScaling. Call the skia view's Scale factor with the appropriate scale. For this you need to request the scale factor from the system. What do we do? We take skia scale into account on a number of places in our code: On WPF and UWP: We set IgnorePixelScaling. On iOS: The GL view we use has no IgnorePixelScaling unfortunately. We determine the skia scale while initializing (or when switching from wpf to skia rendering)ent's size changes. We set the skia scale on the skia surface. This needs to be done in the render loop because this is the only place where we have access to the surface. On Android: We determine the density (pixels per device independent units) while initializing. We initialze the viewport width and height to the skia width and height (on TryInitializeViewport). We set the viewport width and height to the skia width and height whenever the containing parent's size changes. We set the skia scale on the skia surface. This needs to be done in the render loop because this is the only place where we have access to the surface. We pass the skia scale along if we request map info. Why not directly correct the position for scale at the call? Because we want to return the original click position as part of the response. This position can be usefull and we don't want to user to correct for skia scale (in fact we don't want the user to have access to it). When requesting the touch positions when manipulating the map."
  },
  "documentation/samples.html": {
    "href": "documentation/samples.html",
    "title": "Samples",
    "keywords": "Samples The best way to get started with mapsui is to go through the samples. The code samples There are sample apps for each platform. They share a number of Map samples that can be found in this folder in our git repository Samples\\Mapsui\\Mapsui.Samples.Common\\Maps. For 2.0 look here For 1.4 look here Run the samples See the samples in action by running the WPF sample app ( Mapsui.Samples.Wpf ) in the samples folder. On the left side it has a list with all samples."
  },
  "documentation/Roadmap.html": {
    "href": "documentation/Roadmap.html",
    "title": "Roadmap start 2019",
    "keywords": "Roadmap start 2019 Getting v2 more stable. Improve the documentation. Adding 'getting started' tutorials for all platforms. Show all samples in the iOS and Android projects. Improve the samples. Add comments, make them smaller (single purpose) and make them look better. Later Replace Mapsui.Geometries with NTS Add vector tiles Improve performance Change license to MIT"
  },
  "documentation/Rendering-Tests.html": {
    "href": "documentation/Rendering-Tests.html",
    "title": "Unit Tests for Rendering",
    "keywords": "Unit Tests for Rendering Testing the renderers in done in two ways. Unit tests that compare the current output to previous output. Visual inspection. Unit tests are useful during refactoring when you expect no changes. Visual tests are useful when you are working on a change in the rendering output. 1. Unit tests The generated images are written to: {test project folder}\\bin\\Debug\\Resources\\Images\\Generated\\ Those will be compared to the original images in: {test project folder}\\bin\\Debug\\Resources\\Images\\Original\\ If after code changes there are expected changes in the generated files they should be committed to git so they need to be copied to: {test project folder}\\Resources\\Images\\Original\\ 2. Visual inspection In the WPF sample there is an option to select the list of unit tests. Both WPF and Skia renderers can be selected. We assume the skia renderer on other platforms are identical."
  },
  "documentation/Renderers.html": {
    "href": "documentation/Renderers.html",
    "title": "Renderers",
    "keywords": "Renderers Mapsui has two renderers: Xaml in the Mapsui.Rendering.Xaml assembly. Used only in the WPF MapControl. Older and stable. Skia in the Mapsui.Rendering.Skia assembly. Used in all supported platforms. Newer. Differences Between Xaml and Skia Skia is nearly equivalent to Xaml but there are still some differences (This list has grown shorter over last year): There is a difference in the way halo symbolization is implemented. We will match Xaml to Skia (not the other way around). We already use the correct technique for Xaml halos for labels styles. Skia does not have the option to displayed symbols in world units. The means the icon will grow bigger if you zoom in. This is unlike regular icon but like regular polgons. This is an exotic feature, you will probably not need this. There are probably some more differences I missed. Xaml and Skia side by side in Mapsui.Samples.Wpf The project Mapsui.Samples.Wpf has a dropdown on the top left to select between Skia and Wpf rendering. This is allows you to compare them."
  },
  "documentation/projections.html": {
    "href": "documentation/projections.html",
    "title": "Projections",
    "keywords": "Projections Projections is a complicated topic. Users of Mapsui have a wide variety of backgrounds. Some are experienced GIS users that just need to know how this specific map component works. Many others are app developers that just happen to need a map for their current app. This makes it hard to explain things clear for everyone. Below are some basic concepts. I like this video introduction to map projections. The most common scenario Much point data is in a coordinates system called WGS84, or lat/long coordinates, or EPSG:4326 . Most maps are in some another coordinate system which is better suited for display. The projection used in most online maps these days is SphericalMercator, or WebMercator, PseudoMercator or EPSG:3857 . The OpenStreetMap tile layer that is used in many samples of Mapsui is also in SphericalMercator. If you use this map your coordinates also need to be in SphericalMercator. By default there is no automatic projection in Mapsui. The Mapsui helper methods for this transformation are SphericalMerator.FromLonLat/ToLonLat. Parts of Mapsui involved in projections Map : There is one Map. It is inevitably in some kind of projection. Layers : There are several layers that provider data. This data should be in the same projection as the Map. If not, different projections will be drawn on top of each other and things go wrong. Providers : Some Layers have a DataSource (Provider). This DataSource could contain data in another projection. This data can be converted to the Map projection but a few things need to be set. Configure Mapsui for automatic projections Currently only the Layer layer type can be set up to do automatic projetions from DataSource to Map. Three things need to be configured for this: The CRS on the Map to know what to project to. The CRS on the DataSource to know what to project from. The Transformation on the Map to calculate the projection from DataSource CRS to the Map CRS. Support for projections The out of the box Mapsui support for projections is limited. The MinimalProjection class only projects between SphericalMercator (EPSG:3857) and WGS84 (EPSG:4326). It is however possible to create your own Transformation. You need to implement the ITransformation interface. Within this implementation you need to use some other projection library. A recommended one is ProjNet4GeoAPI . The most common scenario Most likely you will be fine if you use the same projection as Google and OpenStreetMap. This projection is called SphericalMercator. The official code from the OGC for this projection is EPSG:3857. If you use the OpenStreetMap background layer you use EPSG:3857. Often you have GPS locations or points of interests (POIs) in WGS84 or EPGS:4326. These points need to be transformed to EPSG:3857. There are two ways: Follow the configuration for projections mentioned above and in the ProjectionSample.cs. Use SphericalMercator.FromLonLat to do the transformation manually. Remarks A Layer has a CRS field. This field is used by Mapsui to set it to the Map projection. It should not be set by the user. This is could be confusing. Mapsui is not capable of transforming images. So no transformation of tiles as rasters. No attempt will be made to transform and the CRS fields will be ignored."
  },
  "documentation/NuGet-of-latest-build.html": {
    "href": "documentation/NuGet-of-latest-build.html",
    "title": "NuGet of Latest Build",
    "keywords": "NuGet of Latest Build On every commit the build server is triggered which publishes a NuGet package of that build. It's version number is the current version of the master branch followed by a dot and the build number. The package is not published to nuget.org but to a AppVeyor feed. You need to add this feed to be able to install the package to your project. There are three ways to add this feed to your environment. Package Manager Console nuget install-package mapsui -source https://ci.appveyor.com/nuget/mapsui -pre Add the feed in Visual Studio Add the feed in tools | options | nuget | package sources https://ci.appveyor.com/nuget/mapsui And under 'manage nuget packages' select this as source on the top right. Add a .nuget\\NuGet.Config xml In you sln folder add a .nuget folder and in it a NuGet.Config file with content: <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <solution> <add key=\"disableSourceControlIntegration\" value=\"true\" /> </solution> <packageSources> <add key=\"AppVeyor\" value=\"https://ci.appveyor.com/nuget/mapsui \" /> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </packageSources> </configuration> This way you application knows where to find the package and when other developers clone your project it works for them too right away. This is the best option. Build your own nuget package It is also possible to build you own nuget package locally by running scripts\\buildpack.bat 1.0.0-beta.1 from the sln folder. You can set the file location as a Package Source in visual studio."
  },
  "documentation/Mapsui.Forms.html": {
    "href": "documentation/Mapsui.Forms.html",
    "title": "Mapsui.Forms",
    "keywords": "Mapsui.Forms Mapsui.Forms is a Xamarin.Forms native library for Mapsui. With this library it is possible to use Mapsui without any renderer. Mapsui.Forms uses SkaiSharp.Views.Forms to display the map on the device. This works for iOS, Android, UWP and Mac OS. WPF should be possible too, but isn't tested. Installation Create a normal Xamarin.Forms project Add Mapsui.Forms from NuGet to the packages Add the line xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" to the Xaml file Add the Mapsui.Forms view with <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> to the Xaml part file Add in the code behind the following ```` var map = new Map { CRS = \"EPSG:3857\", Transformation = new MinimalTransformation() }; var attribution = new BruTile.Attribution(\"© OpenStreetMap contributors\", \" http://www.openstreetmap.org/copyright \"); var tileSource = new HttpTileSource(new GlobalSphericalMercator(), \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", new[] { \"a\", \"b\", \"c\" }, name: \"OpenStreetMap\", attribution: attribution); var tileLayer = new TileLayer(tileSource) { Name = \"OpenStreetMap\" }; map.Layers.Add(tileLayer); map.Widgets.Add(new Widgets.ScaleBar.ScaleBarWidget(map) { TextAlignment = Widgets.Alignment.Center, HorizontalAlignment = Widgets.HorizontalAlignment.Left, VerticalAlignment = Widgets.VerticalAlignment.Bottom }); mapView.Map = map; 6. Now you are ready to run a test"
  },
  "documentation/Mapsui-Components.html": {
    "href": "documentation/Mapsui-Components.html",
    "title": "Mapsui Components",
    "keywords": "Mapsui Components If you install the NuGet package into your app these assemblies are added: Mapsui.UI.{platform} - Platform specific UI. Contains the MapControl Mapsui.Rendering.Skia Mapsui Mapsui.Geometries On Windows desktop Mapsui.Rendering.Xaml is added. A number of nuget dependencies Mapsui Parts There are three important classes that you will deal with MapControl This is the UI component that you add to you project. Map Holds all information about the map like layers and widgets. Viewport Holds all information about the part of the map that is visible on the screen like center, extent, rotation, resolution and so on. It is created automatically when Map is created. You can access it with MapControl.Map.Viewport."
  },
  "documentation/Mapsui-2.0.html": {
    "href": "documentation/Mapsui-2.0.html",
    "title": "Mapsui 2.0",
    "keywords": "Mapsui 2.0 At the moment we are working on Mapsui v2. The core libraries are .NET Standard instead of PCLs. Here are some of the changes that may go into v2. Todo Testing. Some possible rework following from user feedback. Done Do not derive ILayer from IAsyncDataFetcher. Add an Action field to the Map to zoom to 'home' viewport. Remove Viewport from Map. Remove Navigate methods from Map. Go to .NET Standard Rename Map.ViewChanged to Map.RefreshData Remove WPFs MapControl.ErrorMessage Rename PanMode.None and ZoomMode.None. Rename BoundingBox.GetCentroid to Centroid Rename IGeometry.GetBoundingBox to BoundingBox Move Info event from Map to MapControl Remove the InfoLayer list and add an InfoLayer boolean on ILayer Remove the HoverLayer method. It is not crossplatform and can affect performance. Invert label alignment bottom/top. Remove ZoomIn/ZoomOut from WPF MapControl and turn into Navigate method. Wrap Viewport in LimitingViewport which limits it to user settings, or access through Navigator. PanLock and ZoomLock working on all platforms. Rework ViewportLimiter Add Xamarin.Forms MapControl Not (Later) Use NTS for Geometries Perhaps add animation in an AnimatedViewport which wraps the actual Viewport. Replace ILayer.Style with an ILayer.Styles of type ICollection which is empty by default"
  },
  "documentation/How-to-work-with-Mapsui.html": {
    "href": "documentation/How-to-work-with-Mapsui.html",
    "title": "How to Work with Mapsui",
    "keywords": "How to Work with Mapsui Mapsui is growing towards a stable component. At all times: All projects should compile The unit tests should succeed All samples should run properly If this is not the case please report it. It will be fixed. Please use the nuget packages to build applications with Mapsui: Install-Package Mapsui Extension of Mapsui If you need more functionality from the MapControl you could create your own version of the MapControl by making a copy. You can customize these for your own needs. While it is also possible to extend functionality by adding your own ILayer or IProvider implementation. If you encounter breaking changes please take a look at the release notes . You can check the related commits by clicking the 'x commits to masters since this release' of the previous release (a bit odd but that is how github works). Logging In Mapsui errors and warnings are logged to one static class. By listening to this with an event handler you can get some debugging information. .. // Logger is a static class that can be accessed when you add the Mapsui core dll. Logger.LogDelegate += LogMethod; .. private void LogMethod(LogLevel logLevel, string message, Exception exception) { // todo: write to your own logger }"
  },
  "documentation/Home.html": {
    "href": "documentation/Home.html",
    "title": "Introduction",
    "keywords": "Introduction Mapsui is a .NET component to show a map in your app. Supported platforms WPF UWP Xamarin.Android Xamarin.iOS Xamarin.Forms (in v2, now in beta) Supported data Mapsui uses the BruTile library to display tile layers such as: OpenStreetMap tiles Open standards for tiles WMTS TMS WMS called tilewise Custom data providers MBTiles. An offline format to store tile data in sqlite file. Mapsui renders and can style vector data (polygons, lines, points)"
  },
  "documentation/getting-started-wpf.html": {
    "href": "documentation/getting-started-wpf.html",
    "title": "Mapsui WPF getting started",
    "keywords": "Mapsui WPF getting started This page will show the steps to add a Mapsui map to your WPF application. Step 1 Start a new WPF application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui Step 3 In WpfApplication1.MainWindow.xaml add this in the Grid element: <xaml:MapControl Name=\"MyMapControl\"></xaml:MapControl> And add the namespace: xmlns:xaml=\"clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf\" Step 4 In WpfApplication1.MainWindow.xaml.cs add in the constructor: MyMapControl.Map.Layers.Add(new TileLayer(KnownTileSources.Create())); And add the namespaces: using BruTile.Predefined; using Mapsui.Layers; Step 5 Run!"
  },
  "documentation/getting-started-android.html": {
    "href": "documentation/getting-started-android.html",
    "title": "Mapsui Android getting started",
    "keywords": "Mapsui Android getting started Step 1 Create 'Blank App (Android)' in Visual Studio Step 2 $ Install-Package Mapsui Step 3 In Resources/layout/Main.axml add Mapsui.UI.Android.MapControl: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <Mapsui.UI.Android.MapControl android:id=\"@+id/mapcontrol\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </LinearLayout> Step 4 In MainActivity.cs add MapControl after SetContentView(Resource.Layout.Main): protected override void OnCreate(Bundle savedInstanceState) { base.OnCreate(savedInstanceState); // Set our view from the \"main\" layout resource SetContentView(Resource.Layout.Main); var mapControl = FindViewById<MapControl>(Resource.Id.mapcontrol); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; } Add the following using statements: using Mapsui; using Mapsui.Utilities; using Mapsui.UI.Android; Step 5: Run!"
  },
  "documentation/documentation.html": {
    "href": "documentation/documentation.html",
    "title": "Documentation",
    "keywords": "Documentation Documentation setup We use docfx to generate the documentation. There is a /docfx folder with a docfx project called Mapsui. This projects documenation folder contains all the md files used to generate the 'documentation' tab in the site. This is the source of those files, they should be edited there. In the docfx folder there is a script (build-site.cmd) that generates the documentation site (in /docfx/mapsui/_site) and copies it to the /docs folder. The Mapsui project on github is configured to automatically publish this docs folder to https://mapsui.github.io/mapsui A commit of an md file should trigger the build server. This should run the build-site.cmd. This should commit the generated site to the repo. It will when then show up on the website. We should have two separate build configurations one for the docs which ignores the project and one for the project which ignores the docs. Documentation guidelines All md files should be in lower case (they are not right now). All md files should be directly in the root of /docfx. Hierachy is created with the toc.md in the documenation folder. By keeping the files itself in the root it is easier to change the hierarchy and easier to get contributers to follow the guidelines. All md files should start with a header one (#) and have only one header one. All the headers in the toc should be equal to the header one in the file it points to. Mapsui is cased as Mapsui not MapsUI. We should iteratively improve the documentation. If questions are asked in the issues we should search for the answer in the documentation. Update the documentation when it is missing and answer the issue with a url to the documentation. Writing documentation is not only useful to inform the user but also as a sanity check for the developer. If what you have to tell becomes complicated and hard to grasp this could mean the software is not well designed. Writing documentation early should be used as a part of the software development process."
  },
  "documentation/faq.html": {
    "href": "documentation/faq.html",
    "title": "Frequently Asked Questions",
    "keywords": "Frequently Asked Questions Why is all my data in a small area near the west coast of Africa? This is because the background data is in SphericalMercator (it is in the SphericalMercator coordinate system) and the foreground data is in WGS84 (latlon). Use SphericalMercator.FromLonLat to transform it. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. Why does NavigateTo zoom into an area near the west coast of Africa? This is because the coordinates you pass to NavigateTo are in WGS84 whereas the background data is in SphericalMercator. Use SphericalMercator.FromLonLat to transform the NavigateTo arguments to SphericalMercator. Note: There can be many other forms of mixing up coordinate systems, but this is the most common."
  },
  "api/Mapsui.Utilities.Version.html": {
    "href": "api/Mapsui.Utilities.Version.html",
    "title": "Class Version",
    "keywords": "Class Version Version information helper class Inheritance System.Object Version Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Version : object Methods | Improve this Doc View Source GetCurrentVersion() Returns the current build version of Mapsui Declaration public static Version GetCurrentVersion() Returns Type Description System.Version"
  },
  "api/Mapsui.Utilities.ScaleMethod.html": {
    "href": "api/Mapsui.Utilities.ScaleMethod.html",
    "title": "Enum ScaleMethod",
    "keywords": "Enum ScaleMethod Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public enum ScaleMethod : int Fields Name Description Fill Fill up the entire view port of the screen Fit Fit within the view port of the screen FitHeight Fill the height of the screen FitWidth Fill the width of the screen"
  },
  "api/Mapsui.Utilities.ProjectionHelper.html": {
    "href": "api/Mapsui.Utilities.ProjectionHelper.html",
    "title": "Class ProjectionHelper",
    "keywords": "Class ProjectionHelper Inheritance System.Object ProjectionHelper Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class ProjectionHelper : object Fields | Improve this Doc View Source EpsgPrefix Declaration public const string EpsgPrefix = null Field Value Type Description System.String | Improve this Doc View Source EsriStringPrefix Declaration public const string EsriStringPrefix = null Field Value Type Description System.String | Improve this Doc View Source Proj4StringPrefix Declaration public const string Proj4StringPrefix = null Field Value Type Description System.String Methods | Improve this Doc View Source GetCrsType(String) Declaration public static CrsType GetCrsType(string crs) Parameters Type Name Description System.String crs Returns Type Description CrsType | Improve this Doc View Source GetTransformedBoundingBox(ITransformation, BoundingBox, String, String) Declaration public static BoundingBox GetTransformedBoundingBox(ITransformation transformatiom, BoundingBox extent, string fromCRS, string toCRS) Parameters Type Name Description ITransformation transformatiom BoundingBox extent System.String fromCRS System.String toCRS Returns Type Description BoundingBox | Improve this Doc View Source NeedsTransform(ITransformation, String, String) Declaration public static bool NeedsTransform(ITransformation transformation, string fromCRS, string toCRS) Parameters Type Name Description ITransformation transformation System.String fromCRS System.String toCRS Returns Type Description System.Boolean | Improve this Doc View Source ToEpsgCode(String) Declaration public static int ToEpsgCode(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Int32 | Improve this Doc View Source ToStandardizedCRS(String) Declaration public static string ToStandardizedCRS(string crs) Parameters Type Name Description System.String crs Returns Type Description System.String | Improve this Doc View Source Transform(IEnumerable<IFeature>, ITransformation, String, String) Declaration public static IEnumerable<IFeature> Transform(IEnumerable<IFeature> features, ITransformation transformation, string fromCRS, string toCRS) Parameters Type Name Description IEnumerable < IFeature > features ITransformation transformation System.String fromCRS System.String toCRS Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source Transform(BoundingBox, ITransformation, String, String) Declaration public static BoundingBox Transform(BoundingBox extent, ITransformation transformation, string fromCRS, string toCRS) Parameters Type Name Description BoundingBox extent ITransformation transformation System.String fromCRS System.String toCRS Returns Type Description BoundingBox"
  },
  "api/Mapsui.Utilities.OpenStreetMap.html": {
    "href": "api/Mapsui.Utilities.OpenStreetMap.html",
    "title": "Class OpenStreetMap",
    "keywords": "Class OpenStreetMap Inheritance System.Object OpenStreetMap Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class OpenStreetMap : object Methods | Improve this Doc View Source CreateTileLayer() Declaration public static TileLayer CreateTileLayer() Returns Type Description TileLayer"
  },
  "api/Mapsui.Utilities.EmbeddedResourceLoader.html": {
    "href": "api/Mapsui.Utilities.EmbeddedResourceLoader.html",
    "title": "Class EmbeddedResourceLoader",
    "keywords": "Class EmbeddedResourceLoader Inheritance System.Object EmbeddedResourceLoader Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class EmbeddedResourceLoader : object Methods | Improve this Doc View Source Load(String, Type) Declaration public static Stream Load(string relativePathToEmbeddedResource, Type typeInAssemblyOfEmbeddedResource) Parameters Type Name Description System.String relativePathToEmbeddedResource This is the path of the resource without the assemlby path but including possible project folders. So if an image 'myimage.png' is in a project folders 'images' the path is 'images.myimage.png'. Resources always uses '.' as separators. Type typeInAssemblyOfEmbeddedResource This should be a type that is in the same assembly as the EmbeddedResource. It is used to infer the full path and is necessary to load the resource. Returns Type Description Stream"
  },
  "api/Mapsui.Utilities.DeveloperTools.html": {
    "href": "api/Mapsui.Utilities.DeveloperTools.html",
    "title": "Class DeveloperTools",
    "keywords": "Class DeveloperTools Inheritance System.Object DeveloperTools Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class DeveloperTools : object Fields | Improve this Doc View Source DeveloperMode Declaration public static bool DeveloperMode Field Value Type Description System.Boolean"
  },
  "api/Mapsui.Utilities.CrsType.html": {
    "href": "api/Mapsui.Utilities.CrsType.html",
    "title": "Enum CrsType",
    "keywords": "Enum CrsType Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public enum CrsType : int Fields Name Description Epgs EsriString Proj4String"
  },
  "api/Mapsui.Utilities.Constants.html": {
    "href": "api/Mapsui.Utilities.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Inheritance System.Object Constants Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Constants : object Fields | Improve this Doc View Source DefaultResolution Declaration public const float DefaultResolution = null Field Value Type Description System.Single | Improve this Doc View Source DegreesToRadians Declaration public const float DegreesToRadians = null Field Value Type Description System.Single | Improve this Doc View Source Epsilon Declaration public const double Epsilon = null Field Value Type Description System.Double"
  },
  "api/Mapsui.UI.ZoomMode.html": {
    "href": "api/Mapsui.UI.ZoomMode.html",
    "title": "Enum ZoomMode",
    "keywords": "Enum ZoomMode Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public enum ZoomMode : int Fields Name Description KeepWithinResolutions Restricts zoom of the viewport to ZoomLimits and, if ZoomLimits isn't set, to minimum and maximum of Resolutions Unlimited Restricts zoom in no way"
  },
  "api/Mapsui.UI.ZoomedEventArgs.html": {
    "href": "api/Mapsui.UI.ZoomedEventArgs.html",
    "title": "Class ZoomedEventArgs",
    "keywords": "Class ZoomedEventArgs Inheritance System.Object ZoomedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class ZoomedEventArgs : EventArgs Constructors | Improve this Doc View Source ZoomedEventArgs(Point, ZoomDirection) Declaration public ZoomedEventArgs(Point screenPosition, ZoomDirection direction) Parameters Type Name Description Point screenPosition ZoomDirection direction Properties | Improve this Doc View Source Direction Declaration public ZoomDirection Direction { get; } Property Value Type Description ZoomDirection | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Point ScreenPosition { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.ZoomDirection.html": {
    "href": "api/Mapsui.UI.ZoomDirection.html",
    "title": "Enum ZoomDirection",
    "keywords": "Enum ZoomDirection Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public enum ZoomDirection : int Fields Name Description ZoomIn ZoomOut"
  },
  "api/Mapsui.UI.html": {
    "href": "api/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes FeatureInfoEventArgs HoveredEventArgs MapInfo MapInfoEventArgs MapInfoHelper MinMax SwipedEventArgs TappedEventArgs TouchedEventArgs ViewChangedEventArgs ViewportLimiter ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. ViewportLimiterWithoutLimits ZoomedEventArgs Interfaces IMapControl IViewportLimiter Enums TouchMode ZoomDirection ZoomMode"
  },
  "api/Mapsui.UI.Wpf.html": {
    "href": "api/Mapsui.UI.Wpf.html",
    "title": "Namespace Mapsui.UI.Wpf",
    "keywords": "Namespace Mapsui.UI.Wpf Classes MapControl MouseButtonEventArgsExtensions PointExtensions WindowsPointExtensions Enums RenderMode"
  },
  "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html": {
    "href": "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html",
    "title": "Class ObservableCollectionProvider<T>",
    "keywords": "Class ObservableCollectionProvider<T> Inheritance System.Object ObservableCollectionProvider<T> Implements IProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class ObservableCollectionProvider<T> : object, IProvider where T : IFeatureProvider Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableCollectionProvider(ObservableCollection<T>) Declaration public ObservableCollectionProvider(ObservableCollection<T> collection) Parameters Type Name Description ObservableCollection <T> collection Properties | Improve this Doc View Source Collection Declaration public ObservableCollection<T> Collection { get; } Property Value Type Description ObservableCollection <T> | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Implements IProvider"
  },
  "api/Mapsui.UI.Objects.MyLocationLayer.html": {
    "href": "api/Mapsui.UI.Objects.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance System.Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer INotifyPropertyChanged Inherited Members MemoryLayer.DataSource MemoryLayer.GetFeaturesInView(BoundingBox, Double) MemoryLayer.RefreshData(BoundingBox, Double, Boolean) MemoryLayer.Envelope BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.IsCrsSupported(String) BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class MyLocationLayer : MemoryLayer, ILayer, INotifyPropertyChanged Remarks There are two different symbols for own loaction: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Improve this Doc View Source MyLocationLayer(MapView) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(MapView view) Parameters Type Name Description MapView view MapView, to which this layer belongs Properties | Improve this Doc View Source Direction Direction of device at location Declaration public double Direction { get; set; } Property Value Type Description System.Double Direction at location | Improve this Doc View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocation Position of location, that is displayed Declaration public Position MyLocation { get; } Property Value Type Description Position Position of location | Improve this Doc View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description System.Double Scale of symbol | Improve this Doc View Source Speed Speed of moving Declaration public double Speed { get; } Property Value Type Description System.Double Speed of moving Methods | Improve this Doc View Source UpdateMyDirection(Double, Double) Updates my direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation) Parameters Type Name Description System.Double newDirection New direction System.Double newViewportRotation New viewport rotation | Improve this Doc View Source UpdateMyLocation(Position) Updates my location Declaration public void UpdateMyLocation(Position newLocation) Parameters Type Name Description Position newLocation New location | Improve this Doc View Source UpdateMySpeed(Double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description System.Double newSpeed New speed Implements ILayer INotifyPropertyChanged"
  },
  "api/Mapsui.UI.Objects.IFeatureProvider.html": {
    "href": "api/Mapsui.UI.Objects.IFeatureProvider.html",
    "title": "Interface IFeatureProvider",
    "keywords": "Interface IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public interface IFeatureProvider Properties | Improve this Doc View Source Feature Declaration Feature Feature { get; } Property Value Type Description Feature"
  },
  "api/Mapsui.UI.Objects.Drawable.html": {
    "href": "api/Mapsui.UI.Objects.Drawable.html",
    "title": "Class Drawable",
    "keywords": "Class Drawable Base class for all drawables like polyline, polygon and circle Inheritance System.Object Drawable Circle Polygon Polyline Implements IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class Drawable : BindableObject, IClickable, IFeatureProvider Fields | Improve this Doc View Source IsClickableProperty Declaration public static readonly BindableProperty IsClickableProperty Field Value Type Description BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeColorProperty Declaration public static readonly BindableProperty StrokeColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeWidthProperty Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source ZIndexProperty Declaration public static readonly BindableProperty ZIndexProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Feature Mapsui Feature belonging to this drawable Declaration public Feature Feature { get; set; } Property Value Type Description Feature | Improve this Doc View Source IsClickable Is this drawable clickable Declaration public bool IsClickable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of drawable Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source StrokeColor StrokeColor for drawable Declaration public Xamarin.Forms.Color StrokeColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source StrokeWidth StrokeWidth of drawable in pixel Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Tag Object for free use Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ZIndex ZIndex of this drawable Declaration public int ZIndex { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Events | Improve this Doc View Source Clicked Event called, if this drawable is clicked an IsClickable is true Declaration public event EventHandler<DrawableClickedEventArgs> Clicked Event Type Type Description EventHandler < DrawableClickedEventArgs > Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.CalloutType.html": {
    "href": "api/Mapsui.UI.Objects.CalloutType.html",
    "title": "Enum CalloutType",
    "keywords": "Enum CalloutType Type of Callout Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public enum CalloutType : int Fields Name Description Custom Content is custom, ContentView in Content is shown Detail Header and detail is shown Single Only one line is shown"
  },
  "api/Mapsui.UI.Objects.Callout.html": {
    "href": "api/Mapsui.UI.Objects.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance System.Object Callout Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class Callout : ContentView Constructors | Improve this Doc View Source Callout(MapControl) Declaration public Callout(MapControl mapControl) Parameters Type Name Description MapControl mapControl Fields | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowAlignmentProperty Declaration public static readonly BindableProperty ArrowAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowHeightProperty Declaration public static readonly BindableProperty ArrowHeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowPositionProperty Declaration public static readonly BindableProperty ArrowPositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowWidthProperty Declaration public static readonly BindableProperty ArrowWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source BackgroundColorProperty Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ContentProperty Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsClosableByClickProperty Declaration public static readonly BindableProperty IsClosableByClickProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsCloseVisibleProperty Declaration public static readonly BindableProperty IsCloseVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source PaddingProperty Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description BindableProperty | Improve this Doc View Source RectRadiusProperty Declaration public static readonly BindableProperty RectRadiusProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeWidthProperty Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleProperty Declaration public static readonly BindableProperty SubtitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleProperty Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Anchor Anchor position of Callout Declaration public Position Anchor { get; set; } Property Value Type Description Position | Improve this Doc View Source ArrowAlignment Anchor position of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height of anchor of Callout Declaration public float ArrowHeight { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by AnchorType Declaration public float ArrowPosition { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ArrowWidth Width of opening of anchor of Callout Declaration public float ArrowWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source Content Content of Callout Declaration public ContentView Content { get; set; } Property Value Type Description ContentView | Improve this Doc View Source IsClosableByClick Closes Callout by clicking somewhere else on the MapView Declaration public bool IsClosableByClick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCloseVisible Is close button to hide Callout visible Declaration public bool IsCloseVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public float RectRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Subtitle Content of Callout detail label Declaration public string Subtitle { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleLabel Label for detail Declaration public Label SubtitleLabel { get; } Property Value Type Description Label | Improve this Doc View Source Title Content of Callout header Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleLabel Label for header Declaration public Label TitleLabel { get; } Property Value Type Description Label | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Events | Improve this Doc View Source CalloutClicked Declaration public event EventHandler<EventArgs> CalloutClicked Event Type Type Description EventHandler < EventArgs > | Improve this Doc View Source CalloutClosed Declaration public event EventHandler<EventArgs> CalloutClosed Event Type Type Description EventHandler < EventArgs >"
  },
  "api/Mapsui.UI.Objects.ArrowAlignment.html": {
    "href": "api/Mapsui.UI.Objects.ArrowAlignment.html",
    "title": "Enum ArrowAlignment",
    "keywords": "Enum ArrowAlignment Determins, where the pointer is Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public enum ArrowAlignment : int Fields Name Description Bottom Left Right Top"
  },
  "api/Mapsui.UI.MinMax.html": {
    "href": "api/Mapsui.UI.MinMax.html",
    "title": "Class MinMax",
    "keywords": "Class MinMax Inheritance System.Object MinMax Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MinMax : object Constructors | Improve this Doc View Source MinMax(Double, Double) Declaration public MinMax(double value1, double value2) Parameters Type Name Description System.Double value1 System.Double value2 Properties | Improve this Doc View Source Max Declaration public double Max { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Declaration public double Min { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.MapInfoHelper.html": {
    "href": "api/Mapsui.UI.MapInfoHelper.html",
    "title": "Class MapInfoHelper",
    "keywords": "Class MapInfoHelper Inheritance System.Object MapInfoHelper Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public static class MapInfoHelper : object Methods | Improve this Doc View Source GetMapInfo(IEnumerable<ILayer>, IReadOnlyViewport, Point, ISymbolCache, Int32) Declaration public static MapInfo GetMapInfo(IEnumerable<ILayer> layers, IReadOnlyViewport viewport, Point screenPosition, ISymbolCache symbolCache, int margin = 0) Parameters Type Name Description IEnumerable < ILayer > layers The layers to query for MapInfo IReadOnlyViewport viewport The current Viewport Point screenPosition The screenposition to query ISymbolCache symbolCache The System.Int32 margin Margin of error in pixels. If the distance between screen position and geometry is smaller than the margin it is seen as a hit. Returns Type Description MapInfo"
  },
  "api/Mapsui.UI.MapInfoEventArgs.html": {
    "href": "api/Mapsui.UI.MapInfoEventArgs.html",
    "title": "Class MapInfoEventArgs",
    "keywords": "Class MapInfoEventArgs Inheritance System.Object MapInfoEventArgs Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfoEventArgs : EventArgs Properties | Improve this Doc View Source Handled If the interaction was handled by the event subscriber Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapInfo Declaration public MapInfo MapInfo { get; set; } Property Value Type Description MapInfo | Improve this Doc View Source NumTaps Number of times the user tapped the location Declaration public int NumTaps { get; set; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.UI.MapInfo.html": {
    "href": "api/Mapsui.UI.MapInfo.html",
    "title": "Class MapInfo",
    "keywords": "Class MapInfo Inheritance System.Object MapInfo Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfo : object Properties | Improve this Doc View Source Feature The feature touched but the user Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Improve this Doc View Source Layer The layer to which the touched feature belongs Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Improve this Doc View Source Resolution The resolution at which the info was retrieved. This can be useful to calculate screen distances, which are needed for editing functionality. Declaration public double Resolution { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ScreenPosition Screen position of the place the user touched Declaration public Point ScreenPosition { get; set; } Property Value Type Description Point | Improve this Doc View Source WorldPosition World position of the place the user touched Declaration public Point WorldPosition { get; set; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.IViewportLimiter.html": {
    "href": "api/Mapsui.UI.IViewportLimiter.html",
    "title": "Interface IViewportLimiter",
    "keywords": "Interface IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IViewportLimiter Properties | Improve this Doc View Source PanLimits Set this property in combination KeepCenterWithinExtents or KeepViewportWithinExtents. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration BoundingBox PanLimits { get; set; } Property Value Type Description BoundingBox | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(IViewport, IReadOnlyList<Double>, BoundingBox) Declaration void Limit(IViewport viewport, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope | Improve this Doc View Source LimitExtent(IViewport, BoundingBox) Declaration void LimitExtent(IViewport viewport, BoundingBox mapEnvelope) Parameters Type Name Description IViewport viewport BoundingBox mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, BoundingBox) Declaration double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, BoundingBox mapEnvelope) Parameters Type Name Description System.Double resolution System.Double screenWidth System.Double screenHeight IReadOnlyList < System.Double > mapResolutions BoundingBox mapEnvelope Returns Type Description System.Double"
  },
  "api/Mapsui.UI.iOS.html": {
    "href": "api/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "api/Mapsui.UI.iOS.MapControl.html": {
    "href": "api/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl UIView Namespace : Mapsui.UI.iOS Assembly : Mapsui.UI.iOS.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, UIView Constructors | Improve this Doc View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CGRect frame | Improve this Doc View Source MapControl(IntPtr) Declaration public MapControl(IntPtr handle) Parameters Type Name Description IntPtr handle Properties | Improve this Doc View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CGRect | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source TouchesBegan(NSSet, UIEvent) Declaration public override void TouchesBegan(NSSet touches, UIEvent evt) Parameters Type Name Description NSSet touches UIEvent evt | Improve this Doc View Source TouchesEnded(NSSet, UIEvent) Declaration public override void TouchesEnded(NSSet touches, UIEvent e) Parameters Type Name Description NSSet touches UIEvent e | Improve this Doc View Source TouchesMoved(NSSet, UIEvent) Declaration public override void TouchesMoved(NSSet touches, UIEvent evt) Parameters Type Name Description NSSet touches UIEvent evt | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl UIView"
  },
  "api/Mapsui.UI.IMapControl.html": {
    "href": "api/Mapsui.UI.IMapControl.html",
    "title": "Interface IMapControl",
    "keywords": "Interface IMapControl Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IMapControl Properties | Improve this Doc View Source Map Declaration Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Declaration INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity The number of pixel per device independent unit Declaration float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Declaration IRenderer Renderer { get; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees Declaration double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees Declaration double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source OpenBrowser(String) Declaration void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Declaration void Refresh() | Improve this Doc View Source RefreshData() Declaration void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source Unsubscribe() Declaration void Unsubscribe() Events | Improve this Doc View Source Info Declaration event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source ViewportInitialized Declaration event EventHandler ViewportInitialized Event Type Type Description EventHandler"
  },
  "api/Mapsui.UI.HoveredEventArgs.html": {
    "href": "api/Mapsui.UI.HoveredEventArgs.html",
    "title": "Class HoveredEventArgs",
    "keywords": "Class HoveredEventArgs Inheritance System.Object HoveredEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class HoveredEventArgs : EventArgs Constructors | Improve this Doc View Source HoveredEventArgs(Point) Declaration public HoveredEventArgs(Point screenPosition) Parameters Type Name Description Point screenPosition Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Point ScreenPosition { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance System.Object DrawableClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Forms.Distance.html": {
    "href": "api/Mapsui.UI.Forms.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Distance Constructors | Improve this Doc View Source Distance(Double) Constructor for Distance object. Declaration public Distance(double meters) Parameters Type Name Description System.Double meters Meters. Properties | Improve this Doc View Source Kilometers Distance in kilometers Declaration public double Kilometers { get; } Property Value Type Description System.Double Distance in kilometers | Improve this Doc View Source Meters Distance in meters Declaration public double Meters { get; } Property Value Type Description System.Double Distance in meters | Improve this Doc View Source Miles Distance in miles Declaration public double Miles { get; } Property Value Type Description System.Double Distance im miles | Improve this Doc View Source NauticalMiles Distance in nautic miles Declaration public double NauticalMiles { get; } Property Value Type Description System.Double Distance in nautical miles Methods | Improve this Doc View Source Equals(Distance) Determines whether the specified Distance is equal to the current Distance . Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Distance Returns Type Description System.Boolean True if the specified Distance is equal to the current Distance ; otherwise, false . | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source FromKilometers(Double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description System.Double kilometers Distance in kilometers Returns Type Description Distance Distance object | Improve this Doc View Source FromMeters(Double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description System.Double meters Distance in meters Returns Type Description Distance Distance object | Improve this Doc View Source FromMiles(Double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description System.Double miles Distance in miles Returns Type Description Distance Distance object | Improve this Doc View Source FromNauticalMiles(Double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description System.Double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.Circle.html": {
    "href": "api/Mapsui.UI.Forms.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance System.Object Drawable Circle Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class Circle : Drawable, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Circle() Declaration public Circle() Fields | Improve this Doc View Source CenterProperty Declaration public static readonly BindableProperty CenterProperty Field Value Type Description BindableProperty | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source QualityProperty Declaration public static readonly BindableProperty QualityProperty Field Value Type Description BindableProperty | Improve this Doc View Source RadiusProperty Declaration public static readonly BindableProperty RadiusProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Improve this Doc View Source FillColor Color to fill circle with Declaration public Xamarin.Forms.Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements IFeatureProvider"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html",
    "title": "Class XPathQueryManagerDecoratorBase",
    "keywords": "Class XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager . Inheritance System.Object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public abstract class XPathQueryManagerDecoratorBase : object Constructors | Improve this Doc View Source XPathQueryManagerDecoratorBase(IXPathQueryManager) Protected constructor for the abstract class. Declaration protected XPathQueryManagerDecoratorBase(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Fields | Improve this Doc View Source XPathQueryManager Declaration protected IXPathQueryManager XPathQueryManager Field Value Type Description IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void AddNamespace(string prefix, string ns) Parameters Type Name Description System.String prefix A namespace prefix System.String ns A namespace URI | Improve this Doc View Source Clone() This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathExpression Compile(string xPath) Parameters Type Name Description System.String xPath An XPath string Returns Type Description XPathExpression A compiled XPath expression | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description System.String | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Stream) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html",
    "title": "Class XPathQueryManagerCompiledExpressionsDecorator",
    "keywords": "Class XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. Inheritance System.Object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Implements IXPathQueryManager Inherited Members XPathQueryManagerDecoratorBase.XPathQueryManager XPathQueryManagerDecoratorBase.AddNamespace(String, String) XPathQueryManagerDecoratorBase.GetValueFromNode(XPathExpression, DictionaryEntry[]) XPathQueryManagerDecoratorBase.ResetNamespaces() XPathQueryManagerDecoratorBase.SetDocumentToParse(Stream) XPathQueryManagerDecoratorBase.SetDocumentToParse(HttpClientUtil) Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class XPathQueryManagerCompiledExpressionsDecorator : XPathQueryManagerDecoratorBase, IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager) Initializes a new instance of the XPathQueryManagerCompiledExpressionsDecorator class. Declaration public XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Methods | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XPathDocument instance. Declaration public override IXPathQueryManager Clone() Returns Type Description IXPathQueryManager Overrides XPathQueryManagerDecoratorBase.Clone() | Improve this Doc View Source Compile(String) This method compiles an XPath string, if not already saved. Otherwise it returns the available XPath compilation. Declaration public override XPathExpression Compile(string xPath) Parameters Type Name Description System.String xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression Overrides XPathQueryManagerDecoratorBase.Compile(String) | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method returns an instance of XPathQueryManagerCompiledExpressionsDecorator in the context of the first node the XPath expression addresses. Declaration public override IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager Overrides XPathQueryManagerDecoratorBase.GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) Implements IXPathQueryManager"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html",
    "title": "Class XPathQueryManager",
    "keywords": "Class XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. Inheritance System.Object XPathQueryManager Implements IXPathQueryManager Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class XPathQueryManager : object, IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManager() Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager() | Improve this Doc View Source XPathQueryManager(HttpClientUtil) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source XPathQueryManager(Stream) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source XPathQueryManager(Byte[]) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(byte[] document) Parameters Type Name Description System.Byte [] document A byte array with XML data | Improve this Doc View Source XPathQueryManager(String) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(string fileName) Parameters Type Name Description System.String fileName | Improve this Doc View Source XPathQueryManager(XPathDocument) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(XPathDocument xPathDoc) Parameters Type Name Description XPathDocument xPathDoc An XmlDocument instance Methods | Improve this Doc View Source AddNamespace(String, String) This method adds a namespace for XPath queries. Declaration public void AddNamespace(string prefix, string ns) Parameters Type Name Description System.String prefix The namespace prefix System.String ns The namespace URI | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XmlDocument instance. Declaration public IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method compiles an XPath string. Declaration public XPathExpression Compile(string xPath) Parameters Type Name Description System.String xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression | Improve this Doc View Source GetIterator(XPathExpression) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator GetIterator(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) This method returns the value of the first node the XPath expression addresses. Declaration public string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description System.String | Improve this Doc View Source GetValuesFromNodes(XPathExpression) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description List < System.String > | Improve this Doc View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description List < System.String > | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method returns an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration public IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method deletes the current namespace context. Declaration public void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Sets a new XML document. Declaration public void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Stream) Sets a new XML document. Declaration public void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source SetDocumentToParse(Byte[]) Sets a new XML document. Declaration public void SetDocumentToParse(byte[] document) Parameters Type Name Description System.Byte [] document A byte array with XML data | Improve this Doc View Source SetDocumentToParse(String) Sets a new XmlDocument Declaration public void SetDocumentToParse(string fileName) Parameters Type Name Description System.String fileName Implements IXPathQueryManager"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html",
    "title": "Class XPathQueryManager.ParamFunctionVar",
    "keywords": "Class XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. Inheritance System.Object XPathQueryManager.ParamFunctionVar Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class ParamFunctionVar : IXsltContextVariable Constructors | Improve this Doc View Source ParamFunctionVar(Object) Initializes a new instance of the XPathQueryManager.ParamFunctionVar class. Declaration public ParamFunctionVar(object param) Parameters Type Name Description System.Object param The parameter Properties | Improve this Doc View Source IsLocal Method implementing IXsltContextVariable Declaration public bool IsLocal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsParam Method implementing IXsltContextVariable Declaration public bool IsParam { get; } Property Value Type Description System.Boolean | Improve this Doc View Source VariableType Method implementing IXsltContextVariable Declaration public XPathResultType VariableType { get; } Property Value Type Description XPathResultType Methods | Improve this Doc View Source Evaluate(XsltContext) Method implementing IXsltContextVariable Declaration public object Evaluate(XsltContext xsltContext) Parameters Type Name Description XsltContext xsltContext Returns Type Description System.Object"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html",
    "title": "Class XPathQueryManager.ParamCompareWithTargetNs",
    "keywords": "Class XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. Inheritance System.Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamCompare.ResolveArgument(Object) XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class ParamCompareWithTargetNs : XPathQueryManager.ParamCompare, IXsltContextFunction Constructors | Improve this Doc View Source ParamCompareWithTargetNs(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompareWithTargetNs class. Declaration public ParamCompareWithTargetNs(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function System.Int32 minArgs The minimum number of arguments allowed System.Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description System.String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public override object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context System.Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description System.Object A boolean value indicating whether the argument strings are identical Overrides XPathQueryManager.ParamCompare.Invoke(XsltContext, Object[], XPathNavigator) Implements IXsltContextFunction"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html",
    "title": "Class WFS_1_1_0_XPathTextResources",
    "keywords": "Class WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. Inheritance System.Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WFS_1_1_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html",
    "title": "Class WFS_1_1_0_TextResources",
    "keywords": "Class WFS_1_1_0_TextResources Inheritance System.Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_1_0_XPathTextResources.XPATH_SRS WFS_1_1_0_XPathTextResources.XPATH_BBOX WFS_1_1_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_1_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WFS_1_1_0_TextResources : WFS_1_1_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description System.String featureTypeName The name of the featuretype to query Returns Type Description System.String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description System.String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query System.String labelProperty BoundingBox boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description System.String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query System.String labelProperty A property necessary for label rendering BoundingBox boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description System.Byte [] Implements IWFS_TextResources"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html",
    "title": "Class WFS_1_0_0_XPathTextResources",
    "keywords": "Class WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). Inheritance System.Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WFS_1_0_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the 'maxx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the 'maxy'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the 'minx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the 'miny'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html",
    "title": "Class WFS_1_0_0_TextResources",
    "keywords": "Class WFS_1_0_0_TextResources Inheritance System.Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_0_0_XPathTextResources.XPATH_SRS WFS_1_0_0_XPathTextResources.XPATH_BBOX WFS_1_0_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_0_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WFS_1_0_0_TextResources : WFS_1_0_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description System.String featureTypeName The name of the featuretype to query Returns Type Description System.String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description System.String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query System.String labelProperty BoundingBox boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description System.String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query System.String labelProperty A property necessary for label rendering BoundingBox boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description System.Byte [] Implements IWFS_TextResources"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html",
    "title": "Class WfsFeatureTypeInfo",
    "keywords": "Class WfsFeatureTypeInfo Inheritance System.Object WfsFeatureTypeInfo Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WfsFeatureTypeInfo : object Constructors | Improve this Doc View Source WfsFeatureTypeInfo() Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo() | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName) Parameters Type Name Description System.String serviceUri System.String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. System.String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. System.String featureType System.String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String, GeometryTypeEnum) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType) Parameters Type Name Description System.String serviceUri System.String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. System.String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. System.String featureType System.String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. Properties | Improve this Doc View Source BBox Gets or sets the spatial extent of the featuretype - defined as minimum bounding rectangle. Declaration public WfsFeatureTypeInfo.BoundingBox BBox { get; set; } Property Value Type Description WfsFeatureTypeInfo.BoundingBox | Improve this Doc View Source Cs Separator for coordinate values (for gml:coordinates) Declaration public string Cs { get; set; } Property Value Type Description System.String | Improve this Doc View Source DecimalDel Decimal separator (for gml:coordinates) Declaration public string DecimalDel { get; set; } Property Value Type Description System.String | Improve this Doc View Source FeatureTypeNamespace Gets or sets the featuretype namespace. This argument is obligatory for data retrieving, except when using the quick geometries option. Declaration public string FeatureTypeNamespace { get; set; } Property Value Type Description System.String | Improve this Doc View Source Geometry Gets or sets information about the geometry of the featuretype. Setting at least the geometry name is obligatory for data retrieving. Declaration public WfsFeatureTypeInfo.GeometryInfo Geometry { get; set; } Property Value Type Description WfsFeatureTypeInfo.GeometryInfo | Improve this Doc View Source LableField Declaration public string LableField { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Gets or sets the name of the featuretype. This argument is obligatory for data retrieving. Declaration public string Name { get; set; } Property Value Type Description System.String The name. | Improve this Doc View Source Prefix Gets or sets the prefix of the featuretype and it's nested elements. This argument is obligatory for data retrieving, if the featuretype is declared with a prefix in 'GetCapabilities'. Declaration public string Prefix { get; set; } Property Value Type Description System.String The prefix. | Improve this Doc View Source ServiceUri Gets or sets the service URI for WFS 'GetFeature' request. This argument is obligatory for data retrieving. Declaration public string ServiceUri { get; set; } Property Value Type Description System.String | Improve this Doc View Source SRID Gets or sets the spatial reference ID Declaration public string SRID { get; set; } Property Value Type Description System.String | Improve this Doc View Source Ts Tuple separator (for gml:coordinates) Declaration public string Ts { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html",
    "title": "Class WfsFeatureTypeInfo.GeometryInfo",
    "keywords": "Class WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Inheritance System.Object WfsFeatureTypeInfo.GeometryInfo Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class GeometryInfo : object Fields | Improve this Doc View Source GeometryName Declaration public string GeometryName Field Value Type Description System.String | Improve this Doc View Source GeometryType Declaration public string GeometryType Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html",
    "title": "Class WfsFeatureTypeInfo.BoundingBox",
    "keywords": "Class WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. Inheritance System.Object WfsFeatureTypeInfo.BoundingBox Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class BoundingBox : object Fields | Improve this Doc View Source MaxLat Declaration public double MaxLat Field Value Type Description System.Double | Improve this Doc View Source MaxLong Declaration public double MaxLong Field Value Type Description System.Double | Improve this Doc View Source MinLat Declaration public double MinLat Field Value Type Description System.Double | Improve this Doc View Source MinLong Declaration public double MinLong Field Value Type Description System.Double"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsNotEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsNotEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsNotEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsNotEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsNotEqualToFilter_FE1_1_0 class. Declaration public PropertyIsNotEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html",
    "title": "Enum OGCFilterCollection.JunctorEnum",
    "keywords": "Enum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators. Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public enum JunctorEnum : int Fields Name Description And Or"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html",
    "title": "Class OgcFilterBase",
    "keywords": "Class OgcFilterBase This class is the base class of all filters. It stores the filter arguments. Inheritance System.Object OgcFilterBase FeatureIdFilter_FE1_1_0 PropertyIsBetweenFilter_FE1_1_0 PropertyIsEqualToFilter_FE1_1_0 PropertyIsGreaterThanFilter_FE1_1_0 PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 PropertyIsLessThanFilter_FE1_1_0 PropertyIsLessThanOrEqualToFilter_FE1_1_0 PropertyIsLikeFilter_FE1_1_0 PropertyIsNotEqualToFilter_FE1_1_0 Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public abstract class OgcFilterBase : object Constructors | Improve this Doc View Source OgcFilterBase(String[]) Protected constructor for the abstract class. Declaration protected OgcFilterBase(string[] args) Parameters Type Name Description System.String [] args An array of arguments for the filter Fields | Improve this Doc View Source Args Declaration protected string[] Args Field Value Type Description System.String []"
  },
  "api/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html",
    "title": "Interface IWFS_TextResources",
    "keywords": "Interface IWFS_TextResources Text resources interface Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public interface IWFS_TextResources Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Declaration string NSFEATURETYPEPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSGML Declaration string NSGML { get; } Property Value Type Description System.String | Improve this Doc View Source NSGMLPREFIX Declaration string NSGMLPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSOGC Declaration string NSOGC { get; } Property Value Type Description System.String | Improve this Doc View Source NSOGCPREFIX Declaration string NSOGCPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSOWS Declaration string NSOWS { get; } Property Value Type Description System.String | Improve this Doc View Source NSOWSPREFIX Declaration string NSOWSPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSSCHEMA Declaration string NSSCHEMA { get; } Property Value Type Description System.String | Improve this Doc View Source NSSCHEMAPREFIX Declaration string NSSCHEMAPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSWFS Declaration string NSWFS { get; } Property Value Type Description System.String | Improve this Doc View Source NSWFSPREFIX Declaration string NSWFSPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSXLINK Declaration string NSXLINK { get; } Property Value Type Description System.String | Improve this Doc View Source NSXLINKPREFIX Declaration string NSXLINKPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BBOX Declaration string XPATH_BBOX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Declaration string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Declaration string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Declaration string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Declaration string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Declaration string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Declaration string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Declaration string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Declaration string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Declaration string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_SRS Declaration string XPATH_SRS { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_TARGETNS Declaration string XPATH_TARGETNS { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Declaration string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description System.String Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) Declaration string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description System.String featureTypeName Returns Type Description System.String | Improve this Doc View Source GetCapabilitiesRequest() Declaration string GetCapabilitiesRequest() Returns Type Description System.String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) Declaration string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo System.String labelProperty BoundingBox boundingBox IFilter filter Returns Type Description System.String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, BoundingBox, IFilter) Declaration byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, BoundingBox boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo System.String labelProperty BoundingBox boundingBox IFilter filter Returns Type Description System.Byte []"
  },
  "api/Mapsui.Providers.Wfs.Utilities.IFilter.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.IFilter.html",
    "title": "Interface IFilter",
    "keywords": "Interface IFilter Filter interface Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public interface IFilter Methods | Improve this Doc View Source Encode() Declaration string Encode() Returns Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html",
    "title": "Class HttpClientUtil",
    "keywords": "Class HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. Inheritance System.Object HttpClientUtil Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class HttpClientUtil : object Constructors | Improve this Doc View Source HttpClientUtil() Initializes a new instance of the HttpClientUtil class. Declaration public HttpClientUtil() Properties | Improve this Doc View Source PostData Sets the data of a HTTP POST request as byte array. Declaration public byte[] PostData { set; } Property Value Type Description System.Byte [] | Improve this Doc View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string ProxyUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url Gets ans sets the Url of the request. Declaration public string Url { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddHeader(String, String) Adds a HTTP header. Declaration public void AddHeader(string name, string value) Parameters Type Name Description System.String name The name of the header System.String value The value of the header | Improve this Doc View Source Close() This method closes the WebResponse object. Declaration public void Close() | Improve this Doc View Source GetDataStream() Performs a HTTP-GET or HTTP-POST request and returns a datastream for reading. Declaration public Stream GetDataStream() Returns Type Description Stream | Improve this Doc View Source Reset() This method resets all configurations. Declaration public void Reset()"
  },
  "api/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html",
    "title": "Enum GeometryTypeEnum",
    "keywords": "Enum GeometryTypeEnum Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public enum GeometryTypeEnum : int Fields Name Description CurvePropertyType LineStringPropertyType MultiCurvePropertyType MultiLineStringPropertyType MultiPointPropertyType MultiPolygonPropertyType MultiSurfacePropertyType PointPropertyType PolygonPropertyType SurfacePropertyType Unknown"
  },
  "api/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html",
    "title": "Class FeatureIdFilter_FE1_1_0",
    "keywords": "Class FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. Inheritance System.Object OgcFilterBase FeatureIdFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class FeatureIdFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source FeatureIdFilter_FE1_1_0(String) Initializes a new instance of the FeatureIdFilter_FE1_1_0 class. Declaration public FeatureIdFilter_FE1_1_0(string id) Parameters Type Name Description System.String id Methods | Improve this Doc View Source Encode() Declaration public string Encode() Returns Type Description System.String Implements IFilter"
  },
  "api/Mapsui.Providers.TileProvider.html": {
    "href": "api/Mapsui.Providers.TileProvider.html",
    "title": "Class TileProvider",
    "keywords": "Class TileProvider Inheritance System.Object TileProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class TileProvider : object, IProvider Constructors | Improve this Doc View Source TileProvider(ITileSource) Declaration public TileProvider(ITileSource tileSource) Parameters Type Name Description ITileSource tileSource Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source FetchTiles(BoundingBox, Double) Declaration public IEnumerable<IFeature> FetchTiles(BoundingBox boundingBox, double resolution) Parameters Type Name Description BoundingBox boundingBox System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Implements IProvider"
  },
  "api/Mapsui.Providers.Feature.html": {
    "href": "api/Mapsui.Providers.Feature.html",
    "title": "Class Feature",
    "keywords": "Class Feature Inheritance System.Object Feature Implements IFeature IDisposable Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class Feature : object, IFeature, IDisposable Constructors | Improve this Doc View Source Feature() Declaration public Feature() | Improve this Doc View Source Feature(IFeature) Declaration public Feature(IFeature feature) Parameters Type Name Description IFeature feature Properties | Improve this Doc View Source Fields Declaration public IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable < System.String > | Improve this Doc View Source Geometry Declaration public IGeometry Geometry { get; set; } Property Value Type Description IGeometry | Improve this Doc View Source Item[String] Declaration public virtual object this[string key] { get; set; } Parameters Type Name Description System.String key Property Value Type Description System.Object | Improve this Doc View Source RenderedGeometry Declaration public IDictionary<IStyle, object> RenderedGeometry { get; } Property Value Type Description IDictionary < IStyle , System.Object > | Improve this Doc View Source Styles Declaration public ICollection<IStyle> Styles { get; set; } Property Value Type Description ICollection < IStyle > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFeature IDisposable"
  },
  "api/Mapsui.Providers.ArcGIS.html": {
    "href": "api/Mapsui.Providers.ArcGIS.html",
    "title": "Namespace Mapsui.Providers.ArcGIS",
    "keywords": "Namespace Mapsui.Providers.ArcGIS Classes CapabilitiesHelper Extent SpatialReference Table TileInfo TileInfo.Lod TileInfo.Origin TimeInfo TimeInfo.TimeReference Interfaces IArcGISCapabilities Enums CapabilitiesType Delegates CapabilitiesHelper.StatusEventHandler"
  },
  "api/Mapsui.Providers.ArcGIS.TimeInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.TimeInfo.html",
    "title": "Class TimeInfo",
    "keywords": "Class TimeInfo Inheritance System.Object TimeInfo Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class TimeInfo : object Properties | Improve this Doc View Source timeExtent Declaration public string[] timeExtent { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source timeReference Declaration public TimeInfo.TimeReference timeReference { get; set; } Property Value Type Description TimeInfo.TimeReference"
  },
  "api/Mapsui.Providers.ArcGIS.TimeInfo.TimeReference.html": {
    "href": "api/Mapsui.Providers.ArcGIS.TimeInfo.TimeReference.html",
    "title": "Class TimeInfo.TimeReference",
    "keywords": "Class TimeInfo.TimeReference Inheritance System.Object TimeInfo.TimeReference Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class TimeReference : object Fields | Improve this Doc View Source respectsDaylightSaving Declaration public bool respectsDaylightSaving Field Value Type Description System.Boolean | Improve this Doc View Source timeZone Declaration public string timeZone Field Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.TileInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.TileInfo.html",
    "title": "Class TileInfo",
    "keywords": "Class TileInfo Inheritance System.Object TileInfo Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class TileInfo : object Properties | Improve this Doc View Source cols Declaration public int cols { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source compressionQuality Declaration public int compressionQuality { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source dpi Declaration public int dpi { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source format Declaration public string format { get; set; } Property Value Type Description System.String | Improve this Doc View Source lods Declaration public TileInfo.Lod[] lods { get; set; } Property Value Type Description TileInfo.Lod [] | Improve this Doc View Source origin Declaration public TileInfo.Origin origin { get; set; } Property Value Type Description TileInfo.Origin | Improve this Doc View Source rows Declaration public int rows { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference"
  },
  "api/Mapsui.Providers.ArcGIS.TileInfo.Origin.html": {
    "href": "api/Mapsui.Providers.ArcGIS.TileInfo.Origin.html",
    "title": "Class TileInfo.Origin",
    "keywords": "Class TileInfo.Origin Inheritance System.Object TileInfo.Origin Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class Origin : object Properties | Improve this Doc View Source x Declaration public double x { get; set; } Property Value Type Description System.Double | Improve this Doc View Source y Declaration public double y { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Providers.ArcGIS.TileInfo.Lod.html": {
    "href": "api/Mapsui.Providers.ArcGIS.TileInfo.Lod.html",
    "title": "Class TileInfo.Lod",
    "keywords": "Class TileInfo.Lod Inheritance System.Object TileInfo.Lod Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class Lod : object Properties | Improve this Doc View Source level Declaration public int level { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source resolution Declaration public double resolution { get; set; } Property Value Type Description System.Double | Improve this Doc View Source scale Declaration public double scale { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Providers.ArcGIS.Table.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Table.html",
    "title": "Class Table",
    "keywords": "Class Table Inheritance System.Object Table Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class Table : object Properties | Improve this Doc View Source id Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.Field.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.Field.html",
    "title": "Class Field",
    "keywords": "Class Field Inheritance System.Object Field Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class Field : object Properties | Improve this Doc View Source alias Declaration public string alias { get; set; } Property Value Type Description System.String | Improve this Doc View Source domain Declaration public Domain domain { get; set; } Property Value Type Description Domain | Improve this Doc View Source editable Declaration public bool editable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source length Declaration public int length { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source nullable Declaration public bool nullable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source type Declaration public string type { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.EditFieldsInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.EditFieldsInfo.html",
    "title": "Class EditFieldsInfo",
    "keywords": "Class EditFieldsInfo Inheritance System.Object EditFieldsInfo Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class EditFieldsInfo : object Properties | Improve this Doc View Source creationDateField Declaration public string creationDateField { get; set; } Property Value Type Description System.String | Improve this Doc View Source creatorField Declaration public string creatorField { get; set; } Property Value Type Description System.String | Improve this Doc View Source editDateField Declaration public string editDateField { get; set; } Property Value Type Description System.String | Improve this Doc View Source editorField Declaration public string editorField { get; set; } Property Value Type Description System.String | Improve this Doc View Source realm Declaration public string realm { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.Domain.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.Domain.html",
    "title": "Class Domain",
    "keywords": "Class Domain Inheritance System.Object Domain Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class Domain : object Properties | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Geometries.WellKnownBinary.html": {
    "href": "api/Mapsui.Geometries.WellKnownBinary.html",
    "title": "Namespace Mapsui.Geometries.WellKnownBinary",
    "keywords": "Namespace Mapsui.Geometries.WellKnownBinary Classes GeometryFromWKB Converts Well-known Binary representations to a Geometry instance. GeometryToWKB Converts a Geometry instance to a Well-known Binary string representation. Enums WkbByteOrder Specifies the specific binary encoding (NDR or XDR) used for a geometry byte stream"
  },
  "api/Mapsui.Geometries.Utilities.CGAlgorithms.html": {
    "href": "api/Mapsui.Geometries.Utilities.CGAlgorithms.html",
    "title": "Class CGAlgorithms",
    "keywords": "Class CGAlgorithms Specifies and implements various fundamental Computational Geometric algorithms. The algorithms supplied in this class are robust for double-precision floating point. Inheritance System.Object CGAlgorithms Namespace : Mapsui.Geometries.Utilities Assembly : Mapsui.Geometries.dll Syntax public static class CGAlgorithms : object Fields | Improve this Doc View Source Clockwise A value that indicates an orientation of clockwise, or a right turn. Declaration public const int Clockwise = null Field Value Type Description System.Int32 | Improve this Doc View Source Collinear A value that indicates an orientation of collinear, or no turn (straight). Declaration public const int Collinear = null Field Value Type Description System.Int32 | Improve this Doc View Source CounterClockwise A value that indicates an orientation of counterclockwise, or a left turn. Declaration public const int CounterClockwise = null Field Value Type Description System.Int32 | Improve this Doc View Source Left A value that indicates an orientation of counterclockwise, or a left turn. Declaration public const int Left = null Field Value Type Description System.Int32 | Improve this Doc View Source Right A value that indicates an orientation of clockwise, or a right turn. Declaration public const int Right = null Field Value Type Description System.Int32 | Improve this Doc View Source Straight A value that indicates an orientation of collinear, or no turn (straight). Declaration public const int Straight = null Field Value Type Description System.Int32 Methods | Improve this Doc View Source ClosestPoint(Point, Point, Point) Computes the closest point on this line segment to another point. Declaration public static Point ClosestPoint(Point p, Point lineSegFrom, Point lineSegTo) Parameters Type Name Description Point p Point lineSegFrom Point lineSegTo Returns Type Description Point A Coordinate which is the closest point on the line segment to the point p. | Improve this Doc View Source DistanceLineLine(Point, Point, Point, Point) Computes the distance from a line segment AB to a line segment CD. Note: NON-ROBUST! Declaration public static double DistanceLineLine(Point a, Point b, Point c, Point d) Parameters Type Name Description Point a A point of one line. Point b The second point of the line (must be different to A). Point c One point of the line. Point d Another point of the line (must be different to A). Returns Type Description System.Double The distance from line segment AB to line segment CD. | Improve this Doc View Source DistancePointLine(Point, Point, Point) Computes the distance from a point p to a line segment AB. Note: NON-ROBUST! Declaration public static double DistancePointLine(Point p, Point a, Point b) Parameters Type Name Description Point p The point to compute the distance for. Point a One point of the line. Point b Another point of the line (must be different to A). Returns Type Description System.Double The distance from p to line segment AB. | Improve this Doc View Source DistancePointLinePerpendicular(Point, Point, Point) Computes the perpendicular distance from a point p to the (infinite) line containing the points AB Declaration public static double DistancePointLinePerpendicular(Point p, Point a, Point b) Parameters Type Name Description Point p The point to compute the distance for. Point a One point of the line. Point b Another point of the line (must be different to A). Returns Type Description System.Double The perpendicular distance from p to line AB. | Improve this Doc View Source Length(IList<Point>) Computes the length of a linestring specified by a sequence of points. Declaration public static double Length(IList<Point> pts) Parameters Type Name Description IList < Point > pts The points specifying the linestring. Returns Type Description System.Double The length of the linestring. | Improve this Doc View Source Project(Point, Point, Point) Compute the projection of a point onto the line determined by this line segment. Note that the projected point may lie outside the line segment. If this is the case, the projection factor will lie outside the range [0.0, 1.0]. Declaration public static Point Project(Point p, Point lineSegFrom, Point lineSegTo) Parameters Type Name Description Point p Point lineSegFrom Point lineSegTo Returns Type Description Point | Improve this Doc View Source ProjectionFactor(Point, Point, Point) Compute the projection factor for the projection of the point p onto this LineSegment . The projection factor is the constant k by which the vector for this segment must be multiplied to equal the vector for the projection of p. Declaration public static double ProjectionFactor(Point p, Point lineSegFrom, Point lineSegTo) Parameters Type Name Description Point p Point lineSegFrom Point lineSegTo Returns Type Description System.Double | Improve this Doc View Source SignedArea(Point[]) Returns the signed area for a ring. The area is positive ifthe ring is oriented CW. Declaration public static double SignedArea(Point[] ring) Parameters Type Name Description Point [] ring Returns Type Description System.Double"
  },
  "api/Mapsui.Geometries.Utilities.Algorithms.html": {
    "href": "api/Mapsui.Geometries.Utilities.Algorithms.html",
    "title": "Class Algorithms",
    "keywords": "Class Algorithms Inheritance System.Object Algorithms Namespace : Mapsui.Geometries.Utilities Assembly : Mapsui.Geometries.dll Syntax public static class Algorithms : object Methods | Improve this Doc View Source DegreesToRadians(Double) Converts the specified angle from degrees to radians Declaration public static double DegreesToRadians(double degrees) Parameters Type Name Description System.Double degrees Angle to convert (degrees) Returns Type Description System.Double Returns the angle in radians | Improve this Doc View Source Distance(Point, Point) Declaration public static double Distance(Point a, Point b) Parameters Type Name Description Point a Point b Returns Type Description System.Double | Improve this Doc View Source Distance(Double, Double, Double, Double) Gets the euclidean distance between two points. Declaration public static double Distance(double x1, double y1, double x2, double y2) Parameters Type Name Description System.Double x1 The first point's X coordinate. System.Double y1 The first point's Y coordinate. System.Double x2 The second point's X coordinate. System.Double y2 The second point's Y coordinate. Returns Type Description System.Double | Improve this Doc View Source DistanceToLine(Point, IList<Point>) Declaration public static double DistanceToLine(Point point, IList<Point> points) Parameters Type Name Description Point point IList < Point > points Returns Type Description System.Double | Improve this Doc View Source GetDistanceAndSegmentIndex(Point, IList<Point>) Returns the shortest distance to a line and also the index of the segment with that shortest distance. Segments count from zero to vertex count - 1. Declaration public static (double Distance, int Segment)GetDistanceAndSegmentIndex(Point point, IList<Point> points) Parameters Type Name Description Point point IList < Point > points Returns Type Description System.ValueTuple < System.Double , System.Int32 > | Improve this Doc View Source IsCCW(LinearRing) Tests whether a ring is oriented counter-clockwise. Declaration public static bool IsCCW(LinearRing ring) Parameters Type Name Description LinearRing ring Ring to test. Returns Type Description System.Boolean Returns true if ring is oriented counter-clockwise. | Improve this Doc View Source PointInPolygon(IList<Point>, Point) Declaration public static bool PointInPolygon(IList<Point> ring, Point point) Parameters Type Name Description IList < Point > ring Point point Returns Type Description System.Boolean | Improve this Doc View Source RotateClockwiseDegrees(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static Point RotateClockwiseDegrees(double x, double y, double degrees) Parameters Type Name Description System.Double x X coordinate to rotate System.Double y Y coordinate to rotate System.Double degrees Angle to rotate (degrees) Returns Type Description Point Returns the rotated point | Improve this Doc View Source RotateClockwiseRadians(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static Point RotateClockwiseRadians(double x, double y, double radians) Parameters Type Name Description System.Double x X coordinate to rotate System.Double y Y coordinate to rotate System.Double radians Angle to rotate (radians) Returns Type Description Point Returns the rotated point"
  },
  "api/Mapsui.Geometries.ReadOnlyPoint.html": {
    "href": "api/Mapsui.Geometries.ReadOnlyPoint.html",
    "title": "Class ReadOnlyPoint",
    "keywords": "Class ReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. Inheritance System.Object ReadOnlyPoint Namespace : Mapsui.Geometries Assembly : Mapsui.dll Syntax public class ReadOnlyPoint : object Constructors | Improve this Doc View Source ReadOnlyPoint(ReadOnlyPoint) Declaration public ReadOnlyPoint(ReadOnlyPoint readOnlyPoint) Parameters Type Name Description ReadOnlyPoint readOnlyPoint | Improve this Doc View Source ReadOnlyPoint(Double, Double) Declaration public ReadOnlyPoint(double x, double y) Parameters Type Name Description System.Double x System.Double y Properties | Improve this Doc View Source X Declaration public double X { get; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; } Property Value Type Description System.Double Operators | Improve this Doc View Source Implicit(Point to ReadOnlyPoint) Implicit conversion from ReadOnlyPoint to Point Declaration public static implicit operator ReadOnlyPoint(Point point) Parameters Type Name Description Point point Returns Type Description ReadOnlyPoint | Improve this Doc View Source Implicit(ReadOnlyPoint to Point) Implicit conversion from Point to ReadOnlyPoint Declaration public static implicit operator Point(ReadOnlyPoint readOnlyPoint) Parameters Type Name Description ReadOnlyPoint readOnlyPoint Returns Type Description Point"
  },
  "api/Mapsui.Geometries.Raster.html": {
    "href": "api/Mapsui.Geometries.Raster.html",
    "title": "Class Raster",
    "keywords": "Class Raster Inheritance System.Object Geometry Raster Implements IEquatable < Geometry > IRaster IGeometry Inherited Members Geometry.Envelope Geometry.GetBoundingBox() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class Raster : Geometry, IEquatable<Geometry>, IRaster, IGeometry Constructors | Improve this Doc View Source Raster(MemoryStream, BoundingBox) Declaration public Raster(MemoryStream data, BoundingBox box) Parameters Type Name Description MemoryStream data BoundingBox box Properties | Improve this Doc View Source BoundingBox Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox Overrides Geometry.BoundingBox | Improve this Doc View Source Data Declaration public MemoryStream Data { get; } Property Value Type Description MemoryStream | Improve this Doc View Source TickFetched Declaration public long TickFetched { get; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source AsBinary() Declaration public byte[] AsBinary() Returns Type Description System.Byte [] | Improve this Doc View Source AsText() Declaration public string AsText() Returns Type Description System.String | Improve this Doc View Source Clone() Declaration public Geometry Clone() Returns Type Description Geometry | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(Point) Declaration public override double Distance(Point point) Parameters Type Name Description Point point Returns Type Description System.Double Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Geometry.GetHashCode() | Improve this Doc View Source IsEmpty() Declaration public override bool IsEmpty() Returns Type Description System.Boolean Overrides Geometry.IsEmpty() Implements IEquatable<> IRaster IGeometry"
  },
  "api/Mapsui.Geometries.MultiPoint.html": {
    "href": "api/Mapsui.Geometries.MultiPoint.html",
    "title": "Class MultiPoint",
    "keywords": "Class MultiPoint A MultiPoint is a 0 dimensional geometric collection. The elements of a MultiPoint are restricted to Points. The points are not connected or ordered. Inheritance System.Object Geometry GeometryCollection MultiPoint Implements IEquatable < Geometry > IGeometryCollection IGeometry IEnumerable < Geometry > Inherited Members GeometryCollection.Collection GeometryCollection.GetBoundingBox() GeometryCollection.Equals(GeometryCollection) GeometryCollection.GetHashCode() GeometryCollection.Contains(Point) GeometryCollection.Equals(Geometry) Geometry.Envelope Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class MultiPoint : GeometryCollection, IEquatable<Geometry>, IGeometryCollection, IGeometry, IEnumerable<Geometry> Constructors | Improve this Doc View Source MultiPoint() Initializes a new MultiPoint collection Declaration public MultiPoint() | Improve this Doc View Source MultiPoint(IEnumerable<Double[]>) Initializes a new MultiPoint collection Declaration public MultiPoint(IEnumerable<double[]> points) Parameters Type Name Description IEnumerable < System.Double []> points Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry. Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox Overrides GeometryCollection.BoundingBox | Improve this Doc View Source Item[Int32] Gets the n'th point in the MultiPoint collection Declaration public Point this[int n] { get; } Parameters Type Name Description System.Int32 n Index in collection Property Value Type Description Point Point | Improve this Doc View Source NumGeometries Returns the number of geometries in the collection. Declaration public override int NumGeometries { get; } Property Value Type Description System.Int32 Overrides GeometryCollection.NumGeometries | Improve this Doc View Source Points Gets or sets the MultiPoint collection Declaration public IList<Point> Points { get; set; } Property Value Type Description IList < Point > Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public MultiPoint Clone() Returns Type Description MultiPoint Copy of Geometry | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Geometry to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries Overrides GeometryCollection.Distance(Point) | Improve this Doc View Source Geometry(Int32) Returns an indexed geometry in the collection Declaration public Point Geometry(int n) Parameters Type Name Description System.Int32 n Geometry index Returns Type Description Point Geometry at index N | Improve this Doc View Source GetEnumerator() Gets an enumerator for enumerating the geometries in the GeometryCollection Declaration public override IEnumerator<Geometry> GetEnumerator() Returns Type Description IEnumerator < Geometry > Overrides GeometryCollection.GetEnumerator() | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides GeometryCollection.IsEmpty() Implements IEquatable<> IGeometryCollection IGeometry IEnumerable<>"
  },
  "api/Mapsui.Geometries.MultiLineString.html": {
    "href": "api/Mapsui.Geometries.MultiLineString.html",
    "title": "Class MultiLineString",
    "keywords": "Class MultiLineString A MultiLineString is a MultiCurve whose elements are LineStrings. Inheritance System.Object Geometry GeometryCollection MultiLineString Implements IEquatable < Geometry > IGeometryCollection IGeometry IEnumerable < Geometry > Inherited Members GeometryCollection.Collection GeometryCollection.GetBoundingBox() GeometryCollection.Equals(GeometryCollection) GeometryCollection.GetHashCode() GeometryCollection.Contains(Point) GeometryCollection.Equals(Geometry) Geometry.Envelope Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class MultiLineString : GeometryCollection, IEquatable<Geometry>, IGeometryCollection, IGeometry, IEnumerable<Geometry> Constructors | Improve this Doc View Source MultiLineString() Initializes an instance of a MultiLineString Declaration public MultiLineString() Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry. Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox Overrides GeometryCollection.BoundingBox | Improve this Doc View Source IsClosed Returns true if all LineStrings in this MultiLineString is closed (StartPoint=EndPoint for each LineString in this MultiLineString) Declaration public bool IsClosed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Returns an indexed geometry in the collection Declaration public LineString this[int index] { get; } Parameters Type Name Description System.Int32 index Geometry index Property Value Type Description LineString Geometry at index | Improve this Doc View Source Length The length of this MultiLineString which is equal to the sum of the lengths of the element LineStrings. Declaration public double Length { get; } Property Value Type Description System.Double | Improve this Doc View Source LineStrings Collection of LineString in the MultiLineString Declaration public IList<LineString> LineStrings { get; set; } Property Value Type Description IList < LineString > | Improve this Doc View Source NumGeometries Returns the number of geometries in the collection. Declaration public override int NumGeometries { get; } Property Value Type Description System.Int32 Overrides GeometryCollection.NumGeometries Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public MultiLineString Clone() Returns Type Description MultiLineString Copy of Geometry | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Geometry to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries Overrides GeometryCollection.Distance(Point) | Improve this Doc View Source Geometry(Int32) Returns an indexed geometry in the collection Declaration public override Geometry Geometry(int n) Parameters Type Name Description System.Int32 n Geometry index Returns Type Description Geometry Geometry at index N Overrides GeometryCollection.Geometry(Int32) | Improve this Doc View Source GetEnumerator() Gets an enumerator for enumerating the geometries in the GeometryCollection Declaration public override IEnumerator<Geometry> GetEnumerator() Returns Type Description IEnumerator < Geometry > Overrides GeometryCollection.GetEnumerator() | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides GeometryCollection.IsEmpty() Implements IEquatable<> IGeometryCollection IGeometry IEnumerable<>"
  },
  "api/Mapsui.Geometries.LineString.html": {
    "href": "api/Mapsui.Geometries.LineString.html",
    "title": "Class LineString",
    "keywords": "Class LineString A LineString is a Curve with linear interpolation between points. Each consecutive pair of points defines a line segment. Inheritance System.Object Geometry LineString LinearRing Implements IGeometry IEquatable < Geometry > Inherited Members Geometry.Envelope Geometry.GetBoundingBox() Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class LineString : Geometry, IGeometry, IEquatable<Geometry> Constructors | Improve this Doc View Source LineString() Initializes an instance of a LineString Declaration public LineString() | Improve this Doc View Source LineString(IEnumerable<Point>) Initializes an instance of a LineString from a set of vertices Declaration public LineString(IEnumerable<Point> vertices) Parameters Type Name Description IEnumerable < Point > vertices | Improve this Doc View Source LineString(IEnumerable<Double[]>) Initializes an instance of a LineString Declaration public LineString(IEnumerable<double[]> points) Parameters Type Name Description IEnumerable < System.Double []> points Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry. Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox BoundingBox for this geometry Overrides Geometry.BoundingBox | Improve this Doc View Source EndPoint Gets the vertice where this Geometry ends Declaration public Point EndPoint { get; } Property Value Type Description Point Last vertice in LineString | Improve this Doc View Source IsClosed Returns true if this Curve is closed (StartPoint = EndPoint). Declaration public bool IsClosed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Length The length of this LineString, as measured in the spatial reference system of this LineString. Declaration public double Length { get; } Property Value Type Description System.Double | Improve this Doc View Source NumPoints The number of points in this LineString. Declaration public int NumPoints { get; } Property Value Type Description System.Int32 Remarks This method is supplied as part of the OpenGIS Simple Features Specification | Improve this Doc View Source StartPoint Returns the vertice where this Geometry begins Declaration public Point StartPoint { get; } Property Value Type Description Point First vertice in LineString | Improve this Doc View Source Vertices Gets or sets the collection of vertices in this Geometry Declaration public IList<Point> Vertices { get; set; } Property Value Type Description IList < Point > Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public LineString Clone() Returns Type Description LineString Copy of Geometry | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Geometry to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source Equals(LineString) Checks whether this instance is spatially equal to the LineString 'l' Declaration public bool Equals(LineString lineString) Parameters Type Name Description LineString lineString LineString to compare to Returns Type Description System.Boolean true of the objects are spatially equal | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . Overrides Geometry.GetHashCode() | Improve this Doc View Source GetSegments() Returns a list of line string segments Declaration public List<LineString> GetSegments() Returns Type Description List < LineString > List of LineString | Improve this Doc View Source IsEmpty() If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public override bool IsEmpty() Returns Type Description System.Boolean Returns 'true' if this Geometry is the empty geometry Overrides Geometry.IsEmpty() | Improve this Doc View Source IsSimple() Returns 'true' if this Geometry has no anomalous geometric points, such as self intersection or self tangency. The description of each instantiable geometric class will include the specific conditions that cause an instance of that class to be classified as not simple. Declaration public bool IsSimple() Returns Type Description System.Boolean true if the geometry is simple | Improve this Doc View Source Point(Int32) Returns the specified point N in this Linestring. Declaration public Point Point(int n) Parameters Type Name Description System.Int32 n Returns Type Description Point Remarks This method is supplied as part of the OpenGIS Simple Features Specification Implements IGeometry IEquatable<>"
  },
  "api/Mapsui.Geometries.LinearRing.html": {
    "href": "api/Mapsui.Geometries.LinearRing.html",
    "title": "Class LinearRing",
    "keywords": "Class LinearRing A LinearRing is a LineString that is both closed and simple. Inheritance System.Object Geometry LineString LinearRing Implements IGeometry IEquatable < Geometry > Inherited Members LineString.Vertices LineString.StartPoint LineString.EndPoint LineString.Length LineString.NumPoints LineString.IsClosed LineString.Point(Int32) LineString.BoundingBox LineString.Equals(LineString) LineString.GetHashCode() LineString.IsEmpty() LineString.IsSimple() LineString.Distance(Point) LineString.Contains(Point) LineString.Equals(Geometry) LineString.GetSegments() Geometry.Envelope Geometry.GetBoundingBox() Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class LinearRing : LineString, IGeometry, IEquatable<Geometry> Constructors | Improve this Doc View Source LinearRing() Initializes an instance of a LinearRing Declaration public LinearRing() | Improve this Doc View Source LinearRing(IEnumerable<Point>) Initializes an instance of a LinearRing from a set of vertices Declaration public LinearRing(IEnumerable<Point> vertices) Parameters Type Name Description IEnumerable < Point > vertices | Improve this Doc View Source LinearRing(IEnumerable<Double[]>) Initializes an instance of a LinearRing Declaration public LinearRing(IEnumerable<double[]> points) Parameters Type Name Description IEnumerable < System.Double []> points Properties | Improve this Doc View Source Area Returns the area of the LinearRing Declaration public double Area { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Clone() Return a copy of this geometry Declaration public LinearRing Clone() Returns Type Description LinearRing Copy of Geometry | Improve this Doc View Source GetLineString() Returns a clone of the LinearRing as LineString Declaration public LineString GetLineString() Returns Type Description LineString LineString | Improve this Doc View Source IsCCW() Tests whether a ring is oriented counter-clockwise. Declaration public bool IsCCW() Returns Type Description System.Boolean Returns true if ring is oriented counter-clockwise. | Improve this Doc View Source IsPointWithin(Point) Returns true of the Point 'p' is within the instance of this ring Declaration public bool IsPointWithin(Point p) Parameters Type Name Description Point p Returns Type Description System.Boolean | Improve this Doc View Source Rotate(Double) Declaration public LinearRing Rotate(double degrees) Parameters Type Name Description System.Double degrees Returns Type Description LinearRing | Improve this Doc View Source Rotate(Double, Point) Declaration public LinearRing Rotate(double degrees, Point center) Parameters Type Name Description System.Double degrees Point center Returns Type Description LinearRing Implements IGeometry IEquatable<>"
  },
  "api/Mapsui.Geometries.GeometryCollection.html": {
    "href": "api/Mapsui.Geometries.GeometryCollection.html",
    "title": "Class GeometryCollection",
    "keywords": "Class GeometryCollection A GeometryCollection is a geometry that is a collection of 1 or more geometries. Inheritance System.Object Geometry GeometryCollection MultiLineString MultiPoint Implements IEquatable < Geometry > IGeometryCollection IGeometry IEnumerable < Geometry > Inherited Members Geometry.Envelope Geometry.AsText() Geometry.AsBinary() Geometry.ToString() Geometry.GeomFromText(String) Geometry.GeomFromWKB(Byte[]) Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class GeometryCollection : Geometry, IEquatable<Geometry>, IGeometryCollection, IGeometry, IEnumerable<Geometry> Remarks All the elements in a GeometryCollection must be in the same Spatial Reference. This is also the Spatial Reference for the GeometryCollection. GeometryCollection places no other constraints on its elements. Subclasses of GeometryCollection may restrict membership based on dimension and may also place other constraints on the degree of spatial overlap between elements. Constructors | Improve this Doc View Source GeometryCollection() Initializes a new GeometryCollection Declaration public GeometryCollection() Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry, returned as a BoundingBox. Declaration public override BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox Overrides Geometry.BoundingBox | Improve this Doc View Source Collection Gets or sets the GeometryCollection Declaration public IList<Geometry> Collection { get; set; } Property Value Type Description IList < Geometry > | Improve this Doc View Source Item[Int32] Returns an indexed geometry in the collection Declaration public Geometry this[int index] { get; } Parameters Type Name Description System.Int32 index Geometry index Property Value Type Description Geometry Geometry | Improve this Doc View Source NumGeometries Gets the number of geometries in the collection. Declaration public virtual int NumGeometries { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Clone() Declaration public GeometryCollection Clone() Returns Type Description GeometryCollection | Improve this Doc View Source Contains(Point) Declaration public override bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean Overrides Geometry.Contains(Point) | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public override double Distance(Point point) Parameters Type Name Description Point point Geometry to calculate distance to Returns Type Description System.Double Shortest distance between any two points in the two geometries Overrides Geometry.Distance(Point) | Improve this Doc View Source Equals(Geometry) Declaration public override bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean Overrides Geometry.Equals(Geometry) | Improve this Doc View Source Equals(GeometryCollection) Determines whether this GeometryCollection is spatially equal to the GeometryCollection 'g' Declaration public bool Equals(GeometryCollection g) Parameters Type Name Description GeometryCollection g Returns Type Description System.Boolean True if the GeometryCollections are equals | Improve this Doc View Source Geometry(Int32) Returns an indexed geometry in the collection Declaration public virtual Geometry Geometry(int n) Parameters Type Name Description System.Int32 n Geometry index Returns Type Description Geometry Geometry at index N | Improve this Doc View Source GetBoundingBox() Declaration public BoundingBox GetBoundingBox() Returns Type Description BoundingBox | Improve this Doc View Source GetEnumerator() Gets an enumerator for enumerating the geometries in the GeometryCollection Declaration public virtual IEnumerator<Geometry> GetEnumerator() Returns Type Description IEnumerator < Geometry > | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . Overrides Geometry.GetHashCode() | Improve this Doc View Source IsEmpty() Returns empty of all the geometries are empty or the collection is empty Declaration public override bool IsEmpty() Returns Type Description System.Boolean true of collection is empty Overrides Geometry.IsEmpty() Implements IEquatable<> IGeometryCollection IGeometry IEnumerable<>"
  },
  "api/Mapsui.Geometries.Geometry.html": {
    "href": "api/Mapsui.Geometries.Geometry.html",
    "title": "Class Geometry",
    "keywords": "Class Geometry Geometry is the root class of the Geometry Object Model hierarchy. Geometry is an abstract (non-instantiable) class. Inheritance System.Object Geometry GeometryCollection LineString MultiPolygon Point Polygon Raster Implements IGeometry IEquatable < Geometry > Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public abstract class Geometry : object, IGeometry, IEquatable<Geometry> Remarks The instantiable subclasses of Geometry defined in the specification are restricted to 0, 1 and twodimensional geometric objects that exist in two-dimensional coordinate space (R^2). All instantiable geometry classes described in this specification are defined so that valid instances of a geometry class are topologically closed (i.e. all defined geometries include their boundary). Properties | Improve this Doc View Source BoundingBox The minimum bounding box for this Geometry , returned as a BoundingBox . Declaration public abstract BoundingBox BoundingBox { get; } Property Value Type Description BoundingBox | Improve this Doc View Source Envelope The minimum bounding box for this Geometry , returned as a Geometry . The polygon is defined by the corner points of the bounding box ((MINX, MINY), (MAXX, MINY), (MAXX, MAXY), (MINX, MAXY), (MINX, MINY)). Declaration public Geometry Envelope { get; } Property Value Type Description Geometry Remarks The envelope is actually the BoundingBox converted into a polygon. See Also BoundingBox Methods | Improve this Doc View Source AsBinary() Exports this Geometry to a specific well-known binary representation of Geometry . Declaration public byte[] AsBinary() Returns Type Description System.Byte [] | Improve this Doc View Source AsText() Exports this Geometry to a specific well-known text representation of Geometry . Declaration public string AsText() Returns Type Description System.String | Improve this Doc View Source Clone() This method must be overridden using 'public new [derived_data_type] Clone()' Declaration public Geometry Clone() Returns Type Description Geometry Copy of Geometry | Improve this Doc View Source Contains(Point) Declaration public abstract bool Contains(Point point) Parameters Type Name Description Point point Returns Type Description System.Boolean | Improve this Doc View Source Distance(Point) Returns the shortest distance between any two points in the two geometries as calculated in the spatial reference system of this Geometry. Declaration public abstract double Distance(Point point) Parameters Type Name Description Point point Returns Type Description System.Double | Improve this Doc View Source Equals(Geometry) Declaration public abstract bool Equals(Geometry geom) Parameters Type Name Description Geometry geom Returns Type Description System.Boolean | Improve this Doc View Source GeomFromText(String) Creates a Geometry based on a WellKnownText string Declaration public static Geometry GeomFromText(string wkt) Parameters Type Name Description System.String wkt Well-known Text Returns Type Description Geometry | Improve this Doc View Source GeomFromWKB(Byte[]) Creates a Geometry based on a WellKnownBinary byte array Declaration public static Geometry GeomFromWKB(byte[] wkb) Parameters Type Name Description System.Byte [] wkb Well-known Binary Returns Type Description Geometry | Improve this Doc View Source GetBoundingBox() Declaration public BoundingBox GetBoundingBox() Returns Type Description BoundingBox | Improve this Doc View Source GetHashCode() Serves as a hash function for a particular type. GetHashCode() is suitable for use in hashing algorithms and data structures like a hash table. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current GetHashCode() . | Improve this Doc View Source IsEmpty() Returns 'true' if this Geometry is the empty geometry . If true, then this Geometry represents the empty point set, Ø, for the coordinate space. Declaration public abstract bool IsEmpty() Returns Type Description System.Boolean | Improve this Doc View Source ToString() Returns a WellKnownText representation of the Geometry Declaration public override string ToString() Returns Type Description System.String Well-known text Implements IGeometry IEquatable<>"
  },
  "api/Mapsui.Geometries.BoundingBoxExtensions.html": {
    "href": "api/Mapsui.Geometries.BoundingBoxExtensions.html",
    "title": "Class BoundingBoxExtensions",
    "keywords": "Class BoundingBoxExtensions Inheritance System.Object BoundingBoxExtensions Namespace : Mapsui.Geometries Assembly : Mapsui.dll Syntax public static class BoundingBoxExtensions : object Methods | Improve this Doc View Source Copy(BoundingBox) Declaration public static BoundingBox Copy(this BoundingBox original) Parameters Type Name Description BoundingBox original Returns Type Description BoundingBox | Improve this Doc View Source IsInitialized(BoundingBox) Declaration public static bool IsInitialized(this BoundingBox box) Parameters Type Name Description BoundingBox box Returns Type Description System.Boolean | Improve this Doc View Source ToExtent(BoundingBox) Declaration public static Extent ToExtent(this BoundingBox boundingBox) Parameters Type Name Description BoundingBox boundingBox Returns Type Description Extent"
  },
  "api/Mapsui.Geometries.BoundingBox.html": {
    "href": "api/Mapsui.Geometries.BoundingBox.html",
    "title": "Class BoundingBox",
    "keywords": "Class BoundingBox Bounding box type with double precision Inheritance System.Object BoundingBox Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class BoundingBox : IEquatable<BoundingBox> Remarks The Bounding Box represents a box whose sides are parallel to the two axes of the coordinate system. Constructors | Improve this Doc View Source BoundingBox() Declaration public BoundingBox() | Improve this Doc View Source BoundingBox(IEnumerable<BoundingBox>) Initializes a new Bounding Box based on the bounds from a set of bounding boxes Declaration public BoundingBox(IEnumerable<BoundingBox> boundingBoxes) Parameters Type Name Description IEnumerable < BoundingBox > boundingBoxes | Improve this Doc View Source BoundingBox(IEnumerable<Geometry>) Initializes a new Bounding Box based on the bounds from a set of geometries Declaration public BoundingBox(IEnumerable<Geometry> objects) Parameters Type Name Description IEnumerable < Geometry > objects list of objects | Improve this Doc View Source BoundingBox(BoundingBox) Declaration public BoundingBox(BoundingBox boundingBox) Parameters Type Name Description BoundingBox boundingBox | Improve this Doc View Source BoundingBox(Point, Point) Initializes a bounding box Declaration public BoundingBox(Point minPoint, Point maxPoint) Parameters Type Name Description Point minPoint Lower left corner Point maxPoint Upper right corner | Improve this Doc View Source BoundingBox(Double, Double, Double, Double) Initializes a bounding box Declaration public BoundingBox(double minX, double minY, double maxX, double maxY) Parameters Type Name Description System.Double minX left System.Double minY bottom System.Double maxX right System.Double maxY top Remarks In case min values are larger than max values, the parameters will be swapped to ensure correct min/max boundary Properties | Improve this Doc View Source Bottom Gets the bottom boundary Declaration public double Bottom { get; } Property Value Type Description System.Double | Improve this Doc View Source BottomLeft Declaration public Point BottomLeft { get; } Property Value Type Description Point | Improve this Doc View Source BottomRight Declaration public Point BottomRight { get; } Property Value Type Description Point | Improve this Doc View Source Centroid Returns the center of the bounding box Declaration public Point Centroid { get; } Property Value Type Description Point | Improve this Doc View Source Height Returns the height of the bounding box Declaration public double Height { get; } Property Value Type Description System.Double Height of boundingbox | Improve this Doc View Source Left Gets the left boundary Declaration public double Left { get; } Property Value Type Description System.Double | Improve this Doc View Source LongestAxis Intersection scalar (used for weighting in building the tree) Declaration public uint LongestAxis { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Max Gets or sets the upper right corner. Declaration public Point Max { get; set; } Property Value Type Description Point | Improve this Doc View Source MaxX Declaration public double MaxX { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxY Declaration public double MaxY { get; } Property Value Type Description System.Double | Improve this Doc View Source Min Gets or sets the lower left corner. Declaration public Point Min { get; set; } Property Value Type Description Point | Improve this Doc View Source MinX Declaration public double MinX { get; } Property Value Type Description System.Double | Improve this Doc View Source MinY Declaration public double MinY { get; } Property Value Type Description System.Double | Improve this Doc View Source Right Gets the right boundary Declaration public double Right { get; } Property Value Type Description System.Double | Improve this Doc View Source Top Gets the top boundary Declaration public double Top { get; } Property Value Type Description System.Double | Improve this Doc View Source TopLeft Declaration public Point TopLeft { get; } Property Value Type Description Point | Improve this Doc View Source TopRight Declaration public Point TopRight { get; } Property Value Type Description Point | Improve this Doc View Source Width Returns the width of the bounding box Declaration public double Width { get; } Property Value Type Description System.Double Width of boundingbox Methods | Improve this Doc View Source CheckMinMax() Checks whether min values are actually smaller than max values and in that case swaps them. Declaration public bool CheckMinMax() Returns Type Description System.Boolean true if the bounding was changed | Improve this Doc View Source Clone() Creates a copy of the BoundingBox Declaration public BoundingBox Clone() Returns Type Description BoundingBox | Improve this Doc View Source Contains(BoundingBox) Returns true if this instance contains the BoundingBox Declaration public bool Contains(BoundingBox r) Parameters Type Name Description BoundingBox r BoundingBox Returns Type Description System.Boolean True it contains | Improve this Doc View Source Contains(Point) Checks whether a point lies within the bounding box Declaration public bool Contains(Point p) Parameters Type Name Description Point p Point Returns Type Description System.Boolean true if point is within | Improve this Doc View Source Distance(BoundingBox) Computes the minimum distance between this and another BoundingBox . The distance between overlapping bounding boxes is 0. Otherwise, the distance is the Euclidean distance between the closest points. Declaration public virtual double Distance(BoundingBox box) Parameters Type Name Description BoundingBox box Box to calculate distance to Returns Type Description System.Double The distance between this and another BoundingBox . | Improve this Doc View Source Distance(Point) Computes the minimum distance between this BoundingBox and a Point Declaration public virtual double Distance(Point p) Parameters Type Name Description Point p Point to calculate distance to. Returns Type Description System.Double Minimum distance. | Improve this Doc View Source Equals(BoundingBox) Checks whether the values of this instance is equal to the values of another instance. Declaration public bool Equals(BoundingBox other) Parameters Type Name Description BoundingBox other BoundingBox to compare to. Returns Type Description System.Boolean True if equal | Improve this Doc View Source Equals(Object) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetArea() Returns the area of the BoundingBox Declaration public double GetArea() Returns Type Description System.Double Area of box | Improve this Doc View Source GetCentroid() Declaration public Point GetCentroid() Returns Type Description Point | Improve this Doc View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the specified object | Improve this Doc View Source GetIntersectingArea(BoundingBox) Gets the intersecting area between two boundingboxes Declaration public double GetIntersectingArea(BoundingBox r) Parameters Type Name Description BoundingBox r BoundingBox Returns Type Description System.Double Area | Improve this Doc View Source Grow(Double) Increases the size of the boundingbox by the givent amount in all directions Declaration public BoundingBox Grow(double amount) Parameters Type Name Description System.Double amount Amount to grow in all directions Returns Type Description BoundingBox | Improve this Doc View Source Grow(Double, Double) Increases the size of the boundingbox by the givent amount in horizontal and vertical directions Declaration public BoundingBox Grow(double amountInX, double amountInY) Parameters Type Name Description System.Double amountInX Amount to grow in horizontal direction System.Double amountInY Amount to grow in vertical direction Returns Type Description BoundingBox | Improve this Doc View Source Intersects(BoundingBox) Determines whether the boundingbox intersects another boundingbox Declaration public bool Intersects(BoundingBox box) Parameters Type Name Description BoundingBox box Returns Type Description System.Boolean | Improve this Doc View Source Join(BoundingBox) Computes the joined boundingbox of this instance and another boundingbox Declaration public BoundingBox Join(BoundingBox box) Parameters Type Name Description BoundingBox box Boundingbox to join with Returns Type Description BoundingBox Boundingbox containing both boundingboxes | Improve this Doc View Source Join(BoundingBox, BoundingBox) Computes the joined boundingbox of two boundingboxes Declaration public static BoundingBox Join(BoundingBox box1, BoundingBox box2) Parameters Type Name Description BoundingBox box1 BoundingBox box2 Returns Type Description BoundingBox | Improve this Doc View Source Join(BoundingBox[]) Computes the joined BoundingBox of an array of boundingboxes. Declaration public static BoundingBox Join(BoundingBox[] boxes) Parameters Type Name Description BoundingBox [] boxes Boxes to join Returns Type Description BoundingBox Combined BoundingBox | Improve this Doc View Source Offset(Point) Moves/translates the BoundingBox along the the specified vector Declaration public void Offset(Point vector) Parameters Type Name Description Point vector Offset vector | Improve this Doc View Source Offset(Double, Double) Declaration public void Offset(double x, double y) Parameters Type Name Description System.Double x System.Double y | Improve this Doc View Source Rotate(Double) Calculates a new quad by rotating this bounding box about its center by the specified angle clockwise Declaration public Quad Rotate(double degrees) Parameters Type Name Description System.Double degrees Angle about which to rotate (degrees) Returns Type Description Quad Returns the calculated quad | Improve this Doc View Source ToString() Returns a string representation of the boundingbox as LowerLeft + UpperRight formatted as \"MinX,MinY MaxX,MaxY\" Declaration public override string ToString() Returns Type Description System.String MinX,MinY MaxX,MaxY | Improve this Doc View Source Touches(BoundingBox) Returns true if this instance touches the BoundingBox Declaration public bool Touches(BoundingBox r) Parameters Type Name Description BoundingBox r BoundingBox Returns Type Description System.Boolean True it touches | Improve this Doc View Source Touches(Point) Returns true if this instance touches the Point Declaration public bool Touches(Point p) Parameters Type Name Description Point p Geometry Returns Type Description System.Boolean True if touches Extension Methods BoundingBoxExtensions.ToSkia(BoundingBox) BoundingBoxExtensions.Copy(BoundingBox) BoundingBoxExtensions.IsInitialized(BoundingBox) BoundingBoxExtensions.ToExtent(BoundingBox) BoundingBoxIterator.AllVertices(BoundingBox) BoundingBoxIterator.GetCornerVertices(BoundingBox)"
  },
  "api/Mapsui.Fetcher.MinimalFetchStrategy.html": {
    "href": "api/Mapsui.Fetcher.MinimalFetchStrategy.html",
    "title": "Class MinimalFetchStrategy",
    "keywords": "Class MinimalFetchStrategy Inheritance System.Object MinimalFetchStrategy Implements IFetchStrategy Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class MinimalFetchStrategy : object, IFetchStrategy Methods | Improve this Doc View Source GetTilesWanted(ITileSchema, Extent, String) Declaration public IList<TileInfo> GetTilesWanted(ITileSchema schema, Extent extent, string levelId) Parameters Type Name Description ITileSchema schema Extent extent System.String levelId Returns Type Description IList < TileInfo > Implements IFetchStrategy"
  },
  "api/Mapsui.Fetcher.IFetchStrategy.html": {
    "href": "api/Mapsui.Fetcher.IFetchStrategy.html",
    "title": "Interface IFetchStrategy",
    "keywords": "Interface IFetchStrategy Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IFetchStrategy Methods | Improve this Doc View Source GetTilesWanted(ITileSchema, Extent, String) Declaration IList<TileInfo> GetTilesWanted(ITileSchema schema, Extent extent, string levelId) Parameters Type Name Description ITileSchema schema Extent extent System.String levelId Returns Type Description IList < TileInfo >"
  },
  "api/Mapsui.Fetcher.FetchTileCompletedEventArgs.html": {
    "href": "api/Mapsui.Fetcher.FetchTileCompletedEventArgs.html",
    "title": "Class FetchTileCompletedEventArgs",
    "keywords": "Class FetchTileCompletedEventArgs Inheritance System.Object FetchTileCompletedEventArgs Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchTileCompletedEventArgs : object Constructors | Improve this Doc View Source FetchTileCompletedEventArgs(Exception, Boolean, TileInfo, Byte[]) Declaration public FetchTileCompletedEventArgs(Exception error, bool cancelled, TileInfo tileInfo, byte[] image) Parameters Type Name Description Exception error System.Boolean cancelled TileInfo tileInfo System.Byte [] image Fields | Improve this Doc View Source Cancelled Declaration public readonly bool Cancelled Field Value Type Description System.Boolean | Improve this Doc View Source Error Declaration public Exception Error Field Value Type Description Exception | Improve this Doc View Source Image Declaration public readonly byte[] Image Field Value Type Description System.Byte [] | Improve this Doc View Source TileInfo Declaration public readonly TileInfo TileInfo Field Value Type Description TileInfo"
  },
  "api/Mapsui.Fetcher.FetchStrategy.html": {
    "href": "api/Mapsui.Fetcher.FetchStrategy.html",
    "title": "Class FetchStrategy",
    "keywords": "Class FetchStrategy Inheritance System.Object FetchStrategy Implements IFetchStrategy Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchStrategy : object, IFetchStrategy Constructors | Improve this Doc View Source FetchStrategy(Int32) Declaration public FetchStrategy(int maxLevelsUp = null) Parameters Type Name Description System.Int32 maxLevelsUp Methods | Improve this Doc View Source GetTilesWanted(ITileSchema, Extent, String) Declaration public IList<TileInfo> GetTilesWanted(ITileSchema schema, Extent extent, string levelId) Parameters Type Name Description ITileSchema schema Extent extent System.String levelId Returns Type Description IList < TileInfo > Implements IFetchStrategy"
  },
  "api/Mapsui.Desktop.Wms.html": {
    "href": "api/Mapsui.Desktop.Wms.html",
    "title": "Namespace Mapsui.Desktop.Wms",
    "keywords": "Namespace Mapsui.Desktop.Wms Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WMS servers capabilities FeatureInfo GetFeatureInfo GmlGetFeatureInfoParser WmsProvider Web Map Service layer XmlGetFeatureInfoParser Structs Capabilities.WmsContactInformation Stores contact metadata about WMS service Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Client.WmsOnlineResource Structure for storing info on an Online Resource Client.WmsServerLayer Structure for holding information about a WMS Layer Client.WmsStyleLegend Structure for storing WMS Legend information Interfaces IGetFeatureInfoParser Delegates StatusEventHandler"
  },
  "api/Mapsui.Desktop.Wms.XmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Desktop.Wms.XmlGetFeatureInfoParser.html",
    "title": "Class XmlGetFeatureInfoParser",
    "keywords": "Class XmlGetFeatureInfoParser Inheritance System.Object XmlGetFeatureInfoParser Implements IGetFeatureInfoParser Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class XmlGetFeatureInfoParser : object, IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration public FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Desktop.Wms.IGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Desktop.Wms.IGetFeatureInfoParser.html",
    "title": "Interface IGetFeatureInfoParser",
    "keywords": "Interface IGetFeatureInfoParser Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public interface IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName Stream result Returns Type Description FeatureInfo"
  },
  "api/Mapsui.Desktop.Wms.GmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Desktop.Wms.GmlGetFeatureInfoParser.html",
    "title": "Class GmlGetFeatureInfoParser",
    "keywords": "Class GmlGetFeatureInfoParser Inheritance System.Object GmlGetFeatureInfoParser Implements IGetFeatureInfoParser Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class GmlGetFeatureInfoParser : object, IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(String, Stream) Declaration public FeatureInfo ParseWMSResult(string layerName, Stream result) Parameters Type Name Description System.String layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Desktop.Wms.Client.html": {
    "href": "api/Mapsui.Desktop.Wms.Client.html",
    "title": "Class Client",
    "keywords": "Class Client Class for requesting and parsing a WMS servers capabilities Inheritance System.Object Client Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class Client : object Constructors | Improve this Doc View Source Client(String, String, Func<String, Task<Stream>>) Initalizes WMS server and parses the Capabilities request Declaration public Client(string url, string wmsVersion = null, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.String url URL of wms server System.String wmsVersion WMS version number, null to get the default from service Func < System.String , Task < Stream >> getStreamAsync Download method, leave null for default | Improve this Doc View Source Client(XmlDocument, Func<String, Task<Stream>>) Declaration public Client(XmlDocument capabilitiesXmlDocument, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description XmlDocument capabilitiesXmlDocument Func < System.String , Task < Stream >> getStreamAsync Properties | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description System.String [] | Improve this Doc View Source GetFeatureInfoOutputFormats Gets a list of available feature info mime type formats Declaration public Collection<string> GetFeatureInfoOutputFormats { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source GetFeatureInfoRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetFeatureInfoRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetMapOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetMapOutputFormats { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source GetMapRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetMapRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source Layer Gets the hiarchial layer structure Declaration public Client.WmsServerLayer Layer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source ServiceDescription Gets the service description Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilitie's VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Improve this Doc View Source WmsVersion Gets the version of the WMS server (ex. \"1.3.0\") Declaration public string WmsVersion { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Client.WmsStyleLegend.html": {
    "href": "api/Mapsui.Desktop.Wms.Client.WmsStyleLegend.html",
    "title": "Struct Client.WmsStyleLegend",
    "keywords": "Struct Client.WmsStyleLegend Structure for storing WMS Legend information Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsStyleLegend Fields | Improve this Doc View Source OnlineResource Online resource for legend style Declaration public Client.WmsOnlineResource OnlineResource Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Size Size of legend Declaration public Size Size Field Value Type Description Size"
  },
  "api/Mapsui.Desktop.Wms.Client.WmsLayerStyle.html": {
    "href": "api/Mapsui.Desktop.Wms.Client.WmsLayerStyle.html",
    "title": "Struct Client.WmsLayerStyle",
    "keywords": "Struct Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsLayerStyle Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source LegendUrl Legend Declaration public Client.WmsStyleLegend LegendUrl Field Value Type Description Client.WmsStyleLegend | Improve this Doc View Source Name Name Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source StyleSheetUrl Style Sheet Url Declaration public Client.WmsOnlineResource StyleSheetUrl Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Title Title Declaration public string Title Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Capabilities.html": {
    "href": "api/Mapsui.Desktop.Wms.Capabilities.html",
    "title": "Class Capabilities",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance System.Object Capabilities Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class Capabilities : object"
  },
  "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.ContactPerson.html": {
    "href": "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.ContactPerson.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactPerson",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct ContactPerson Fields | Improve this Doc View Source Organisation Organisation of primary person Declaration public string Organisation Field Value Type Description System.String | Improve this Doc View Source Person Primary contact person Declaration public string Person Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.ContactAddress.html": {
    "href": "api/Mapsui.Desktop.Wms.Capabilities.WmsContactInformation.ContactAddress.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactAddress",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct ContactAddress Fields | Improve this Doc View Source Address Contact address Declaration public string Address Field Value Type Description System.String | Improve this Doc View Source AddressType Type of address (usually \"postal\"). Declaration public string AddressType Field Value Type Description System.String | Improve this Doc View Source City Contact City Declaration public string City Field Value Type Description System.String | Improve this Doc View Source Country Country of contact address Declaration public string Country Field Value Type Description System.String | Improve this Doc View Source PostCode Zipcode of contact Declaration public string PostCode Field Value Type Description System.String | Improve this Doc View Source StateOrProvince State or province of contact Declaration public string StateOrProvince Field Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Shapefile.ShapeFile.FilterMethod.html": {
    "href": "api/Mapsui.Desktop.Shapefile.ShapeFile.FilterMethod.html",
    "title": "Delegate ShapeFile.FilterMethod",
    "keywords": "Delegate ShapeFile.FilterMethod Filter Delegate Method Namespace : Mapsui.Desktop.Shapefile Assembly : Mapsui.Desktop.dll Syntax public delegate bool FilterMethod(IFeature dr); Parameters Type Name Description IFeature dr Returns Type Description System.Boolean true if this feature should be included, false if it should be filtered Remarks The FilterMethod delegate is used for applying a method that filters data from the dataset. The method should return 'true' if the feature should be included and false if not."
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.html",
    "title": "Namespace Mapsui.Desktop.Shapefile.Indexing",
    "keywords": "Namespace Mapsui.Desktop.Shapefile.Indexing Classes BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries QuadTree Constructs a Quad-tree node from a object list and creates its children recursively QuadTree.ObsoleteFileFormatException Structs BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU> . Heuristic Heuristics used for tree generation QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html",
    "title": "Class QuadTree.ObsoleteFileFormatException",
    "keywords": "Class QuadTree.ObsoleteFileFormatException Inheritance System.Object QuadTree.ObsoleteFileFormatException Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public class ObsoleteFileFormatException : Exception Constructors | Improve this Doc View Source ObsoleteFileFormatException(String) Exception thrown when layer rendering has failed Declaration public ObsoleteFileFormatException(string message) Parameters Type Name Description System.String message"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.Heuristic.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.Heuristic.html",
    "title": "Struct Heuristic",
    "keywords": "Struct Heuristic Heuristics used for tree generation Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public struct Heuristic Fields | Improve this Doc View Source Maxdepth Maximum tree depth Declaration public int Maxdepth Field Value Type Description System.Int32 | Improve this Doc View Source Minerror Minimum Error metric – the volume of a box + a unit cube. The unit cube in the metric prevents big boxes that happen to be flat having a zero result and muddling things up. Declaration public int Minerror Field Value Type Description System.Int32 | Improve this Doc View Source Mintricnt Minimum object count at node Declaration public int Mintricnt Field Value Type Description System.Int32 | Improve this Doc View Source Tartricnt Target object count at node Declaration public int Tartricnt Field Value Type Description System.Int32"
  },
  "api/Mapsui.Desktop.Shapefile.Indexing.BinaryTree-2.ItemValue.html": {
    "href": "api/Mapsui.Desktop.Shapefile.Indexing.BinaryTree-2.ItemValue.html",
    "title": "Struct BinaryTree<T, TU>.ItemValue",
    "keywords": "Struct BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU> . Namespace : Mapsui.Desktop.Shapefile.Indexing Assembly : Mapsui.Desktop.dll Syntax public struct ItemValue Constructors | Improve this Doc View Source ItemValue(T, TU) Creates an instance of an item in a BinaryTree<T, TU> . Declaration public ItemValue(T value, TU id) Parameters Type Name Description T value Value TU id Identifier for the value Fields | Improve this Doc View Source Id Identifier for the value Declaration public TU Id Field Value Type Description TU | Improve this Doc View Source Value Value Declaration public T Value Field Value Type Description T"
  },
  "api/Mapsui.UI.TappedEventArgs.html": {
    "href": "api/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance System.Object TappedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class TappedEventArgs : EventArgs Constructors | Improve this Doc View Source TappedEventArgs(Point, Int32) Declaration public TappedEventArgs(Point screenPosition, int numOfTaps) Parameters Type Name Description Point screenPosition System.Int32 numOfTaps Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NumOfTaps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ScreenPosition Declaration public Point ScreenPosition { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.SwipedEventArgs.html": {
    "href": "api/Mapsui.UI.SwipedEventArgs.html",
    "title": "Class SwipedEventArgs",
    "keywords": "Class SwipedEventArgs Inheritance System.Object SwipedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class SwipedEventArgs : EventArgs Constructors | Improve this Doc View Source SwipedEventArgs(Double, Double) Declaration public SwipedEventArgs(double velocityX, double velocityY) Parameters Type Name Description System.Double velocityX System.Double velocityY Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VelocityX Declaration public double VelocityX { get; } Property Value Type Description System.Double | Improve this Doc View Source VelocityY Declaration public double VelocityY { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.Objects.html": {
    "href": "api/Mapsui.UI.Objects.html",
    "title": "Namespace Mapsui.UI.Objects",
    "keywords": "Namespace Mapsui.UI.Objects Classes Callout Drawable Base class for all drawables like polyline, polygon and circle MyLocationLayer A layer to display a symbol for own location ObservableCollectionProvider<T> Interfaces IFeatureProvider Enums ArrowAlignment Determins, where the pointer is CalloutType Type of Callout"
  },
  "api/Mapsui.UI.Forms.html": {
    "href": "api/Mapsui.UI.Forms.html",
    "title": "Namespace Mapsui.UI.Forms",
    "keywords": "Namespace Mapsui.UI.Forms Classes Circle DrawableClickedEventArgs MapClickedEventArgs MapControl Class, that uses the API of all other Mapsui MapControls MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance System.Object SelectedPinChangedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Improve this Doc View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin"
  },
  "api/Mapsui.UI.Forms.Position.html": {
    "href": "api/Mapsui.UI.Forms.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Position Constructors | Improve this Doc View Source Position(Position) Initializes a new instance of the Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Improve this Doc View Source Position(Double, Double) Initializes a new instance of the Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description System.Double latitude Latitude of position System.Double longitude Longitude of position Fields | Improve this Doc View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = null Field Value Type Description System.String | Improve this Doc View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = null Field Value Type Description System.String | Improve this Doc View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = null Field Value Type Description System.String Properties | Improve this Doc View Source Latitude Latitude of position Declaration public double Latitude { get; } Property Value Type Description System.Double | Improve this Doc View Source Longitude Longitude of position Declaration public double Longitude { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public Point ToMapsui() Returns Type Description Point Position in Mapsui format | Improve this Doc View Source ToString() Returns a System.String that represents the current Position Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current Position | Improve this Doc View Source ToString(String) Returns a System.String that represents the current Position in a given format Declaration public string ToString(string format) Parameters Type Name Description System.String format Format string Returns Type Description System.String Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Improve this Doc View Source Equality(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.Polyline.html": {
    "href": "api/Mapsui.UI.Forms.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance System.Object Drawable Polyline Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class Polyline : Drawable, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polyline() Initializes a new instance of the Polyline class. Declaration public Polyline() Properties | Improve this Doc View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Polygon.html": {
    "href": "api/Mapsui.UI.Forms.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance System.Object Drawable Polygon Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class Polygon : Drawable, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polygon() Initializes a new instance of the Polygon class. Declaration public Polygon() Fields | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source FillColor Color to fill circle with Declaration public Xamarin.Forms.Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description IList < Position []> | Improve this Doc View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.PinType.html": {
    "href": "api/Mapsui.UI.Forms.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public enum PinType : int Fields Name Description Icon Pin as icon image Pin Pin with image, which could change color Svg Pin as Svg image"
  },
  "api/Mapsui.UI.Forms.PinClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance System.Object PinClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.Pin.html": {
    "href": "api/Mapsui.UI.Forms.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance System.Object Pin Implements IFeatureProvider Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class Pin : BindableObject, IFeatureProvider Constructors | Improve this Doc View Source Pin(MapView) Initializes a new instance of the Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Fields | Improve this Doc View Source AddressProperty Declaration public static readonly BindableProperty AddressProperty Field Value Type Description BindableProperty | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source CalloutAnchorProperty Declaration public static readonly BindableProperty CalloutAnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source HeightProperty Declaration public static readonly BindableProperty HeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source IconProperty Declaration public static readonly BindableProperty IconProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsCalloutVisibleProperty Declaration public static readonly BindableProperty IsCalloutVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description BindableProperty | Improve this Doc View Source PositionProperty Declaration public static readonly BindableProperty PositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationProperty Declaration public static readonly BindableProperty RotationProperty Field Value Type Description BindableProperty | Improve this Doc View Source ScaleProperty Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description BindableProperty | Improve this Doc View Source SvgProperty Declaration public static readonly BindableProperty SvgProperty Field Value Type Description BindableProperty | Improve this Doc View Source TransparencyProperty Declaration public static readonly BindableProperty TransparencyProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty | Improve this Doc View Source WidthProperty Declaration public static readonly BindableProperty WidthProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Address Adress (like street) of pin Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Point | Improve this Doc View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Improve this Doc View Source CalloutAnchor Anchor of Callout in pixel Declaration public Point CalloutAnchor { get; set; } Property Value Type Description Point | Improve this Doc View Source Color Color of pin Declaration public Xamarin.Forms.Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Feature Mapsui feature for this pin Declaration public Feature Feature { get; } Property Value Type Description Feature Mapsui feature | Improve this Doc View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source Icon Byte[] holding the bitmap informations Declaration public byte[] Icon { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source IsCalloutVisible Determins, if Callout is visible Declaration public bool IsCalloutVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of pin Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Improve this Doc View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Svg String holding the Svg image informations Declaration public string Svg { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tag Tag holding free data Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Improve this Doc View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Determines whether the specified is equal to the current Pin . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The to compare with the current Pin . Returns Type Description System.Boolean true if the specified is equal to the current Pin ; otherwise, false . | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Operators | Improve this Doc View Source Equality(Pin, Pin) Declaration public static bool operator ==(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Pin, Pin) Declaration public static bool operator !=(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.MapView.html": {
    "href": "api/Mapsui.UI.Forms.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance System.Object MapView Implements IMapControl INotifyPropertyChanged IEnumerable < Pin > Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapView : ContentView, IMapControl, INotifyPropertyChanged, IEnumerable<Pin> Constructors | Improve this Doc View Source MapView() Initializes a new instance of the MapView class. Declaration public MapView() Fields | Improve this Doc View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description BindableProperty | Improve this Doc View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description BindableProperty | Improve this Doc View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description BindableProperty | Improve this Doc View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description IList < Drawable > | Improve this Doc View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Map Native Mapsui Map object Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description System.Boolean Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Improve this Doc View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Improve this Doc View Source Navigator Navigator of MapControl Declaration public INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PanLock Enable paning Declaration public bool PanLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description IList < Pin > | Improve this Doc View Source PixelDensity IMapControl Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Declaration public IRenderer Renderer { get; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees Number of degrees, when map shows to north Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectedPin Selected pin Declaration public Pin SelectedPin { get; set; } Property Value Type Description Pin | Improve this Doc View Source UnSnapRotationDegrees Number of degrees, before the rotation starts Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UseDoubleTap Enable checks for double tapping. But be carefull, this will add some extra time, before a single tap is returned. Declaration public bool UseDoubleTap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Viewport Viewport of MapControl Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateCallout(Position) Creates a callout at the given position Declaration public Callout CreateCallout(Position position) Parameters Type Name Description Position position Position of callout Returns Type Description Callout The callout | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description IEnumerator < Pin > | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source HideCallout(Callout) Hides given callout Declaration public void HideCallout(Callout callout) Parameters Type Name Description Callout callout Callout to hide | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Declaration public void Refresh() | Improve this Doc View Source RefreshData() Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ShowCallout(Callout) Shows given callout Declaration public void ShowCallout(Callout callout) Parameters Type Name Description Callout callout Callout to show | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source Unsubscribe() Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs> MapClicked Event Type Type Description EventHandler < MapClickedEventArgs > | Improve this Doc View Source MapLongClicked Occurs when map long clicked Declaration public event EventHandler<MapLongClickedEventArgs> MapLongClicked Event Type Type Description EventHandler < MapLongClickedEventArgs > | Improve this Doc View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs> PinClicked Event Type Type Description EventHandler < PinClickedEventArgs > | Improve this Doc View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs> SelectedPinChanged Event Type Type Description EventHandler < SelectedPinChangedEventArgs > | Improve this Doc View Source ViewportInitialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl INotifyPropertyChanged IEnumerable<>"
  },
  "api/Mapsui.UI.Forms.MapSpan.html": {
    "href": "api/Mapsui.UI.Forms.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance System.Object MapSpan Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapSpan : object Constructors | Improve this Doc View Source MapSpan(Position, Double, Double) Initializes a new instance of the MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan System.Double latitudeDegrees Extend of MapSpand in latitude direction in degrees System.Double longitudeDegrees Extend of MapSpand in longitude direction in degrees Properties | Improve this Doc View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Improve this Doc View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description System.Double Extend in latitude degrees | Improve this Doc View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description System.Double Extend in longitude degrees | Improve this Doc View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Improve this Doc View Source ClampLatitude(Double, Double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description System.Double north Maximal latitude degrees for north System.Double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Improve this Doc View Source Equals(Object) Determines whether the specified is equal to the current MapSpan Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The to compare with current MapSpan Returns Type Description System.Boolean true if the specified is equal to the current MapSpan ; otherwise, false . | Improve this Doc View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source WithZoom(Double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description System.Double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Improve this Doc View Source Equality(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance System.Object MapLongClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapControl.html": {
    "href": "api/Mapsui.UI.Forms.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Class, that uses the API of all other Mapsui MapControls Inheritance System.Object MapControl Implements IMapControl IDisposable SKGLView Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, IDisposable, SKGLView Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Fields | Improve this Doc View Source UseDoubleTap Declaration public bool UseDoubleTap Field Value Type Description System.Boolean Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source PixelsPerDeviceIndependentUnit Declaration public float PixelsPerDeviceIndependentUnit { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ScreenHeight Declaration public float ScreenHeight { get; } Property Value Type Description System.Single | Improve this Doc View Source ScreenWidth Declaration public float ScreenWidth { get; } Property Value Type Description System.Single | Improve this Doc View Source SkiaScale Declaration public float SkiaScale { get; } Property Value Type Description System.Single | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetDeviceIndependentUnits() Public functions Declaration public float GetDeviceIndependentUnits() Returns Type Description System.Single | Improve this Doc View Source GetMapInfo(Point, Int32) Check, if a feature at a given screen position is hit Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition Screen position to check for widgets and features System.Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Coordinate in pixels Returns Type Description Point Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(Point) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description Point Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source DoubleTap DoubleTap is called, when user clicks with a mouse button or tap with a finger two or more times on map Declaration public event EventHandler<TappedEventArgs> DoubleTap Event Type Type Description EventHandler < TappedEventArgs > | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs> Fling Event Type Type Description EventHandler < SwipedEventArgs > | Improve this Doc View Source Hovered Hover is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs> Hovered Event Type Type Description EventHandler < HoveredEventArgs > | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source LongTap LongTap is called, when user clicks with a mouse button or tap with a finger on map for 500 ms Declaration public event EventHandler<TappedEventArgs> LongTap Event Type Type Description EventHandler < TappedEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source SingleTap SingleTap is called, when user clicks with a mouse button or tap with a finger on map Declaration public event EventHandler<TappedEventArgs> SingleTap Event Type Type Description EventHandler < TappedEventArgs > | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs> Swipe Event Type Type Description EventHandler < SwipedEventArgs > | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs> TouchEnded Event Type Type Description EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs> TouchMove Event Type Type Description EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchStarted Event handlers Declaration public event EventHandler<TouchedEventArgs> TouchStarted Event Type Type Description EventHandler < TouchedEventArgs > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs> Zoomed Event Type Type Description EventHandler < ZoomedEventArgs > Implements IMapControl IDisposable SKGLView"
  },
  "api/Mapsui.UI.Forms.MapClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance System.Object MapClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.Styles.Font.html": {
    "href": "api/Mapsui.Styles.Font.html",
    "title": "Class Font",
    "keywords": "Class Font Inheritance System.Object Font Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Font : object Constructors | Improve this Doc View Source Font() Declaration public Font() | Improve this Doc View Source Font(Font) Declaration public Font(Font font) Parameters Type Name Description Font font Properties | Improve this Doc View Source FontFamily Declaration public string FontFamily { get; set; } Property Value Type Description System.String | Improve this Doc View Source Size Declaration public double Size { get; set; } Property Value Type Description System.Double"
  },
  "api/Mapsui.Styles.FillStyle.html": {
    "href": "api/Mapsui.Styles.FillStyle.html",
    "title": "Enum FillStyle",
    "keywords": "Enum FillStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum FillStyle : int Fields Name Description BackwardDiagonal Bitmap BitmapRotated Cross DiagonalCross Dotted ForwardDiagonal Hollow Horizontal Solid Svg Vertical"
  },
  "api/Mapsui.Styles.Color.html": {
    "href": "api/Mapsui.Styles.Color.html",
    "title": "Class Color",
    "keywords": "Class Color Inheritance System.Object Color Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Color : object Constructors | Improve this Doc View Source Color() Declaration public Color() | Improve this Doc View Source Color(Color) Declaration public Color(Color color) Parameters Type Name Description Color color | Improve this Doc View Source Color(Int32, Int32, Int32, Int32) Declaration public Color(int red, int green, int blue, int alpha = 255) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue System.Int32 alpha Fields | Improve this Doc View Source KnownColors Known HTML color names and hex code for RGB color Declaration public static readonly Dictionary<string, string> KnownColors Field Value Type Description Dictionary < System.String , System.String > Properties | Improve this Doc View Source A Declaration public int A { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source B Declaration public int B { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Improve this Doc View Source Blue Declaration public static Color Blue { get; } Property Value Type Description Color | Improve this Doc View Source Cyan Declaration public static Color Cyan { get; } Property Value Type Description Color | Improve this Doc View Source G Declaration public int G { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Gray Declaration public static Color Gray { get; } Property Value Type Description Color | Improve this Doc View Source Green Declaration public static Color Green { get; } Property Value Type Description Color | Improve this Doc View Source Indigo Declaration public static Color Indigo { get; } Property Value Type Description Color | Improve this Doc View Source Orange Declaration public static Color Orange { get; } Property Value Type Description Color | Improve this Doc View Source R Declaration public int R { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Improve this Doc View Source Transparent Declaration public static Color Transparent { get; } Property Value Type Description Color | Improve this Doc View Source Violet Declaration public static Color Violet { get; } Property Value Type Description Color | Improve this Doc View Source White Declaration public static Color White { get; } Property Value Type Description Color | Improve this Doc View Source Yellow Declaration public static Color Yellow { get; } Property Value Type Description Color Methods | Improve this Doc View Source Equals(Color) Declaration public bool Equals(Color color) Parameters Type Name Description Color color Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source FromArgb(Int32, Int32, Int32, Int32) Declaration public static Color FromArgb(int a, int r, int g, int b) Parameters Type Name Description System.Int32 a System.Int32 r System.Int32 g System.Int32 b Returns Type Description Color | Improve this Doc View Source FromHsl(Single, Single, Single, Int32) Found at http://james-ramsden.com/convert-from-hsl-to-rgb-colour-codes-in-c/ Declaration public static Color FromHsl(float h, float s, float l, int a = 255) Parameters Type Name Description System.Single h System.Single s System.Single l System.Int32 a Returns Type Description Color | Improve this Doc View Source FromString(String) Converts a string in Mapbox GL format to a Mapsui Color This function assumes, that alpha is a float in range from 0.0 to 1.0. It converts this float in Maspui Color alpha without rounding. The following colors could be converted: Named colors with known Html names Colors as Html color values with leading '#' and 6 or 3 numbers Function rgb(r,g,b) with values for red, green and blue Function rgba(r,g,b,a) with values for red, green, blue and alpha. Here alpha is between 0.0 and 1.0 like opacity. Function hsl(h,s,l) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%) and lightness (0.0% - 100.0%) Function hsla(h,s,l,a) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%), lightness (0.0% - 100.0%) and alpha. Here alpha is between 0.0 and 1.0 like opacity. Declaration public static Color FromString(string from) Parameters Type Name Description System.String from String with HTML color representation or function like rgb() or hsl() Returns Type Description Color Converted Mapsui Color | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source Opacity(Color, Nullable<Single>) Change alpha channel from given color to respect opacity Declaration public static Color Opacity(Color color, float? opacity) Parameters Type Name Description Color color Mapsui Color to change System.Nullable < System.Single > opacity Opacity of the new color Returns Type Description Color New color respecting old alpha and new opacity Operators | Improve this Doc View Source Equality(Color, Color) Declaration public static bool operator ==(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Color, Color) Declaration public static bool operator !=(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description System.Boolean Extension Methods ColorExtensions.ToForms(Color) SkiaExtensions.ToSkia(Color, Single)"
  },
  "api/Mapsui.Styles.Brush.html": {
    "href": "api/Mapsui.Styles.Brush.html",
    "title": "Class Brush",
    "keywords": "Class Brush Inheritance System.Object Brush Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Brush : object Constructors | Improve this Doc View Source Brush() Declaration public Brush() | Improve this Doc View Source Brush(Brush) Declaration public Brush(Brush brush) Parameters Type Name Description Brush brush | Improve this Doc View Source Brush(Color) Declaration public Brush(Color color) Parameters Type Name Description Color color Properties | Improve this Doc View Source Background Declaration public Color Background { get; set; } Property Value Type Description Color | Improve this Doc View Source BitmapId This identifies bitmap in the BitmapRegistry Declaration public int BitmapId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source FillStyle This identifies how the brush is applied, works for Color not for bitmaps Declaration public FillStyle FillStyle { get; set; } Property Value Type Description FillStyle Methods | Improve this Doc View Source Equals(Brush) Declaration public bool Equals(Brush brush) Parameters Type Name Description Brush brush Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Operators | Improve this Doc View Source Equality(Brush, Brush) Declaration public static bool operator ==(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Brush, Brush) Declaration public static bool operator !=(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description System.Boolean"
  },
  "api/Mapsui.Styles.BitmapRegistry.html": {
    "href": "api/Mapsui.Styles.BitmapRegistry.html",
    "title": "Class BitmapRegistry",
    "keywords": "Class BitmapRegistry Inheritance System.Object BitmapRegistry Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class BitmapRegistry : object Properties | Improve this Doc View Source Instance Declaration public static BitmapRegistry Instance { get; } Property Value Type Description BitmapRegistry Methods | Improve this Doc View Source Get(Int32) Declaration public object Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Object | Improve this Doc View Source Register(Object) Declaration public int Register(object bitmapData) Parameters Type Name Description System.Object bitmapData Returns Type Description System.Int32 | Improve this Doc View Source Unregister(Int32) Declaration public void Unregister(int id) Parameters Type Name Description System.Int32 id"
  },
  "api/Mapsui.Styles.BitmapDataAddedEventArgs.html": {
    "href": "api/Mapsui.Styles.BitmapDataAddedEventArgs.html",
    "title": "Class BitmapDataAddedEventArgs",
    "keywords": "Class BitmapDataAddedEventArgs Inheritance System.Object BitmapDataAddedEventArgs Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class BitmapDataAddedEventArgs : EventArgs Constructors | Improve this Doc View Source BitmapDataAddedEventArgs(Stream) Declaration public BitmapDataAddedEventArgs(Stream data) Parameters Type Name Description Stream data"
  },
  "api/Mapsui.Styles.Bitmap.html": {
    "href": "api/Mapsui.Styles.Bitmap.html",
    "title": "Class Bitmap",
    "keywords": "Class Bitmap This class has been replaced with BitmapID/BitmapRegistry. It is left in for backward compatibility. The problem with this class is that the renderer creates instances for each bitmap even if this same bitmap is used. Inheritance System.Object Bitmap Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Bitmap : object Fields | Improve this Doc View Source BitmapDataAddedEventHandler Declaration public EventHandler<BitmapDataAddedEventArgs> BitmapDataAddedEventHandler Field Value Type Description EventHandler < BitmapDataAddedEventArgs > Properties | Improve this Doc View Source Data Declaration public Stream Data { get; set; } Property Value Type Description Stream Methods | Improve this Doc View Source OnBitmapDataAddedEventArgs(Stream) Declaration public void OnBitmapDataAddedEventArgs(Stream data) Parameters Type Name Description Stream data"
  },
  "api/Mapsui.Rendering.html": {
    "href": "api/Mapsui.Rendering.html",
    "title": "Namespace Mapsui.Rendering",
    "keywords": "Namespace Mapsui.Rendering Classes DefaultRendererFactory MinimalRenderGetStrategy RenderException Exception thrown when a layer rendering fails RenderGetStrategy VisibleFeatureIterator Interfaces IRenderer IRenderGetStrategy ISymbolCache"
  },
  "api/Mapsui.Rendering.Xaml.html": {
    "href": "api/Mapsui.Rendering.Xaml.html",
    "title": "Namespace Mapsui.Rendering.Xaml",
    "keywords": "Namespace Mapsui.Rendering.Xaml Classes BitmapImageExtensions GeometryRenderer HorizontaltExtensions LineStringRenderer MapRenderer MatrixHelper MultiLineStringRenderer MultiPolygonRenderer OutlinedTextBlock PointRenderer PolygonRenderer RectExtensions StreamExtensions StyleConverter SymbolCache VerticalAligmentExtensions"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance System.Object ZoomInOutWidgetRenderer Implements IWidgetRenderer Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class ZoomInOutWidgetRenderer : object, IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.html",
    "title": "Namespace Mapsui.Rendering.Xaml.XamlWidgets",
    "keywords": "Namespace Mapsui.Rendering.Xaml.XamlWidgets Classes HyperlinkWidgetRenderer ScaleBarWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.WidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance System.Object WidgetRenderer Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class WidgetRenderer : object Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>) Declaration public static void Render(object target, IReadOnlyViewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renderers) Parameters Type Name Description System.Object target IReadOnlyViewport viewport IEnumerable < IWidget > widgets IDictionary < Type , IWidgetRenderer > renderers"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.ScaleBarWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance System.Object ScaleBarWidgetRenderer Implements IWidgetRenderer Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class ScaleBarWidgetRenderer : object, IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.HyperlinkWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.HyperlinkWidgetRenderer.html",
    "title": "Class HyperlinkWidgetRenderer",
    "keywords": "Class HyperlinkWidgetRenderer Inheritance System.Object HyperlinkWidgetRenderer Implements IWidgetRenderer Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class HyperlinkWidgetRenderer : object, IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.VerticalAligmentExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.VerticalAligmentExtensions.html",
    "title": "Class VerticalAligmentExtensions",
    "keywords": "Class VerticalAligmentExtensions Inheritance System.Object VerticalAligmentExtensions Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class VerticalAligmentExtensions : object Methods | Improve this Doc View Source ToXaml(VerticalAlignment) Declaration public static VerticalAlignment ToXaml(this VerticalAlignment verticalAlignment) Parameters Type Name Description VerticalAlignment verticalAlignment Returns Type Description VerticalAlignment"
  },
  "api/Mapsui.Rendering.Xaml.SymbolCache.html": {
    "href": "api/Mapsui.Rendering.Xaml.SymbolCache.html",
    "title": "Class SymbolCache",
    "keywords": "Class SymbolCache Inheritance System.Object SymbolCache Implements ISymbolCache Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class SymbolCache : Dictionary<int, ImageSource>, ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration public ImageSource GetOrCreate(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description ImageSource | Improve this Doc View Source GetSize(Int32) Declaration public Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size Implements ISymbolCache"
  },
  "api/Mapsui.Rendering.IRenderGetStrategy.html": {
    "href": "api/Mapsui.Rendering.IRenderGetStrategy.html",
    "title": "Interface IRenderGetStrategy",
    "keywords": "Interface IRenderGetStrategy Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderGetStrategy Methods | Improve this Doc View Source GetFeatures(BoundingBox, Double, ITileSchema, ITileCache<Feature>) Given the current extent and resolution it determines which tiles should be returned from the memorycache Declaration IList<IFeature> GetFeatures(BoundingBox extent, double resolution, ITileSchema schema, ITileCache<Feature> memoryCache) Parameters Type Name Description BoundingBox extent The extent of the target area System.Double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache < Feature > memoryCache The cached features from which to select Returns Type Description IList < IFeature >"
  },
  "api/Mapsui.Rendering.IRenderer.html": {
    "href": "api/Mapsui.Rendering.IRenderer.html",
    "title": "Interface IRenderer",
    "keywords": "Interface IRenderer Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderer Properties | Improve this Doc View Source SymbolCache Declaration ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description IDictionary < Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport IEnumerable < ILayer > layers IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color) Declaration MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Color background Returns Type Description MemoryStream"
  },
  "api/Mapsui.Rendering.DefaultRendererFactory.html": {
    "href": "api/Mapsui.Rendering.DefaultRendererFactory.html",
    "title": "Class DefaultRendererFactory",
    "keywords": "Class DefaultRendererFactory Inheritance System.Object DefaultRendererFactory Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class DefaultRendererFactory : object Properties | Improve this Doc View Source Create Declaration public static Func<IRenderer> Create { get; set; } Property Value Type Description Func < IRenderer >"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html",
    "title": "Class XPathQueryManager.ParamCompare",
    "keywords": "Class XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. Inheritance System.Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class ParamCompare : XPathQueryManager.ParamBase, IXsltContextFunction Constructors | Improve this Doc View Source ParamCompare(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompare class. Declaration public ParamCompare(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function System.Int32 minArgs The minimum number of arguments allowed System.Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description System.String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public virtual object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context System.Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description System.Object A boolean value indicating whether the argument strings are identical | Improve this Doc View Source ResolveArgument(Object) This method creates a string from an object argument. In many cases the argument is an XPathNodeIterator that must be resolved. Declaration protected string ResolveArgument(object arg) Parameters Type Name Description System.Object arg An argument of the function to be resolved Returns Type Description System.String Implements IXsltContextFunction"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html",
    "title": "Class XPathQueryManager.ParamBase",
    "keywords": "Class XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . Inheritance System.Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public abstract class ParamBase : object Constructors | Improve this Doc View Source ParamBase(XPathResultType[], XPathResultType, Int32, Int32) Protected constructor for the abstract class. Declaration protected ParamBase(XPathResultType[] argTypes, XPathResultType returnType, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function XPathResultType returnType The return type of the function System.Int32 minArgs The minimum number of arguments allowed System.Int32 maxArgs The maximum number of arguments allowed Properties | Improve this Doc View Source ArgTypes Gets the argument types. Declaration public XPathResultType[] ArgTypes { get; } Property Value Type Description XPathResultType [] | Improve this Doc View Source Maxargs Gets the maximum number of arguments allowed. Declaration public int Maxargs { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Minargs Gets the minimum number of arguments allowed. Declaration public int Minargs { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ReturnType Gets the return type. Declaration public XPathResultType ReturnType { get; } Property Value Type Description XPathResultType"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html",
    "title": "Class XPathQueryManager.CustomQueryContext",
    "keywords": "Class XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. Inheritance System.Object XPathQueryManager.CustomQueryContext Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public class CustomQueryContext : XsltContext Constructors | Improve this Doc View Source CustomQueryContext() Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext() | Improve this Doc View Source CustomQueryContext(NameTable) Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext(NameTable table) Parameters Type Name Description NameTable table A NameTable instance Properties | Improve this Doc View Source Whitespace Method from XsltContext. Declaration public override bool Whitespace { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AddNamespace(IDictionary<String, String>) This method adds a list of namespaces to use in the custom context. Declaration public void AddNamespace(IDictionary<string, string> namespaces) Parameters Type Name Description IDictionary < System.String , System.String > namespaces A list of namespaces | Improve this Doc View Source AddParam(DictionaryEntry[]) This method adds a list of parameters to the custom context. Declaration public void AddParam(DictionaryEntry[] parameters) Parameters Type Name Description DictionaryEntry [] parameters A list of parameters | Improve this Doc View Source AddParam(String, Object) This method adds a parameter to the custom context. Declaration public void AddParam(string name, object parameter) Parameters Type Name Description System.String name The name of the parameter System.Object parameter The value of the parameter | Improve this Doc View Source CompareDocument(String, String) Method from XsltContext. Declaration public override int CompareDocument(string baseUri, string nextbaseUri) Parameters Type Name Description System.String baseUri System.String nextbaseUri Returns Type Description System.Int32 | Improve this Doc View Source GetParam(String) This method gets a parameter by name. Declaration public object GetParam(string name) Parameters Type Name Description System.String name The name of the parameter Returns Type Description System.Object | Improve this Doc View Source PreserveWhitespace(XPathNavigator) Method from XsltContext. Declaration public override bool PreserveWhitespace(XPathNavigator node) Parameters Type Name Description XPathNavigator node Returns Type Description System.Boolean | Improve this Doc View Source RemoveParam(String) This method removes a parameter from the inherent parameter list. Declaration public object RemoveParam(string name) Parameters Type Name Description System.String name The name of the parameter Returns Type Description System.Object | Improve this Doc View Source ResetParams() This methods clears the inherent parameter list. Declaration public void ResetParams() | Improve this Doc View Source ResolveFunction(String, String, XPathResultType[]) This method resolves a function appearing in an XPath expression. Declaration public override IXsltContextFunction ResolveFunction(string prefix, string name, XPathResultType[] argTypes) Parameters Type Name Description System.String prefix The prefix of the function System.String name The name of the function XPathResultType [] argTypes A list of argument types of the function Returns Type Description IXsltContextFunction | Improve this Doc View Source ResolveVariable(String, String) This method resolves a variable appearing in an XPath expression. Declaration public override IXsltContextVariable ResolveVariable(string prefix, string name) Parameters Type Name Description System.String prefix The prefix of the variable System.String name The name of the variable Returns Type Description IXsltContextVariable"
  },
  "api/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html",
    "title": "Interface IXPathQueryManager",
    "keywords": "Interface IXPathQueryManager XPathQueryManager interface Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Desktop.dll Syntax public interface IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) Declaration void AddNamespace(string prefix, string ns) Parameters Type Name Description System.String prefix System.String ns | Improve this Doc View Source Clone() Declaration IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) Declaration XPathExpression Compile(string xPath) Parameters Type Name Description System.String xPath Returns Type Description XPathExpression | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) Declaration string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath DictionaryEntry [] queryParameters Returns Type Description System.String | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) Declaration IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath DictionaryEntry [] queryParameters Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() Declaration void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Declaration void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil | Improve this Doc View Source SetDocumentToParse(Stream) Declaration void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream"
  },
  "api/Mapsui.Providers.Wfs.WFSProvider.html": {
    "href": "api/Mapsui.Providers.Wfs.WFSProvider.html",
    "title": "Class WFSProvider",
    "keywords": "Class WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Inheritance System.Object WFSProvider Implements IProvider Namespace : Mapsui.Providers.Wfs Assembly : Mapsui.Desktop.dll Syntax public class WFSProvider : object, IProvider Constructors | Improve this Doc View Source WFSProvider(WfsFeatureTypeInfo, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with a WfsFeatureTypeInfo object, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(WfsFeatureTypeInfo featureTypeInfo, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(IXPathQueryManager, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache System.String nsPrefix System.String featureType GeometryTypeEnum geometryType WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(IXPathQueryManager, String, String, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. System.String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. System.String featureType WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(String, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(string getCapabilitiesUri, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description System.String getCapabilitiesUri System.String nsPrefix System.String featureType GeometryTypeEnum geometryType WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(String, String, String, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(string getCapabilitiesUri, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description System.String getCapabilitiesUri System.String nsPrefix System.String featureType WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(String, String, String, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description System.String serviceUri System.String nsPrefix System.String featureTypeNamespace System.String featureType System.String geometryName GeometryTypeEnum geometryType WFSProvider.WFSVersionEnum wfsVersion | Improve this Doc View Source WFSProvider(String, String, String, String, String, WFSProvider.WFSVersionEnum) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, WFSProvider.WFSVersionEnum wfsVersion) Parameters Type Name Description System.String serviceUri System.String nsPrefix System.String featureTypeNamespace System.String featureType System.String geometryName WFSProvider.WFSVersionEnum wfsVersion Properties | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source FeatureTypeInfo Gets feature metadata Declaration public WfsFeatureTypeInfo FeatureTypeInfo { get; } Property Value Type Description WfsFeatureTypeInfo | Improve this Doc View Source GetCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. Declaration public IXPathQueryManager GetCapabilitiesCache { get; set; } Property Value Type Description IXPathQueryManager | Improve this Doc View Source GetFeatureGetRequest Gets or sets a value indicating whether the 'GetFeature' request should be done with HTTP GET. This option can be important when obtaining data from a WFS provided by an UMN MapServer. Declaration public bool GetFeatureGetRequest { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Gets or sets the property of the featuretype responsible for labels Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MultiGeometries Gets or sets a value indicating whether the 'GetFeature' parser should ignore multi-geometries (MultiPoint, MultiLineString, MultiCurve, MultiPolygon, MultiSurface). By default it does not. Ignoring multi-geometries can lead to a better performance. Declaration public bool MultiGeometries { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OgcFilter Gets or sets an OGC Filter. Declaration public IFilter OgcFilter { get; set; } Property Value Type Description IFilter | Improve this Doc View Source QuickGeometries Gets or sets a value indicating whether extracting geometry information from 'GetFeature' response shall be done quickly without paying attention to context validation, polygon boundaries and multi-geometries. This option accelerates the geometry parsing process, but in scarce cases can lead to errors. Declaration public bool QuickGeometries { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExecuteIntersectionQuery(BoundingBox) Declaration public Features ExecuteIntersectionQuery(BoundingBox bbox) Parameters Type Name Description BoundingBox bbox Returns Type Description Features | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Implements IProvider"
  },
  "api/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html",
    "title": "Enum WFSProvider.WFSVersionEnum",
    "keywords": "Enum WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions. Namespace : Mapsui.Providers.Wfs Assembly : Mapsui.Desktop.dll Syntax public enum WFSVersionEnum : int Fields Name Description WFS_1_0_0 WFS_1_1_0"
  },
  "api/Mapsui.Providers.Wfs.Utilities.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.html",
    "title": "Namespace Mapsui.Providers.Wfs.Utilities",
    "keywords": "Namespace Mapsui.Providers.Wfs.Utilities Classes FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. OgcFilterBase This class is the base class of all filters. It stores the filter arguments. OGCFilterCollection This class hosts a collection of instances implementing IFilter . PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. WFS_1_0_0_TextResources WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). WFS_1_1_0_TextResources WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. WFS_XPathTextResourcesBase WfsFeatureTypeInfo WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Interfaces IFilter Filter interface IWFS_TextResources Text resources interface Enums GeometryTypeEnum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators."
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html",
    "title": "Class WFS_XPathTextResourcesBase",
    "keywords": "Class WFS_XPathTextResourcesBase Inheritance System.Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_1_0_XPathTextResources Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class WFS_XPathTextResourcesBase : object Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Prefix used for feature namespace Declaration public string NSFEATURETYPEPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSGML GML namespace URI Declaration public string NSGML { get; } Property Value Type Description System.String | Improve this Doc View Source NSGMLPREFIX Prefix used for GML namespace Declaration public string NSGMLPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSOGC OGC namespace URI Declaration public string NSOGC { get; } Property Value Type Description System.String | Improve this Doc View Source NSOGCPREFIX Prefix used for OGC namespace Declaration public string NSOGCPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSOWS OWS namespace URI Declaration public string NSOWS { get; } Property Value Type Description System.String | Improve this Doc View Source NSOWSPREFIX Prefix used for OWS namespace Declaration public string NSOWSPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSSCHEMA XML schema namespace URI Declaration public string NSSCHEMA { get; } Property Value Type Description System.String | Improve this Doc View Source NSSCHEMAPREFIX Prefix used for XML schema namespace Declaration public string NSSCHEMAPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSWFS WFS namespace URI Declaration public string NSWFS { get; } Property Value Type Description System.String | Improve this Doc View Source NSWFSPREFIX Prefix used for WFS namespace Declaration public string NSWFSPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source NSXLINK XLink namespace URI Declaration public string NSXLINK { get; } Property Value Type Description System.String | Improve this Doc View Source NSXLINKPREFIX Prefix used for XLink namespace Declaration public string NSXLINKPREFIX { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Gets an XPath string addressing the name of an element having a type-attribute referencing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2: Finding the name of the featuretype's element with a named complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Gets an XPath string addressing the name of an element described by an anonymous complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2Alt: Finding the name of the featuretype's element with an anonymous complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Gets an XPath string addressing the 'gml'-prefixed ref-attribute of an element. This is for querying the name of the GML geometry element. Declaration public string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Gets an XPath string addressing an element with a 'gml'-prefixed type-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype in the most simple manner. Declaration public string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Gets an XPath string addressing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype. Step1: Finding the complex type with a geometry element from GML specification. Declaration public string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Gets an XPath string addressing a name-attribute. Declaration public string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_TARGETNS Gets an XPath string addressing the target namespace in 'DescribeFeatureType'. Declaration public string XPATH_TARGETNS { get; } Property Value Type Description System.String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Gets an XPath string addressing a type-attribute. Declaration public string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html",
    "title": "Class PropertyIsLikeFilter_FE1_1_0",
    "keywords": "Class PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsLikeFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsLikeFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLikeFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLikeFilter_FE1_1_0 class. Declaration public PropertyIsLikeFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsLessThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsLessThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsLessThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsLessThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsLessThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanFilter_FE1_1_0 class. Declaration public PropertyIsLessThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. Inheritance System.Object OgcFilterBase PropertyIsGreaterThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Desktop.dll Syntax public class PropertyIsGreaterThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description System.String propertyName System.String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description System.String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.IFeature.html": {
    "href": "api/Mapsui.Providers.IFeature.html",
    "title": "Interface IFeature",
    "keywords": "Interface IFeature Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IFeature Properties | Improve this Doc View Source Fields Declaration IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable < System.String > | Improve this Doc View Source Geometry Declaration IGeometry Geometry { get; set; } Property Value Type Description IGeometry | Improve this Doc View Source Item[String] Declaration object this[string key] { get; set; } Parameters Type Name Description System.String key Property Value Type Description System.Object | Improve this Doc View Source RenderedGeometry Declaration IDictionary<IStyle, object> RenderedGeometry { get; } Property Value Type Description IDictionary < IStyle , System.Object > | Improve this Doc View Source Styles Declaration ICollection<IStyle> Styles { get; } Property Value Type Description ICollection < IStyle > Extension Methods FeatureExtensions.Copy(IFeature)"
  },
  "api/Mapsui.Providers.Features.html": {
    "href": "api/Mapsui.Providers.Features.html",
    "title": "Class Features",
    "keywords": "Class Features Inheritance System.Object Features Implements IFeatures IEnumerable < IFeature > Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class Features : object, IFeatures, IEnumerable<IFeature> Constructors | Improve this Doc View Source Features() Declaration public Features() | Improve this Doc View Source Features(IEnumerable<IFeature>) Declaration public Features(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features | Improve this Doc View Source Features(String) Declaration public Features(string primaryKey) Parameters Type Name Description System.String primaryKey Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Int32] Declaration public IFeature this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description IFeature | Improve this Doc View Source PrimaryKey Declaration public string PrimaryKey { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Add(IFeature) Declaration public void Add(IFeature feature) Parameters Type Name Description IFeature feature | Improve this Doc View Source AddRange(IEnumerable<IFeature>) Declaration public void AddRange(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Delete(IFeature, Func<IFeature, IFeature, Boolean>) Declaration public void Delete(IFeature feature, Func<IFeature, IFeature, bool> compare = null) Parameters Type Name Description IFeature feature Func < IFeature , IFeature , System.Boolean > compare | Improve this Doc View Source Delete(Object) Declaration public void Delete(object id) Parameters Type Name Description System.Object id | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IFeature> GetEnumerator() Returns Type Description IEnumerator < IFeature > | Improve this Doc View Source New() Declaration public IFeature New() Returns Type Description IFeature Implements IFeatures IEnumerable<>"
  },
  "api/Mapsui.Providers.FeatureExtensions.html": {
    "href": "api/Mapsui.Providers.FeatureExtensions.html",
    "title": "Class FeatureExtensions",
    "keywords": "Class FeatureExtensions Inheritance System.Object FeatureExtensions Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public static class FeatureExtensions : object Methods | Improve this Doc View Source Copy(IEnumerable<IFeature>) Declaration public static IEnumerable<IFeature> Copy(this IEnumerable<IFeature> original) Parameters Type Name Description IEnumerable < IFeature > original Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source Copy(IFeature) Declaration public static IFeature Copy(this IFeature original) Parameters Type Name Description IFeature original Returns Type Description IFeature"
  },
  "api/Mapsui.Providers.ArcGIS.SpatialReference.html": {
    "href": "api/Mapsui.Providers.ArcGIS.SpatialReference.html",
    "title": "Class SpatialReference",
    "keywords": "Class SpatialReference Inheritance System.Object SpatialReference Namespace : Mapsui.Providers.ArcGIS Assembly : Mapsui.dll Syntax public class SpatialReference : object Properties | Improve this Doc View Source wkid Declaration public int wkid { get; set; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.Providers.ArcGIS.Image.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.html",
    "title": "Namespace Mapsui.Providers.ArcGIS.Image",
    "keywords": "Namespace Mapsui.Providers.ArcGIS.Image Classes ArcGISImageCapabilities ArcGISImageServiceProvider Domain EditFieldsInfo Field OwnershipBasedAccessControlForRasters RasterFunctionInfo RasterTypeInfo TimeInfo TimeReference Enums InterpolationType"
  },
  "api/Mapsui.Providers.ArcGIS.Image.TimeReference.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.TimeReference.html",
    "title": "Class TimeReference",
    "keywords": "Class TimeReference Inheritance System.Object TimeReference Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class TimeReference : object Properties | Improve this Doc View Source respectsDaylightSaving Declaration public bool respectsDaylightSaving { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source timeZone Declaration public string timeZone { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.TimeInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.TimeInfo.html",
    "title": "Class TimeInfo",
    "keywords": "Class TimeInfo Inheritance System.Object TimeInfo Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class TimeInfo : object Properties | Improve this Doc View Source EndDate Declaration public DateTime? EndDate { get; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source endTimeField Declaration public string endTimeField { get; set; } Property Value Type Description System.String | Improve this Doc View Source StartDate Declaration public DateTime? StartDate { get; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source startTimeField Declaration public string startTimeField { get; set; } Property Value Type Description System.String | Improve this Doc View Source timeExtent Declaration public long[] timeExtent { get; set; } Property Value Type Description System.Int64 [] | Improve this Doc View Source timeReference Declaration public TimeReference timeReference { get; set; } Property Value Type Description TimeReference Methods | Improve this Doc View Source ConvertUnixTimeStamp(Int64) Declaration public static DateTime? ConvertUnixTimeStamp(long unixTimeStamp) Parameters Type Name Description System.Int64 unixTimeStamp Returns Type Description System.Nullable < DateTime >"
  },
  "api/Mapsui.Providers.ArcGIS.Image.RasterTypeInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.RasterTypeInfo.html",
    "title": "Class RasterTypeInfo",
    "keywords": "Class RasterTypeInfo Inheritance System.Object RasterTypeInfo Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class RasterTypeInfo : object Properties | Improve this Doc View Source description Declaration public string description { get; set; } Property Value Type Description System.String | Improve this Doc View Source help Declaration public string help { get; set; } Property Value Type Description System.String | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.RasterFunctionInfo.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.RasterFunctionInfo.html",
    "title": "Class RasterFunctionInfo",
    "keywords": "Class RasterFunctionInfo Inheritance System.Object RasterFunctionInfo Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class RasterFunctionInfo : object Properties | Improve this Doc View Source description Declaration public string description { get; set; } Property Value Type Description System.String | Improve this Doc View Source help Declaration public string help { get; set; } Property Value Type Description System.String | Improve this Doc View Source name Declaration public string name { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Image.OwnershipBasedAccessControlForRasters.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.OwnershipBasedAccessControlForRasters.html",
    "title": "Class OwnershipBasedAccessControlForRasters",
    "keywords": "Class OwnershipBasedAccessControlForRasters Inheritance System.Object OwnershipBasedAccessControlForRasters Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public class OwnershipBasedAccessControlForRasters : object Properties | Improve this Doc View Source allowOthersToDelete Declaration public bool allowOthersToDelete { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source allowOthersToUpdate Declaration public bool allowOthersToUpdate { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Mapsui.Providers.ArcGIS.Image.InterpolationType.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Image.InterpolationType.html",
    "title": "Enum InterpolationType",
    "keywords": "Enum InterpolationType Namespace : Mapsui.Providers.ArcGIS.Image Assembly : Mapsui.dll Syntax public enum InterpolationType : int Fields Name Description RSP_BilinearInterpolation RSP_CubicConvolution RSP_Majority RSP_NearestNeighbor"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.StatusEventHandler.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public delegate void StatusEventHandler(object sender, ArcGISFeatureInfo featureInfo); Parameters Type Name Description System.Object sender ArcGISFeatureInfo featureInfo"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.Result.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.Result.html",
    "title": "Class Result",
    "keywords": "Class Result Inheritance System.Object Result Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class Result : object Properties | Improve this Doc View Source attributes Declaration public Dictionary<string, string> attributes { get; set; } Property Value Type Description Dictionary < System.String , System.String > | Improve this Doc View Source displayFieldName Declaration public string displayFieldName { get; set; } Property Value Type Description System.String | Improve this Doc View Source geometryType Declaration public string geometryType { get; set; } Property Value Type Description System.String | Improve this Doc View Source layerId Declaration public string layerId { get; set; } Property Value Type Description System.String | Improve this Doc View Source layerName Declaration public string layerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source value Declaration public string value { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponseLegend.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponseLegend.html",
    "title": "Class ArcGISLegendResponseLegend",
    "keywords": "Class ArcGISLegendResponseLegend Inheritance System.Object ArcGISLegendResponseLegend Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISLegendResponseLegend : object Properties | Improve this Doc View Source contentType Declaration public string contentType { get; set; } Property Value Type Description System.String | Improve this Doc View Source imageData Declaration public string imageData { get; set; } Property Value Type Description System.String | Improve this Doc View Source label Declaration public string label { get; set; } Property Value Type Description System.String | Improve this Doc View Source url Declaration public string url { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponseLayer.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponseLayer.html",
    "title": "Class ArcGISLegendResponseLayer",
    "keywords": "Class ArcGISLegendResponseLayer Inheritance System.Object ArcGISLegendResponseLayer Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISLegendResponseLayer : object Properties | Improve this Doc View Source layerId Declaration public int layerId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source layerName Declaration public string layerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source layerType Declaration public string layerType { get; set; } Property Value Type Description System.String | Improve this Doc View Source legend Declaration public ArcGISLegendResponseLegend[] legend { get; set; } Property Value Type Description ArcGISLegendResponseLegend [] | Improve this Doc View Source maxScale Declaration public int maxScale { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source minScale Declaration public int minScale { get; set; } Property Value Type Description System.Int32"
  },
  "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponse.html": {
    "href": "api/Mapsui.Providers.ArcGIS.Dynamic.ArcGISLegendResponse.html",
    "title": "Class ArcGISLegendResponse",
    "keywords": "Class ArcGISLegendResponse Inheritance System.Object ArcGISLegendResponse Namespace : Mapsui.Providers.ArcGIS.Dynamic Assembly : Mapsui.dll Syntax public class ArcGISLegendResponse : object Properties | Improve this Doc View Source layers Declaration public ArcGISLegendResponseLayer[] layers { get; set; } Property Value Type Description ArcGISLegendResponseLayer []"
  },
  "api/Mapsui.Layers.RasterizingLayer.html": {
    "href": "api/Mapsui.Layers.RasterizingLayer.html",
    "title": "Class RasterizingLayer",
    "keywords": "Class RasterizingLayer Inheritance System.Object BaseLayer RasterizingLayer Implements ILayer INotifyPropertyChanged IAsyncDataFetcher Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.IsCrsSupported(String) BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RasterizingLayer : BaseLayer, ILayer, INotifyPropertyChanged, IAsyncDataFetcher Constructors | Improve this Doc View Source RasterizingLayer(ILayer, Int32, Double, IRenderer, Double, Boolean) Creates a RasterizingLayer which rasterizes a layer for performance Declaration public RasterizingLayer(ILayer layer, int delayBeforeRasterize = 500, double renderResolutionMultiplier = null, IRenderer rasterizer = null, double overscanRatio = null, bool onlyRerasterizeIfOutsideOverscan = false) Parameters Type Name Description ILayer layer The Layer to be rasterized System.Int32 delayBeforeRasterize Delay after viewport change to start rerasterising System.Double renderResolutionMultiplier IRenderer rasterizer Rasterizer to use. null will use the default System.Double overscanRatio The ratio of the size of the rasterized output to the current viewport System.Boolean onlyRerasterizeIfOutsideOverscan Set the rerasterization policy. false will trigger a Rerasterisation on every viewport change. true will trigger a Rerasterisation only if the viewport moves outside the existing rasterisation. Properties | Improve this Doc View Source Envelope Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Overrides BaseLayer.Envelope Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox extent, double resolution) Parameters Type Name Description BoundingBox extent System.Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) Implements ILayer INotifyPropertyChanged IAsyncDataFetcher"
  },
  "api/Mapsui.Layers.MemoryLayer.html": {
    "href": "api/Mapsui.Layers.MemoryLayer.html",
    "title": "Class MemoryLayer",
    "keywords": "Class MemoryLayer A layer to use, when DataSource doesn't fetch anything because it is already in memory Inheritance System.Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer INotifyPropertyChanged Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.IsCrsSupported(String) BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class MemoryLayer : BaseLayer, ILayer, INotifyPropertyChanged Constructors | Improve this Doc View Source MemoryLayer() Create a new layer Declaration public MemoryLayer() | Improve this Doc View Source MemoryLayer(String) Create layer with name Declaration public MemoryLayer(string layername) Parameters Type Name Description System.String layername Name to use for layer Properties | Improve this Doc View Source DataSource Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source Envelope Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Overrides BaseLayer.Envelope Methods | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) Implements ILayer INotifyPropertyChanged"
  },
  "api/Mapsui.Layers.LayerCollection.html": {
    "href": "api/Mapsui.Layers.LayerCollection.html",
    "title": "Class LayerCollection",
    "keywords": "Class LayerCollection Inheritance System.Object LayerCollection Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class LayerCollection : ICollection<ILayer> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public ILayer this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ILayer Methods | Improve this Doc View Source Add(ILayer) Declaration public void Add(ILayer layer) Parameters Type Name Description ILayer layer | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(ILayer) Declaration public bool Contains(ILayer item) Parameters Type Name Description ILayer item Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(ILayer[], Int32) Declaration public void CopyTo(ILayer[] array, int arrayIndex) Parameters Type Name Description ILayer [] array System.Int32 arrayIndex | Improve this Doc View Source FindLayer(String) Declaration public IEnumerable<ILayer> FindLayer(string layername) Parameters Type Name Description System.String layername Returns Type Description IEnumerable < ILayer > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ILayer> GetEnumerator() Returns Type Description IEnumerator < ILayer > | Improve this Doc View Source Insert(Int32, ILayer) Declaration public void Insert(int index, ILayer layer) Parameters Type Name Description System.Int32 index ILayer layer | Improve this Doc View Source Move(Int32, ILayer) Declaration public void Move(int index, ILayer layer) Parameters Type Name Description System.Int32 index ILayer layer | Improve this Doc View Source Remove(ILayer) Declaration public bool Remove(ILayer layer) Parameters Type Name Description ILayer layer Returns Type Description System.Boolean Events | Improve this Doc View Source LayerAdded Declaration public event LayerCollection.LayerAddedEventHandler LayerAdded Event Type Type Description LayerCollection.LayerAddedEventHandler | Improve this Doc View Source LayerMoved Declaration public event LayerCollection.LayerMovedEventHandler LayerMoved Event Type Type Description LayerCollection.LayerMovedEventHandler | Improve this Doc View Source LayerRemoved Declaration public event LayerCollection.LayerRemovedEventHandler LayerRemoved Event Type Type Description LayerCollection.LayerRemovedEventHandler"
  },
  "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerRemovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerRemovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerRemovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerMovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerMovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerMovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html",
    "title": "Delegate LayerCollection.LayerAddedEventHandler",
    "keywords": "Delegate LayerCollection.LayerAddedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerAddedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.Layer.html": {
    "href": "api/Mapsui.Layers.Layer.html",
    "title": "Class Layer",
    "keywords": "Class Layer Inheritance System.Object BaseLayer Layer Implements ILayer INotifyPropertyChanged IAsyncDataFetcher Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class Layer : BaseLayer, ILayer, INotifyPropertyChanged, IAsyncDataFetcher Constructors | Improve this Doc View Source Layer() Create a new layer Declaration public Layer() | Improve this Doc View Source Layer(String) Create layer with name Declaration public Layer(string layername) Parameters Type Name Description System.String layername Name to use for layer Properties | Improve this Doc View Source DataSource Data source for this layer Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Bounding box corresponding to the extent of the features in the layer Overrides BaseLayer.Envelope | Improve this Doc View Source FetchingPostponedInMilliseconds Time to wait before fetching data Declaration public int FetchingPostponedInMilliseconds { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Get all features in a given BoundingBox for a given resolution Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox extent, double resolution) Parameters Type Name Description BoundingBox extent System.Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source IsCrsSupported(String) Queries whether a layer supports projection to a certain CRS. Declaration public override bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown Overrides BaseLayer.IsCrsSupported(String) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Indicates that there has been a change in the view of the map Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent The new extent of the visible map System.Double resolution The new resolution of the visible map System.Boolean majorChange If true an implementation should always refresh it's data. If false (minorChange) the implementation could ignore it. Example: During dragging a map a WMS layer would not want to fetch data, only on the drag end. Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) Implements ILayer INotifyPropertyChanged IAsyncDataFetcher"
  },
  "api/Mapsui.Layers.BaseLayer.html": {
    "href": "api/Mapsui.Layers.BaseLayer.html",
    "title": "Class BaseLayer",
    "keywords": "Class BaseLayer Inheritance System.Object BaseLayer AnimatedPointLayer ImageLayer Layer MemoryLayer RasterizingLayer TileLayer WritableLayer Implements ILayer INotifyPropertyChanged Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public abstract class BaseLayer : object, ILayer, INotifyPropertyChanged Constructors | Improve this Doc View Source BaseLayer() Creates a BaseLayer without a name Declaration protected BaseLayer() | Improve this Doc View Source BaseLayer(String) Creates a BaseLayer with a name Declaration protected BaseLayer(string name) Parameters Type Name Description System.String name Name for this layer Properties | Improve this Doc View Source Attribution Attribution for layer Declaration public Hyperlink Attribution { get; set; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration public bool Busy { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CRS The spatial reference CRS. This always needs to be equal to the CRS or the map. It should eventually be removed altogether Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Envelope Returns the envelope of all avaiable data in the layer Declaration public virtual BoundingBox Envelope { get; protected set; } Property Value Type Description BoundingBox | Improve this Doc View Source Exclusive Of all layers with Exclusive is true only one will be Enabled at a time. This can be used for radiobuttons. Declaration public bool Exclusive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Numerical Id of layer Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration public bool IsMapInfoLayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Name Name of layer Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Opacity Opacity of layer Declaration public double Opacity { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Resolutions List of native resolutions Declaration public virtual IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < System.Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration public IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Transformation The coordinate transformation Declaration public ITransformation Transformation { get; set; } Property Value Type Description ITransformation | Improve this Doc View Source Transformer Declaration public Transformer Transformer { get; } Property Value Type Description Transformer Methods | Improve this Doc View Source DataHasChanged() Declaration public void DataHasChanged() | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Get all features in a given BoundingBox for a given resolution Declaration public abstract IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetLayerStyles(ILayer) Get a layer's styles Declaration public static IEnumerable<IStyle> GetLayerStyles(ILayer layer) Parameters Type Name Description ILayer layer Layer, for which styles should be returned Returns Type Description IEnumerable < IStyle > Enumerable with styles belonging to layer | Improve this Doc View Source IsCrsSupported(String) Queries whether a layer supports projection to a certain CRS. Declaration public virtual bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs The crs to project to Returns Type Description System.Nullable < System.Boolean > True if is does, false if it does not, null if it is unknown | Improve this Doc View Source OnDataChanged(DataChangedEventArgs) Declaration protected void OnDataChanged(DataChangedEventArgs args) Parameters Type Name Description DataChangedEventArgs args | Improve this Doc View Source OnPropertyChanged(String) Declaration protected virtual void OnPropertyChanged(string name) Parameters Type Name Description System.String name | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Indicates that there has been a change in the view of the map Declaration public abstract void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent The new extent of the visible map System.Double resolution The new resolution of the visible map System.Boolean majorChange If true an implementation should always refresh it's data. If false (minorChange) the implementation could ignore it. Example: During dragging a map a WMS layer would not want to fetch data, only on the drag end. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements ILayer INotifyPropertyChanged"
  },
  "api/Mapsui.Layers.AnimatedPointLayer.html": {
    "href": "api/Mapsui.Layers.AnimatedPointLayer.html",
    "title": "Class AnimatedPointLayer",
    "keywords": "Class AnimatedPointLayer Inheritance System.Object BaseLayer AnimatedPointLayer Implements ILayer INotifyPropertyChanged Inherited Members BaseLayer.Transformer BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.CRS BaseLayer.Exclusive BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Transformation BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.IsCrsSupported(String) BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class AnimatedPointLayer : BaseLayer, ILayer, INotifyPropertyChanged Constructors | Improve this Doc View Source AnimatedPointLayer(IProvider) Declaration public AnimatedPointLayer(IProvider dataSource) Parameters Type Name Description IProvider dataSource Properties | Improve this Doc View Source Envelope Declaration public override BoundingBox Envelope { get; } Property Value Type Description BoundingBox Overrides BaseLayer.Envelope Methods | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public override IEnumerable<IFeature> GetFeaturesInView(BoundingBox extent, double resolution) Parameters Type Name Description BoundingBox extent System.Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeaturesInView(BoundingBox, Double) | Improve this Doc View Source RefreshData(BoundingBox, Double, Boolean) Declaration public override void RefreshData(BoundingBox extent, double resolution, bool majorChange) Parameters Type Name Description BoundingBox extent System.Double resolution System.Boolean majorChange Overrides BaseLayer.RefreshData(BoundingBox, Double, Boolean) | Improve this Doc View Source UpdateData() Declaration public void UpdateData() Implements ILayer INotifyPropertyChanged"
  },
  "api/Mapsui.Layers.AnimatedFeatures.html": {
    "href": "api/Mapsui.Layers.AnimatedFeatures.html",
    "title": "Class AnimatedFeatures",
    "keywords": "Class AnimatedFeatures Inheritance System.Object AnimatedFeatures Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class AnimatedFeatures : object Constructors | Improve this Doc View Source AnimatedFeatures(Int32) Declaration public AnimatedFeatures(int millisecondsBetweenUpdates = 16) Parameters Type Name Description System.Int32 millisecondsBetweenUpdates Properties | Improve this Doc View Source AnimationDuration Declaration public int AnimationDuration { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DistanceThreshold When the distance between the current and the previous position is larger than the DistanceThreshold it will not be animated. The default is Double.MaxValue Declaration public double DistanceThreshold { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Function Declaration public EasingFunction Function { get; set; } Property Value Type Description EasingFunction | Improve this Doc View Source IdField Declaration public string IdField { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddFeatures(IEnumerable<IFeature>) Declaration public void AddFeatures(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source OnAnimatedPositionChanged() Declaration protected virtual void OnAnimatedPositionChanged() Events | Improve this Doc View Source AnimatedPositionChanged Declaration public event EventHandler AnimatedPositionChanged Event Type Type Description EventHandler"
  },
  "api/Mapsui.IViewport.html": {
    "href": "api/Mapsui.IViewport.html",
    "title": "Interface IViewport",
    "keywords": "Interface IViewport Inherited Members IReadOnlyViewport.ViewportChanged IReadOnlyViewport.Center IReadOnlyViewport.Resolution IReadOnlyViewport.Extent IReadOnlyViewport.Width IReadOnlyViewport.Height IReadOnlyViewport.Rotation IReadOnlyViewport.HasSize IReadOnlyViewport.IsRotated IReadOnlyViewport.ScreenToWorld(Point) IReadOnlyViewport.ScreenToWorld(Double, Double) IReadOnlyViewport.WorldToScreen(Point) IReadOnlyViewport.WorldToScreen(Double, Double) IReadOnlyViewport.WorldToScreenUnrotated(Double, Double) IReadOnlyViewport.WorldToScreenUnrotated(Point) IReadOnlyViewport.WindowExtent Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IViewport : IReadOnlyViewport Methods | Improve this Doc View Source SetCenter(ReadOnlyPoint) Declaration void SetCenter(ReadOnlyPoint center) Parameters Type Name Description ReadOnlyPoint center | Improve this Doc View Source SetCenter(Double, Double) Declaration void SetCenter(double x, double y) Parameters Type Name Description System.Double x System.Double y | Improve this Doc View Source SetResolution(Double) Declaration void SetResolution(double resolution) Parameters Type Name Description System.Double resolution | Improve this Doc View Source SetRotation(Double) Declaration void SetRotation(double rotation) Parameters Type Name Description System.Double rotation | Improve this Doc View Source SetSize(Double, Double) Declaration void SetSize(double width, double height) Parameters Type Name Description System.Double width System.Double height | Improve this Doc View Source Transform(Point, Point, Double, Double) Moving the position of viewport to a new one Declaration void Transform(Point position, Point previousPosition, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description Point position Current center of touch Point previousPosition Previous center of touch System.Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) System.Double deltaRotation Change of rotation Extension Methods ViewportExtensions.ToSKMatrix(IViewport)"
  },
  "api/Mapsui.Geometries.WellKnownBinary.WkbByteOrder.html": {
    "href": "api/Mapsui.Geometries.WellKnownBinary.WkbByteOrder.html",
    "title": "Enum WkbByteOrder",
    "keywords": "Enum WkbByteOrder Specifies the specific binary encoding (NDR or XDR) used for a geometry byte stream Namespace : Mapsui.Geometries.WellKnownBinary Assembly : Mapsui.Geometries.dll Syntax public enum WkbByteOrder : byte Fields Name Description Ndr NDR (Little Endian) Encoding of Numeric Types Xdr XDR (Big Endian) Encoding of Numeric Types"
  },
  "api/Mapsui.Geometries.WellKnownBinary.GeometryToWKB.html": {
    "href": "api/Mapsui.Geometries.WellKnownBinary.GeometryToWKB.html",
    "title": "Class GeometryToWKB",
    "keywords": "Class GeometryToWKB Converts a Geometry instance to a Well-known Binary string representation. Inheritance System.Object GeometryToWKB Namespace : Mapsui.Geometries.WellKnownBinary Assembly : Mapsui.Geometries.dll Syntax public static class GeometryToWKB : object Remarks The Well-known Binary Representation for Geometry (WKBGeometry) provides a portable representation of a Geometry value as a contiguous stream of bytes. It permits Geometry values to be exchanged between an ODBC client and an SQL database in binary form. The Well-known Binary Representation for Geometry is obtained by serializing a Geometry instance as a sequence of numeric types drawn from the set {Unsigned Integer, Double} and then serializing each numeric type as a sequence of bytes using one of two well defined, standard, binary representations for numeric types (NDR, XDR). The specific binary encoding (NDR or XDR) used for a geometry byte stream is described by a one byte tag that precedes the serialized bytes. The only difference between the two encodings of geometry is one of byte order, the XDR encoding is Big Endian, the NDR encoding is Little Endian. Methods | Improve this Doc View Source Write(Geometry, WkbByteOrder) Writes a geometry to a byte array using the specified encoding. Declaration public static byte[] Write(Geometry g, WkbByteOrder wkbByteOrder = default(WkbByteOrder)) Parameters Type Name Description Geometry g The geometry to write WkbByteOrder wkbByteOrder Byte order Returns Type Description System.Byte [] WKB representation of the geometry"
  },
  "api/Mapsui.Geometries.WellKnownBinary.GeometryFromWKB.html": {
    "href": "api/Mapsui.Geometries.WellKnownBinary.GeometryFromWKB.html",
    "title": "Class GeometryFromWKB",
    "keywords": "Class GeometryFromWKB Converts Well-known Binary representations to a Geometry instance. Inheritance System.Object GeometryFromWKB Namespace : Mapsui.Geometries.WellKnownBinary Assembly : Mapsui.Geometries.dll Syntax public static class GeometryFromWKB : object Remarks The Well-known Binary Representation for Geometry (WKBGeometry) provides a portable representation of a Geometry value as a contiguous stream of bytes. It permits Geometry values to be exchanged between an ODBC client and an SQL database in binary form. The Well-known Binary Representation for Geometry is obtained by serializing a Geometry instance as a sequence of numeric types drawn from the set {Unsigned Integer, Double} and then serializing each numeric type as a sequence of bytes using one of two well defined, standard, binary representations for numeric types (NDR, XDR). The specific binary encoding (NDR or XDR) used for a geometry byte stream is described by a one byte tag that precedes the serialized bytes. The only difference between the two encodings of geometry is one of byte order, the XDR encoding is Big Endian, the NDR encoding is Little Endian. Methods | Improve this Doc View Source Parse(BinaryReader) Creates a Geometry based on the Well-known binary representation. Declaration public static Geometry Parse(BinaryReader reader) Parameters Type Name Description BinaryReader reader A BinaryReader used to read the Well-known binary representation. Returns Type Description Geometry A Geometry based on the Well-known binary representation. | Improve this Doc View Source Parse(Byte[]) Creates a Geometry from the supplied byte[] containing the Well-known Binary representation. Declaration public static Geometry Parse(byte[] bytes) Parameters Type Name Description System.Byte [] bytes byte[] containing the Well-known Binary representation. Returns Type Description Geometry A Geometry bases on the supplied Well-known Binary representation."
  },
  "api/Mapsui.Geometries.Utilities.html": {
    "href": "api/Mapsui.Geometries.Utilities.html",
    "title": "Namespace Mapsui.Geometries.Utilities",
    "keywords": "Namespace Mapsui.Geometries.Utilities Classes Algorithms CGAlgorithms Specifies and implements various fundamental Computational Geometric algorithms. The algorithms supplied in this class are robust for double-precision floating point."
  },
  "api/Mapsui.Geometries.Quad.html": {
    "href": "api/Mapsui.Geometries.Quad.html",
    "title": "Class Quad",
    "keywords": "Class Quad Double precision polygon with 4 explicit vertices. This is useful to represent a BoundingBox that has been rotated. Inheritance System.Object Quad Namespace : Mapsui.Geometries Assembly : Mapsui.Geometries.dll Syntax public class Quad : IEquatable<Quad> Remarks The sides do not have to be parallel to the two axes of the coordinate system. If this has been rotated, the 'BottomLeft' vertex may not actually be the min point in x/y. Constructors | Improve this Doc View Source Quad() Declaration public Quad() | Improve this Doc View Source Quad(Point, Point, Point, Point) Declaration public Quad(Point bottomLeft, Point topLeft, Point topRight, Point bottomRight) Parameters Type Name Description Point bottomLeft Point topLeft Point topRight Point bottomRight | Improve this Doc View Source Quad(Quad) Declaration public Quad(Quad quad) Parameters Type Name Description Quad quad Properties | Improve this Doc View Source BottomLeft Declaration public Point BottomLeft { get; set; } Property Value Type Description Point | Improve this Doc View Source BottomRight Declaration public Point BottomRight { get; set; } Property Value Type Description Point | Improve this Doc View Source TopLeft Declaration public Point TopLeft { get; set; } Property Value Type Description Point | Improve this Doc View Source TopRight Declaration public Point TopRight { get; set; } Property Value Type Description Point | Improve this Doc View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<Point> Vertices { get; } Property Value Type Description IEnumerable < Point > Methods | Improve this Doc View Source Equals(Quad) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Quad other) Parameters Type Name Description Quad other Other object to compare Returns Type Description System.Boolean Returns true if they are equal | Improve this Doc View Source Equals(Object) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Other object to compare Returns Type Description System.Boolean Returns true if they are equal | Improve this Doc View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the specified object | Improve this Doc View Source Rotate(Double, Double, Double) Creates a new quad by rotate all 4 vertices clockwise about the specified center point Declaration public Quad Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description System.Double degrees Angle to rotate clockwise (degrees) System.Double centerX X coordinate of point about which to rotate System.Double centerY Y coordinate of point about which to rotate Returns Type Description Quad Returns the rotate quad | Improve this Doc View Source ToBoundingBox() Calculates a new bounding box that encompasses all 4 vertices. Declaration public BoundingBox ToBoundingBox() Returns Type Description BoundingBox Returns the calculate bounding box | Improve this Doc View Source ToString() Returns a string representation of the vertices from bottom-left clockwise to bottom-right Declaration public override string ToString() Returns Type Description System.String Returns the string"
  },
  "api/Mapsui.Fetcher.FetchTileCompletedEventHandler.html": {
    "href": "api/Mapsui.Fetcher.FetchTileCompletedEventHandler.html",
    "title": "Delegate FetchTileCompletedEventHandler",
    "keywords": "Delegate FetchTileCompletedEventHandler Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public delegate void FetchTileCompletedEventHandler(object sender, FetchTileCompletedEventArgs e); Parameters Type Name Description System.Object sender FetchTileCompletedEventArgs e"
  },
  "api/Mapsui.Fetcher.DataChangedEventHandler.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventHandler.html",
    "title": "Delegate DataChangedEventHandler",
    "keywords": "Delegate DataChangedEventHandler Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public delegate void DataChangedEventHandler(object sender, DataChangedEventArgs e); Parameters Type Name Description System.Object sender DataChangedEventArgs e"
  },
  "api/Mapsui.Fetcher.DataChangedEventArgs.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventArgs.html",
    "title": "Class DataChangedEventArgs",
    "keywords": "Class DataChangedEventArgs Inheritance System.Object DataChangedEventArgs Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class DataChangedEventArgs : EventArgs Constructors | Improve this Doc View Source DataChangedEventArgs() Declaration public DataChangedEventArgs() | Improve this Doc View Source DataChangedEventArgs(Exception, Boolean, TileInfo) Declaration public DataChangedEventArgs(Exception error, bool cancelled, TileInfo tileInfo) Parameters Type Name Description Exception error System.Boolean cancelled TileInfo tileInfo | Improve this Doc View Source DataChangedEventArgs(Exception, Boolean, TileInfo, String) Declaration public DataChangedEventArgs(Exception error, bool cancelled, TileInfo tileInfo, string layerName) Parameters Type Name Description Exception error System.Boolean cancelled TileInfo tileInfo System.String layerName Properties | Improve this Doc View Source Cancelled Declaration public bool Cancelled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Error Declaration public Exception Error { get; } Property Value Type Description Exception | Improve this Doc View Source LayerName Declaration public string LayerName { get; } Property Value Type Description System.String | Improve this Doc View Source TileInfo Declaration public TileInfo TileInfo { get; } Property Value Type Description TileInfo"
  },
  "api/Mapsui.Desktop.Wms.WmsProvider.html": {
    "href": "api/Mapsui.Desktop.Wms.WmsProvider.html",
    "title": "Class WmsProvider",
    "keywords": "Class WmsProvider Web Map Service layer Inheritance System.Object WmsProvider Implements IProjectingProvider IProvider Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class WmsProvider : object, IProjectingProvider, IProvider Remarks The WmsLayer is currently very basic and doesn't support automatic fetching of the WMS Service Description. Instead you would have to add the nessesary parameters to the URL, and the WmsLayer will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Constructors | Improve this Doc View Source WmsProvider(String, String, Func<String, Task<Stream>>) Initializes a new layer, and downloads and parses the service description Declaration public WmsProvider(string url, string wmsVersion = null, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description System.String url Url of WMS server System.String wmsVersion Version number of wms leave null to get the default service version Func < System.String , Task < Stream >> getStreamAsync Download method, leave null for default | Improve this Doc View Source WmsProvider(XmlDocument, Func<String, Task<Stream>>) Declaration public WmsProvider(XmlDocument capabilities, Func<string, Task<Stream>> getStreamAsync = null) Parameters Type Name Description XmlDocument capabilities Func < System.String , Task < Stream >> getStreamAsync Properties | Improve this Doc View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer Declaration public bool ContinueOnError { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string> ExtraParams { get; set; } Property Value Type Description Dictionary < System.String , System.String > | Improve this Doc View Source GetFeatureInfoFormats Gets the list of available FeatureInfo Output Format Declaration public Collection<string> GetFeatureInfoFormats { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source LayerList Gets the list of enabled layers Declaration public Collection<string> LayerList { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source RootLayer Gets the hiarchial list of available WMS layers from this service Declaration public Client.WmsServerLayer RootLayer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source ServiceDescription Gets the service description from this server Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source StylesList Gets the list of enabled styles Declaration public Collection<string> StylesList { get; } Property Value Type Description Collection < System.String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Version Gets the WMS Server version of this service Declaration public string Version { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddLayer(String) Adds a layer to WMS request Declaration public void AddLayer(string name) Parameters Type Name Description System.String name Name of layer Remarks Layer names are case sensitive. | Improve this Doc View Source AddStyle(String) Adds a style to the style collection Declaration public void AddStyle(string name) Parameters Type Name Description System.String name Name of style | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetLayer(String) Get a layer from the WMS Declaration public Client.WmsServerLayer GetLayer(string name) Parameters Type Name Description System.String name Name of layer Returns Type Description Client.WmsServerLayer Remarks Layer names are case sensitive. | Improve this Doc View Source GetLegendRequestUrls() Gets the URL for a map request base on current settings, the image size and boundingbox Declaration public IEnumerable<string> GetLegendRequestUrls() Returns Type Description IEnumerable < System.String > URL for WMS request | Improve this Doc View Source GetLegends() Declaration public IEnumerable<MemoryStream> GetLegends() Returns Type Description IEnumerable < MemoryStream > | Improve this Doc View Source GetRequestUrl(BoundingBox, Int32, Int32) Gets the URL for a map request base on current settings, the image size and boundingbox Declaration public string GetRequestUrl(BoundingBox box, int width, int height) Parameters Type Name Description BoundingBox box System.Int32 width System.Int32 height Returns Type Description System.String URL for WMS request | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description System.String crs Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source RemoveAllLayers() Removes all layers Declaration public void RemoveAllLayers() | Improve this Doc View Source RemoveAllStyles() Removes all styles from the list Declaration public void RemoveAllStyles() | Improve this Doc View Source RemoveLayer(String) Removes a layer from the layer list Declaration public void RemoveLayer(string name) Parameters Type Name Description System.String name Name of layer to remove | Improve this Doc View Source RemoveLayerAt(Int32) Removes the layer at the specified index Declaration public void RemoveLayerAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source RemoveStyle(String) Removes a style from the collection Declaration public void RemoveStyle(string name) Parameters Type Name Description System.String name Name of style | Improve this Doc View Source RemoveStyleAt(Int32) Removes a style at specified index Declaration public void RemoveStyleAt(int index) Parameters Type Name Description System.Int32 index Index | Improve this Doc View Source SetImageFormat(String) Sets the image type to use when requesting images from the WMS server Declaration public void SetImageFormat(string mimeType) Parameters Type Name Description System.String mimeType Mime type of image format Remarks See the OutputFormats property for a list of available mime types supported by the WMS server | Improve this Doc View Source TryGetMap(IViewport, ref IRaster) Declaration public bool TryGetMap(IViewport viewport, ref IRaster raster) Parameters Type Name Description IViewport viewport IRaster raster Returns Type Description System.Boolean Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.Desktop.Wms.FeatureInfo.html": {
    "href": "api/Mapsui.Desktop.Wms.FeatureInfo.html",
    "title": "Class FeatureInfo",
    "keywords": "Class FeatureInfo Inheritance System.Object FeatureInfo Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public class FeatureInfo : object Properties | Improve this Doc View Source FeatureInfos Declaration public List<Dictionary<string, string>> FeatureInfos { get; set; } Property Value Type Description List < Dictionary < System.String , System.String >> | Improve this Doc View Source LayerName Declaration public string LayerName { get; set; } Property Value Type Description System.String"
  },
  "api/Mapsui.Desktop.Wms.Client.WmsServerLayer.html": {
    "href": "api/Mapsui.Desktop.Wms.Client.WmsServerLayer.html",
    "title": "Struct Client.WmsServerLayer",
    "keywords": "Struct Client.WmsServerLayer Structure for holding information about a WMS Layer Namespace : Mapsui.Desktop.Wms Assembly : Mapsui.Desktop.dll Syntax public struct WmsServerLayer Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description System.String | Improve this Doc View Source BoundingBoxes Coordinate Reference Systems supported by layer Declaration public IDictionary<string, BoundingBox> BoundingBoxes Field Value Type Description IDictionary < System.String , BoundingBox > | Improve this Doc View Source ChildLayers Collection of child layers Declaration public Client.WmsServerLayer[] ChildLayers Field Value Type Description Client.WmsServerLayer [] | Improve this Doc View Source CRS Coordinate Reference Systems supported by layer Declaration public string[] CRS Field Value Type Description System.String [] | Improve this Doc View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description System.String [] | Improve this Doc View Source LatLonBoundingBox Latitudal/longitudal extent of this layer Declaration public BoundingBox LatLonBoundingBox Field Value Type Description BoundingBox | Improve this Doc View Source Name Unique name of this layer used for requesting layer Declaration public string Name Field Value Type Description System.String | Improve this Doc View Source Queryable Specifies whether this layer is queryable using GetFeatureInfo requests Declaration public bool Queryable Field Value Type Description System.Boolean | Improve this Doc View Source Style List of styles supported by layer Declaration public Client.WmsLayerStyle[] Style Field Value Type Description Client.WmsLayerStyle [] | Improve this Doc View Source Title Layer title Declaration public string Title Field Value Type Description System.String"
  }
}