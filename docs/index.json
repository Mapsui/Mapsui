{
  "api/ConcurrentCollections.ConcurrentHashSet-1.html": {
    "href": "api/ConcurrentCollections.ConcurrentHashSet-1.html",
    "title": "Class ConcurrentHashSet<T>",
    "keywords": "Class ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection. Inheritance Object ConcurrentHashSet<T> Implements ICollection <T> Namespace : ConcurrentCollections Assembly : Mapsui.dll Syntax public class ConcurrentHashSet<T> : IReadOnlyCollection<T> Type Parameters Name Description T The type of the items in the collection. Remarks All public members of ConcurrentHashSet<T> are thread-safe and may be used concurrently from multiple threads. Constructors | Improve this Doc View Source ConcurrentHashSet() Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet() | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified System.Collections.IEnumerable{T} , has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . Exceptions Type Condition ArgumentNullException collection is a null reference. | Improve this Doc View Source ConcurrentHashSet(IEnumerable<T>, Nullable<IEqualityComparer<T>>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified IEnumerable , has the default concurrency level, has the default initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEnumerable<T> collection, IEqualityComparer<T>? comparer) Parameters Type Name Description IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . Nullable < IEqualityComparer <T>> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentNullException collection is a null reference (Nothing in Visual Basic). | Improve this Doc View Source ConcurrentHashSet(Int32, IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified IEnumerable , has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. IEnumerable <T> collection The System.Collections.IEnumerable{T} whose elements are copied to the new ConcurrentHashSet<T> . IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentNullException collection is a null reference. ArgumentOutOfRangeException concurrencyLevel is less than 1. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity) Parameters Type Name Description Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. Exceptions Type Condition ArgumentOutOfRangeException concurrencyLevel is less than 1. ArgumentOutOfRangeException capacity is less than 0. | Improve this Doc View Source ConcurrentHashSet(Int32, Int32, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity, IEqualityComparer<T> comparer) Parameters Type Name Description Int32 concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. Int32 capacity The initial number of elements that the ConcurrentHashSet<T> can contain. IEqualityComparer <T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentOutOfRangeException concurrencyLevel is less than 1. -or- capacity is less than 0. | Improve this Doc View Source ConcurrentHashSet(Nullable<IEqualityComparer<T>>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T} . Declaration public ConcurrentHashSet(IEqualityComparer<T>? comparer) Parameters Type Name Description Nullable < IEqualityComparer <T>> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Properties | Improve this Doc View Source Count Gets the number of items contained in the ConcurrentHashSet<T> . Declaration public int Count { get; } Property Value Type Description Int32 The number of items contained in the ConcurrentHashSet<T> . Remarks Count has snapshot semantics and represents the number of items in the ConcurrentHashSet<T> at the moment when Count was accessed. | Improve this Doc View Source IsEmpty Gets a value that indicates whether the ConcurrentHashSet<T> is empty. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean true if the ConcurrentHashSet<T> is empty; otherwise, false. Methods | Improve this Doc View Source Add(T) Adds the specified item to the ConcurrentHashSet<T> . Declaration public bool Add(T item) Parameters Type Name Description T item The item to add. Returns Type Description Boolean true if the items was added to the ConcurrentHashSet<T> successfully; false if it already exists. Exceptions Type Condition OverflowException The ConcurrentHashSet<T> contains too many items. | Improve this Doc View Source Clear() Removes all items from the ConcurrentHashSet<T> . Declaration public void Clear() | Improve this Doc View Source Contains(T) Determines whether the ConcurrentHashSet<T> contains the specified item. Declaration public bool Contains(T item) Parameters Type Name Description T item The item to locate in the ConcurrentHashSet<T> . Returns Type Description Boolean true if the ConcurrentHashSet<T> contains the item; otherwise, false. | Improve this Doc View Source GetEnumerator() Returns an enumerator that iterates through the ConcurrentHashSet<T> . Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> An enumerator for the ConcurrentHashSet<T> . Remarks The enumerator returned from the collection is safe to use concurrently with reads and writes to the collection, however it does not represent a moment-in-time snapshot of the collection. The contents exposed through the enumerator may contain modifications made to the collection after GetEnumerator() was called. | Improve this Doc View Source TryRemove(T) Attempts to remove the item from the ConcurrentHashSet<T> . Declaration public bool TryRemove(T item) Parameters Type Name Description T item The item to remove. Returns Type Description Boolean true if an item was removed successfully; otherwise, false. Implements ICollection<>"
  },
  "api/ConcurrentCollections.html": {
    "href": "api/ConcurrentCollections.html",
    "title": "Namespace ConcurrentCollections",
    "keywords": "Namespace ConcurrentCollections Classes ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Mapsui API",
    "keywords": "Mapsui API This is the API description of Mapsui"
  },
  "api/Mapsui.Animations.html": {
    "href": "api/Mapsui.Animations.html",
    "title": "Namespace Mapsui.Animations",
    "keywords": "Namespace Mapsui.Animations Interfaces IAnimatable"
  },
  "api/Mapsui.Animations.IAnimatable.html": {
    "href": "api/Mapsui.Animations.IAnimatable.html",
    "title": "Interface IAnimatable",
    "keywords": "Interface IAnimatable Namespace : Mapsui.Animations Assembly : Mapsui.dll Syntax public interface IAnimatable Methods | Improve this Doc View Source UpdateAnimations() Declaration bool UpdateAnimations() Returns Type Description Boolean Returns true if animations are running and a graphics update is needed."
  },
  "api/Mapsui.ArcGIS.CapabilitiesHelper.html": {
    "href": "api/Mapsui.ArcGIS.CapabilitiesHelper.html",
    "title": "Class CapabilitiesHelper",
    "keywords": "Class CapabilitiesHelper Inheritance Object CapabilitiesHelper Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class CapabilitiesHelper : object Constructors | Improve this Doc View Source CapabilitiesHelper() Helper class for getting capabilities of an ArcGIS service + extras Declaration public CapabilitiesHelper() Properties | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetCapabilities(String, CapabilitiesType) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType) Parameters Type Name Description String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType | Improve this Doc View Source GetCapabilities(String, CapabilitiesType, ICredentials) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, ICredentials credentials) Parameters Type Name Description String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType ICredentials credentials Credentials to access the service | Improve this Doc View Source GetCapabilities(String, CapabilitiesType, Nullable<String>) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, string? token) Parameters Type Name Description String url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType Nullable < String > token Token string to access the service | Improve this Doc View Source GetTileSchema(ArcGISDynamicCapabilities) Generate BruTile TileSchema based on ArcGIS Capabilities Declaration public static ITileSchema? GetTileSchema(ArcGISDynamicCapabilities arcGisDynamicCapabilities) Parameters Type Name Description ArcGISDynamicCapabilities arcGisDynamicCapabilities Returns Type Description Nullable < ITileSchema > TileSchema, returns null if service is not tiled | Improve this Doc View Source OnCapabilitiesFailed(EventArgs) Declaration protected virtual void OnCapabilitiesFailed(EventArgs e) Parameters Type Name Description EventArgs e | Improve this Doc View Source OnFinished(EventArgs) Declaration protected virtual void OnFinished(EventArgs e) Parameters Type Name Description EventArgs e Events | Improve this Doc View Source CapabilitiesFailed Triggered when failed parsing or getting capabilities Declaration public event CapabilitiesHelper.StatusEventHandler CapabilitiesFailed Event Type Type Description CapabilitiesHelper.StatusEventHandler | Improve this Doc View Source CapabilitiesReceived Triggered when finished parsing capabilities, returns Capabilities object Declaration public event CapabilitiesHelper.StatusEventHandler CapabilitiesReceived Event Type Type Description CapabilitiesHelper.StatusEventHandler"
  },
  "api/Mapsui.ArcGIS.CapabilitiesHelper.StatusEventHandler.html": {
    "href": "api/Mapsui.ArcGIS.CapabilitiesHelper.StatusEventHandler.html",
    "title": "Delegate CapabilitiesHelper.StatusEventHandler",
    "keywords": "Delegate CapabilitiesHelper.StatusEventHandler Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public delegate void StatusEventHandler(object? sender, EventArgs e); Parameters Type Name Description Nullable < Object > sender EventArgs e"
  },
  "api/Mapsui.ArcGIS.CapabilitiesType.html": {
    "href": "api/Mapsui.ArcGIS.CapabilitiesType.html",
    "title": "Enum CapabilitiesType",
    "keywords": "Enum CapabilitiesType Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public enum CapabilitiesType : int Fields Name Description DynamicServiceCapabilities ImageServiceCapabilities"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicCapabilities.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicCapabilities.html",
    "title": "Class ArcGISDynamicCapabilities",
    "keywords": "Class ArcGISDynamicCapabilities Inheritance Object ArcGISDynamicCapabilities Implements IArcGISCapabilities Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISDynamicCapabilities : object, IArcGISCapabilities Fields | Improve this Doc View Source tables Declaration public Table[] tables Field Value Type Description Table [] Properties | Improve this Doc View Source capabilities Declaration public string? capabilities { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source copyrightText Declaration public string? copyrightText { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source currentVersion Declaration public string? currentVersion { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source description Declaration public string? description { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source documentInfo Declaration public IDictionary<string, string>? documentInfo { get; set; } Property Value Type Description Nullable < IDictionary < String , String >> | Improve this Doc View Source fullExtent Declaration public Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source initialExtent Declaration public Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source layers Declaration public ArcGISLayer[] layers { get; set; } Property Value Type Description ArcGISLayer [] | Improve this Doc View Source mapName Declaration public string? mapName { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source serviceDescription Declaration public string? serviceDescription { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description String | Improve this Doc View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description Boolean | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source supportedImageFormatTypes Declaration public string? supportedImageFormatTypes { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source tileInfo Declaration public TileInfo tileInfo { get; set; } Property Value Type Description TileInfo | Improve this Doc View Source units Declaration public string? units { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetSupportedImageFormatTypes() Declaration public string[] GetSupportedImageFormatTypes() Returns Type Description String [] Implements IArcGISCapabilities"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicProvider.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicProvider.html",
    "title": "Class ArcGISDynamicProvider",
    "keywords": "Class ArcGISDynamicProvider Inheritance Object ArcGISDynamicProvider Implements IProjectingProvider IProvider Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISDynamicProvider : object, IProjectingProvider, IProvider Constructors | Improve this Doc View Source ArcGISDynamicProvider(String, ArcGISDynamicCapabilities, Nullable<String>) Create ArcGisDynamicProvider based on a given capabilities file Declaration public ArcGISDynamicProvider(string url, ArcGISDynamicCapabilities arcGisDynamicCapabilities, string? token = null) Parameters Type Name Description String url url to map service example: http://url/arcgis/rest/services/test/MapServer ArcGISDynamicCapabilities arcGisDynamicCapabilities Nullable < String > token token to request service | Improve this Doc View Source ArcGISDynamicProvider(String, Nullable<String>) Create ArcGisDynamicProvider, capabilities will be parsed automatically Declaration public ArcGISDynamicProvider(string url, string? token = null) Parameters Type Name Description String url url to map service example: http://url/arcgis/rest/services/test/MapServer Nullable < String > token token to request service Properties | Improve this Doc View Source ArcGisDynamicCapabilities Declaration public ArcGISDynamicCapabilities ArcGisDynamicCapabilities { get; } Property Value Type Description ArcGISDynamicCapabilities | Improve this Doc View Source Credentials Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Token Declaration public string? Token { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> | Improve this Doc View Source GetRequestUrl(MRect, Int32, Int32) Gets the URL for a map export request base on current settings, the image size and boundingbox Declaration public string GetRequestUrl(MRect box, int width, int height) Parameters Type Name Description MRect box Area the request should cover Int32 width Int32 height Returns Type Description String URL for ArcGIS Dynamic request | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description String crs Returns Type Description Nullable < Boolean > | Improve this Doc View Source TryGetMapAsync(IViewport) Retrieves the bitmap from ArcGIS Dynamic service Declaration public async Task<(bool Success, MRaster Raster)> TryGetMapAsync(IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description Task < (, ) < Boolean , MRaster >> Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISFeatureInfo.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISFeatureInfo.html",
    "title": "Class ArcGISFeatureInfo",
    "keywords": "Class ArcGISFeatureInfo Inheritance Object ArcGISFeatureInfo Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISFeatureInfo : object Properties | Improve this Doc View Source results Declaration public Result[] results { get; set; } Property Value Type Description Result []"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISIdentify.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISIdentify.html",
    "title": "Class ArcGISIdentify",
    "keywords": "Class ArcGISIdentify Inheritance Object ArcGISIdentify Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISIdentify : object Constructors | Improve this Doc View Source ArcGISIdentify() Declaration public ArcGISIdentify() Properties | Improve this Doc View Source TimeOut Timeout of webRequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Request(String, Double, Double, Int32, String[], Double, Double, Double, Double, Double, Double, Double, Boolean, Nullable<ICredentials>, Int32) Request a ArcGIS Service for FeatureInfo Declaration public void Request(string url, double x, double y, int tolerance, string[] layers, double extendXmin, double extendYmin, double extendXmax, double extendYmax, double mapWidth, double mapHeight, double mapDpi, bool returnGeometry, ICredentials? credentials = null, int sr = null) Parameters Type Name Description String url Mapserver url Double x x coordinate Double y y coordinate Int32 tolerance The distance in screen pixels from the specified geometry within which the identify should be performed String [] layers The layers to perform the identify operation on Double extendXmin The extent or bounding box of the map currently being viewed. Double extendYmin The extent or bounding box of the map currently being viewed. Double extendXmax The extent or bounding box of the map currently being viewed. Double extendYmax The extent or bounding box of the map currently being viewed. Double mapWidth The screen image display width Double mapHeight The screen image display height Double mapDpi The screen image display dpi, default is: 96 Boolean returnGeometry Nullable < ICredentials > credentials Int32 sr sr code of input geometry Events | Improve this Doc View Source IdentifyFailed Declaration public event StatusEventHandler IdentifyFailed Event Type Type Description StatusEventHandler | Improve this Doc View Source IdentifyFinished Declaration public event StatusEventHandler IdentifyFinished Event Type Type Description StatusEventHandler"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLayer.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLayer.html",
    "title": "Class ArcGISLayer",
    "keywords": "Class ArcGISLayer Inheritance Object ArcGISLayer Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISLayer : object Properties | Improve this Doc View Source defaultVisibility Declaration public bool defaultVisibility { get; set; } Property Value Type Description Boolean | Improve this Doc View Source id Declaration public int id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description Double | Improve this Doc View Source minScale Declaration public double minScale { get; set; } Property Value Type Description Double | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source parentLayerId Declaration public int parentLayerId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source subLayerIds Declaration public int[] subLayerIds { get; set; } Property Value Type Description Int32 []"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html",
    "title": "Class ArcGisLegend",
    "keywords": "Class ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up Inheritance Object ArcGisLegend Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGisLegend : object Constructors | Improve this Doc View Source ArcGisLegend() Declaration public ArcGisLegend() Properties | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetLegendInfo(String, Nullable<ICredentials>) Declaration public ArcGISLegendResponse GetLegendInfo(string serviceUrl, ICredentials? credentials = null) Parameters Type Name Description String serviceUrl Nullable < ICredentials > credentials Returns Type Description ArcGISLegendResponse | Improve this Doc View Source GetLegendInfoRequest(String, Nullable<ICredentials>) Get the legend for the given mapserver Declaration public void GetLegendInfoRequest(string serviceUrl, ICredentials? credentials = null) Parameters Type Name Description String serviceUrl Url to the mapserver Nullable < ICredentials > credentials Credentials Events | Improve this Doc View Source LegendFailed Declaration public event ArcGISLegendEventHandler LegendFailed Event Type Type Description ArcGISLegendEventHandler | Improve this Doc View Source LegendReceived Declaration public event ArcGISLegendEventHandler LegendReceived Event Type Type Description ArcGISLegendEventHandler"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler.html",
    "title": "Delegate ArcGISLegendEventHandler",
    "keywords": "Delegate ArcGISLegendEventHandler Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public delegate void ArcGISLegendEventHandler(object sender, ArcGISLegendResponse legendInfo); Parameters Type Name Description Object sender ArcGISLegendResponse legendInfo"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html",
    "title": "Class ArcGISLegendResponse",
    "keywords": "Class ArcGISLegendResponse Inheritance Object ArcGISLegendResponse Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponse : object Properties | Improve this Doc View Source layers Declaration public ArcGISLegendResponseLayer[] layers { get; set; } Property Value Type Description ArcGISLegendResponseLayer []"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLayer.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLayer.html",
    "title": "Class ArcGISLegendResponseLayer",
    "keywords": "Class ArcGISLegendResponseLayer Inheritance Object ArcGISLegendResponseLayer Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponseLayer : object Properties | Improve this Doc View Source layerId Declaration public int layerId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source layerName Declaration public string? layerName { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source layerType Declaration public string? layerType { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source legend Declaration public ArcGISLegendResponseLegend[] legend { get; set; } Property Value Type Description ArcGISLegendResponseLegend [] | Improve this Doc View Source maxScale Declaration public int maxScale { get; set; } Property Value Type Description Int32 | Improve this Doc View Source minScale Declaration public int minScale { get; set; } Property Value Type Description Int32"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLegend.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLegend.html",
    "title": "Class ArcGISLegendResponseLegend",
    "keywords": "Class ArcGISLegendResponseLegend Inheritance Object ArcGISLegendResponseLegend Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponseLegend : object Properties | Improve this Doc View Source contentType Declaration public string? contentType { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source imageData Declaration public string? imageData { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source label Declaration public string? label { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source url Declaration public string? url { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.html",
    "title": "Namespace Mapsui.ArcGIS.DynamicProvider",
    "keywords": "Namespace Mapsui.ArcGIS.DynamicProvider Classes ArcGISDynamicCapabilities ArcGISDynamicProvider ArcGISFeatureInfo ArcGISIdentify ArcGISLayer ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up ArcGISLegendResponse ArcGISLegendResponseLayer ArcGISLegendResponseLegend Result Delegates ArcGISLegendEventHandler StatusEventHandler"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.Result.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.Result.html",
    "title": "Class Result",
    "keywords": "Class Result Inheritance Object Result Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public class Result : object Properties | Improve this Doc View Source attributes Declaration public Dictionary<string, string>? attributes { get; set; } Property Value Type Description Nullable < Dictionary < String , String >> | Improve this Doc View Source displayFieldName Declaration public string? displayFieldName { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source geometryType Declaration public string? geometryType { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source layerId Declaration public string? layerId { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source layerName Declaration public string? layerName { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source value Declaration public string? value { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.DynamicProvider.StatusEventHandler.html": {
    "href": "api/Mapsui.ArcGIS.DynamicProvider.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace : Mapsui.ArcGIS.DynamicProvider Assembly : Mapsui.ArcGIS.dll Syntax public delegate void StatusEventHandler(object sender, ArcGISFeatureInfo featureInfo); Parameters Type Name Description Object sender ArcGISFeatureInfo featureInfo"
  },
  "api/Mapsui.ArcGIS.Extent.html": {
    "href": "api/Mapsui.ArcGIS.Extent.html",
    "title": "Class Extent",
    "keywords": "Class Extent Inheritance Object Extent Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class Extent : object Properties | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source xmax Declaration public double xmax { get; set; } Property Value Type Description Double | Improve this Doc View Source xmin Declaration public double xmin { get; set; } Property Value Type Description Double | Improve this Doc View Source ymax Declaration public double ymax { get; set; } Property Value Type Description Double | Improve this Doc View Source ymin Declaration public double ymin { get; set; } Property Value Type Description Double"
  },
  "api/Mapsui.ArcGIS.html": {
    "href": "api/Mapsui.ArcGIS.html",
    "title": "Namespace Mapsui.ArcGIS",
    "keywords": "Namespace Mapsui.ArcGIS Classes CapabilitiesHelper Extent SpatialReference Table TileInfo TileInfo.Lod TileInfo.Origin Interfaces IArcGISCapabilities Enums CapabilitiesType Delegates CapabilitiesHelper.StatusEventHandler"
  },
  "api/Mapsui.ArcGIS.IArcGISCapabilities.html": {
    "href": "api/Mapsui.ArcGIS.IArcGISCapabilities.html",
    "title": "Interface IArcGISCapabilities",
    "keywords": "Interface IArcGISCapabilities Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public interface IArcGISCapabilities Properties | Improve this Doc View Source capabilities Declaration string? capabilities { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source copyrightText Declaration string? copyrightText { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source currentVersion Declaration string? currentVersion { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source description Declaration string? description { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source fullExtent Declaration Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source initialExtent Declaration Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source serviceDescription Declaration string? serviceDescription { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source ServiceUrl Declaration string ServiceUrl { get; set; } Property Value Type Description String | Improve this Doc View Source singleFusedMapCache Declaration bool singleFusedMapCache { get; set; } Property Value Type Description Boolean | Improve this Doc View Source tileInfo Declaration TileInfo tileInfo { get; set; } Property Value Type Description TileInfo"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageCapabilities.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageCapabilities.html",
    "title": "Class ArcGISImageCapabilities",
    "keywords": "Class ArcGISImageCapabilities Inheritance Object ArcGISImageCapabilities Implements IArcGISCapabilities Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISImageCapabilities : object, IArcGISCapabilities Constructors | Improve this Doc View Source ArcGISImageCapabilities() Declaration public ArcGISImageCapabilities() | Improve this Doc View Source ArcGISImageCapabilities(String, Int64, Int64, String, InterpolationType) Declaration public ArcGISImageCapabilities(string url, long startTime = null, long endTime = null, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor) Parameters Type Name Description String url Int64 startTime Int64 endTime String format InterpolationType interpolation Properties | Improve this Doc View Source allowComputeTiePoints Declaration public bool allowComputeTiePoints { get; set; } Property Value Type Description Boolean | Improve this Doc View Source allowedMosaicMethods Declaration public string? allowedMosaicMethods { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source allowRasterFunction Declaration public bool allowRasterFunction { get; set; } Property Value Type Description Boolean | Improve this Doc View Source bandCount Declaration public int bandCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source cacheDirectory Declaration public string? cacheDirectory { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source capabilities Declaration public string? capabilities { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source copyrightText Declaration public string? copyrightText { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source currentVersion Declaration public string? currentVersion { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source defaultCompressionQuality Declaration public string? defaultCompressionQuality { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source defaultMosaicMethod Declaration public string? defaultMosaicMethod { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source defaultResamplingMethod Declaration public string? defaultResamplingMethod { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source description Declaration public string? description { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source editFieldsInfo Declaration public EditFieldsInfo editFieldsInfo { get; set; } Property Value Type Description EditFieldsInfo | Improve this Doc View Source EndTime Declaration public long EndTime { get; set; } Property Value Type Description Int64 | Improve this Doc View Source fields Declaration public Field[] fields { get; set; } Property Value Type Description Field [] | Improve this Doc View Source Format Declaration public string Format { get; set; } Property Value Type Description String | Improve this Doc View Source fullExtent Declaration public Extent fullExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source hasColormap Declaration public bool hasColormap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source hasHistograms Declaration public bool hasHistograms { get; set; } Property Value Type Description Boolean | Improve this Doc View Source hasRasterAttributeTable Declaration public bool hasRasterAttributeTable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source initialExtent Declaration public Extent initialExtent { get; set; } Property Value Type Description Extent | Improve this Doc View Source Interpolation Declaration public InterpolationType Interpolation { get; set; } Property Value Type Description InterpolationType | Improve this Doc View Source maxDownloadImageCount Declaration public double maxDownloadImageCount { get; set; } Property Value Type Description Double | Improve this Doc View Source maxDownloadSizeLimit Declaration public double maxDownloadSizeLimit { get; set; } Property Value Type Description Double | Improve this Doc View Source maxImageHeight Declaration public double maxImageHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source maxImageWidth Declaration public double maxImageWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source maxMosaicImageCount Declaration public double maxMosaicImageCount { get; set; } Property Value Type Description Double | Improve this Doc View Source maxPixelSize Declaration public double maxPixelSize { get; set; } Property Value Type Description Double | Improve this Doc View Source maxRecordCount Declaration public double maxRecordCount { get; set; } Property Value Type Description Double | Improve this Doc View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description Double | Improve this Doc View Source maxValues Declaration public double[] maxValues { get; set; } Property Value Type Description Double [] | Improve this Doc View Source mensurationCapabilities Declaration public string? mensurationCapabilities { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source minPixelSize Declaration public double minPixelSize { get; set; } Property Value Type Description Double | Improve this Doc View Source minScale Declaration public double minScale { get; set; } Property Value Type Description Double | Improve this Doc View Source minValues Declaration public double[] minValues { get; set; } Property Value Type Description Double [] | Improve this Doc View Source mosaicOperator Declaration public string? mosaicOperator { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source objectIdField Declaration public string? objectIdField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source ownershipBasedAccessControlForRasters Declaration public OwnershipBasedAccessControlForRasters ownershipBasedAccessControlForRasters { get; set; } Property Value Type Description OwnershipBasedAccessControlForRasters | Improve this Doc View Source pixelSizeX Declaration public double pixelSizeX { get; set; } Property Value Type Description Double | Improve this Doc View Source pixelSizeY Declaration public double pixelSizeY { get; set; } Property Value Type Description Double | Improve this Doc View Source pixelType Declaration public string? pixelType { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source rasterFunctionInfos Declaration public RasterFunctionInfo[] rasterFunctionInfos { get; set; } Property Value Type Description RasterFunctionInfo [] | Improve this Doc View Source rasterTypeInfos Declaration public RasterTypeInfo[] rasterTypeInfos { get; set; } Property Value Type Description RasterTypeInfo [] | Improve this Doc View Source serviceDataType Declaration public string? serviceDataType { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source serviceDescription Declaration public string? serviceDescription { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description String | Improve this Doc View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description Boolean | Improve this Doc View Source sortField Declaration public string? sortField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source sortValue Declaration public string? sortValue { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference | Improve this Doc View Source StartTime Declaration public long StartTime { get; set; } Property Value Type Description Int64 | Improve this Doc View Source stdvValues Declaration public double[] stdvValues { get; set; } Property Value Type Description Double [] | Improve this Doc View Source supportsAdvancedQueries Declaration public bool supportsAdvancedQueries { get; set; } Property Value Type Description Boolean | Improve this Doc View Source supportsStatistics Declaration public bool supportsStatistics { get; set; } Property Value Type Description Boolean | Improve this Doc View Source tileInfo Declaration public TileInfo tileInfo { get; set; } Property Value Type Description TileInfo | Improve this Doc View Source timeInfo Declaration public TimeInfo timeInfo { get; set; } Property Value Type Description TimeInfo | Improve this Doc View Source useStandardizedQueries Declaration public bool useStandardizedQueries { get; set; } Property Value Type Description Boolean Implements IArcGISCapabilities"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageServiceProvider.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageServiceProvider.html",
    "title": "Class ArcGISImageServiceProvider",
    "keywords": "Class ArcGISImageServiceProvider Inheritance Object ArcGISImageServiceProvider Implements IProjectingProvider IProvider Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class ArcGISImageServiceProvider : object, IProjectingProvider, IProvider Constructors | Improve this Doc View Source ArcGISImageServiceProvider(ArcGISImageCapabilities, Boolean, Nullable<String>) Declaration public ArcGISImageServiceProvider(ArcGISImageCapabilities capabilities, bool continueOnError = true, string? token = null) Parameters Type Name Description ArcGISImageCapabilities capabilities Boolean continueOnError Nullable < String > token | Improve this Doc View Source ArcGISImageServiceProvider(String, Boolean, String, InterpolationType, Int64, Int64, Nullable<String>) Declaration public ArcGISImageServiceProvider(string url, bool continueOnError = false, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor, long startTime = null, long endTime = null, string? token = null) Parameters Type Name Description String url Boolean continueOnError String format InterpolationType interpolation Int64 startTime Int64 endTime Nullable < String > token Properties | Improve this Doc View Source ArcGisImageCapabilities Declaration public ArcGISImageCapabilities ArcGisImageCapabilities { get; } Property Value Type Description ArcGISImageCapabilities | Improve this Doc View Source ContinueOnError Declaration public bool ContinueOnError { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Credentials Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Token Declaration public string? Token { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description String crs Returns Type Description Nullable < Boolean > | Improve this Doc View Source TryGetMapAsync(IViewport) Declaration public async Task<(bool Success, MRaster Raster)> TryGetMapAsync(IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description Task < (, ) < Boolean , MRaster >> Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.Domain.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.Domain.html",
    "title": "Class Domain",
    "keywords": "Class Domain Inheritance Object Domain Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class Domain : object Properties | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.EditFieldsInfo.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.EditFieldsInfo.html",
    "title": "Class EditFieldsInfo",
    "keywords": "Class EditFieldsInfo Inheritance Object EditFieldsInfo Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class EditFieldsInfo : object Properties | Improve this Doc View Source creationDateField Declaration public string? creationDateField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source creatorField Declaration public string? creatorField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source editDateField Declaration public string? editDateField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source editorField Declaration public string? editorField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source realm Declaration public string? realm { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.Field.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.Field.html",
    "title": "Class Field",
    "keywords": "Class Field Inheritance Object Field Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class Field : object Properties | Improve this Doc View Source alias Declaration public string? alias { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source domain Declaration public Domain domain { get; set; } Property Value Type Description Domain | Improve this Doc View Source editable Declaration public bool editable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source length Declaration public int length { get; set; } Property Value Type Description Int32 | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source nullable Declaration public bool nullable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source type Declaration public string? type { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.html",
    "title": "Namespace Mapsui.ArcGIS.ImageServiceProvider",
    "keywords": "Namespace Mapsui.ArcGIS.ImageServiceProvider Classes ArcGISImageCapabilities ArcGISImageServiceProvider Domain EditFieldsInfo Field OwnershipBasedAccessControlForRasters RasterFunctionInfo RasterTypeInfo TimeInfo TimeReference Enums InterpolationType"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.InterpolationType.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.InterpolationType.html",
    "title": "Enum InterpolationType",
    "keywords": "Enum InterpolationType Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public enum InterpolationType : int Fields Name Description RSP_BilinearInterpolation RSP_CubicConvolution RSP_Majority RSP_NearestNeighbor"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.OwnershipBasedAccessControlForRasters.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.OwnershipBasedAccessControlForRasters.html",
    "title": "Class OwnershipBasedAccessControlForRasters",
    "keywords": "Class OwnershipBasedAccessControlForRasters Inheritance Object OwnershipBasedAccessControlForRasters Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class OwnershipBasedAccessControlForRasters : object Properties | Improve this Doc View Source allowOthersToDelete Declaration public bool allowOthersToDelete { get; set; } Property Value Type Description Boolean | Improve this Doc View Source allowOthersToUpdate Declaration public bool allowOthersToUpdate { get; set; } Property Value Type Description Boolean"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.RasterFunctionInfo.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.RasterFunctionInfo.html",
    "title": "Class RasterFunctionInfo",
    "keywords": "Class RasterFunctionInfo Inheritance Object RasterFunctionInfo Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class RasterFunctionInfo : object Properties | Improve this Doc View Source description Declaration public string? description { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source help Declaration public string? help { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.RasterTypeInfo.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.RasterTypeInfo.html",
    "title": "Class RasterTypeInfo",
    "keywords": "Class RasterTypeInfo Inheritance Object RasterTypeInfo Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class RasterTypeInfo : object Properties | Improve this Doc View Source description Declaration public string? description { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source help Declaration public string? help { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.TimeInfo.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.TimeInfo.html",
    "title": "Class TimeInfo",
    "keywords": "Class TimeInfo Inheritance Object TimeInfo Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class TimeInfo : object Properties | Improve this Doc View Source EndDate Declaration public DateTime? EndDate { get; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source endTimeField Declaration public string? endTimeField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source StartDate Declaration public DateTime? StartDate { get; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source startTimeField Declaration public string? startTimeField { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source timeExtent Declaration public long[] timeExtent { get; set; } Property Value Type Description Int64 [] | Improve this Doc View Source timeReference Declaration public TimeReference timeReference { get; set; } Property Value Type Description TimeReference Methods | Improve this Doc View Source ConvertUnixTimeStamp(Int64) Declaration public static DateTime? ConvertUnixTimeStamp(long unixTimeStamp) Parameters Type Name Description Int64 unixTimeStamp Returns Type Description Nullable < DateTime >"
  },
  "api/Mapsui.ArcGIS.ImageServiceProvider.TimeReference.html": {
    "href": "api/Mapsui.ArcGIS.ImageServiceProvider.TimeReference.html",
    "title": "Class TimeReference",
    "keywords": "Class TimeReference Inheritance Object TimeReference Namespace : Mapsui.ArcGIS.ImageServiceProvider Assembly : Mapsui.ArcGIS.dll Syntax public class TimeReference : object Properties | Improve this Doc View Source respectsDaylightSaving Declaration public bool respectsDaylightSaving { get; set; } Property Value Type Description Boolean | Improve this Doc View Source timeZone Declaration public string? timeZone { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.SpatialReference.html": {
    "href": "api/Mapsui.ArcGIS.SpatialReference.html",
    "title": "Class SpatialReference",
    "keywords": "Class SpatialReference Inheritance Object SpatialReference Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class SpatialReference : object Properties | Improve this Doc View Source wkid Declaration public int wkid { get; set; } Property Value Type Description Int32"
  },
  "api/Mapsui.ArcGIS.Table.html": {
    "href": "api/Mapsui.ArcGIS.Table.html",
    "title": "Class Table",
    "keywords": "Class Table Inheritance Object Table Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class Table : object Properties | Improve this Doc View Source id Declaration public int id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source name Declaration public string? name { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.ArcGIS.TileInfo.html": {
    "href": "api/Mapsui.ArcGIS.TileInfo.html",
    "title": "Class TileInfo",
    "keywords": "Class TileInfo Inheritance Object TileInfo Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class TileInfo : object Properties | Improve this Doc View Source cols Declaration public int cols { get; set; } Property Value Type Description Int32 | Improve this Doc View Source compressionQuality Declaration public int compressionQuality { get; set; } Property Value Type Description Int32 | Improve this Doc View Source dpi Declaration public int dpi { get; set; } Property Value Type Description Int32 | Improve this Doc View Source format Declaration public string? format { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source lods Declaration public TileInfo.Lod[] lods { get; set; } Property Value Type Description TileInfo.Lod [] | Improve this Doc View Source origin Declaration public TileInfo.Origin origin { get; set; } Property Value Type Description TileInfo.Origin | Improve this Doc View Source rows Declaration public int rows { get; set; } Property Value Type Description Int32 | Improve this Doc View Source spatialReference Declaration public SpatialReference spatialReference { get; set; } Property Value Type Description SpatialReference"
  },
  "api/Mapsui.ArcGIS.TileInfo.Lod.html": {
    "href": "api/Mapsui.ArcGIS.TileInfo.Lod.html",
    "title": "Class TileInfo.Lod",
    "keywords": "Class TileInfo.Lod Inheritance Object TileInfo.Lod Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class Lod : object Properties | Improve this Doc View Source level Declaration public int level { get; set; } Property Value Type Description Int32 | Improve this Doc View Source resolution Declaration public double resolution { get; set; } Property Value Type Description Double | Improve this Doc View Source scale Declaration public double scale { get; set; } Property Value Type Description Double"
  },
  "api/Mapsui.ArcGIS.TileInfo.Origin.html": {
    "href": "api/Mapsui.ArcGIS.TileInfo.Origin.html",
    "title": "Class TileInfo.Origin",
    "keywords": "Class TileInfo.Origin Inheritance Object TileInfo.Origin Namespace : Mapsui.ArcGIS Assembly : Mapsui.ArcGIS.dll Syntax public class Origin : object Properties | Improve this Doc View Source x Declaration public double x { get; set; } Property Value Type Description Double | Improve this Doc View Source y Declaration public double y { get; set; } Property Value Type Description Double"
  },
  "api/Mapsui.Cache.html": {
    "href": "api/Mapsui.Cache.html",
    "title": "Namespace Mapsui.Cache",
    "keywords": "Namespace Mapsui.Cache Interfaces IUrlPersistentCache"
  },
  "api/Mapsui.Cache.IUrlPersistentCache.html": {
    "href": "api/Mapsui.Cache.IUrlPersistentCache.html",
    "title": "Interface IUrlPersistentCache",
    "keywords": "Interface IUrlPersistentCache Namespace : Mapsui.Cache Assembly : Mapsui.dll Syntax public interface IUrlPersistentCache Methods | Improve this Doc View Source Add(String, Byte[]) Declaration void Add(string url, byte[] tile) Parameters Type Name Description String url Byte [] tile | Improve this Doc View Source Find(String) Declaration byte[] Find(string url) Parameters Type Name Description String url Returns Type Description Byte [] | Improve this Doc View Source Remove(String) Declaration void Remove(string url) Parameters Type Name Description String url Extension Methods CacheExtensions.UrlCachedStreamAsync(IUrlPersistentCache, String)"
  },
  "api/Mapsui.ChangeType.html": {
    "href": "api/Mapsui.ChangeType.html",
    "title": "Enum ChangeType",
    "keywords": "Enum ChangeType Namespace : Mapsui Assembly : Mapsui.dll Syntax public enum ChangeType : int Fields Name Description Continuous Continuous changes in Viewport state. Examples: Dragging the map During animations Mouse wheel changes Discrete Discrete changes in Viewport state. Examples: Plus and minus buttons. Map Initialization. Final change in an animation Touch-up after dragging. Final mouse wheel change"
  },
  "api/Mapsui.CoordinateSetter.html": {
    "href": "api/Mapsui.CoordinateSetter.html",
    "title": "Delegate CoordinateSetter",
    "keywords": "Delegate CoordinateSetter Namespace : Mapsui Assembly : Mapsui.dll Syntax public delegate void CoordinateSetter(double x, double y); Parameters Type Name Description Double x Double y"
  },
  "api/Mapsui.Extensions.AssemblyExtensions.html": {
    "href": "api/Mapsui.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions",
    "keywords": "Class AssemblyExtensions Inheritance Object AssemblyExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class AssemblyExtensions : object Methods | Improve this Doc View Source GetAssemblyName(Assembly) Declaration public static string? GetAssemblyName(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description Nullable < String > | Improve this Doc View Source GetFullName(Assembly, String) Declaration public static string GetFullName(this Assembly assembly, string relativePathToEmbeddedResource) Parameters Type Name Description Assembly assembly String relativePathToEmbeddedResource Returns Type Description String"
  },
  "api/Mapsui.Extensions.ByteArrayExtensions.html": {
    "href": "api/Mapsui.Extensions.ByteArrayExtensions.html",
    "title": "Class ByteArrayExtensions",
    "keywords": "Class ByteArrayExtensions Byte Array Extensions Inheritance Object ByteArrayExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class ByteArrayExtensions : object Methods | Improve this Doc View Source IsSkp(Byte[]) true if is Skp (Skia Serialized SkPicture) Declaration public static bool IsSkp(this byte[] buffer) Parameters Type Name Description Byte [] buffer buffer Returns Type Description Boolean true if is xml | Improve this Doc View Source IsXml(Byte[]) true if is Xml Declaration public static bool IsXml(this byte[] buffer) Parameters Type Name Description Byte [] buffer buffer Returns Type Description Boolean true if is xml"
  },
  "api/Mapsui.Extensions.Cache.html": {
    "href": "api/Mapsui.Extensions.Cache.html",
    "title": "Namespace Mapsui.Extensions.Cache",
    "keywords": "Namespace Mapsui.Extensions.Cache Classes SqlitePersistentCache Tile UrlCache"
  },
  "api/Mapsui.Extensions.Cache.SqlitePersistentCache.html": {
    "href": "api/Mapsui.Extensions.Cache.SqlitePersistentCache.html",
    "title": "Class SqlitePersistentCache",
    "keywords": "Class SqlitePersistentCache Inheritance Object SqlitePersistentCache Implements IUrlPersistentCache Namespace : Mapsui.Extensions.Cache Assembly : Mapsui.Extensions.dll Syntax public class SqlitePersistentCache : IPersistentCache<byte[]>, IUrlPersistentCache Constructors | Improve this Doc View Source SqlitePersistentCache(String, Nullable<TimeSpan>, Nullable<String>) Declaration public SqlitePersistentCache(string name, TimeSpan? cacheExpireTime = null, string? folder = null) Parameters Type Name Description String name Nullable < TimeSpan > cacheExpireTime Nullable < String > folder Methods | Improve this Doc View Source Add(String, Byte[]) Declaration public void Add(string url, byte[] tile) Parameters Type Name Description String url Byte [] tile | Improve this Doc View Source Add(TileIndex, Byte[]) Declaration public void Add(TileIndex index, byte[] tile) Parameters Type Name Description TileIndex index Byte [] tile | Improve this Doc View Source Find(String) Declaration public byte[] Find(string url) Parameters Type Name Description String url Returns Type Description Byte [] | Improve this Doc View Source Find(TileIndex) Declaration public byte[] Find(TileIndex index) Parameters Type Name Description TileIndex index Returns Type Description Byte [] | Improve this Doc View Source Remove(String) Declaration public void Remove(string url) Parameters Type Name Description String url | Improve this Doc View Source Remove(TileIndex) Declaration public void Remove(TileIndex index) Parameters Type Name Description TileIndex index Implements IUrlPersistentCache"
  },
  "api/Mapsui.Extensions.Cache.Tile.html": {
    "href": "api/Mapsui.Extensions.Cache.Tile.html",
    "title": "Class Tile",
    "keywords": "Class Tile Inheritance Object Tile Namespace : Mapsui.Extensions.Cache Assembly : Mapsui.Extensions.dll Syntax public class Tile : object Properties | Improve this Doc View Source Col Declaration public int Col { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Compression Declaration public string Compression { get; set; } Property Value Type Description String | Improve this Doc View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Data Declaration public byte[] Data { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Level Declaration public int Level { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Row Declaration public int Row { get; set; } Property Value Type Description Int32"
  },
  "api/Mapsui.Extensions.Cache.UrlCache.html": {
    "href": "api/Mapsui.Extensions.Cache.UrlCache.html",
    "title": "Class UrlCache",
    "keywords": "Class UrlCache Inheritance Object UrlCache Namespace : Mapsui.Extensions.Cache Assembly : Mapsui.Extensions.dll Syntax public class UrlCache : object Properties | Improve this Doc View Source Compression Declaration public string Compression { get; set; } Property Value Type Description String | Improve this Doc View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Data Declaration public byte[] Data { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description String"
  },
  "api/Mapsui.Extensions.CacheExtensions.html": {
    "href": "api/Mapsui.Extensions.CacheExtensions.html",
    "title": "Class CacheExtensions",
    "keywords": "Class CacheExtensions Inheritance Object CacheExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class CacheExtensions : object Methods | Improve this Doc View Source UrlCachedStreamAsync(IUrlPersistentCache, String) Declaration public static async Task<Stream> UrlCachedStreamAsync(this IUrlPersistentCache persistentCache, string url) Parameters Type Name Description IUrlPersistentCache persistentCache String url Returns Type Description Task < Stream >"
  },
  "api/Mapsui.Extensions.Catch.html": {
    "href": "api/Mapsui.Extensions.Catch.html",
    "title": "Class Catch",
    "keywords": "Class Catch Inheritance Object Catch Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class Catch : object Methods | Improve this Doc View Source Exceptions(Func<Task>) Declaration public static async void Exceptions(Func<Task> func) Parameters Type Name Description Func < Task > func | Improve this Doc View Source TaskRun(Action) Declaration public static void TaskRun(Action func) Parameters Type Name Description Action func | Improve this Doc View Source TaskRun(Func<Task>) Declaration public static void TaskRun(Func<Task> func) Parameters Type Name Description Func < Task > func"
  },
  "api/Mapsui.Extensions.ConcurrentQueueExtensions.html": {
    "href": "api/Mapsui.Extensions.ConcurrentQueueExtensions.html",
    "title": "Class ConcurrentQueueExtensions",
    "keywords": "Class ConcurrentQueueExtensions Inheritance Object ConcurrentQueueExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class ConcurrentQueueExtensions : object Methods | Improve this Doc View Source Add<T>(ConcurrentQueue<T>, T) Declaration public static void Add<T>(this ConcurrentQueue<T> queue, T item) Parameters Type Name Description ConcurrentQueue <T> queue T item Type Parameters Name Description T | Improve this Doc View Source AddRange<T>(ConcurrentQueue<T>, IEnumerable<T>) Declaration public static void AddRange<T>(this ConcurrentQueue<T> queue, IEnumerable<T> itemsToAdd) Parameters Type Name Description ConcurrentQueue <T> queue IEnumerable <T> itemsToAdd Type Parameters Name Description T | Improve this Doc View Source Clear<T>(ConcurrentQueue<T>) Declaration public static void Clear<T>(this ConcurrentQueue<T> queue) Parameters Type Name Description ConcurrentQueue <T> queue Type Parameters Name Description T"
  },
  "api/Mapsui.Extensions.DoubleExtensions.html": {
    "href": "api/Mapsui.Extensions.DoubleExtensions.html",
    "title": "Class DoubleExtensions",
    "keywords": "Class DoubleExtensions Inheritance Object DoubleExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class DoubleExtensions : object Methods | Improve this Doc View Source IsNanOrInfOrZero(Double) Declaration public static bool IsNanOrInfOrZero(this double target) Parameters Type Name Description Double target Returns Type Description Boolean"
  },
  "api/Mapsui.Extensions.EnumerableLayerExtensions.html": {
    "href": "api/Mapsui.Extensions.EnumerableLayerExtensions.html",
    "title": "Class EnumerableLayerExtensions",
    "keywords": "Class EnumerableLayerExtensions Inheritance Object EnumerableLayerExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class EnumerableLayerExtensions : object Methods | Improve this Doc View Source WaitForLoadingAsync(IEnumerable<ILayer>) Wait for Loading Async Declaration public static async Task<bool> WaitForLoadingAsync(this IEnumerable<ILayer> layers) Parameters Type Name Description IEnumerable < ILayer > layers layers to wait for Returns Type Description Task < Boolean > true if it has waited false otherwise"
  },
  "api/Mapsui.Extensions.FeatureExtensions.html": {
    "href": "api/Mapsui.Extensions.FeatureExtensions.html",
    "title": "Class FeatureExtensions",
    "keywords": "Class FeatureExtensions Inheritance Object FeatureExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class FeatureExtensions : object Methods | Improve this Doc View Source Copy(IEnumerable<IFeature>) Declaration public static IEnumerable<IFeature> Copy(this IEnumerable<IFeature> original) Parameters Type Name Description IEnumerable < IFeature > original Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source Copy(IFeature) Declaration public static IFeature Copy(this IFeature original) Parameters Type Name Description IFeature original Returns Type Description IFeature | Improve this Doc View Source Copy<T>(T) Declaration public static T Copy<T>(this T original) where T : IFeature Parameters Type Name Description T original Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetExtent(IEnumerable<IFeature>) Declaration public static MRect GetExtent(this IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Returns Type Description MRect | Improve this Doc View Source Project(IEnumerable<IFeature>, Nullable<String>, Nullable<String>, IProjection) Declaration public static IEnumerable<IFeature> Project(this IEnumerable<IFeature> features, string? fromCRS, string? toCRS, IProjection projection = null) Parameters Type Name Description IEnumerable < IFeature > features Nullable < String > fromCRS Nullable < String > toCRS IProjection projection Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source ToDisplayText(IEnumerable<KeyValuePair<String, IEnumerable<IFeature>>>) Declaration public static string ToDisplayText(this IEnumerable<KeyValuePair<string, IEnumerable<IFeature>>> featureInfos) Parameters Type Name Description IEnumerable < KeyValuePair < String , IEnumerable < IFeature >>> featureInfos Returns Type Description String | Improve this Doc View Source ToDisplayText(IFeature) Declaration public static string ToDisplayText(this IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description String"
  },
  "api/Mapsui.Extensions.FetchInfoExtensions.html": {
    "href": "api/Mapsui.Extensions.FetchInfoExtensions.html",
    "title": "Class FetchInfoExtensions",
    "keywords": "Class FetchInfoExtensions Inheritance Object FetchInfoExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class FetchInfoExtensions : object Methods | Improve this Doc View Source ToViewport(FetchInfo) Declaration public static Viewport ToViewport(this FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Viewport"
  },
  "api/Mapsui.Extensions.html": {
    "href": "api/Mapsui.Extensions.html",
    "title": "Namespace Mapsui.Extensions",
    "keywords": "Namespace Mapsui.Extensions Classes AssemblyExtensions ByteArrayExtensions Byte Array Extensions CacheExtensions Catch ConcurrentQueueExtensions DoubleExtensions EnumerableLayerExtensions FeatureExtensions FetchInfoExtensions LayerExtensions MapControlExtensions Map Control Extensions MPointExtensions StreamExtensions TupleExtensions TypeExtensions"
  },
  "api/Mapsui.Extensions.LayerExtensions.html": {
    "href": "api/Mapsui.Extensions.LayerExtensions.html",
    "title": "Class LayerExtensions",
    "keywords": "Class LayerExtensions Inheritance Object LayerExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class LayerExtensions : object Methods | Improve this Doc View Source WaitForLoadingAsync(ILayer) Wait for Loading Async Declaration public static async Task<bool> WaitForLoadingAsync(this ILayer layer) Parameters Type Name Description ILayer layer layer to wait for Returns Type Description Task < Boolean > true if it has waited false otherwise"
  },
  "api/Mapsui.Extensions.MapControlExtensions.html": {
    "href": "api/Mapsui.Extensions.MapControlExtensions.html",
    "title": "Class MapControlExtensions",
    "keywords": "Class MapControlExtensions Map Control Extensions Inheritance Object MapControlExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class MapControlExtensions : object Methods | Improve this Doc View Source WaitForLoadingAsync(IMapControl) Wait for Loading Async Declaration public static async Task WaitForLoadingAsync(this IMapControl mapControl) Parameters Type Name Description IMapControl mapControl map control Returns Type Description Task Task for Waiting for Layers"
  },
  "api/Mapsui.Extensions.MPointExtensions.html": {
    "href": "api/Mapsui.Extensions.MPointExtensions.html",
    "title": "Class MPointExtensions",
    "keywords": "Class MPointExtensions Inheritance Object MPointExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class MPointExtensions : object Methods | Improve this Doc View Source ToFeatures(IEnumerable<MPoint>) Declaration public static IEnumerable<PointFeature> ToFeatures(this IEnumerable<MPoint> points) Parameters Type Name Description IEnumerable < MPoint > points Returns Type Description IEnumerable < PointFeature >"
  },
  "api/Mapsui.Extensions.Projections.DotSpatialProjection.html": {
    "href": "api/Mapsui.Extensions.Projections.DotSpatialProjection.html",
    "title": "Class DotSpatialProjection",
    "keywords": "Class DotSpatialProjection Inheritance Object DotSpatialProjection Implements IProjection IProjectionCrs Namespace : Mapsui.Extensions.Projections Assembly : Mapsui.Extensions.dll Syntax public class DotSpatialProjection : object, IProjection, IProjectionCrs Methods | Improve this Doc View Source CrsFromEsri(String) Declaration public string? CrsFromEsri(string esriString) Parameters Type Name Description String esriString Returns Type Description Nullable < String > | Improve this Doc View Source GetIdFromCrs(Nullable<String>) Declaration public int? GetIdFromCrs(string? crs) Parameters Type Name Description Nullable < String > crs Returns Type Description Nullable < Int32 > | Improve this Doc View Source GetTransformation(Nullable<Int32>, Nullable<Int32>) Declaration public static (ProjectionInfo From, ProjectionInfo To)? GetTransformation(int? fromId, int? toId) Parameters Type Name Description Nullable < Int32 > fromId Nullable < Int32 > toId Returns Type Description Nullable < (, ) < ProjectionInfo , ProjectionInfo >> | Improve this Doc View Source Init() Declaration public static void Init() | Improve this Doc View Source IsProjectionSupported(Nullable<String>, Nullable<String>) Declaration public bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description Nullable < String > fromCRS Nullable < String > toCRS Returns Type Description Boolean | Improve this Doc View Source Project(String, String, IEnumerable<IFeature>) Declaration public void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description String fromCRS String toCRS IEnumerable < IFeature > features | Improve this Doc View Source Project(String, String, IFeature) Declaration public void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description String fromCRS String toCRS IFeature feature | Improve this Doc View Source Project(String, String, MPoint) Declaration public void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description String fromCRS String toCRS MPoint point | Improve this Doc View Source Project(String, String, MRect) Declaration public void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description String fromCRS String toCRS MRect rect | Improve this Doc View Source Project(String, String, Double, Double) Declaration public (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description String fromCRS String toCRS Double x Double y Returns Type Description (, ) < Double , Double > Implements IProjection IProjectionCrs"
  },
  "api/Mapsui.Extensions.Projections.html": {
    "href": "api/Mapsui.Extensions.Projections.html",
    "title": "Namespace Mapsui.Extensions.Projections",
    "keywords": "Namespace Mapsui.Extensions.Projections Classes DotSpatialProjection"
  },
  "api/Mapsui.Extensions.Provider.GeoTiffProvider.html": {
    "href": "api/Mapsui.Extensions.Provider.GeoTiffProvider.html",
    "title": "Class GeoTiffProvider",
    "keywords": "Class GeoTiffProvider Inheritance Object GeoTiffProvider Implements IProvider IDisposable Namespace : Mapsui.Extensions.Provider Assembly : Mapsui.Extensions.dll Syntax public class GeoTiffProvider : object, IProvider Constructors | Improve this Doc View Source GeoTiffProvider(String, Nullable<List<Color>>) Declaration public GeoTiffProvider(string tiffPath, List<Color>? noDataColors = null) Parameters Type Name Description String tiffPath Nullable < List < Color >> noDataColors Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source ConvertTiffToSKBitmap(MemoryStream) Declaration public static SKBitmap ConvertTiffToSKBitmap(MemoryStream tifImage) Parameters Type Name Description MemoryStream tifImage Returns Type Description SKBitmap | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> | Improve this Doc View Source IsCrsSupported(Nullable<String>) Declaration public bool? IsCrsSupported(string? crs) Parameters Type Name Description Nullable < String > crs Returns Type Description Nullable < Boolean > Implements IProvider IDisposable"
  },
  "api/Mapsui.Extensions.Provider.html": {
    "href": "api/Mapsui.Extensions.Provider.html",
    "title": "Namespace Mapsui.Extensions.Provider",
    "keywords": "Namespace Mapsui.Extensions.Provider Classes GeoTiffProvider"
  },
  "api/Mapsui.Extensions.StreamExtensions.html": {
    "href": "api/Mapsui.Extensions.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance Object StreamExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class StreamExtensions : object Methods | Improve this Doc View Source IsSvg(Stream) Detects if stream is svg stream Declaration public static bool IsSvg(this Stream stream) Parameters Type Name Description Stream stream stream Returns Type Description Boolean true if is svg stream | Improve this Doc View Source IsXml(Stream) Is Xml Declaration public static bool IsXml(this Stream stream) Parameters Type Name Description Stream stream stream Returns Type Description Boolean true if is xml | Improve this Doc View Source ReadOneSearch(Stream, Byte[]) https://stackoverflow.com/questions/1471975/best-way-to-find-position-in-the-stream-where-given-byte-sequence-starts Declaration public static long ReadOneSearch(this Stream haystack, byte[] needle) Parameters Type Name Description Stream haystack stream to search Byte [] needle pattern to find Returns Type Description Int64 position | Improve this Doc View Source ReadOneSearch(Stream, String) Declaration public static long ReadOneSearch(this Stream haystack, string needle) Parameters Type Name Description Stream haystack String needle Returns Type Description Int64 | Improve this Doc View Source ToBytes(Stream) Declaration public static byte[] ToBytes(this Stream input) Parameters Type Name Description Stream input Returns Type Description Byte []"
  },
  "api/Mapsui.Extensions.TupleExtensions.html": {
    "href": "api/Mapsui.Extensions.TupleExtensions.html",
    "title": "Class TupleExtensions",
    "keywords": "Class TupleExtensions Inheritance Object TupleExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class TupleExtensions : object Methods | Improve this Doc View Source ToMPoint((Double x, Double y)) Declaration public static MPoint ToMPoint(this (double x, double y) coordinate) Parameters Type Name Description (, ) < Double , Double > coordinate Returns Type Description MPoint"
  },
  "api/Mapsui.Extensions.TypeExtensions.html": {
    "href": "api/Mapsui.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Namespace : Mapsui.Extensions Assembly : Mapsui.dll Syntax public static class TypeExtensions : object Methods | Improve this Doc View Source LoadBitmapId(Type, String) Declaration public static int LoadBitmapId(this Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description Type typeInAssemblyOfEmbeddedResource String relativePathToEmbeddedResource Returns Type Description Int32"
  },
  "api/Mapsui.Fetcher.DataChangedEventArgs.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventArgs.html",
    "title": "Class DataChangedEventArgs",
    "keywords": "Class DataChangedEventArgs Inheritance Object DataChangedEventArgs Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class DataChangedEventArgs : EventArgs Constructors | Improve this Doc View Source DataChangedEventArgs() Declaration public DataChangedEventArgs() | Improve this Doc View Source DataChangedEventArgs(Nullable<Exception>, Boolean, Nullable<Object>) Declaration public DataChangedEventArgs(Exception? error, bool cancelled, object? info) Parameters Type Name Description Nullable < Exception > error Boolean cancelled Nullable < Object > info | Improve this Doc View Source DataChangedEventArgs(Nullable<Exception>, Boolean, Nullable<Object>, String) Declaration public DataChangedEventArgs(Exception? error, bool cancelled, object? info, string layerName) Parameters Type Name Description Nullable < Exception > error Boolean cancelled Nullable < Object > info String layerName Properties | Improve this Doc View Source Cancelled Declaration public bool Cancelled { get; } Property Value Type Description Boolean | Improve this Doc View Source Error Declaration public Exception? Error { get; } Property Value Type Description Nullable < Exception > | Improve this Doc View Source Info Declaration public object? Info { get; } Property Value Type Description Nullable < Object > | Improve this Doc View Source LayerName Declaration public string LayerName { get; } Property Value Type Description String"
  },
  "api/Mapsui.Fetcher.DataChangedEventHandler.html": {
    "href": "api/Mapsui.Fetcher.DataChangedEventHandler.html",
    "title": "Delegate DataChangedEventHandler",
    "keywords": "Delegate DataChangedEventHandler Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public delegate void DataChangedEventHandler(object sender, DataChangedEventArgs e); Parameters Type Name Description Object sender DataChangedEventArgs e"
  },
  "api/Mapsui.Fetcher.Delayer.html": {
    "href": "api/Mapsui.Fetcher.Delayer.html",
    "title": "Class Delayer",
    "keywords": "Class Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. Inheritance Object Delayer Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class Delayer : IDisposable Constructors | Improve this Doc View Source Delayer() Declaration public Delayer() Properties | Improve this Doc View Source MillisecondsToWait The delay between two calls. Declaration public int MillisecondsToWait { get; set; } Property Value Type Description Int32 | Improve this Doc View Source StartWithDelay Declaration public bool StartWithDelay { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ExecuteDelayed(Action) Executes the method passed as argument with a possible delay. After a previous call the next call is delayed until 'MillisecondsToWait' has passed. When ExecuteRequest is called before the previous delayed action was executed the previous one will be cancelled. Declaration public void ExecuteDelayed(Action action) Parameters Type Name Description Action action The action to be executed after the possible delay Remarks When the previous call was more than 'MillisecondsToWait' ago there will be no delay."
  },
  "api/Mapsui.Fetcher.FetchMachine.html": {
    "href": "api/Mapsui.Fetcher.FetchMachine.html",
    "title": "Class FetchMachine",
    "keywords": "Class FetchMachine Inheritance Object FetchMachine Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchMachine : object Constructors | Improve this Doc View Source FetchMachine(IFetchDispatcher, Int32) Declaration public FetchMachine(IFetchDispatcher fetchDispatcher, int numberOfWorkers = 4) Parameters Type Name Description IFetchDispatcher fetchDispatcher Int32 numberOfWorkers Methods | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop()"
  },
  "api/Mapsui.Fetcher.FetchWorker.html": {
    "href": "api/Mapsui.Fetcher.FetchWorker.html",
    "title": "Class FetchWorker",
    "keywords": "Class FetchWorker Inheritance Object FetchWorker Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public class FetchWorker : IDisposable Constructors | Improve this Doc View Source FetchWorker(IFetchDispatcher) Declaration public FetchWorker(IFetchDispatcher fetchDispatcher) Parameters Type Name Description IFetchDispatcher fetchDispatcher Fields | Improve this Doc View Source RestartCounter Declaration public static long RestartCounter Field Value Type Description Int64 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop()"
  },
  "api/Mapsui.Fetcher.html": {
    "href": "api/Mapsui.Fetcher.html",
    "title": "Namespace Mapsui.Fetcher",
    "keywords": "Namespace Mapsui.Fetcher Classes DataChangedEventArgs Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. FetchMachine FetchWorker Interfaces IAsyncDataFetcher IFetchDispatcher Delegates DataChangedEventHandler"
  },
  "api/Mapsui.Fetcher.IAsyncDataFetcher.html": {
    "href": "api/Mapsui.Fetcher.IAsyncDataFetcher.html",
    "title": "Interface IAsyncDataFetcher",
    "keywords": "Interface IAsyncDataFetcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IAsyncDataFetcher Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration void ClearCache() | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo"
  },
  "api/Mapsui.Fetcher.IFetchDispatcher.html": {
    "href": "api/Mapsui.Fetcher.IFetchDispatcher.html",
    "title": "Interface IFetchDispatcher",
    "keywords": "Interface IFetchDispatcher Namespace : Mapsui.Fetcher Assembly : Mapsui.dll Syntax public interface IFetchDispatcher Methods | Improve this Doc View Source TryTake(out Nullable<Func<Task>>) Declaration bool TryTake(out Func<Task>? method) Parameters Type Name Description Nullable < Func < Task >> method Returns Type Description Boolean Events | Improve this Doc View Source PropertyChanged Declaration event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.html": {
    "href": "api/Mapsui.html",
    "title": "Namespace Mapsui",
    "keywords": "Namespace Mapsui Classes LimitedViewport Map Map class MPoint MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. MRaster MReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. MRect Navigator Viewport Viewport holds all information about the visible part of the map. Interfaces IFeature IMap INavigator IReadOnlyViewport IViewport Enums ChangeType Delegates CoordinateSetter"
  },
  "api/Mapsui.IFeature.html": {
    "href": "api/Mapsui.IFeature.html",
    "title": "Interface IFeature",
    "keywords": "Interface IFeature Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IFeature Properties | Improve this Doc View Source Extent Declaration MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Fields Declaration IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Item[String] Declaration object? this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description Nullable < Object > | Improve this Doc View Source RenderedGeometry Declaration IDictionary<IStyle, object> RenderedGeometry { get; } Property Value Type Description IDictionary < IStyle , Object > | Improve this Doc View Source Styles Declaration ICollection<IStyle> Styles { get; } Property Value Type Description ICollection < IStyle > Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action < Double , Double , CoordinateSetter > visit Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.IMap.html": {
    "href": "api/Mapsui.IMap.html",
    "title": "Interface IMap",
    "keywords": "Interface IMap Inherited Members IAnimatable.UpdateAnimations() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IMap : IAnimatable Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Extent Gets the extent of the map based on the extent of all the layers in the layers collection Declaration MRect Extent { get; } Property Value Type Description MRect Full map extent | Improve this Doc View Source Home Declaration Action<INavigator> Home { get; set; } Property Value Type Description Action < INavigator > | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < Double > | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration ConcurrentQueue<IWidget> Widgets { get; } Property Value Type Description ConcurrentQueue < IWidget > Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration void ClearCache() | Improve this Doc View Source RefreshData(FetchInfo) Declaration void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.INavigator.html": {
    "href": "api/Mapsui.INavigator.html",
    "title": "Interface INavigator",
    "keywords": "Interface INavigator Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface INavigator Properties | Improve this Doc View Source Navigated Called each time one of the navigation methods is called Declaration EventHandler<ChangeType>? Navigated { get; set; } Property Value Type Description Nullable < EventHandler < ChangeType >> Methods | Improve this Doc View Source CenterOn(MPoint, Int64, Easing) Change center of viewport Declaration void CenterOn(MPoint center, long duration = null, Easing easing = null) Parameters Type Name Description MPoint center New center point of viewport Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source CenterOn(Double, Double, Int64, Easing) Change center of viewport to X/Y coordinates Declaration void CenterOn(double x, double y, long duration = null, Easing easing = null) Parameters Type Name Description Double x X value of the new center Double y Y value of the new center Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source FlingWith(Double, Double, Int64) Animate Fling of viewport Declaration void FlingWith(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description Double velocityX Screen VelocityX from SwipedEventArgs> Double velocityY Screen VelocityX from SwipedEventArgs> Int64 maxDuration Max duration of fling deceleration, changes based on total velocity> | Improve this Doc View Source FlyTo(MPoint, Double, Int64) Declaration void FlyTo(MPoint center, double maxResolution, long duration = null) Parameters Type Name Description MPoint center Double maxResolution Int64 duration | Improve this Doc View Source NavigateTo(MPoint, Double, Int64, Easing) Change both center and resolution of the viewport Declaration void NavigateTo(MPoint center, double resolution, long duration = null, Easing easing = null) Parameters Type Name Description MPoint center The new center Double resolution The new resolution Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateTo(MRect, ScaleMethod, Int64, Easing) Navigate center of viewport to center of extent and change resolution Declaration void NavigateTo(MRect extent, ScaleMethod scaleMethod = ScaleMethod.Fit, long duration = null, Easing easing = null) Parameters Type Name Description MRect extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determine the resolution Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod, Int64, Easing) Navigate to a resolution, so such the map uses the fill method Declaration void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill, long duration = null, Easing easing = null) Parameters Type Name Description ScaleMethod scaleMethod Int64 duration Duration of animation in millisecondsScale method to use to determine resolution Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source RotateTo(Double, Int64, Easing) Change rotation of viewport Declaration void RotateTo(double rotation, long duration = null, Easing easing = null) Parameters Type Name Description Double rotation New rotation in degrees of viewport> Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(MPoint, Int64, Easing) Zoom in about a given point Declaration void ZoomIn(MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center to use for zoom in Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(Int64, Easing) Zoom in to the next resolution Declaration void ZoomIn(long duration = null, Easing easing = null) Parameters Type Name Description Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(MPoint, Int64, Easing) Zoom out about a given point Declaration void ZoomOut(MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center to use for zoom in Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(Int64, Easing) Zoom out to the next resolution Declaration void ZoomOut(long duration = null, Easing easing = null) Parameters Type Name Description Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, MPoint, Int64, Easing) Change resolution of viewport about the centerOfZoom Declaration void ZoomTo(double resolution, MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution New resolution to use MPoint centerOfZoom screen center point to zoom at Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, Int64, Easing) Change resolution of viewport Declaration void ZoomTo(double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution New resolution to use Int64 duration Duration of animation in milliseconds Easing easing The type of easing function used to transform from begin tot end state"
  },
  "api/Mapsui.IReadOnlyViewport.html": {
    "href": "api/Mapsui.IReadOnlyViewport.html",
    "title": "Interface IReadOnlyViewport",
    "keywords": "Interface IReadOnlyViewport Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IReadOnlyViewport Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration double CenterX { get; } Property Value Type Description Double | Improve this Doc View Source CenterY Declaration double CenterY { get; } Property Value Type Description Double | Improve this Doc View Source Extent MRect of viewport in map coordinates respecting Rotation Declaration MRect Extent { get; } Property Value Type Description MRect Remarks This MRect is horizontally and vertically aligned, even if the viewport is rotated. So this MRect perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration bool HasSize { get; } Property Value Type Description Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration double Height { get; } Property Value Type Description Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration bool IsRotated { get; } Property Value Type Description Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration double Resolution { get; } Property Value Type Description Double Remarks The Resolution in Mapsui is what is often called zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration double Rotation { get; } Property Value Type Description Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source ScreenToWorld(MPoint) Converts a point in screen pixels to one in map units, respecting rotation Declaration MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Coordinate in map units Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration MPoint ScreenToWorld(double x, double y) Parameters Type Name Description Double x Screen position x coordinate Double y Screen position y coordinate Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorldXY(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration (double worldX, double worldY) ScreenToWorldXY(double x, double y) Parameters Type Name Description Double x Screen position x coordinate Double y Screen position y coordinate Returns Type Description (, ) < Double , Double > Tuple of x and y in world coordintes | Improve this Doc View Source WorldToScreen(MPoint) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description (, ) < Double , Double > The x and y in screen pixels | Improve this Doc View Source WorldToScreenXY(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description (, ) < Double , Double > Tuple of x and y in screen coordinates Events | Improve this Doc View Source ViewportChanged Declaration event PropertyChangedEventHandler ViewportChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "api/Mapsui.IViewport.html": {
    "href": "api/Mapsui.IViewport.html",
    "title": "Interface IViewport",
    "keywords": "Interface IViewport Inherited Members IReadOnlyViewport.ViewportChanged IReadOnlyViewport.Center IReadOnlyViewport.CenterX IReadOnlyViewport.CenterY IReadOnlyViewport.Resolution IReadOnlyViewport.Extent IReadOnlyViewport.Width IReadOnlyViewport.Height IReadOnlyViewport.Rotation IReadOnlyViewport.HasSize IReadOnlyViewport.IsRotated IReadOnlyViewport.ScreenToWorld(MPoint) IReadOnlyViewport.ScreenToWorld(Double, Double) IReadOnlyViewport.ScreenToWorldXY(Double, Double) IReadOnlyViewport.WorldToScreen(MPoint) IReadOnlyViewport.WorldToScreen(Double, Double) IReadOnlyViewport.WorldToScreenXY(Double, Double) IReadOnlyViewport.WorldToScreenUnrotated(Double, Double) IAnimatable.UpdateAnimations() Namespace : Mapsui Assembly : Mapsui.dll Syntax public interface IViewport : IReadOnlyViewport, IAnimatable Methods | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration void SetCenter(MReadOnlyPoint center, long duration = null, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration void SetCenter(double x, double y, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration void SetCenterAndResolution(double x, double y, double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Double resolution Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration void SetResolution(double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration void SetRotation(double rotation, long duration = null, Easing easing = null) Parameters Type Name Description Double rotation Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration void SetSize(double width, double height) Parameters Type Name Description Double width Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Moving the position of viewport to a new one Declaration void Transform(MPoint position, MPoint previousPosition, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description MPoint position Current center of touch MPoint previousPosition Previous center of touch Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) Double deltaRotation Change of rotation Extension Methods ViewportExtensions.ToSKMatrix(IViewport)"
  },
  "api/Mapsui.Layers.AnimatedLayers.AnimatedFeatures.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.AnimatedFeatures.html",
    "title": "Class AnimatedFeatures",
    "keywords": "Class AnimatedFeatures Inheritance Object AnimatedFeatures Implements IAnimatable Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public class AnimatedFeatures : object, IAnimatable Constructors | Improve this Doc View Source AnimatedFeatures() Declaration public AnimatedFeatures() Properties | Improve this Doc View Source AnimationDuration Declaration public int AnimationDuration { get; set; } Property Value Type Description Int32 | Improve this Doc View Source DistanceThreshold When the distance between the current and the previous position is larger than the DistanceThreshold it will not be animated. The default is Double.MaxValue Declaration public double DistanceThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source Function Declaration public EasingFunction Function { get; set; } Property Value Type Description EasingFunction | Improve this Doc View Source IdField Declaration public string IdField { get; set; } Property Value Type Description String Methods | Improve this Doc View Source AddFeatures(IEnumerable<PointFeature>) Declaration public void AddFeatures(IEnumerable<PointFeature> features) Parameters Type Name Description IEnumerable < PointFeature > features | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description Boolean Implements IAnimatable"
  },
  "api/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html",
    "title": "Class AnimatedPointLayer",
    "keywords": "Class AnimatedPointLayer Inheritance Object BaseLayer AnimatedPointLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource < IProvider > Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public class AnimatedPointLayer : BaseLayer, ILayer, IAnimatable, IAsyncDataFetcher, ILayerDataSource<IProvider> Constructors | Improve this Doc View Source AnimatedPointLayer(IProvider) Declaration public AnimatedPointLayer(IProvider dataSource) Parameters Type Name Description IProvider dataSource Properties | Improve this Doc View Source DataSource Declaration public IProvider DataSource { get; } Property Value Type Description IProvider | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description Boolean Overrides BaseLayer.UpdateAnimations() | Improve this Doc View Source UpdateDataAsync() Declaration public async Task UpdateDataAsync() Returns Type Description Task Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource<T>"
  },
  "api/Mapsui.Layers.AnimatedLayers.EasingFunction.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.EasingFunction.html",
    "title": "Enum EasingFunction",
    "keywords": "Enum EasingFunction Namespace : Mapsui.Layers.AnimatedLayers Assembly : Mapsui.dll Syntax public enum EasingFunction : int Fields Name Description CubicEaseOut Linear"
  },
  "api/Mapsui.Layers.AnimatedLayers.html": {
    "href": "api/Mapsui.Layers.AnimatedLayers.html",
    "title": "Namespace Mapsui.Layers.AnimatedLayers",
    "keywords": "Namespace Mapsui.Layers.AnimatedLayers Classes AnimatedFeatures AnimatedPointLayer Enums EasingFunction"
  },
  "api/Mapsui.Layers.BaseFeature.html": {
    "href": "api/Mapsui.Layers.BaseFeature.html",
    "title": "Class BaseFeature",
    "keywords": "Class BaseFeature Inheritance Object BaseFeature PointFeature RasterFeature RectFeature GeometryFeature Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public abstract class BaseFeature : IDisposable Constructors | Improve this Doc View Source BaseFeature() Declaration public BaseFeature() | Improve this Doc View Source BaseFeature(BaseFeature) Declaration public BaseFeature(BaseFeature baseFeature) Parameters Type Name Description BaseFeature baseFeature Properties | Improve this Doc View Source Fields Declaration public IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Item[String] Declaration public virtual object? this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description Nullable < Object > | Improve this Doc View Source RenderedGeometry Declaration public IDictionary<IStyle, object> RenderedGeometry { get; set; } Property Value Type Description IDictionary < IStyle , Object > | Improve this Doc View Source Styles Declaration public ICollection<IStyle> Styles { get; set; } Property Value Type Description ICollection < IStyle > Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose()"
  },
  "api/Mapsui.Layers.BaseLayer.html": {
    "href": "api/Mapsui.Layers.BaseLayer.html",
    "title": "Class BaseLayer",
    "keywords": "Class BaseLayer Inheritance Object BaseLayer AnimatedPointLayer GenericCollectionLayer<T> ImageLayer Layer MemoryLayer RasterizingLayer WritableLayer TileLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public abstract class BaseLayer : object, ILayer, IAnimatable Constructors | Improve this Doc View Source BaseLayer() Creates a BaseLayer without a name Declaration protected BaseLayer() | Improve this Doc View Source BaseLayer(String) Creates a BaseLayer with a name Declaration protected BaseLayer(string name) Parameters Type Name Description String name Name for this layer Properties | Improve this Doc View Source Attribution Attribution for layer Declaration public Hyperlink Attribution { get; set; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration public bool Busy { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Extent Returns the envelope of all available data in the layer Declaration public virtual MRect Extent { get; protected set; } Property Value Type Description MRect | Improve this Doc View Source Id Numerical Id of layer Declaration public int Id { get; } Property Value Type Description Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration public bool IsMapInfoLayer { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Name Name of layer Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Opacity Opacity of layer Declaration public double Opacity { get; set; } Property Value Type Description Double | Improve this Doc View Source Resolutions List of native resolutions Declaration public virtual IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration public IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration public object? Tag { get; set; } Property Value Type Description Nullable < Object > Methods | Improve this Doc View Source DataHasChanged() Declaration public void DataHasChanged() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration public abstract IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetLayerStyles(ILayer) Get a layer's styles Declaration public static IEnumerable<IStyle> GetLayerStyles(ILayer layer) Parameters Type Name Description ILayer layer Layer, for which styles should be returned Returns Type Description IEnumerable < IStyle > Enumerable with styles belonging to layer | Improve this Doc View Source OnDataChanged(DataChangedEventArgs) Declaration protected void OnDataChanged(DataChangedEventArgs args) Parameters Type Name Description DataChangedEventArgs args | Improve this Doc View Source OnPropertyChanged(String) Declaration protected virtual void OnPropertyChanged(string name) Parameters Type Name Description String name | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String | Improve this Doc View Source UpdateAnimations() Declaration public virtual bool UpdateAnimations() Returns Type Description Boolean Events | Improve this Doc View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > Implements ILayer IAnimatable INotifyPropertyChanged IDisposable"
  },
  "api/Mapsui.Layers.FetchInfo.html": {
    "href": "api/Mapsui.Layers.FetchInfo.html",
    "title": "Class FetchInfo",
    "keywords": "Class FetchInfo Inheritance Object FetchInfo Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class FetchInfo : object Constructors | Improve this Doc View Source FetchInfo(FetchInfo) Declaration public FetchInfo(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source FetchInfo(MRect, Double, Nullable<String>, ChangeType) Declaration public FetchInfo(MRect extent, double resolution, string? crs = null, ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description MRect extent Double resolution Nullable < String > crs ChangeType changeType Properties | Improve this Doc View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Improve this Doc View Source CRS Declaration public string? CRS { get; } Property Value Type Description Nullable < String > | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Resolution Declaration public double Resolution { get; } Property Value Type Description Double Extension Methods FetchInfoExtensions.ToViewport(FetchInfo)"
  },
  "api/Mapsui.Layers.GenericCollectionLayer-1.html": {
    "href": "api/Mapsui.Layers.GenericCollectionLayer-1.html",
    "title": "Class GenericCollectionLayer<T>",
    "keywords": "Class GenericCollectionLayer<T> Inheritance Object BaseLayer GenericCollectionLayer<T> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class GenericCollectionLayer<T> : BaseLayer, ILayer, IAnimatable where T : IEnumerable<IFeature>, new() Type Parameters Name Description T Constructors | Improve this Doc View Source GenericCollectionLayer() Declaration public GenericCollectionLayer() Properties | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Improve this Doc View Source Features Declaration public T Features { get; set; } Property Value Type Description T Methods | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect rect, double resolution) Parameters Type Name Description MRect rect Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) Implements ILayer IAnimatable INotifyPropertyChanged IDisposable"
  },
  "api/Mapsui.Layers.html": {
    "href": "api/Mapsui.Layers.html",
    "title": "Namespace Mapsui.Layers",
    "keywords": "Namespace Mapsui.Layers Classes BaseFeature BaseLayer FetchInfo GenericCollectionLayer<T> ImageLayer Layer LayerCollection LayerCollectionChangedEventArgs MemoryLayer The MemoryLayer has all features in memory. PointFeature RasterFeature RasterizingLayer RectFeature WritableLayer Interfaces IDynamic IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. ILayer Interface for map layers ILayerDataSource<T> ISourceLayer Delegates LayerCollection.LayerAddedEventHandler LayerCollection.LayerCollectionChangedEventHandler LayerCollection.LayerMovedEventHandler LayerCollection.LayerRemovedEventHandler"
  },
  "api/Mapsui.Layers.IDynamic.html": {
    "href": "api/Mapsui.Layers.IDynamic.html",
    "title": "Interface IDynamic",
    "keywords": "Interface IDynamic Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface IDynamic Methods | Improve this Doc View Source DataHasChanged() To indicate the data withing the class has changed. This triggers a DataChanged event. This is necessary for situations where the class itself can not know about changes to it's data. Declaration void DataHasChanged() Events | Improve this Doc View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler"
  },
  "api/Mapsui.Layers.IFeatureInfo.html": {
    "href": "api/Mapsui.Layers.IFeatureInfo.html",
    "title": "Interface IFeatureInfo",
    "keywords": "Interface IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface IFeatureInfo Methods | Improve this Doc View Source GetFeatureInfo(IReadOnlyViewport, Double, Double, Action<IDictionary<String, IEnumerable<IFeature>>>) Declaration void GetFeatureInfo(IReadOnlyViewport viewport, double x, double y, Action<IDictionary<string, IEnumerable<IFeature>>> callback) Parameters Type Name Description IReadOnlyViewport viewport Double x Double y Action < IDictionary < String , IEnumerable < IFeature >>> callback"
  },
  "api/Mapsui.Layers.ILayer.html": {
    "href": "api/Mapsui.Layers.ILayer.html",
    "title": "Interface ILayer",
    "keywords": "Interface ILayer Interface for map layers Inherited Members IAnimatable.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface ILayer : IAnimatable Properties | Improve this Doc View Source Attribution Attribution for layer Declaration Hyperlink Attribution { get; } Property Value Type Description Hyperlink | Improve this Doc View Source Busy Flag, if layer is busy Declaration bool Busy { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Extent Gets the MRect of the entire layer. Can be null if there are no features in the layer. Declaration MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Id Numerical Id of layer Declaration int Id { get; } Property Value Type Description Int32 | Improve this Doc View Source IsMapInfoLayer Indicates if the layer should be taken into account for the GetMapInfo request Declaration bool IsMapInfoLayer { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration double MaxVisible { get; } Property Value Type Description Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration double MinVisible { get; } Property Value Type Description Double | Improve this Doc View Source Name Name of layer Declaration string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Opacity Opacity of layer Declaration double Opacity { get; set; } Property Value Type Description Double | Improve this Doc View Source Resolutions List of native resolutions Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < Double > | Improve this Doc View Source Style Gets or sets rendering style of layer Declaration IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration object? Tag { get; set; } Property Value Type Description Nullable < Object > Methods | Improve this Doc View Source DataHasChanged() To indicate the data withing the layer has changed. This triggers a DataChanged event. This is necessary for situations where the layer can not know about changes to it's data as in the case of editing of a geometry. Declaration void DataHasChanged() | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > Events | Improve this Doc View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer)"
  },
  "api/Mapsui.Layers.ILayerDataSource-1.html": {
    "href": "api/Mapsui.Layers.ILayerDataSource-1.html",
    "title": "Interface ILayerDataSource<T>",
    "keywords": "Interface ILayerDataSource<T> Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface ILayerDataSource<out T> where T : IProvider Type Parameters Name Description T Properties | Improve this Doc View Source DataSource Declaration T DataSource { get; } Property Value Type Description T"
  },
  "api/Mapsui.Layers.ImageLayer.html": {
    "href": "api/Mapsui.Layers.ImageLayer.html",
    "title": "Class ImageLayer",
    "keywords": "Class ImageLayer Inheritance Object BaseLayer ImageLayer Implements ILayer IAnimatable INotifyPropertyChanged IAsyncDataFetcher ILayerDataSource < IProvider > IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Extent BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class ImageLayer : BaseLayer, ILayer, IAnimatable, IAsyncDataFetcher, ILayerDataSource<IProvider> Constructors | Improve this Doc View Source ImageLayer(String) Declaration public ImageLayer(string layerName) Parameters Type Name Description String layerName Properties | Improve this Doc View Source DataSource Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source FetchDelay Delay before fetching a new wms image from the server after the view has changed. Specified in milliseconds. Declaration public int FetchDelay { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides BaseLayer.Dispose(Boolean) | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Implements ILayer IAnimatable INotifyPropertyChanged IAsyncDataFetcher ILayerDataSource<T> IDisposable"
  },
  "api/Mapsui.Layers.ISourceLayer.html": {
    "href": "api/Mapsui.Layers.ISourceLayer.html",
    "title": "Interface ISourceLayer",
    "keywords": "Interface ISourceLayer Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public interface ISourceLayer Properties | Improve this Doc View Source SourceLayer Declaration ILayer SourceLayer { get; } Property Value Type Description ILayer"
  },
  "api/Mapsui.Layers.Layer.html": {
    "href": "api/Mapsui.Layers.Layer.html",
    "title": "Class Layer",
    "keywords": "Class Layer Inheritance Object BaseLayer Layer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource < IProvider > Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class Layer : BaseLayer, ILayer, IAnimatable, IAsyncDataFetcher, ILayerDataSource<IProvider> Constructors | Improve this Doc View Source Layer() Create a new layer Declaration public Layer() | Improve this Doc View Source Layer(String) Create layer with name Declaration public Layer(string layerName) Parameters Type Name Description String layerName Name to use for layer Properties | Improve this Doc View Source Animations Declaration public List<Func<bool>> Animations { get; } Property Value Type Description List < Func < Boolean >> | Improve this Doc View Source DataSource Data source for this layer Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source Delayer Declaration public Delayer Delayer { get; } Property Value Type Description Delayer | Improve this Doc View Source Extent Returns the extent of the layer Declaration public override MRect Extent { get; } Property Value Type Description MRect Bounding box corresponding to the extent of the features in the layer Overrides BaseLayer.Extent | Improve this Doc View Source FetchingPostponedInMilliseconds Time to wait before fetching data Declaration public int FetchingPostponedInMilliseconds { get; set; } Property Value Type Description Int32 | Improve this Doc View Source SymbolStyle Declaration public SymbolStyle SymbolStyle { get; set; } Property Value Type Description SymbolStyle Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Improve this Doc View Source GetFeatures(MRect, Double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Double resolution Resolution of viewport Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo | Improve this Doc View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description Boolean Overrides BaseLayer.UpdateAnimations() Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource<T>"
  },
  "api/Mapsui.Layers.LayerCollection.html": {
    "href": "api/Mapsui.Layers.LayerCollection.html",
    "title": "Class LayerCollection",
    "keywords": "Class LayerCollection Inheritance Object LayerCollection Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class LayerCollection : IEnumerable<ILayer> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public ILayer this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description ILayer Methods | Improve this Doc View Source Add(ILayer[]) Declaration public void Add(params ILayer[] layers) Parameters Type Name Description ILayer [] layers | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(ILayer) Declaration public bool Contains(ILayer item) Parameters Type Name Description ILayer item Returns Type Description Boolean | Improve this Doc View Source CopyTo(ILayer[], Int32) Declaration public void CopyTo(ILayer[] array, int arrayIndex) Parameters Type Name Description ILayer [] array Int32 arrayIndex | Improve this Doc View Source FindLayer(String) Declaration public IEnumerable<ILayer> FindLayer(string layername) Parameters Type Name Description String layername Returns Type Description IEnumerable < ILayer > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ILayer> GetEnumerator() Returns Type Description IEnumerator < ILayer > | Improve this Doc View Source Insert(Int32, ILayer[]) Declaration public void Insert(int index, params ILayer[] layers) Parameters Type Name Description Int32 index ILayer [] layers | Improve this Doc View Source Modify(Func<ILayer, Boolean>, IEnumerable<ILayer>) Declaration public void Modify(Func<ILayer, bool> removePredicate, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description Func < ILayer , Boolean > removePredicate IEnumerable < ILayer > layersToAdd | Improve this Doc View Source Modify(IEnumerable<ILayer>, IEnumerable<ILayer>) Declaration public void Modify(IEnumerable<ILayer> layersToRemove, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description IEnumerable < ILayer > layersToRemove IEnumerable < ILayer > layersToAdd | Improve this Doc View Source Move(Int32, ILayer) Declaration public void Move(int index, ILayer layer) Parameters Type Name Description Int32 index ILayer layer | Improve this Doc View Source Remove(Func<ILayer, Boolean>) Declaration public bool Remove(Func<ILayer, bool> predicate) Parameters Type Name Description Func < ILayer , Boolean > predicate Returns Type Description Boolean | Improve this Doc View Source Remove(ILayer[]) Declaration public bool Remove(params ILayer[] layers) Parameters Type Name Description ILayer [] layers Returns Type Description Boolean Events | Improve this Doc View Source Changed Declaration public event LayerCollection.LayerCollectionChangedEventHandler Changed Event Type Type Description LayerCollection.LayerCollectionChangedEventHandler | Improve this Doc View Source LayerAdded Declaration public event LayerCollection.LayerAddedEventHandler LayerAdded Event Type Type Description LayerCollection.LayerAddedEventHandler | Improve this Doc View Source LayerMoved Declaration public event LayerCollection.LayerMovedEventHandler LayerMoved Event Type Type Description LayerCollection.LayerMovedEventHandler | Improve this Doc View Source LayerRemoved Declaration public event LayerCollection.LayerRemovedEventHandler LayerRemoved Event Type Type Description LayerCollection.LayerRemovedEventHandler"
  },
  "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerAddedEventHandler.html",
    "title": "Delegate LayerCollection.LayerAddedEventHandler",
    "keywords": "Delegate LayerCollection.LayerAddedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerAddedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html",
    "title": "Delegate LayerCollection.LayerCollectionChangedEventHandler",
    "keywords": "Delegate LayerCollection.LayerCollectionChangedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerCollectionChangedEventHandler(object sender, LayerCollectionChangedEventArgs args); Parameters Type Name Description Object sender LayerCollectionChangedEventArgs args"
  },
  "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerMovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerMovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerMovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerMovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html": {
    "href": "api/Mapsui.Layers.LayerCollection.LayerRemovedEventHandler.html",
    "title": "Delegate LayerCollection.LayerRemovedEventHandler",
    "keywords": "Delegate LayerCollection.LayerRemovedEventHandler Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public delegate void LayerRemovedEventHandler(ILayer layer); Parameters Type Name Description ILayer layer"
  },
  "api/Mapsui.Layers.LayerCollectionChangedEventArgs.html": {
    "href": "api/Mapsui.Layers.LayerCollectionChangedEventArgs.html",
    "title": "Class LayerCollectionChangedEventArgs",
    "keywords": "Class LayerCollectionChangedEventArgs Inheritance Object LayerCollectionChangedEventArgs Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class LayerCollectionChangedEventArgs : EventArgs Constructors | Improve this Doc View Source LayerCollectionChangedEventArgs(Nullable<IEnumerable<ILayer>>, Nullable<IEnumerable<ILayer>>, Nullable<IEnumerable<ILayer>>) Declaration public LayerCollectionChangedEventArgs(IEnumerable<ILayer>? added = null, IEnumerable<ILayer>? removed = null, IEnumerable<ILayer>? moved = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> added Nullable < IEnumerable < ILayer >> removed Nullable < IEnumerable < ILayer >> moved Properties | Improve this Doc View Source AddedLayers Declaration public IEnumerable<ILayer>? AddedLayers { get; } Property Value Type Description Nullable < IEnumerable < ILayer >> | Improve this Doc View Source MovedLayers Declaration public IEnumerable<ILayer>? MovedLayers { get; } Property Value Type Description Nullable < IEnumerable < ILayer >> | Improve this Doc View Source RemovedLayers Declaration public IEnumerable<ILayer>? RemovedLayers { get; } Property Value Type Description Nullable < IEnumerable < ILayer >>"
  },
  "api/Mapsui.Layers.MemoryLayer.html": {
    "href": "api/Mapsui.Layers.MemoryLayer.html",
    "title": "Class MemoryLayer",
    "keywords": "Class MemoryLayer The MemoryLayer has all features in memory. Inheritance Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class MemoryLayer : BaseLayer, ILayer, IAnimatable Constructors | Improve this Doc View Source MemoryLayer() Create a new layer Declaration public MemoryLayer() | Improve this Doc View Source MemoryLayer(String) Create layer with name Declaration public MemoryLayer(string layerName) Parameters Type Name Description String layerName Name to use for layer Properties | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Improve this Doc View Source Features Declaration public IEnumerable<IFeature> Features { get; set; } Property Value Type Description IEnumerable < IFeature > Methods | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect rect, double resolution) Parameters Type Name Description MRect rect Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) Implements ILayer IAnimatable INotifyPropertyChanged IDisposable"
  },
  "api/Mapsui.Layers.PointFeature.html": {
    "href": "api/Mapsui.Layers.PointFeature.html",
    "title": "Class PointFeature",
    "keywords": "Class PointFeature Inheritance Object BaseFeature PointFeature Implements IFeature IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class PointFeature : BaseFeature, IFeature Constructors | Improve this Doc View Source PointFeature(PointFeature) Declaration public PointFeature(PointFeature pointFeature) Parameters Type Name Description PointFeature pointFeature | Improve this Doc View Source PointFeature(MPoint) Declaration public PointFeature(MPoint point) Parameters Type Name Description MPoint point | Improve this Doc View Source PointFeature(Double, Double) Declaration public PointFeature(double x, double y) Parameters Type Name Description Double x Double y Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Point Declaration public MPoint Point { get; } Property Value Type Description MPoint Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action < Double , Double , CoordinateSetter > visit Implements IFeature IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.RasterFeature.html": {
    "href": "api/Mapsui.Layers.RasterFeature.html",
    "title": "Class RasterFeature",
    "keywords": "Class RasterFeature Inheritance Object BaseFeature RasterFeature Implements IFeature IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RasterFeature : BaseFeature, IFeature Constructors | Improve this Doc View Source RasterFeature(RasterFeature) Declaration public RasterFeature(RasterFeature rasterFeature) Parameters Type Name Description RasterFeature rasterFeature | Improve this Doc View Source RasterFeature(MRaster) Declaration public RasterFeature(MRaster raster) Parameters Type Name Description MRaster raster Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Raster Declaration public MRaster Raster { get; } Property Value Type Description MRaster Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action < Double , Double , CoordinateSetter > visit Implements IFeature IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.RasterizingLayer.html": {
    "href": "api/Mapsui.Layers.RasterizingLayer.html",
    "title": "Class RasterizingLayer",
    "keywords": "Class RasterizingLayer Inheritance Object BaseLayer RasterizingLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ISourceLayer Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RasterizingLayer : BaseLayer, ILayer, IAnimatable, IAsyncDataFetcher, ISourceLayer Constructors | Improve this Doc View Source RasterizingLayer(ILayer, Int32, Double, IRenderer, Double, Boolean, Single) Creates a RasterizingLayer which rasterizes a layer for performance Declaration public RasterizingLayer(ILayer layer, int delayBeforeRasterize = 1000, double renderResolutionMultiplier = null, IRenderer rasterizer = null, double overscanRatio = null, bool onlyRerasterizeIfOutsideOverscan = false, float pixelDensity = null) Parameters Type Name Description ILayer layer The Layer to be rasterized Int32 delayBeforeRasterize Delay after viewport change to start re-rasterizing Double renderResolutionMultiplier IRenderer rasterizer Rasterizer to use. null will use the default Double overscanRatio The ratio of the size of the rasterized output to the current viewport Boolean onlyRerasterizeIfOutsideOverscan Set the rasterization policy. false will trigger a rasterization on every viewport change. true will trigger a re-rasterization only if the viewport moves outside the existing rasterization. Single pixelDensity Properties | Improve this Doc View Source Delayer Declaration public Delayer Delayer { get; } Property Value Type Description Delayer | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Improve this Doc View Source SourceLayer Declaration public ILayer SourceLayer { get; } Property Value Type Description ILayer | Improve this Doc View Source SymbolSize Declaration public static double SymbolSize { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source AbortFetch() Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Declaration public void ClearCache() | Improve this Doc View Source CreateViewport(MRect, Double, Double, Double) Declaration public static Viewport CreateViewport(MRect extent, double resolution, double renderResolutionMultiplier, double overscan) Parameters Type Name Description MRect extent Double resolution Double renderResolutionMultiplier Double overscan Returns Type Description Viewport | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source RefreshData(FetchInfo) Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ISourceLayer"
  },
  "api/Mapsui.Layers.RectFeature.html": {
    "href": "api/Mapsui.Layers.RectFeature.html",
    "title": "Class RectFeature",
    "keywords": "Class RectFeature Inheritance Object BaseFeature RectFeature Implements IFeature IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry BaseFeature.Dispose() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class RectFeature : BaseFeature, IFeature Constructors | Improve this Doc View Source RectFeature(RectFeature) Declaration public RectFeature(RectFeature rectFeature) Parameters Type Name Description RectFeature rectFeature | Improve this Doc View Source RectFeature(MRect) Declaration public RectFeature(MRect rect) Parameters Type Name Description MRect rect Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Rect Declaration public MRect Rect { get; set; } Property Value Type Description MRect Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action < Double , Double , CoordinateSetter > visit Implements IFeature IDisposable Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.Copy(IFeature) FeatureExtensions.ToDisplayText(IFeature)"
  },
  "api/Mapsui.Layers.WritableLayer.html": {
    "href": "api/Mapsui.Layers.WritableLayer.html",
    "title": "Class WritableLayer",
    "keywords": "Class WritableLayer Inheritance Object BaseLayer WritableLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(Boolean) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Layers Assembly : Mapsui.dll Syntax public class WritableLayer : BaseLayer, ILayer, IAnimatable Properties | Improve this Doc View Source Extent Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Improve this Doc View Source Add(IFeature) Declaration public void Add(IFeature feature) Parameters Type Name Description IFeature feature | Improve this Doc View Source AddRange(IEnumerable<IFeature>) Declaration public void AddRange(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(IFeature) Declaration public IFeature Find(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description IFeature | Improve this Doc View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box Double resolution Returns Type Description IEnumerable < IFeature > Overrides BaseLayer.GetFeatures(MRect, Double) | Improve this Doc View Source TryRemove(IFeature, Nullable<Func<IFeature, IFeature, Boolean>>) Tries to remove a feature. Declaration public bool TryRemove(IFeature feature, Func<IFeature, IFeature, bool>? compare = null) Parameters Type Name Description IFeature feature Feature to remove Nullable < Func < IFeature , IFeature , Boolean >> compare Optional method to compare the feature with any of the other features in the list. If omitted a reference compare is done. Returns Type Description Boolean Implements ILayer IAnimatable INotifyPropertyChanged IDisposable"
  },
  "api/Mapsui.LimitedViewport.html": {
    "href": "api/Mapsui.LimitedViewport.html",
    "title": "Class LimitedViewport",
    "keywords": "Class LimitedViewport Inheritance Object LimitedViewport Implements IViewport IReadOnlyViewport IAnimatable Namespace : Mapsui Assembly : Mapsui.dll Syntax public class LimitedViewport : object, IViewport, IReadOnlyViewport, IAnimatable Constructors | Improve this Doc View Source LimitedViewport() Declaration public LimitedViewport() Properties | Improve this Doc View Source Center Declaration public MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration public double CenterX { get; } Property Value Type Description Double | Improve this Doc View Source CenterY Declaration public double CenterY { get; } Property Value Type Description Double | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description Boolean | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source IsRotated Declaration public bool IsRotated { get; } Property Value Type Description Boolean | Improve this Doc View Source Limiter Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source Map Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Resolution Declaration public double Resolution { get; } Property Value Type Description Double | Improve this Doc View Source Rotation Declaration public double Rotation { get; } Property Value Type Description Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source ScreenToWorld(MPoint) Declaration public MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Returns Type Description MPoint | Improve this Doc View Source ScreenToWorld(Double, Double) Declaration public MPoint ScreenToWorld(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description MPoint | Improve this Doc View Source ScreenToWorldXY(Double, Double) Declaration public (double worldX, double worldY) ScreenToWorldXY(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description (, ) < Double , Double > | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration public void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration public void SetCenter(MReadOnlyPoint center, long duration = null, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration public virtual void SetCenter(double x, double y, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration public virtual void SetCenterAndResolution(double x, double y, double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Double resolution Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration public void SetResolution(double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration public void SetRotation(double rotation, long duration = null, Easing easing = null) Parameters Type Name Description Double rotation Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description Double width Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Declaration public void Transform(MPoint position, MPoint previousPosition, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description MPoint position MPoint previousPosition Double deltaResolution Double deltaRotation | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description Boolean | Improve this Doc View Source WorldToScreen(MPoint) Declaration public MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Returns Type Description MPoint | Improve this Doc View Source WorldToScreen(Double, Double) Declaration public MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description Double worldX Double worldY Returns Type Description MPoint | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Declaration public (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description Double worldX Double worldY Returns Type Description (, ) < Double , Double > | Improve this Doc View Source WorldToScreenXY(Double, Double) Declaration public (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description Double worldX Double worldY Returns Type Description (, ) < Double , Double > Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler? ViewportChanged Event Type Type Description Nullable < PropertyChangedEventHandler > Implements IViewport IReadOnlyViewport IAnimatable"
  },
  "api/Mapsui.Logging.html": {
    "href": "api/Mapsui.Logging.html",
    "title": "Namespace Mapsui.Logging",
    "keywords": "Namespace Mapsui.Logging Classes Logger Enums LogLevel"
  },
  "api/Mapsui.Logging.Logger.html": {
    "href": "api/Mapsui.Logging.Logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance Object Logger Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public static class Logger : object Properties | Improve this Doc View Source LogDelegate Declaration public static Action<LogLevel, string, Exception?>? LogDelegate { get; set; } Property Value Type Description Nullable < Action < LogLevel , String , Nullable < Exception >>> Methods | Improve this Doc View Source Log(LogLevel, String, Nullable<Exception>) Declaration public static void Log(LogLevel level, string message, Exception? exception = null) Parameters Type Name Description LogLevel level String message Nullable < Exception > exception"
  },
  "api/Mapsui.Logging.LogLevel.html": {
    "href": "api/Mapsui.Logging.LogLevel.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace : Mapsui.Logging Assembly : Mapsui.dll Syntax public enum LogLevel : int Fields Name Description Debug Error Information Trace Warning"
  },
  "api/Mapsui.Map.html": {
    "href": "api/Mapsui.Map.html",
    "title": "Class Map",
    "keywords": "Class Map Map class Inheritance Object Map Implements IMap IAnimatable IDisposable Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Map : INotifyPropertyChanged, IMap, IAnimatable Remarks Map holds all map related infos like the target CRS, layers, widgets and so on. Constructors | Improve this Doc View Source Map() Initializes a new map Declaration public Map() Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CRS Projection type of Map. Normally in format like \"EPSG:3857\" Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Extent Gets the extent of the map based on the extent of all the layers in the layers collection Declaration public MRect Extent { get; } Property Value Type Description MRect Full map extent | Improve this Doc View Source Home Declaration public Action<INavigator> Home { get; set; } Property Value Type Description Action < INavigator > | Improve this Doc View Source HoverLayers Declaration public IList<ILayer> HoverLayers { get; } Property Value Type Description IList < ILayer > | Improve this Doc View Source InfoLayers Declaration public IList<ILayer> InfoLayers { get; } Property Value Type Description IList < ILayer > | Improve this Doc View Source Initialized To register if the initial Home call has been done. Declaration public bool Initialized { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Limiter Limit the extent to which the user can navigate Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Improve this Doc View Source PanLock When true the user can not pan (move) the map. Declaration public bool PanLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Resolutions List of all native resolutions of this map Declaration public IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < Double > | Improve this Doc View Source RotationLock When true the user can not zoom into the map Declaration public bool RotationLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Widgets List of Widgets belonging to map Declaration public ConcurrentQueue<IWidget> Widgets { get; } Property Value Type Description ConcurrentQueue < IWidget > | Improve this Doc View Source ZoomLock When true the user an not rotate the map Declaration public bool ZoomLock { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source AbortFetch() Abort fetching of all layers Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of all layers Declaration public void ClearCache() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source GetWidgetsOfMapAndLayers() Declaration public IEnumerable<IWidget> GetWidgetsOfMapAndLayers() Returns Type Description IEnumerable < IWidget > | Improve this Doc View Source OnInfo(MapInfoEventArgs) This method is to invoke the Info event from the Map. This method is called by the MapControl/MapView and should usually not be called from user code. Declaration public void OnInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Improve this Doc View Source RefreshData(FetchInfo) Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description Boolean Events | Improve this Doc View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source Hover Declaration public event EventHandler<MapInfoEventArgs>? Hover Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source RefreshGraphics Declaration public event EventHandler? RefreshGraphics Event Type Type Description Nullable < EventHandler > Implements IMap IAnimatable IDisposable"
  },
  "api/Mapsui.MPoint.html": {
    "href": "api/Mapsui.MPoint.html",
    "title": "Class MPoint",
    "keywords": "Class MPoint Inheritance Object MPoint Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MPoint : object Constructors | Improve this Doc View Source MPoint() Declaration public MPoint() | Improve this Doc View Source MPoint(MPoint) Declaration public MPoint(MPoint point) Parameters Type Name Description MPoint point | Improve this Doc View Source MPoint(Double, Double) Declaration public MPoint(double x, double y) Parameters Type Name Description Double x Double y Properties | Improve this Doc View Source MRect Declaration public MRect MRect { get; } Property Value Type Description MRect | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Copy() Declaration public MPoint Copy() Returns Type Description MPoint | Improve this Doc View Source Distance(MPoint) Declaration public double Distance(MPoint point) Parameters Type Name Description MPoint point Returns Type Description Double | Improve this Doc View Source Equals(MPoint) Declaration public bool Equals(MPoint point) Parameters Type Name Description MPoint point Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source Offset(Double, Double) Declaration public MPoint Offset(double offsetX, double offsetY) Parameters Type Name Description Double offsetX Double offsetY Returns Type Description MPoint | Improve this Doc View Source Rotate(Double) Calculates a new point by rotating this point clockwise about the origin (0,0) Declaration public MPoint Rotate(double degrees) Parameters Type Name Description Double degrees Angle to rotate clockwise (degrees) Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source Rotate(Double, MPoint) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, MPoint center) Parameters Type Name Description Double degrees Angle to rotate clockwise (degrees) MPoint center MPoint about which to rotate Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source Rotate(Double, Double, Double) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description Double degrees Angle to rotate clockwise (degrees) Double centerX X coordinate of point about which to rotate Double centerY Y coordinate of point about which to rotate Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Operators | Improve this Doc View Source Addition(MPoint, MPoint) Declaration public static MPoint operator +(MPoint point1, MPoint point2) Parameters Type Name Description MPoint point1 MPoint point2 Returns Type Description MPoint | Improve this Doc View Source Multiply(MPoint, Double) Declaration public static MPoint operator *(MPoint point1, double multiplier) Parameters Type Name Description MPoint point1 Double multiplier Returns Type Description MPoint | Improve this Doc View Source Subtraction(MPoint, MPoint) Declaration public static MPoint operator -(MPoint point1, MPoint point2) Parameters Type Name Description MPoint point1 MPoint point2 Returns Type Description MPoint Extension Methods PointExtensions.ToDeviceIndependentUnits(MPoint, Single) MPointExtensions.ToPoint(MPoint) MPointExtensions.ToCoordinate(MPoint) PositionExtensions.ToMaui(MPoint) PositionExtensions.ToNative(MPoint) PositionExtensions.ToForms(MPoint) PositionExtensions.ToNative(MPoint)"
  },
  "api/Mapsui.MQuad.html": {
    "href": "api/Mapsui.MQuad.html",
    "title": "Class MQuad",
    "keywords": "Class MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. Inheritance Object MQuad Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MQuad : IEquatable<MQuad> Remarks The sides do not have to be parallel to the two axes of the coordinate system. If this has been rotated, the 'BottomLeft' vertex may not actually be the min point in x/y. Constructors | Improve this Doc View Source MQuad() Declaration public MQuad() | Improve this Doc View Source MQuad(MPoint, MPoint, MPoint, MPoint) Declaration public MQuad(MPoint bottomLeft, MPoint topLeft, MPoint topRight, MPoint bottomRight) Parameters Type Name Description MPoint bottomLeft MPoint topLeft MPoint topRight MPoint bottomRight | Improve this Doc View Source MQuad(MQuad) Declaration public MQuad(MQuad quad) Parameters Type Name Description MQuad quad Properties | Improve this Doc View Source BottomLeft Declaration public MPoint BottomLeft { get; set; } Property Value Type Description MPoint | Improve this Doc View Source BottomRight Declaration public MPoint BottomRight { get; set; } Property Value Type Description MPoint | Improve this Doc View Source TopLeft Declaration public MPoint TopLeft { get; set; } Property Value Type Description MPoint | Improve this Doc View Source TopRight Declaration public MPoint TopRight { get; set; } Property Value Type Description MPoint | Improve this Doc View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<MPoint> Vertices { get; } Property Value Type Description IEnumerable < MPoint > Methods | Improve this Doc View Source Equals(MQuad) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MQuad other) Parameters Type Name Description MQuad other Other object to compare Returns Type Description Boolean Returns true if they are equal | Improve this Doc View Source Equals(Nullable<Object>) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Other object to compare Returns Type Description Boolean Returns true if they are equal | Improve this Doc View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for the specified object | Improve this Doc View Source Rotate(Double, Double, Double) Creates a new quad by rotate all 4 vertices clockwise about the specified center point Declaration public MQuad Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description Double degrees Angle to rotate clockwise (degrees) Double centerX X coordinate of point about which to rotate Double centerY Y coordinate of point about which to rotate Returns Type Description MQuad Returns the rotate quad | Improve this Doc View Source ToBoundingBox() Calculates a new bounding box that encompasses all 4 vertices. Declaration public MRect ToBoundingBox() Returns Type Description MRect Returns the calculate bounding box | Improve this Doc View Source ToString() Returns a string representation of the vertices from bottom-left clockwise to bottom-right Declaration public override string ToString() Returns Type Description String Returns the string"
  },
  "api/Mapsui.MRaster.html": {
    "href": "api/Mapsui.MRaster.html",
    "title": "Class MRaster",
    "keywords": "Class MRaster Inheritance Object MRect MRaster Inherited Members MRect.Max MRect.Min MRect.MaxX MRect.MaxY MRect.MinX MRect.MinY MRect.Centroid MRect.Width MRect.Height MRect.Bottom MRect.Left MRect.Top MRect.Right MRect.TopLeft MRect.TopRight MRect.BottomLeft MRect.BottomRight MRect.Vertices MRect.Copy() MRect.Contains(MPoint) MRect.Contains(MRect) MRect.Equals(MRect) MRect.GetArea() MRect.Grow(Double) MRect.Grow(Double, Double) MRect.Intersects(MRect) MRect.Join(MRect) MRect.Multiply(Double) MRect.Rotate(Double) MRect.ToString() Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MRaster : MRect Constructors | Improve this Doc View Source MRaster(MRaster) Declaration public MRaster(MRaster raster) Parameters Type Name Description MRaster raster | Improve this Doc View Source MRaster(Byte[], MRect) Declaration public MRaster(byte[] data, MRect rect) Parameters Type Name Description Byte [] data MRect rect Properties | Improve this Doc View Source Data Declaration public byte[] Data { get; } Property Value Type Description Byte [] | Improve this Doc View Source TickFetched Declaration public long TickFetched { get; } Property Value Type Description Int64 Extension Methods MRectExtensions.ToSkia(MRect) MRectExtensions.ToEnvelope(MRect) MRectExtensions.ToPolygon(MRect) MRectExtensions.ToExtent(MRect)"
  },
  "api/Mapsui.MReadOnlyPoint.html": {
    "href": "api/Mapsui.MReadOnlyPoint.html",
    "title": "Class MReadOnlyPoint",
    "keywords": "Class MReadOnlyPoint The X and Y fields of the ReadyOnlyPoint can not be set. This was introduced as Center field of the Viewport. Inheritance Object MReadOnlyPoint Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MReadOnlyPoint : object Constructors | Improve this Doc View Source MReadOnlyPoint(MReadOnlyPoint) Declaration public MReadOnlyPoint(MReadOnlyPoint readOnlyPoint) Parameters Type Name Description MReadOnlyPoint readOnlyPoint | Improve this Doc View Source MReadOnlyPoint(Double, Double) Declaration public MReadOnlyPoint(double x, double y) Parameters Type Name Description Double x Double y Properties | Improve this Doc View Source X Declaration public double X { get; } Property Value Type Description Double | Improve this Doc View Source Y Declaration public double Y { get; } Property Value Type Description Double Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Operators | Improve this Doc View Source Implicit(MPoint to MReadOnlyPoint) Implicit conversion from ReadOnlyPoint to MPoint Declaration public static implicit operator MReadOnlyPoint(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MReadOnlyPoint | Improve this Doc View Source Implicit(MReadOnlyPoint to MPoint) Implicit conversion from MPoint to ReadOnlyPoint Declaration public static implicit operator MPoint(MReadOnlyPoint readOnlyPoint) Parameters Type Name Description MReadOnlyPoint readOnlyPoint Returns Type Description MPoint"
  },
  "api/Mapsui.MRect.html": {
    "href": "api/Mapsui.MRect.html",
    "title": "Class MRect",
    "keywords": "Class MRect Inheritance Object MRect MRaster Namespace : Mapsui Assembly : Mapsui.dll Syntax public class MRect : object Constructors | Improve this Doc View Source MRect(IEnumerable<MRect>) Declaration public MRect(IEnumerable<MRect> rects) Parameters Type Name Description IEnumerable < MRect > rects | Improve this Doc View Source MRect(MRect) Declaration public MRect(MRect rect) Parameters Type Name Description MRect rect | Improve this Doc View Source MRect(Double, Double, Double, Double) Declaration public MRect(double minX, double minY, double maxX, double maxY) Parameters Type Name Description Double minX Double minY Double maxX Double maxY Properties | Improve this Doc View Source Bottom Declaration public double Bottom { get; } Property Value Type Description Double | Improve this Doc View Source BottomLeft Declaration public MPoint BottomLeft { get; } Property Value Type Description MPoint | Improve this Doc View Source BottomRight Declaration public MPoint BottomRight { get; } Property Value Type Description MPoint | Improve this Doc View Source Centroid Declaration public MPoint Centroid { get; } Property Value Type Description MPoint | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source Left Declaration public double Left { get; } Property Value Type Description Double | Improve this Doc View Source Max Declaration public MPoint Max { get; } Property Value Type Description MPoint | Improve this Doc View Source MaxX Declaration public double MaxX { get; } Property Value Type Description Double | Improve this Doc View Source MaxY Declaration public double MaxY { get; } Property Value Type Description Double | Improve this Doc View Source Min Declaration public MPoint Min { get; } Property Value Type Description MPoint | Improve this Doc View Source MinX Declaration public double MinX { get; } Property Value Type Description Double | Improve this Doc View Source MinY Declaration public double MinY { get; } Property Value Type Description Double | Improve this Doc View Source Right Declaration public double Right { get; } Property Value Type Description Double | Improve this Doc View Source Top Declaration public double Top { get; } Property Value Type Description Double | Improve this Doc View Source TopLeft Declaration public MPoint TopLeft { get; } Property Value Type Description MPoint | Improve this Doc View Source TopRight Declaration public MPoint TopRight { get; } Property Value Type Description MPoint | Improve this Doc View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<MPoint> Vertices { get; } Property Value Type Description IEnumerable < MPoint > | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source Contains(MPoint) Declaration public bool Contains(MPoint point) Parameters Type Name Description MPoint point Returns Type Description Boolean | Improve this Doc View Source Contains(MRect) Declaration public bool Contains(MRect r) Parameters Type Name Description MRect r Returns Type Description Boolean | Improve this Doc View Source Copy() Declaration public MRect Copy() Returns Type Description MRect | Improve this Doc View Source Equals(MRect) Declaration public bool Equals(MRect other) Parameters Type Name Description MRect other Returns Type Description Boolean | Improve this Doc View Source GetArea() Declaration public double GetArea() Returns Type Description Double | Improve this Doc View Source Grow(Double) Declaration public MRect Grow(double amount) Parameters Type Name Description Double amount Returns Type Description MRect | Improve this Doc View Source Grow(Double, Double) Declaration public MRect Grow(double amountInX, double amountInY) Parameters Type Name Description Double amountInX Double amountInY Returns Type Description MRect | Improve this Doc View Source Intersects(MRect) Declaration public bool Intersects(MRect rect) Parameters Type Name Description MRect rect Returns Type Description Boolean | Improve this Doc View Source Join(MRect) Declaration public MRect Join(MRect rect) Parameters Type Name Description MRect rect Returns Type Description MRect | Improve this Doc View Source Multiply(Double) Adjusts the size by increasing Width and Heigh with (Width * Height) / 2 * factor. Declaration public MRect Multiply(double factor) Parameters Type Name Description Double factor Returns Type Description MRect | Improve this Doc View Source Rotate(Double) Calculates a new quad by rotating this rect about its center by the specified angle clockwise Declaration public MQuad Rotate(double degrees) Parameters Type Name Description Double degrees Angle about which to rotate (degrees) Returns Type Description MQuad Returns the calculated quad | Improve this Doc View Source ToString() Returns a string representation of the vertices from bottom-left and top-right Declaration public override string ToString() Returns Type Description String Returns the string Extension Methods MRectExtensions.ToSkia(MRect) MRectExtensions.ToEnvelope(MRect) MRectExtensions.ToPolygon(MRect) MRectExtensions.ToExtent(MRect)"
  },
  "api/Mapsui.Navigator.html": {
    "href": "api/Mapsui.Navigator.html",
    "title": "Class Navigator",
    "keywords": "Class Navigator Inheritance Object Navigator Implements INavigator Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Navigator : object, INavigator Constructors | Improve this Doc View Source Navigator(Map, IViewport) Declaration public Navigator(Map map, IViewport viewport) Parameters Type Name Description Map map IViewport viewport Properties | Improve this Doc View Source Navigated Declaration public EventHandler<ChangeType>? Navigated { get; set; } Property Value Type Description Nullable < EventHandler < ChangeType >> Methods | Improve this Doc View Source CenterOn(MPoint, Int64, Easing) Change center of viewport Declaration public void CenterOn(MPoint center, long duration = null, Easing easing = null) Parameters Type Name Description MPoint center New center point of viewport Int64 duration Duration for animation in milliseconds. Easing easing Function for easing | Improve this Doc View Source CenterOn(Double, Double, Int64, Easing) Change center of viewport to X/Y coordinates Declaration public void CenterOn(double x, double y, long duration = null, Easing easing = null) Parameters Type Name Description Double x X value of the new center Double y Y value of the new center Int64 duration Duration for animation in milliseconds. Easing easing Function for easing | Improve this Doc View Source FlingWith(Double, Double, Int64) Animate Fling of viewport Declaration public void FlingWith(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description Double velocityX VelocityX from SwipedEventArgs> Double velocityY VelocityX from SwipedEventArgs> Int64 maxDuration Maximum duration of fling deceleration> | Improve this Doc View Source FlyTo(MPoint, Double, Int64) Fly to the given center with zooming out to given resolution and in again Declaration public void FlyTo(MPoint center, double maxResolution, long duration = null) Parameters Type Name Description MPoint center MPoint to fly to Double maxResolution Maximum resolution to zoom out Int64 duration Duration for animation in milliseconds. | Improve this Doc View Source NavigateTo(MPoint, Double, Int64, Easing) Navigate to center and change resolution with animation Declaration public void NavigateTo(MPoint center, double resolution, long duration = null, Easing easing = null) Parameters Type Name Description MPoint center New center to move to Double resolution New resolution to use Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateTo(MRect, ScaleMethod, Int64, Easing) Navigate center of viewport to center of extent and change resolution Declaration public void NavigateTo(MRect extent, ScaleMethod scaleMethod = ScaleMethod.Fit, long duration = null, Easing easing = null) Parameters Type Name Description MRect extent New extent for viewport to show ScaleMethod scaleMethod Scale method to use to determine resolution Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source NavigateToFullEnvelope(ScaleMethod, Int64, Easing) Navigate to a resolution, so such the map uses the fill method Declaration public void NavigateToFullEnvelope(ScaleMethod scaleMethod = ScaleMethod.Fill, long duration = null, Easing easing = null) Parameters Type Name Description ScaleMethod scaleMethod Scale method to use to determine resolution Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source RotateTo(Double, Int64, Easing) Change rotation of viewport Declaration public void RotateTo(double rotation, long duration = null, Easing easing = null) Parameters Type Name Description Double rotation New rotation in degrees of viewport> Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(MPoint, Int64, Easing) Zoom in to a given point Declaration public void ZoomIn(MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomIn(Int64, Easing) Zoom in to the next resolution Declaration public void ZoomIn(long duration = null, Easing easing = null) Parameters Type Name Description Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(MPoint, Int64, Easing) Zoom out to a given point Declaration public void ZoomOut(MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description MPoint centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomOut(Int64, Easing) Zoom out to the next resolution Declaration public void ZoomOut(long duration = null, Easing easing = null) Parameters Type Name Description Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Improve this Doc View Source ZoomTo(Double, MPoint, Int64, Easing) Zoom to a given resolution with a given point as center Declaration public void ZoomTo(double resolution, MPoint centerOfZoom, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution Resolution to zoom MPoint centerOfZoom Center of zoom in screen coordinates. This is the one point in the map that stays on the same location while zooming in. /// For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. Note, that the centerOfZoom is in screen coordinates not world coordinates, this is because this is most convenient for the main use case, zoom with the mouse position as center. Int64 duration Duration for animation in milliseconds. Easing easing The easing of the animation when duration is > 0 | Improve this Doc View Source ZoomTo(Double, Int64, Easing) Change resolution of viewport Declaration public void ZoomTo(double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution New resolution to use Int64 duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state Implements INavigator"
  },
  "api/Mapsui.Nts.Extensions.CoordinateExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.CoordinateExtensions.html",
    "title": "Class CoordinateExtensions",
    "keywords": "Class CoordinateExtensions Inheritance Object CoordinateExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class CoordinateExtensions : object Methods | Improve this Doc View Source ToLinearRing(IEnumerable<Coordinate>) Declaration public static LinearRing ToLinearRing(this IEnumerable<Coordinate> coordinates) Parameters Type Name Description IEnumerable < Coordinate > coordinates Returns Type Description LinearRing | Improve this Doc View Source ToLineString(IEnumerable<Coordinate>) Declaration public static LineString ToLineString(this IEnumerable<Coordinate> coordinates) Parameters Type Name Description IEnumerable < Coordinate > coordinates Returns Type Description LineString | Improve this Doc View Source ToMPoint(Coordinate) Declaration public static MPoint ToMPoint(this Coordinate coordinate) Parameters Type Name Description Coordinate coordinate Returns Type Description MPoint | Improve this Doc View Source ToPoint(Coordinate) Declaration public static Point ToPoint(this Coordinate coordinate) Parameters Type Name Description Coordinate coordinate Returns Type Description Point | Improve this Doc View Source ToPolygon(IEnumerable<Coordinate>, Nullable<IEnumerable<IEnumerable<Coordinate>>>) Declaration public static Polygon ToPolygon(this IEnumerable<Coordinate> coordinates, IEnumerable<IEnumerable<Coordinate>>? holes = null) Parameters Type Name Description IEnumerable < Coordinate > coordinates Nullable < IEnumerable < IEnumerable < Coordinate >>> holes Returns Type Description Polygon"
  },
  "api/Mapsui.Nts.Extensions.EnvelopeExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.EnvelopeExtensions.html",
    "title": "Class EnvelopeExtensions",
    "keywords": "Class EnvelopeExtensions Inheritance Object EnvelopeExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class EnvelopeExtensions : object Methods | Improve this Doc View Source ToMRect(Envelope) Declaration public static MRect ToMRect(this Envelope envelope) Parameters Type Name Description Envelope envelope Returns Type Description MRect"
  },
  "api/Mapsui.Nts.Extensions.GeometryExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.GeometryExtensions.html",
    "title": "Class GeometryExtensions",
    "keywords": "Class GeometryExtensions Inheritance Object GeometryExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class GeometryExtensions : object Methods | Improve this Doc View Source ToFeature(Geometry) Declaration public static GeometryFeature ToFeature(this Geometry geometry) Parameters Type Name Description Geometry geometry Returns Type Description GeometryFeature | Improve this Doc View Source ToFeatures(IEnumerable<Geometry>) Declaration public static IEnumerable<GeometryFeature> ToFeatures(this IEnumerable<Geometry> geometries) Parameters Type Name Description IEnumerable < Geometry > geometries Returns Type Description IEnumerable < GeometryFeature >"
  },
  "api/Mapsui.Nts.Extensions.html": {
    "href": "api/Mapsui.Nts.Extensions.html",
    "title": "Namespace Mapsui.Nts.Extensions",
    "keywords": "Namespace Mapsui.Nts.Extensions Classes CoordinateExtensions EnvelopeExtensions GeometryExtensions LineStringExtensions MPointExtensions MRectExtensions PointExtensions TupleExtensions"
  },
  "api/Mapsui.Nts.Extensions.LineStringExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.LineStringExtensions.html",
    "title": "Class LineStringExtensions",
    "keywords": "Class LineStringExtensions Inheritance Object LineStringExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class LineStringExtensions : object Methods | Improve this Doc View Source ToLinearRing(LineString) Declaration public static LinearRing ToLinearRing(this LineString lineString) Parameters Type Name Description LineString lineString Returns Type Description LinearRing"
  },
  "api/Mapsui.Nts.Extensions.MPointExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.MPointExtensions.html",
    "title": "Class MPointExtensions",
    "keywords": "Class MPointExtensions Inheritance Object MPointExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class MPointExtensions : object Methods | Improve this Doc View Source ToCoordinate(MPoint) Declaration public static Coordinate? ToCoordinate(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Nullable < Coordinate > | Improve this Doc View Source ToPoint(MPoint) Declaration public static Point? ToPoint(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Nullable < Point >"
  },
  "api/Mapsui.Nts.Extensions.MRectExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance Object MRectExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class MRectExtensions : object Methods | Improve this Doc View Source ToEnvelope(MRect) Declaration public static Envelope ToEnvelope(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Envelope | Improve this Doc View Source ToPolygon(MRect) Declaration public static Polygon ToPolygon(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Polygon"
  },
  "api/Mapsui.Nts.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance Object PointExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToMPoint(Point) Declaration public static MPoint ToMPoint(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "api/Mapsui.Nts.Extensions.TupleExtensions.html": {
    "href": "api/Mapsui.Nts.Extensions.TupleExtensions.html",
    "title": "Class TupleExtensions",
    "keywords": "Class TupleExtensions Inheritance Object TupleExtensions Namespace : Mapsui.Nts.Extensions Assembly : Mapsui.Nts.dll Syntax public static class TupleExtensions : object Methods | Improve this Doc View Source ToCoordinate((Double x, Double y)) Declaration public static Coordinate ToCoordinate(this (double x, double y) coordinate) Parameters Type Name Description (, ) < Double , Double > coordinate Returns Type Description Coordinate"
  },
  "api/Mapsui.Nts.GeometryFeature.html": {
    "href": "api/Mapsui.Nts.GeometryFeature.html",
    "title": "Class GeometryFeature",
    "keywords": "Class GeometryFeature Inheritance Object BaseFeature GeometryFeature Implements IFeature IDisposable IDisposable Inherited Members BaseFeature.Styles BaseFeature.Fields BaseFeature.Item[String] BaseFeature.RenderedGeometry Namespace : Mapsui.Nts Assembly : Mapsui.Nts.dll Syntax public class GeometryFeature : BaseFeature, IFeature Constructors | Improve this Doc View Source GeometryFeature() Declaration public GeometryFeature() | Improve this Doc View Source GeometryFeature(GeometryFeature) Declaration public GeometryFeature(GeometryFeature geometryFeature) Parameters Type Name Description GeometryFeature geometryFeature | Improve this Doc View Source GeometryFeature(Nullable<Geometry>) Declaration public GeometryFeature(Geometry? geometry) Parameters Type Name Description Nullable < Geometry > geometry Properties | Improve this Doc View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Improve this Doc View Source Geometry Declaration public Geometry? Geometry { get; set; } Property Value Type Description Nullable < Geometry > Methods | Improve this Doc View Source CoordinateVisitor(Action<Double, Double, CoordinateSetter>) Declaration public void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action < Double , Double , CoordinateSetter > visit | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseFeature.Dispose() Implements IFeature IDisposable IDisposable"
  },
  "api/Mapsui.Nts.html": {
    "href": "api/Mapsui.Nts.html",
    "title": "Namespace Mapsui.Nts",
    "keywords": "Namespace Mapsui.Nts Classes GeometryFeature"
  },
  "api/Mapsui.Nts.Projections.GeometryTransform.html": {
    "href": "api/Mapsui.Nts.Projections.GeometryTransform.html",
    "title": "Class GeometryTransform",
    "keywords": "Class GeometryTransform Inheritance Object GeometryTransform Namespace : Mapsui.Nts.Projections Assembly : Mapsui.Extensions.dll Syntax public sealed class GeometryTransform : NetTopologySuite.Geometries.ICoordinateSequenceFilter Constructors | Improve this Doc View Source GeometryTransform((Nullable<ProjectionInfo> From, Nullable<ProjectionInfo> To)) Declaration public GeometryTransform((ProjectionInfo? From, ProjectionInfo? To) transform) Parameters Type Name Description (, ) < Nullable < ProjectionInfo >, Nullable < ProjectionInfo >> transform Properties | Improve this Doc View Source Done Declaration public bool Done { get; } Property Value Type Description Boolean | Improve this Doc View Source GeometryChanged Declaration public bool GeometryChanged { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Filter(NetTopologySuite.Geometries.CoordinateSequence, Int32) Declaration public void Filter(NetTopologySuite.Geometries.CoordinateSequence seq, int i) Parameters Type Name Description NetTopologySuite.Geometries.CoordinateSequence seq Int32 i"
  },
  "api/Mapsui.Nts.Projections.html": {
    "href": "api/Mapsui.Nts.Projections.html",
    "title": "Namespace Mapsui.Nts.Projections",
    "keywords": "Namespace Mapsui.Nts.Projections Classes GeometryTransform"
  },
  "api/Mapsui.Nts.Providers.GeometryIntersectionProvider.html": {
    "href": "api/Mapsui.Nts.Providers.GeometryIntersectionProvider.html",
    "title": "Class GeometryIntersectionProvider",
    "keywords": "Class GeometryIntersectionProvider Inheritance Object GeometryIntersectionProvider Implements IProvider Namespace : Mapsui.Nts.Providers Assembly : Mapsui.Nts.dll Syntax public class GeometryIntersectionProvider : object, IProvider Constructors | Improve this Doc View Source GeometryIntersectionProvider(IProvider) Declaration public GeometryIntersectionProvider(IProvider provider) Parameters Type Name Description IProvider provider Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Nts.Providers.GeometrySimplifyProvider.html": {
    "href": "api/Mapsui.Nts.Providers.GeometrySimplifyProvider.html",
    "title": "Class GeometrySimplifyProvider",
    "keywords": "Class GeometrySimplifyProvider Inheritance Object GeometrySimplifyProvider Implements IProvider Namespace : Mapsui.Nts.Providers Assembly : Mapsui.Nts.dll Syntax public class GeometrySimplifyProvider : object, IProvider Constructors | Improve this Doc View Source GeometrySimplifyProvider(IProvider, Nullable<Func<Geometry, Double, Geometry>>, Nullable<Double>) Declaration public GeometrySimplifyProvider(IProvider provider, Func<Geometry, double, Geometry>? simplify = null, double? distanceTolerance = null) Parameters Type Name Description IProvider provider Nullable < Func < Geometry , Double , Geometry >> simplify Nullable < Double > distanceTolerance Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Nts.Providers.html": {
    "href": "api/Mapsui.Nts.Providers.html",
    "title": "Namespace Mapsui.Nts.Providers",
    "keywords": "Namespace Mapsui.Nts.Providers Classes GeometryIntersectionProvider GeometrySimplifyProvider"
  },
  "api/Mapsui.Nts.Providers.Shapefile.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.html",
    "title": "Namespace Mapsui.Nts.Providers.Shapefile",
    "keywords": "Namespace Mapsui.Nts.Providers.Shapefile Classes ShapeFile Shapefile data provider Enums ShapeType Shapefile geometry type. Delegates ShapeFile.FilterMethod Filter Delegate Method"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.html",
    "title": "Class BinaryTree<T, TU>",
    "keywords": "Class BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries Inheritance Object BinaryTree<T, TU> Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public class BinaryTree<T, TU> : object where T : IComparable<T> Type Parameters Name Description T Value type to be indexed TU Value ID type Constructors | Improve this Doc View Source BinaryTree() Initializes a new instance of the generic binary tree. Declaration public BinaryTree() Properties | Improve this Doc View Source InOrder Gets an enumerator for all the values in the tree in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> InOrder { get; } Property Value Type Description IEnumerable < BinaryTree.ItemValue <>> Methods | Improve this Doc View Source Add(BinaryTree<T, TU>.ItemValue) Inserts a value into the tree Declaration public void Add(BinaryTree<T, TU>.ItemValue item) Parameters Type Name Description BinaryTree.ItemValue <> item | Improve this Doc View Source Add(BinaryTree<T, TU>.ItemValue[]) Inserts a value into the tree Declaration public void Add(params BinaryTree<T, TU>.ItemValue[] items) Parameters Type Name Description BinaryTree.ItemValue <>[] items | Improve this Doc View Source Between(T, T) Gets and enumerator for the values between min and max in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Between(T min, T max) Parameters Type Name Description T min T max Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source Find(T) Enumerates all objects with the specified value Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Find(T value) Parameters Type Name Description T value Value to search for Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source StartsWith(String) Enumerates the objects whose string-representation starts with 'str' Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> StartsWith(string str) Parameters Type Name Description String str Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source TraceTree() This is the classic computer science binary tree iteration Declaration public void TraceTree()"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.ItemValue.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.ItemValue.html",
    "title": "Struct BinaryTree<T, TU>.ItemValue",
    "keywords": "Struct BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU> . Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public struct ItemValue Constructors | Improve this Doc View Source ItemValue(T, TU) Creates an instance of an item in a BinaryTree<T, TU> . Declaration public ItemValue(T value, TU id) Parameters Type Name Description T value Value TU id Identifier for the value Fields | Improve this Doc View Source Id Identifier for the value Declaration public TU Id Field Value Type Description TU | Improve this Doc View Source Value Value Declaration public T Value Field Value Type Description T"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.Heuristic.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.Heuristic.html",
    "title": "Struct Heuristic",
    "keywords": "Struct Heuristic Heuristics used for tree generation Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public struct Heuristic Fields | Improve this Doc View Source Maxdepth Maximum tree depth Declaration public int Maxdepth Field Value Type Description Int32 | Improve this Doc View Source Minerror Minimum Error metric – the volume of a box + a unit cube. The unit cube in the metric prevents big boxes that happen to be flat having a zero result and muddling things up. Declaration public int Minerror Field Value Type Description Int32 | Improve this Doc View Source Mintricnt Minimum object count at node Declaration public int Mintricnt Field Value Type Description Int32 | Improve this Doc View Source Tartricnt Target object count at node Declaration public int Tartricnt Field Value Type Description Int32"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.html",
    "title": "Namespace Mapsui.Nts.Providers.Shapefile.Indexing",
    "keywords": "Namespace Mapsui.Nts.Providers.Shapefile.Indexing Classes BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries QuadTree Constructs a Quad-tree node from a object list and creates its children recursively QuadTree.ObsoleteFileFormatException Structs BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU> . Heuristic Heuristics used for tree generation QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.BoxObjects.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.BoxObjects.html",
    "title": "Struct QuadTree.BoxObjects",
    "keywords": "Struct QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public struct BoxObjects Fields | Improve this Doc View Source Box BoundingBox Declaration public MRect Box Field Value Type Description MRect | Improve this Doc View Source Id Feature ID Declaration public uint Id Field Value Type Description UInt32"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.html",
    "title": "Class QuadTree",
    "keywords": "Class QuadTree Constructs a Quad-tree node from a object list and creates its children recursively Inheritance Object QuadTree Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public class QuadTree : IDisposable Constructors | Improve this Doc View Source QuadTree(List<QuadTree.BoxObjects>, UInt32, Heuristic) Creates a node and either splits the objects recursively into sub-nodes, or stores them at the node depending on the heuristics. Tree is built top->down Declaration public QuadTree(List<QuadTree.BoxObjects> objList, uint depth, Heuristic heurdata) Parameters Type Name Description List < QuadTree.BoxObjects > objList Geometries to index UInt32 depth Current depth of tree Heuristic heurdata Heuristics data Properties | Improve this Doc View Source Box Gets/sets the Axis Aligned Bounding Box Declaration public MRect Box { get; set; } Property Value Type Description MRect | Improve this Doc View Source Child0 Gets/sets the left child node Declaration public QuadTree Child0 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Child1 Gets/sets the right child node Declaration public QuadTree Child1 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Depth Gets the depth of the current node in the tree Declaration public uint Depth { get; } Property Value Type Description UInt32 | Improve this Doc View Source IsLeaf Determines whether the node is a leaf (if data is stored at the node, we assume the node is a leaf) Declaration public bool IsLeaf { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Disposes the node Declaration public virtual void Dispose() | Improve this Doc View Source ErrorMetric(MRect) Calculate the floating point error metric Declaration public double ErrorMetric(MRect box) Parameters Type Name Description MRect box Returns Type Description Double | Improve this Doc View Source FromFile(String) Loads a quadtree from a file Declaration public static QuadTree FromFile(string filename) Parameters Type Name Description String filename Returns Type Description QuadTree | Improve this Doc View Source SaveIndex(String) Saves the Quadtree to a file Declaration public void SaveIndex(string filename) Parameters Type Name Description String filename | Improve this Doc View Source Search(MRect) Searches the tree and looks for intersections with the BoundingBox 'bbox' Declaration public Collection<uint> Search(MRect box) Parameters Type Name Description MRect box BoundingBox to intersect with Returns Type Description Collection < UInt32 >"
  },
  "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html",
    "title": "Class QuadTree.ObsoleteFileFormatException",
    "keywords": "Class QuadTree.ObsoleteFileFormatException Inheritance Object QuadTree.ObsoleteFileFormatException Namespace : Mapsui.Nts.Providers.Shapefile.Indexing Assembly : Mapsui.Nts.dll Syntax public class ObsoleteFileFormatException : Exception Constructors | Improve this Doc View Source ObsoleteFileFormatException(String) Exception thrown when layer rendering has failed Declaration public ObsoleteFileFormatException(string message) Parameters Type Name Description String message"
  },
  "api/Mapsui.Nts.Providers.Shapefile.ShapeFile.FilterMethod.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.ShapeFile.FilterMethod.html",
    "title": "Delegate ShapeFile.FilterMethod",
    "keywords": "Delegate ShapeFile.FilterMethod Filter Delegate Method Namespace : Mapsui.Nts.Providers.Shapefile Assembly : Mapsui.Nts.dll Syntax public delegate bool FilterMethod(IFeature dr); Parameters Type Name Description IFeature dr Returns Type Description Boolean true if this feature should be included, false if it should be filtered Remarks The FilterMethod delegate is used for applying a method that filters data from the data set. The method should return 'true' if the feature should be included and false if not."
  },
  "api/Mapsui.Nts.Providers.Shapefile.ShapeFile.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.ShapeFile.html",
    "title": "Class ShapeFile",
    "keywords": "Class ShapeFile Shapefile data provider Inheritance Object ShapeFile Implements IProvider IDisposable Namespace : Mapsui.Nts.Providers.Shapefile Assembly : Mapsui.Nts.dll Syntax public class ShapeFile : object, IProvider Remarks The ShapeFile provider is used for accessing ESRI ShapeFiles. The ShapeFile should at least contain the [filename].shp, [filename].idx, and if feature-data is to be used, also [filename].dbf file. The first time the ShapeFile is accessed, Mapsui will automatically create a spatial index of the shp-file, and save it as [filename].shp.sidx. If you change or update the contents of the .shp file, delete the .sidx file to force Mapsui to rebuilt it. In web applications, the index will automatically be cached to memory for faster access, so to reload the index, you will need to restart the web application as well. M and Z values in a shapefile is ignored by Mapsui. Constructors | Improve this Doc View Source ShapeFile(String, Boolean, Boolean, IProjectionCrs) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex = false, bool readPrjFile = false, IProjectionCrs projectionCrs = null) Parameters Type Name Description String filename Path to shape file Boolean fileBasedIndex Use file-based spatial index Boolean readPrjFile Read the proj File and set the correct CRS IProjectionCrs projectionCrs Projection Crs Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. Properties | Improve this Doc View Source CRS Gets or sets the spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Encoding Gets or sets the encoding used for parsing strings from the DBase DBF file. Declaration public Encoding? Encoding { get; set; } Property Value Type Description Nullable < Encoding > Remarks The DBase default encoding is UTF7\"/>. | Improve this Doc View Source Filename Gets or sets the filename of the shapefile Declaration public string Filename { get; set; } Property Value Type Description String Remarks If the filename changes, indexes will be rebuilt | Improve this Doc View Source FilterDelegate Filter Delegate Method for limiting the data source Declaration public ShapeFile.FilterMethod FilterDelegate { get; set; } Property Value Type Description ShapeFile.FilterMethod | Improve this Doc View Source ShapeType Gets the shape geometry type in this shapefile. Declaration public ShapeType ShapeType { get; } Property Value Type Description ShapeType Remarks The property isn't set until the first time the data source has been opened, and will throw an exception if this property has been called since initialization. All the non-Null shapes in a shapefile are required to be of the same shape type. Methods | Improve this Doc View Source Dispose() Disposes the object Declaration public void Dispose() | Improve this Doc View Source Finalize() Finalizes the object Declaration protected void Finalize() | Improve this Doc View Source GetExtent() Returns the extent of the data source Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeature(UInt32, Nullable<List<GeometryFeature>>) Gets a data row from the data source at the specified index belonging to the specified datatable Declaration public GeometryFeature GetFeature(uint rowId, List<GeometryFeature>? features = null) Parameters Type Name Description UInt32 rowId Nullable < List < GeometryFeature >> features Data table to feature should belong to. Returns Type Description GeometryFeature | Improve this Doc View Source GetFeatureCount() Returns the total number of features in the data source (without any filter applied) Declaration public int GetFeatureCount() Returns Type Description Int32 | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> | Improve this Doc View Source GetGeometriesInView(MRect) Returns geometries whose bounding box intersects 'bbox' Declaration public Collection<Geometry> GetGeometriesInView(MRect bbox) Parameters Type Name Description MRect bbox Returns Type Description Collection < Geometry > Remarks Please note that this method doesn't guarantee that the geometries returned actually intersect 'bbox', but only that their BoundingBox intersects 'bbox'. This method is much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their BoundingBox, and using the Spatial Index. | Improve this Doc View Source GetGeometry(UInt32) Returns the geometry corresponding to the Object ID Declaration public Geometry? GetGeometry(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description Nullable < Geometry > geometry | Improve this Doc View Source GetObjectIDsInView(MRect) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public Collection<uint> GetObjectIDsInView(MRect bbox) Parameters Type Name Description MRect bbox Returns Type Description Collection < UInt32 > | Improve this Doc View Source RebuildSpatialIndex() Forces a rebuild of the spatial index. If the instance of the ShapeFile provider uses a file-based index the file is rewritten to disk. Declaration public void RebuildSpatialIndex() Implements IProvider IDisposable"
  },
  "api/Mapsui.Nts.Providers.Shapefile.ShapeType.html": {
    "href": "api/Mapsui.Nts.Providers.Shapefile.ShapeType.html",
    "title": "Enum ShapeType",
    "keywords": "Enum ShapeType Shapefile geometry type. Namespace : Mapsui.Nts.Providers.Shapefile Assembly : Mapsui.Nts.dll Syntax public enum ShapeType : int Fields Name Description MultiPatch A MultiPatch consists of a number of surface patches. Each surface patch describes a surface. The surface patches of a MultiPatch are referred to as its parts, and the type of part controls how the order of coordinates of an MultiPatch part is interpreted. Mapsui doesn't support this feature type. Multipoint A MultiPoint represents a set of points. Mapsui interprets this as MultiPointM A MultiPointM represents a set of PointM s. Mapsui interprets this as MultiPointZ A MultiPointZ represents a set of PointZ s. Mapsui interprets this as Null Null shape with no geometric data Point A point consists of a pair of double-precision coordinates. Mapsui interprets this as Point PointM A PointM consists of a pair of double-precision coordinates in the order X, Y, plus a measure M. Mapsui interprets this as Point PointZ A PointZ consists of a triplet of double-precision coordinates plus a measure. Mapsui interprets this as Point Polygon A polygon consists of one or more rings. A ring is a connected sequence of four or more points that form a closed, non-self-intersecting loop. A polygon may contain multiple outer rings. The order of coordinates or orientation for a ring indicates which side of the ring is the interior of the polygon. The neighborhood to the right of an observer walking along the ring in vertex order is the neighborhood inside the polygon. Coordinates of rings defining holes in polygons are in a counterclockwise direction. Vertices for a single, ringed polygon are, therefore, always in clockwise order. The rings of a polygon are referred to as its parts. Mapsui interprets this as either Polygon or PolygonM A PolygonM consists of a number of rings. A ring is a closed, non-self-intersecting loop. Mapsui interprets this as either Polygon or PolygonZ A PolygonZ consists of a number of rings. A ring is a closed, non-self-intersecting loop. A PolygonZ may contain multiple outer rings. The rings of a PolygonZ are referred to as its parts. Mapsui interprets this as either Polygon or PolyLine PolyLine is an ordered set of coordinates that consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as either or PolyLineM A shapefile PolyLineM consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as or PolyLineZ A PolyLineZ consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as or"
  },
  "api/Mapsui.Projections.CrsHelper.html": {
    "href": "api/Mapsui.Projections.CrsHelper.html",
    "title": "Class CrsHelper",
    "keywords": "Class CrsHelper Inheritance Object CrsHelper Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public static class CrsHelper : object Fields | Improve this Doc View Source EpsgPrefix Declaration public const string EpsgPrefix = null Field Value Type Description String | Improve this Doc View Source EsriStringPrefix Declaration public const string EsriStringPrefix = null Field Value Type Description String | Improve this Doc View Source Proj4StringPrefix Declaration public const string Proj4StringPrefix = null Field Value Type Description String Methods | Improve this Doc View Source GetCrsType(String) Declaration public static CrsType GetCrsType(string crs) Parameters Type Name Description String crs Returns Type Description CrsType | Improve this Doc View Source IsCrsProvided(Nullable<String>, Nullable<String>) Declaration public static bool IsCrsProvided(string? fromCRS, string? toCRS) Parameters Type Name Description Nullable < String > fromCRS Nullable < String > toCRS Returns Type Description Boolean | Improve this Doc View Source IsProjectionNeeded(Nullable<String>, Nullable<String>) Declaration public static bool IsProjectionNeeded(string? fromCRS, string? toCRS) Parameters Type Name Description Nullable < String > fromCRS Nullable < String > toCRS Returns Type Description Boolean | Improve this Doc View Source ToEpsgCode(String) Declaration public static int ToEpsgCode(string crs) Parameters Type Name Description String crs Returns Type Description Int32 | Improve this Doc View Source ToStandardizedCRS(Nullable<String>) Declaration public static string? ToStandardizedCRS(string? crs) Parameters Type Name Description Nullable < String > crs Returns Type Description Nullable < String >"
  },
  "api/Mapsui.Projections.CrsType.html": {
    "href": "api/Mapsui.Projections.CrsType.html",
    "title": "Enum CrsType",
    "keywords": "Enum CrsType Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public enum CrsType : int Fields Name Description Epgs EsriString Proj4String"
  },
  "api/Mapsui.Projections.html": {
    "href": "api/Mapsui.Projections.html",
    "title": "Namespace Mapsui.Projections",
    "keywords": "Namespace Mapsui.Projections Classes CrsHelper Mercator Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. ProjectionDefaults SphericalMercator Interfaces IProjection IProjectionCrs Enums CrsType"
  },
  "api/Mapsui.Projections.IProjection.html": {
    "href": "api/Mapsui.Projections.IProjection.html",
    "title": "Interface IProjection",
    "keywords": "Interface IProjection Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public interface IProjection Methods | Improve this Doc View Source IsProjectionSupported(Nullable<String>, Nullable<String>) Declaration bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description Nullable < String > fromCRS Nullable < String > toCRS Returns Type Description Boolean | Improve this Doc View Source Project(String, String, IEnumerable<IFeature>) Declaration void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description String fromCRS String toCRS IEnumerable < IFeature > features | Improve this Doc View Source Project(String, String, IFeature) Declaration void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description String fromCRS String toCRS IFeature feature | Improve this Doc View Source Project(String, String, MPoint) Declaration void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description String fromCRS String toCRS MPoint point | Improve this Doc View Source Project(String, String, MRect) Declaration void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description String fromCRS String toCRS MRect rect | Improve this Doc View Source Project(String, String, Double, Double) Declaration (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description String fromCRS String toCRS Double x Double y Returns Type Description (, ) < Double , Double >"
  },
  "api/Mapsui.Projections.IProjectionCrs.html": {
    "href": "api/Mapsui.Projections.IProjectionCrs.html",
    "title": "Interface IProjectionCrs",
    "keywords": "Interface IProjectionCrs Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public interface IProjectionCrs Methods | Improve this Doc View Source CrsFromEsri(String) Get Crs from Esri String Declaration string? CrsFromEsri(string esri) Parameters Type Name Description String esri Returns Type Description Nullable < String >"
  },
  "api/Mapsui.Projections.Mercator.html": {
    "href": "api/Mapsui.Projections.Mercator.html",
    "title": "Class Mercator",
    "keywords": "Class Mercator Inheritance Object Mercator Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class Mercator : object Methods | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static MPoint FromLonLat(double lon, double lat) Parameters Type Name Description Double lon Double lat Returns Type Description MPoint | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static MPoint ToLonLat(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description MPoint"
  },
  "api/Mapsui.Projections.Projection.html": {
    "href": "api/Mapsui.Projections.Projection.html",
    "title": "Class Projection",
    "keywords": "Class Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. Inheritance Object Projection Implements IProjection Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class Projection : object, IProjection Constructors | Improve this Doc View Source Projection() Declaration public Projection() Methods | Improve this Doc View Source IsProjectionSupported(Nullable<String>, Nullable<String>) Declaration public bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description Nullable < String > fromCRS Nullable < String > toCRS Returns Type Description Boolean | Improve this Doc View Source Project(String, String, IEnumerable<IFeature>) Declaration public void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description String fromCRS String toCRS IEnumerable < IFeature > features | Improve this Doc View Source Project(String, String, IFeature) Declaration public void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description String fromCRS String toCRS IFeature feature | Improve this Doc View Source Project(String, String, MPoint) Declaration public void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description String fromCRS String toCRS MPoint point | Improve this Doc View Source Project(String, String, MRect) Declaration public void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description String fromCRS String toCRS MRect rect | Improve this Doc View Source Project(String, String, Double, Double) Declaration public (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description String fromCRS String toCRS Double x Double y Returns Type Description (, ) < Double , Double > Implements IProjection"
  },
  "api/Mapsui.Projections.ProjectionDefaults.html": {
    "href": "api/Mapsui.Projections.ProjectionDefaults.html",
    "title": "Class ProjectionDefaults",
    "keywords": "Class ProjectionDefaults Inheritance Object ProjectionDefaults Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class ProjectionDefaults : object Properties | Improve this Doc View Source Projection Static property that can be overridden by a user defined IProjection. Declaration public static IProjection Projection { get; set; } Property Value Type Description IProjection"
  },
  "api/Mapsui.Projections.SphericalMercator.html": {
    "href": "api/Mapsui.Projections.SphericalMercator.html",
    "title": "Class SphericalMercator",
    "keywords": "Class SphericalMercator Inheritance Object SphericalMercator Namespace : Mapsui.Projections Assembly : Mapsui.dll Syntax public class SphericalMercator : object Methods | Improve this Doc View Source FromLonLat(MPoint) Declaration public static MPoint FromLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Improve this Doc View Source FromLonLat(Double, Double) Declaration public static (double x, double y) FromLonLat(double lon, double lat) Parameters Type Name Description Double lon Double lat Returns Type Description (, ) < Double , Double > | Improve this Doc View Source ToLonLat(MPoint) Declaration public static MPoint ToLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Improve this Doc View Source ToLonLat(Double, Double) Declaration public static (double lon, double lat) ToLonLat(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description (, ) < Double , Double >"
  },
  "api/Mapsui.Providers.FilteringProvider.html": {
    "href": "api/Mapsui.Providers.FilteringProvider.html",
    "title": "Class FilteringProvider",
    "keywords": "Class FilteringProvider Inheritance Object FilteringProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class FilteringProvider : object, IProvider Constructors | Improve this Doc View Source FilteringProvider(IProvider, Func<IFeature, Boolean>) Declaration public FilteringProvider(IProvider provider, Func<IFeature, bool> filter) Parameters Type Name Description IProvider provider Func < IFeature , Boolean > filter Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Providers.html": {
    "href": "api/Mapsui.Providers.html",
    "title": "Namespace Mapsui.Providers",
    "keywords": "Namespace Mapsui.Providers Classes FilteringProvider MemoryProvider ProjectingProvider StackedLabelProvider Interfaces IProjectingProvider IProvider Interface for data providers"
  },
  "api/Mapsui.Providers.IProjectingProvider.html": {
    "href": "api/Mapsui.Providers.IProjectingProvider.html",
    "title": "Interface IProjectingProvider",
    "keywords": "Interface IProjectingProvider Inherited Members IProvider.CRS IProvider.GetExtent() IProvider.GetFeaturesAsync(FetchInfo) Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProjectingProvider : IProvider Methods | Improve this Doc View Source IsCrsSupported(String) Queries whether a provider supports projection to a certain CRS. Declaration bool? IsCrsSupported(string crs) Parameters Type Name Description String crs The crs to project to Returns Type Description Nullable < Boolean > True if is does, false if it does not, null if it is unknown"
  },
  "api/Mapsui.Providers.IProvider.html": {
    "href": "api/Mapsui.Providers.IProvider.html",
    "title": "Interface IProvider",
    "keywords": "Interface IProvider Interface for data providers Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public interface IProvider Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() MRect of data set Declaration MRect GetExtent() Returns Type Description MRect BoundingBox | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >>"
  },
  "api/Mapsui.Providers.MemoryProvider.html": {
    "href": "api/Mapsui.Providers.MemoryProvider.html",
    "title": "Class MemoryProvider",
    "keywords": "Class MemoryProvider Inheritance Object MemoryProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class MemoryProvider : object, IProvider Constructors | Improve this Doc View Source MemoryProvider() Gets or sets the geometries this data source contains Declaration public MemoryProvider() | Improve this Doc View Source MemoryProvider(IEnumerable<IFeature>) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable < IFeature > features Features to be included in this dataSource | Improve this Doc View Source MemoryProvider(IFeature) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IFeature feature) Parameters Type Name Description IFeature feature Feature to be in this dataSource Properties | Improve this Doc View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Features Declaration public IReadOnlyList<IFeature> Features { get; } Property Value Type Description IReadOnlyList < IFeature > | Improve this Doc View Source SymbolSize Declaration public double SymbolSize { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Find(Nullable<Object>, String) Search for a feature Declaration public IFeature Find(object? value, string fieldName) Parameters Type Name Description Nullable < Object > value Value to search for String fieldName Name of the field to search in. This is the key of the T dictionary Returns Type Description IFeature | Improve this Doc View Source GetExtent() BoundingBox of data set Declaration public MRect GetExtent() Returns Type Description MRect BoundingBox | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public virtual Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Providers.ProjectingProvider.html": {
    "href": "api/Mapsui.Providers.ProjectingProvider.html",
    "title": "Class ProjectingProvider",
    "keywords": "Class ProjectingProvider Inheritance Object ProjectingProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class ProjectingProvider : object, IProvider Constructors | Improve this Doc View Source ProjectingProvider(IProvider, IProjection) Declaration public ProjectingProvider(IProvider provider, IProjection projection = null) Parameters Type Name Description IProvider provider IProjection projection Properties | Improve this Doc View Source CRS The CRS of the target. The source CRS will be projected to this target CRS. This should be equal to the CRS of the Map and the FetchInfo.CRS. Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Providers.StackedLabelProvider.html": {
    "href": "api/Mapsui.Providers.StackedLabelProvider.html",
    "title": "Class StackedLabelProvider",
    "keywords": "Class StackedLabelProvider Inheritance Object StackedLabelProvider Implements IProvider Namespace : Mapsui.Providers Assembly : Mapsui.dll Syntax public class StackedLabelProvider : object, IProvider Constructors | Improve this Doc View Source StackedLabelProvider(IProvider, LabelStyle, Pen, Brush) Declaration public StackedLabelProvider(IProvider provider, LabelStyle labelStyle, Pen rectangleLine = null, Brush rectangleFill = null) Parameters Type Name Description IProvider provider LabelStyle labelStyle Pen rectangleLine Brush rectangleFill Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Providers.Wfs.AxisOrderRegistry.html": {
    "href": "api/Mapsui.Providers.Wfs.AxisOrderRegistry.html",
    "title": "Class AxisOrderRegistry",
    "keywords": "Class AxisOrderRegistry A registry for the axis order of coordinate systems as defined in EPSG 8.4 data set Inheritance Object AxisOrderRegistry Namespace : Mapsui.Providers.Wfs Assembly : Mapsui.Nts.dll Syntax public sealed class AxisOrderRegistry : object Properties | Improve this Doc View Source Item[String] Gets the axis order for all EPSG defined coordinate reference systems with an srid less than 32768 Declaration public int[] this[string identifier] { get; } Parameters Type Name Description String identifier The identifier Property Value Type Description Int32 [] The axis order"
  },
  "api/Mapsui.Providers.Wfs.html": {
    "href": "api/Mapsui.Providers.Wfs.html",
    "title": "Namespace Mapsui.Providers.Wfs",
    "keywords": "Namespace Mapsui.Providers.Wfs Classes AxisOrderRegistry A registry for the axis order of coordinate systems as defined in EPSG 8.4 data set WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Enums WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions."
  },
  "api/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html",
    "title": "Class FeatureIdFilter_FE1_1_0",
    "keywords": "Class FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. Inheritance Object OgcFilterBase FeatureIdFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class FeatureIdFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source FeatureIdFilter_FE1_1_0(String) Initializes a new instance of the FeatureIdFilter_FE1_1_0 class. Declaration public FeatureIdFilter_FE1_1_0(string id) Parameters Type Name Description String id Methods | Improve this Doc View Source Encode() Declaration public string Encode() Returns Type Description String Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html",
    "title": "Enum GeometryTypeEnum",
    "keywords": "Enum GeometryTypeEnum Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public enum GeometryTypeEnum : int Fields Name Description CurvePropertyType LineStringPropertyType MultiCurvePropertyType MultiLineStringPropertyType MultiPointPropertyType MultiPolygonPropertyType MultiSurfacePropertyType PointPropertyType PolygonPropertyType SurfacePropertyType Unknown"
  },
  "api/Mapsui.Providers.Wfs.Utilities.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.html",
    "title": "Namespace Mapsui.Providers.Wfs.Utilities",
    "keywords": "Namespace Mapsui.Providers.Wfs.Utilities Classes FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. OgcFilterBase This class is the base class of all filters. It stores the filter arguments. OGCFilterCollection This class hosts a collection of instances implementing IFilter . PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. UrlQueryHelper WFS_1_0_0_TextResources WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). WFS_1_1_0_TextResources WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. WFS_XPathTextResourcesBase WfsFeatureTypeInfo WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Interfaces IFilter Filter interface IWFS_TextResources Text resources interface Enums GeometryTypeEnum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators."
  },
  "api/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html",
    "title": "Class HttpClientUtil",
    "keywords": "Class HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. Inheritance Object HttpClientUtil Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class HttpClientUtil : IDisposable Constructors | Improve this Doc View Source HttpClientUtil(IUrlPersistentCache) Initializes a new instance of the HttpClientUtil class. Declaration public HttpClientUtil(IUrlPersistentCache persistentCache = null) Parameters Type Name Description IUrlPersistentCache persistentCache Properties | Improve this Doc View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source PostData Sets the data of a HTTP POST request as byte array. Declaration public byte[] PostData { set; } Property Value Type Description Byte [] | Improve this Doc View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string? ProxyUrl { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Url Gets ans sets the Url of the request. Declaration public string? Url { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source AddHeader(String, String) Adds a HTTP header. Declaration public void AddHeader(string name, string value) Parameters Type Name Description String name The name of the header String value The value of the header | Improve this Doc View Source Close() This method closes the WebResponse object. Declaration public void Close() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source GetDataStream() Performs a HTTP-GET or HTTP-POST request and returns a datastream for reading. Declaration public Stream? GetDataStream() Returns Type Description Nullable < Stream > | Improve this Doc View Source Reset() This method resets all configurations. Declaration public void Reset()"
  },
  "api/Mapsui.Providers.Wfs.Utilities.IFilter.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.IFilter.html",
    "title": "Interface IFilter",
    "keywords": "Interface IFilter Filter interface Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public interface IFilter Methods | Improve this Doc View Source Encode() Declaration string Encode() Returns Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html",
    "title": "Interface IWFS_TextResources",
    "keywords": "Interface IWFS_TextResources Text resources interface Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public interface IWFS_TextResources Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Declaration string NSFEATURETYPEPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSGML Declaration string NSGML { get; } Property Value Type Description String | Improve this Doc View Source NSGMLPREFIX Declaration string NSGMLPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOGC Declaration string NSOGC { get; } Property Value Type Description String | Improve this Doc View Source NSOGCPREFIX Declaration string NSOGCPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOWS Declaration string NSOWS { get; } Property Value Type Description String | Improve this Doc View Source NSOWSPREFIX Declaration string NSOWSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMA Declaration string NSSCHEMA { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMAPREFIX Declaration string NSSCHEMAPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSWFS Declaration string NSWFS { get; } Property Value Type Description String | Improve this Doc View Source NSWFSPREFIX Declaration string NSWFSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSXLINK Declaration string NSXLINK { get; } Property Value Type Description String | Improve this Doc View Source NSXLINKPREFIX Declaration string NSXLINKPREFIX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BBOX Declaration string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Declaration string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Declaration string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Declaration string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Declaration string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Declaration string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Declaration string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Declaration string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Declaration string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Declaration string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Declaration string XPATH_SRS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TARGETNS Declaration string XPATH_TARGETNS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Declaration string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description String Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) Declaration string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName Returns Type Description String | Improve this Doc View Source GetCapabilitiesRequest() Declaration string GetCapabilitiesRequest() Returns Type Description String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) Declaration string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo Nullable < List < String >> labelProperties MRect boundingBox IFilter filter Returns Type Description String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) Declaration byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo Nullable < List < String >> labelProperties MRect boundingBox IFilter filter Returns Type Description Byte []"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html",
    "title": "Class OgcFilterBase",
    "keywords": "Class OgcFilterBase This class is the base class of all filters. It stores the filter arguments. Inheritance Object OgcFilterBase FeatureIdFilter_FE1_1_0 PropertyIsBetweenFilter_FE1_1_0 PropertyIsEqualToFilter_FE1_1_0 PropertyIsGreaterThanFilter_FE1_1_0 PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 PropertyIsLessThanFilter_FE1_1_0 PropertyIsLessThanOrEqualToFilter_FE1_1_0 PropertyIsLikeFilter_FE1_1_0 PropertyIsNotEqualToFilter_FE1_1_0 Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public abstract class OgcFilterBase : object Constructors | Improve this Doc View Source OgcFilterBase(String[]) Protected constructor for the abstract class. Declaration protected OgcFilterBase(string[] args) Parameters Type Name Description String [] args An array of arguments for the filter Fields | Improve this Doc View Source Args Declaration protected string[] Args Field Value Type Description String []"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html",
    "title": "Class OGCFilterCollection",
    "keywords": "Class OGCFilterCollection This class hosts a collection of instances implementing IFilter . Inheritance Object OGCFilterCollection Implements IFilter Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class OGCFilterCollection : object, IFilter Constructors | Improve this Doc View Source OGCFilterCollection() Initializes a new instance of the OGCFilterCollection class. Declaration public OGCFilterCollection() Properties | Improve this Doc View Source Filters Gets and sets a collection of instances implementing IFilter . Declaration public List<IFilter> Filters { get; set; } Property Value Type Description List < IFilter > | Improve this Doc View Source Junctor Gets and sets the operator for combining the filters. Declaration public OGCFilterCollection.JunctorEnum Junctor { get; set; } Property Value Type Description OGCFilterCollection.JunctorEnum Methods | Improve this Doc View Source AddFilter(IFilter) This method adds an instance implementing IFilter . Declaration public void AddFilter(IFilter filter) Parameters Type Name Description IFilter filter | Improve this Doc View Source AddFilterCollection(OGCFilterCollection) This method adds an instance of OGCFilterCollection . Declaration public void AddFilterCollection(OGCFilterCollection filterCollection) Parameters Type Name Description OGCFilterCollection filterCollection | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html",
    "title": "Enum OGCFilterCollection.JunctorEnum",
    "keywords": "Enum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators. Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public enum JunctorEnum : int Fields Name Description And Or"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html",
    "title": "Class PropertyIsBetweenFilter_FE1_1_0",
    "keywords": "Class PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsBetweenFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsBetweenFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsBetweenFilter_FE1_1_0(String, String, String) Initializes a new instance of the PropertyIsBetweenFilter_FE1_1_0 class. Declaration public PropertyIsBetweenFilter_FE1_1_0(string propertyName, string lowerBoundary, string upperBoundary) Parameters Type Name Description String propertyName String lowerBoundary String upperBoundary Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsEqualToFilter_FE1_1_0 class. Declaration public PropertyIsEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsGreaterThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsGreaterThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsLessThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsLessThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanFilter_FE1_1_0 class. Declaration public PropertyIsLessThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsLessThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsLessThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsLessThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html",
    "title": "Class PropertyIsLikeFilter_FE1_1_0",
    "keywords": "Class PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsLikeFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsLikeFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLikeFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLikeFilter_FE1_1_0 class. Declaration public PropertyIsLikeFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsNotEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. Inheritance Object OgcFilterBase PropertyIsNotEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class PropertyIsNotEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsNotEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsNotEqualToFilter_FE1_1_0 class. Declaration public PropertyIsNotEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/Mapsui.Providers.Wfs.Utilities.UrlQueryHelper.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.UrlQueryHelper.html",
    "title": "Class UrlQueryHelper",
    "keywords": "Class UrlQueryHelper Inheritance Object UrlQueryHelper Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public static class UrlQueryHelper : object Methods | Improve this Doc View Source AppendQuery(String, String) Append Query Declaration public static string AppendQuery(this string url, string query) Parameters Type Name Description String url url String query query Returns Type Description String uri with query"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html",
    "title": "Class WFS_1_0_0_TextResources",
    "keywords": "Class WFS_1_0_0_TextResources Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_0_0_XPathTextResources.XPATH_SRS WFS_1_0_0_XPathTextResources.XPATH_BBOX WFS_1_0_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_0_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WFS_1_0_0_TextResources : WFS_1_0_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName The name of the featuretype to query Returns Type Description String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query Nullable < List < String >> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query Nullable < List < String >> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description Byte [] Implements IWFS_TextResources"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html",
    "title": "Class WFS_1_0_0_XPathTextResources",
    "keywords": "Class WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WFS_1_0_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the 'maxx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the 'maxy'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the 'minx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the 'miny'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a FeatureType in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html",
    "title": "Class WFS_1_1_0_TextResources",
    "keywords": "Class WFS_1_1_0_TextResources Inheritance Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_1_0_XPathTextResources.XPATH_SRS WFS_1_1_0_XPathTextResources.XPATH_BBOX WFS_1_1_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_1_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WFS_1_1_0_TextResources : WFS_1_1_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName The name of the featuretype to query Returns Type Description String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query Nullable < List < String >> labelProperties MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, Nullable<List<String>>, MRect, IFilter) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect boundingBox, IFilter filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query Nullable < List < String >> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description Byte [] Implements IWFS_TextResources"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html",
    "title": "Class WFS_1_1_0_XPathTextResources",
    "keywords": "Class WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. Inheritance Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WFS_1_1_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html",
    "title": "Class WFS_XPathTextResourcesBase",
    "keywords": "Class WFS_XPathTextResourcesBase Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_1_0_XPathTextResources Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WFS_XPathTextResourcesBase : object Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Prefix used for feature namespace Declaration public string NSFEATURETYPEPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSGML GML namespace URI Declaration public string NSGML { get; } Property Value Type Description String | Improve this Doc View Source NSGMLPREFIX Prefix used for GML namespace Declaration public string NSGMLPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOGC OGC namespace URI Declaration public string NSOGC { get; } Property Value Type Description String | Improve this Doc View Source NSOGCPREFIX Prefix used for OGC namespace Declaration public string NSOGCPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOWS OWS namespace URI Declaration public string NSOWS { get; } Property Value Type Description String | Improve this Doc View Source NSOWSPREFIX Prefix used for OWS namespace Declaration public string NSOWSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMA XML schema namespace URI Declaration public string NSSCHEMA { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMAPREFIX Prefix used for XML schema namespace Declaration public string NSSCHEMAPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSWFS WFS namespace URI Declaration public string NSWFS { get; } Property Value Type Description String | Improve this Doc View Source NSWFSPREFIX Prefix used for WFS namespace Declaration public string NSWFSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSXLINK XLink namespace URI Declaration public string NSXLINK { get; } Property Value Type Description String | Improve this Doc View Source NSXLINKPREFIX Prefix used for XLink namespace Declaration public string NSXLINKPREFIX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Gets an XPath string addressing the name of an element having a type-attribute referencing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2: Finding the name of the featuretype's element with a named complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Gets an XPath string addressing the name of an element described by an anonymous complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2Alt: Finding the name of the featuretype's element with an anonymous complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Gets an XPath string addressing the 'gml'-prefixed ref-attribute of an element. This is for querying the name of the GML geometry element. Declaration public string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Gets an XPath string addressing an element with a 'gml'-prefixed type-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype in the most simple manner. Declaration public string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Gets an XPath string addressing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype. Step1: Finding the complex type with a geometry element from GML specification. Declaration public string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Gets an XPath string addressing a name-attribute. Declaration public string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TARGETNS Gets an XPath string addressing the target namespace in 'DescribeFeatureType'. Declaration public string XPATH_TARGETNS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Gets an XPath string addressing a type-attribute. Declaration public string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html",
    "title": "Class WfsFeatureTypeInfo.BoundingBox",
    "keywords": "Class WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. Inheritance Object WfsFeatureTypeInfo.BoundingBox Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class BoundingBox : object Fields | Improve this Doc View Source MaxLat Declaration public double MaxLat Field Value Type Description Double | Improve this Doc View Source MaxLong Declaration public double MaxLong Field Value Type Description Double | Improve this Doc View Source MinLat Declaration public double MinLat Field Value Type Description Double | Improve this Doc View Source MinLong Declaration public double MinLong Field Value Type Description Double"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.ElementInfo.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.ElementInfo.html",
    "title": "Class WfsFeatureTypeInfo.ElementInfo",
    "keywords": "Class WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. Inheritance Object WfsFeatureTypeInfo.ElementInfo Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class ElementInfo : object Constructors | Improve this Doc View Source ElementInfo(String, String) Declaration public ElementInfo(string name, string dataType) Parameters Type Name Description String name String dataType Properties | Improve this Doc View Source DataType Gets the type of the element Declaration public string DataType { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the name of the element Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html",
    "title": "Class WfsFeatureTypeInfo.GeometryInfo",
    "keywords": "Class WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Inheritance Object WfsFeatureTypeInfo.GeometryInfo Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class GeometryInfo : object Fields | Improve this Doc View Source GeometryName Declaration public string GeometryName Field Value Type Description String | Improve this Doc View Source GeometryType Declaration public string GeometryType Field Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html": {
    "href": "api/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html",
    "title": "Class WfsFeatureTypeInfo",
    "keywords": "Class WfsFeatureTypeInfo Inheritance Object WfsFeatureTypeInfo Namespace : Mapsui.Providers.Wfs.Utilities Assembly : Mapsui.Nts.dll Syntax public class WfsFeatureTypeInfo : object Constructors | Improve this Doc View Source WfsFeatureTypeInfo() Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo() | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName) Parameters Type Name Description String serviceUri String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String, GeometryTypeEnum) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType) Parameters Type Name Description String serviceUri String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. Properties | Improve this Doc View Source BBox Gets or sets the spatial extent of the featuretype - defined as minimum bounding rectangle. Declaration public WfsFeatureTypeInfo.BoundingBox BBox { get; set; } Property Value Type Description WfsFeatureTypeInfo.BoundingBox | Improve this Doc View Source Cs Separator for coordinate values (for gml:coordinates) Declaration public string Cs { get; set; } Property Value Type Description String | Improve this Doc View Source DecimalDel Decimal separator (for gml:coordinates) Declaration public string DecimalDel { get; set; } Property Value Type Description String | Improve this Doc View Source Elements Gets the elements associated to the feature. Declaration public List<WfsFeatureTypeInfo.ElementInfo> Elements { get; } Property Value Type Description List < WfsFeatureTypeInfo.ElementInfo > | Improve this Doc View Source FeatureTypeNamespace Gets or sets the featuretype namespace. This argument is obligatory for data retrieving, except when using the quick geometries option. Declaration public string FeatureTypeNamespace { get; set; } Property Value Type Description String | Improve this Doc View Source Geometry Gets or sets information about the geometry of the featuretype. Setting at least the geometry name is obligatory for data retrieving. Declaration public WfsFeatureTypeInfo.GeometryInfo Geometry { get; set; } Property Value Type Description WfsFeatureTypeInfo.GeometryInfo | Improve this Doc View Source LabelFields Declaration public List<string>? LabelFields { get; set; } Property Value Type Description Nullable < List < String >> | Improve this Doc View Source Name Gets or sets the name of the featuretype. This argument is obligatory for data retrieving. Declaration public string Name { get; set; } Property Value Type Description String The name. | Improve this Doc View Source Prefix Gets or sets the prefix of the featuretype and it's nested elements. This argument is obligatory for data retrieving, if the featuretype is declared with a prefix in 'GetCapabilities'. Declaration public string? Prefix { get; set; } Property Value Type Description Nullable < String > The prefix. | Improve this Doc View Source ServiceUri Gets or sets the service URI for WFS 'GetFeature' request. This argument is obligatory for data retrieving. Declaration public string? ServiceUri { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source SRID Gets or sets the spatial reference ID Declaration public string SRID { get; set; } Property Value Type Description String | Improve this Doc View Source Ts Tuple separator (for gml:coordinates) Declaration public string Ts { get; set; } Property Value Type Description String"
  },
  "api/Mapsui.Providers.Wfs.WFSProvider.html": {
    "href": "api/Mapsui.Providers.Wfs.WFSProvider.html",
    "title": "Class WFSProvider",
    "keywords": "Class WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Inheritance Object WFSProvider Implements IProvider IDisposable Namespace : Mapsui.Providers.Wfs Assembly : Mapsui.Nts.dll Syntax public class WFSProvider : object, IProvider Constructors | Improve this Doc View Source WFSProvider(WfsFeatureTypeInfo, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with a WfsFeatureTypeInfo object, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(WfsFeatureTypeInfo featureTypeInfo, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo The featureTypeInfo Instance WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache | Improve this Doc View Source WFSProvider(IXPathQueryManager, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process, if the geometry type in 'DescribeFeatureType is unprecise. WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache | Improve this Doc View Source WFSProvider(IXPathQueryManager, String, String, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache | Improve this Doc View Source WFSProvider(String, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(string getCapabilitiesUri, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String getCapabilitiesUri The URL for the 'GetCapabilities' request. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process, if the geometry type in 'DescribeFeatureType is unprecise. WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache | Improve this Doc View Source WFSProvider(String, String, String, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(string getCapabilitiesUri, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String getCapabilitiesUri The URL for the 'GetCapabilities' request. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache Interface | Improve this Doc View Source WFSProvider(String, String, String, String, String, GeometryTypeEnum, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String serviceUri The service URL String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The name of the feature type String geometryName The name of the geometry. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache | Improve this Doc View Source WFSProvider(String, String, String, String, String, WFSProvider.WFSVersionEnum, IUrlPersistentCache) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String serviceUri The service URL String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The name of the feature type String geometryName The name of the geometry WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache Properties | Improve this Doc View Source AxisOrder Gets or sets a value indicating the axis order Declaration public int[] AxisOrder { get; set; } Property Value Type Description Int32 [] Remarks The axis order is an array of array offsets. It can be either {0, 1} or {1, 0}. If not set explictly, AxisOrderRegistry is asked for a value based on . | Improve this Doc View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source FeatureTypeInfo Gets feature metadata Declaration public WfsFeatureTypeInfo FeatureTypeInfo { get; } Property Value Type Description WfsFeatureTypeInfo | Improve this Doc View Source GetCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. Declaration public IXPathQueryManager GetCapabilitiesCache { get; set; } Property Value Type Description IXPathQueryManager | Improve this Doc View Source GetFeatureGetRequest Gets or sets a value indicating whether the 'GetFeature' request should be done with HTTP GET. This option can be important when obtaining data from a WFS provided by an UMN MapServer. Declaration public bool GetFeatureGetRequest { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Labels Gets or sets the property of the featuretype responsible for labels Declaration public List<string> Labels { get; set; } Property Value Type Description List < String > | Improve this Doc View Source MultiGeometries Gets or sets a value indicating whether the 'GetFeature' parser should ignore multi-geometries (MultiPoint, MultiLineString, MultiCurve, MultiPolygon, MultiSurface). By default it does not. Ignoring multi-geometries can lead to a better performance. Declaration public bool MultiGeometries { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OgcFilter Gets or sets an OGC Filter. Declaration public IFilter OgcFilter { get; set; } Property Value Type Description IFilter | Improve this Doc View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string? ProxyUrl { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source QuickGeometries Gets or sets a value indicating whether extracting geometry information from 'GetFeature' response shall be done quickly without paying attention to context validation, polygon boundaries and multi-geometries. This option accelerates the geometry parsing process, but in scarce cases can lead to errors. Declaration public bool QuickGeometries { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExecuteIntersectionQuery(MRect) Returns all features whose WfsFeatureTypeInfo.BoundingBox intersects 'bbox'. Declaration public IEnumerable<IFeature> ExecuteIntersectionQuery(MRect bbox) Parameters Type Name Description MRect bbox Returns Type Description IEnumerable < IFeature > Features within the specified WfsFeatureTypeInfo.BoundingBox | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Gets the features within the specified FetchInfo .\"/> Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider IDisposable"
  },
  "api/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html": {
    "href": "api/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html",
    "title": "Enum WFSProvider.WFSVersionEnum",
    "keywords": "Enum WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions. Namespace : Mapsui.Providers.Wfs Assembly : Mapsui.Nts.dll Syntax public enum WFSVersionEnum : int Fields Name Description WFS_1_0_0 Version 1.0.0 WFS_1_1_0 Version 1.1.0"
  },
  "api/Mapsui.Providers.Wfs.Xml.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.html",
    "title": "Namespace Mapsui.Providers.Wfs.Xml",
    "keywords": "Namespace Mapsui.Providers.Wfs.Xml Classes XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager . Interfaces IXPathQueryManager XPathQueryManager interface"
  },
  "api/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html",
    "title": "Interface IXPathQueryManager",
    "keywords": "Interface IXPathQueryManager XPathQueryManager interface Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public interface IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) Declaration void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix String ns | Improve this Doc View Source Clone() Declaration IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) Declaration XPathExpression? Compile(string xPath) Parameters Type Name Description String xPath Returns Type Description Nullable < XPathExpression > | Improve this Doc View Source GetIterator(Nullable<XPathExpression>) Declaration XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description Nullable < XPathExpression > xPath Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) Declaration XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath DictionaryEntry [] queryParameters Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetValueFromNode(Nullable<XPathExpression>, DictionaryEntry[]) Declaration string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath DictionaryEntry [] queryParameters Returns Type Description Nullable < String > | Improve this Doc View Source GetXPathQueryManagerInContext(Nullable<XPathExpression>, DictionaryEntry[]) Declaration IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath DictionaryEntry [] queryParameters Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() Declaration void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Declaration void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil | Improve this Doc View Source SetDocumentToParse(Stream) Declaration void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html",
    "title": "Class XPathQueryManager.CustomQueryContext",
    "keywords": "Class XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. Inheritance Object XPathQueryManager.CustomQueryContext Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class CustomQueryContext : XsltContext Constructors | Improve this Doc View Source CustomQueryContext() Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext() | Improve this Doc View Source CustomQueryContext(NameTable) Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext(NameTable table) Parameters Type Name Description NameTable table A NameTable instance Properties | Improve this Doc View Source Whitespace Method from XsltContext. Declaration public override bool Whitespace { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddNamespace(IDictionary<String, String>) This method adds a list of namespaces to use in the custom context. Declaration public void AddNamespace(IDictionary<string, string> namespaces) Parameters Type Name Description IDictionary < String , String > namespaces A list of namespaces | Improve this Doc View Source AddParam(DictionaryEntry[]) This method adds a list of parameters to the custom context. Declaration public void AddParam(DictionaryEntry[] parameters) Parameters Type Name Description DictionaryEntry [] parameters A list of parameters | Improve this Doc View Source AddParam(String, Object) This method adds a parameter to the custom context. Declaration public void AddParam(string name, object parameter) Parameters Type Name Description String name The name of the parameter Object parameter The value of the parameter | Improve this Doc View Source CompareDocument(String, String) Method from XsltContext. Declaration public override int CompareDocument(string baseUri, string nextbaseUri) Parameters Type Name Description String baseUri String nextbaseUri Returns Type Description Int32 | Improve this Doc View Source GetParam(String) This method gets a parameter by name. Declaration public object? GetParam(string name) Parameters Type Name Description String name The name of the parameter Returns Type Description Nullable < Object > | Improve this Doc View Source PreserveWhitespace(XPathNavigator) Method from XsltContext. Declaration public override bool PreserveWhitespace(XPathNavigator node) Parameters Type Name Description XPathNavigator node Returns Type Description Boolean | Improve this Doc View Source RemoveParam(String) This method removes a parameter from the inherent parameter list. Declaration public object? RemoveParam(string name) Parameters Type Name Description String name The name of the parameter Returns Type Description Nullable < Object > | Improve this Doc View Source ResetParams() This methods clears the inherent parameter list. Declaration public void ResetParams() | Improve this Doc View Source ResolveFunction(String, String, XPathResultType[]) This method resolves a function appearing in an XPath expression. Declaration public override IXsltContextFunction ResolveFunction(string prefix, string name, XPathResultType[] argTypes) Parameters Type Name Description String prefix The prefix of the function String name The name of the function XPathResultType [] argTypes A list of argument types of the function Returns Type Description IXsltContextFunction | Improve this Doc View Source ResolveVariable(String, String) This method resolves a variable appearing in an XPath expression. Declaration public override IXsltContextVariable ResolveVariable(string prefix, string name) Parameters Type Name Description String prefix The prefix of the variable String name The name of the variable Returns Type Description IXsltContextVariable"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html",
    "title": "Class XPathQueryManager",
    "keywords": "Class XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. Inheritance Object XPathQueryManager Implements IXPathQueryManager Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class XPathQueryManager : object, IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManager() Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager() | Improve this Doc View Source XPathQueryManager(HttpClientUtil) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source XPathQueryManager(Stream) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source XPathQueryManager(Byte[]) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(byte[] document) Parameters Type Name Description Byte [] document A byte array with XML data | Improve this Doc View Source XPathQueryManager(Nullable<XPathDocument>) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(XPathDocument? xPathDoc) Parameters Type Name Description Nullable < XPathDocument > xPathDoc An XmlDocument instance | Improve this Doc View Source XPathQueryManager(String) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(string fileName) Parameters Type Name Description String fileName Methods | Improve this Doc View Source AddNamespace(String, String) This method adds a namespace for XPath queries. Declaration public void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix The namespace prefix String ns The namespace URI | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XmlDocument instance. Declaration public IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method compiles an XPath string. Declaration public XPathExpression? Compile(string xPath) Parameters Type Name Description String xPath The XPath string Returns Type Description Nullable < XPathExpression > A compiled XPath expression | Improve this Doc View Source GetIterator(Nullable<XPathExpression>) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description Nullable < XPathExpression > xPath The compiled XPath expression Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetValueFromNode(Nullable<XPathExpression>, DictionaryEntry[]) This method returns the value of the first node the XPath expression addresses. Declaration public string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description Nullable < String > | Improve this Doc View Source GetValuesFromNodes(XPathExpression) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetXPathQueryManagerInContext(Nullable<XPathExpression>, DictionaryEntry[]) This method returns an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration public IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method deletes the current namespace context. Declaration public void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Sets a new XML document. Declaration public void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Stream) Sets a new XML document. Declaration public void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source SetDocumentToParse(Byte[]) Sets a new XML document. Declaration public void SetDocumentToParse(byte[] document) Parameters Type Name Description Byte [] document A byte array with XML data | Improve this Doc View Source SetDocumentToParse(String) Sets a new XmlDocument Declaration public void SetDocumentToParse(string fileName) Parameters Type Name Description String fileName Implements IXPathQueryManager"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html",
    "title": "Class XPathQueryManager.ParamBase",
    "keywords": "Class XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public abstract class ParamBase : object Constructors | Improve this Doc View Source ParamBase(XPathResultType[], XPathResultType, Int32, Int32) Protected constructor for the abstract class. Declaration protected ParamBase(XPathResultType[] argTypes, XPathResultType returnType, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function XPathResultType returnType The return type of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Properties | Improve this Doc View Source ArgTypes Gets the argument types. Declaration public XPathResultType[] ArgTypes { get; } Property Value Type Description XPathResultType [] | Improve this Doc View Source Maxargs Gets the maximum number of arguments allowed. Declaration public int Maxargs { get; } Property Value Type Description Int32 | Improve this Doc View Source Minargs Gets the minimum number of arguments allowed. Declaration public int Minargs { get; } Property Value Type Description Int32 | Improve this Doc View Source ReturnType Gets the return type. Declaration public XPathResultType ReturnType { get; } Property Value Type Description XPathResultType"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html",
    "title": "Class XPathQueryManager.ParamCompare",
    "keywords": "Class XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class ParamCompare : XPathQueryManager.ParamBase Constructors | Improve this Doc View Source ParamCompare(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompare class. Declaration public ParamCompare(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public virtual object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description Object A boolean value indicating whether the argument strings are identical | Improve this Doc View Source ResolveArgument(Object) This method creates a string from an object argument. In many cases the argument is an XPathNodeIterator that must be resolved. Declaration protected string? ResolveArgument(object arg) Parameters Type Name Description Object arg An argument of the function to be resolved Returns Type Description Nullable < String > Implements IXsltContextFunction"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html",
    "title": "Class XPathQueryManager.ParamCompareWithTargetNs",
    "keywords": "Class XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamCompare.ResolveArgument(Object) XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class ParamCompareWithTargetNs : XPathQueryManager.ParamCompare Constructors | Improve this Doc View Source ParamCompareWithTargetNs(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompareWithTargetNs class. Declaration public ParamCompareWithTargetNs(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public override object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description Object A boolean value indicating whether the argument strings are identical Overrides XPathQueryManager.ParamCompare.Invoke(XsltContext, Object[], XPathNavigator) Implements IXsltContextFunction"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html",
    "title": "Class XPathQueryManager.ParamFunctionVar",
    "keywords": "Class XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. Inheritance Object XPathQueryManager.ParamFunctionVar Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class ParamFunctionVar : IXsltContextVariable Constructors | Improve this Doc View Source ParamFunctionVar(Object) Initializes a new instance of the XPathQueryManager.ParamFunctionVar class. Declaration public ParamFunctionVar(object param) Parameters Type Name Description Object param The parameter Properties | Improve this Doc View Source IsLocal Method implementing IXsltContextVariable Declaration public bool IsLocal { get; } Property Value Type Description Boolean | Improve this Doc View Source IsParam Method implementing IXsltContextVariable Declaration public bool IsParam { get; } Property Value Type Description Boolean | Improve this Doc View Source VariableType Method implementing IXsltContextVariable Declaration public XPathResultType VariableType { get; } Property Value Type Description XPathResultType Methods | Improve this Doc View Source Evaluate(XsltContext) Method implementing IXsltContextVariable Declaration public object Evaluate(XsltContext xsltContext) Parameters Type Name Description XsltContext xsltContext Returns Type Description Object"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html",
    "title": "Class XPathQueryManagerCompiledExpressionsDecorator",
    "keywords": "Class XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. Inheritance Object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Implements IXPathQueryManager Inherited Members XPathQueryManagerDecoratorBase.XPathQueryManager XPathQueryManagerDecoratorBase.AddNamespace(String, String) XPathQueryManagerDecoratorBase.GetIterator(Nullable<XPathExpression>) XPathQueryManagerDecoratorBase.GetIterator(XPathExpression, DictionaryEntry[]) XPathQueryManagerDecoratorBase.GetValueFromNode(Nullable<XPathExpression>, DictionaryEntry[]) XPathQueryManagerDecoratorBase.GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) XPathQueryManagerDecoratorBase.ResetNamespaces() XPathQueryManagerDecoratorBase.SetDocumentToParse(Stream) XPathQueryManagerDecoratorBase.SetDocumentToParse(HttpClientUtil) Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public class XPathQueryManagerCompiledExpressionsDecorator : XPathQueryManagerDecoratorBase, IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager) Initializes a new instance of the XPathQueryManagerCompiledExpressionsDecorator class. Declaration public XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Methods | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XPathDocument instance. Declaration public override IXPathQueryManager Clone() Returns Type Description IXPathQueryManager Overrides XPathQueryManagerDecoratorBase.Clone() | Improve this Doc View Source Compile(String) This method compiles an XPath string, if not already saved. Otherwise it returns the available XPath compilation. Declaration public override XPathExpression? Compile(string xPath) Parameters Type Name Description String xPath The XPath string Returns Type Description Nullable < XPathExpression > A compiled XPath expression Overrides XPathQueryManagerDecoratorBase.Compile(String) | Improve this Doc View Source GetXPathQueryManagerInContext(Nullable<XPathExpression>, DictionaryEntry[]) This method returns an instance of XPathQueryManagerCompiledExpressionsDecorator in the context of the first node the XPath expression addresses. Declaration public override IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager Implements IXPathQueryManager"
  },
  "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html": {
    "href": "api/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html",
    "title": "Class XPathQueryManagerDecoratorBase",
    "keywords": "Class XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager . Inheritance Object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Namespace : Mapsui.Providers.Wfs.Xml Assembly : Mapsui.Nts.dll Syntax public abstract class XPathQueryManagerDecoratorBase : object Constructors | Improve this Doc View Source XPathQueryManagerDecoratorBase(IXPathQueryManager) Protected constructor for the abstract class. Declaration protected XPathQueryManagerDecoratorBase(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Fields | Improve this Doc View Source XPathQueryManager Declaration protected IXPathQueryManager XPathQueryManager Field Value Type Description IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix A namespace prefix String ns A namespace URI | Improve this Doc View Source Clone() This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathExpression? Compile(string xPath) Parameters Type Name Description String xPath An XPath string Returns Type Description Nullable < XPathExpression > A compiled XPath expression | Improve this Doc View Source GetIterator(Nullable<XPathExpression>) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description Nullable < XPathExpression > xPath A compiled XPath expression Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description Nullable < XPathNodeIterator > | Improve this Doc View Source GetValueFromNode(Nullable<XPathExpression>, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description Nullable < XPathExpression > xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description Nullable < String > | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters = null) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void ResetNamespaces() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Stream) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data"
  },
  "api/Mapsui.Providers.Wms.Capabilities.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.html",
    "title": "Class Capabilities",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance Object Capabilities Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class Capabilities : object"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactAddress",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct ContactAddress Fields | Improve this Doc View Source Address Contact address Declaration public string? Address Field Value Type Description Nullable < String > | Improve this Doc View Source AddressType Type of address (usually \"postal\"). Declaration public string? AddressType Field Value Type Description Nullable < String > | Improve this Doc View Source City Contact City Declaration public string? City Field Value Type Description Nullable < String > | Improve this Doc View Source Country Country of contact address Declaration public string? Country Field Value Type Description Nullable < String > | Improve this Doc View Source PostCode Zipcode of contact Declaration public string? PostCode Field Value Type Description Nullable < String > | Improve this Doc View Source StateOrProvince State or province of contact Declaration public string? StateOrProvince Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactPerson",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct ContactPerson Fields | Improve this Doc View Source Organisation Organisation of primary person Declaration public string? Organisation Field Value Type Description Nullable < String > | Improve this Doc View Source Person Primary contact person Declaration public string? Person Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html",
    "title": "Struct Capabilities.WmsContactInformation",
    "keywords": "Struct Capabilities.WmsContactInformation Stores contact metadata about WMS service Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsContactInformation Fields | Improve this Doc View Source Address Address Declaration public Capabilities.WmsContactInformation.ContactAddress Address Field Value Type Description Capabilities.WmsContactInformation.ContactAddress | Improve this Doc View Source ElectronicMailAddress Email address Declaration public string? ElectronicMailAddress Field Value Type Description Nullable < String > | Improve this Doc View Source FacsimileTelephone Fax number Declaration public string? FacsimileTelephone Field Value Type Description Nullable < String > | Improve this Doc View Source PersonPrimary Primary contact person Declaration public Capabilities.WmsContactInformation.ContactPerson PersonPrimary Field Value Type Description Capabilities.WmsContactInformation.ContactPerson | Improve this Doc View Source Position Position of contact person Declaration public string? Position Field Value Type Description Nullable < String > | Improve this Doc View Source VoiceTelephone Telephone Declaration public string? VoiceTelephone Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html": {
    "href": "api/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html",
    "title": "Struct Capabilities.WmsServiceDescription",
    "keywords": "Struct Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsServiceDescription Fields | Improve this Doc View Source Abstract Optional narrative description providing additional information Declaration public string? Abstract Field Value Type Description Nullable < String > | Improve this Doc View Source AccessConstraints The optional element \"AccessConstraints\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no access constraints, as follows: \"none\". When constraints are imposed, no precise syntax has been defined for the text content of these elements, but client applications may display the content for user information and action. Declaration public string? AccessConstraints Field Value Type Description Nullable < String > | Improve this Doc View Source ContactInformation Optional WMS contact information Declaration public Capabilities.WmsContactInformation ContactInformation Field Value Type Description Capabilities.WmsContactInformation | Improve this Doc View Source Fees The optional element \"Fees\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no fees, as follows: \"none\". Declaration public string? Fees Field Value Type Description Nullable < String > | Improve this Doc View Source Keywords Optional list of keywords or keyword phrases describing the server as a whole to help catalog searching Declaration public string[] Keywords Field Value Type Description String [] | Improve this Doc View Source LayerLimit Maximum number of layers allowed (0=no restrictions) Declaration public uint LayerLimit Field Value Type Description UInt32 | Improve this Doc View Source MaxHeight Maximum height allowed in pixels (0=no restrictions) Declaration public uint MaxHeight Field Value Type Description UInt32 | Improve this Doc View Source MaxWidth Maximum width allowed in pixels (0=no restrictions) Declaration public uint MaxWidth Field Value Type Description UInt32 | Improve this Doc View Source OnlineResource Mandatory Top-level web address of service or service provider. Declaration public string? OnlineResource Field Value Type Description Nullable < String > | Improve this Doc View Source Title Mandatory Human-readable title for pick lists Declaration public string? Title Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Client.html": {
    "href": "api/Mapsui.Providers.Wms.Client.html",
    "title": "Class Client",
    "keywords": "Class Client Class for requesting and parsing a WMS servers capabilities Inheritance Object Client Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class Client : object Constructors | Improve this Doc View Source Client(XmlDocument, Nullable<Func<String, Task<Stream>>>) Declaration public Client(XmlDocument capabilitiesXmlDocument, Func<string, Task<Stream>>? getStreamAsync = null) Parameters Type Name Description XmlDocument capabilitiesXmlDocument Nullable < Func < String , Task < Stream >>> getStreamAsync Properties | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description String [] | Improve this Doc View Source GetFeatureInfoOutputFormats Gets a list of available feature info mime type formats Declaration public Collection<string>? GetFeatureInfoOutputFormats { get; } Property Value Type Description Nullable < Collection < String >> | Improve this Doc View Source GetFeatureInfoRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetFeatureInfoRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetMapOutputFormats Gets a list of available image mime type formats Declaration public Collection<string>? GetMapOutputFormats { get; } Property Value Type Description Nullable < Collection < String >> | Improve this Doc View Source GetMapRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetMapRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source Layer Gets the hierarchical layer structure Declaration public Client.WmsServerLayer Layer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source ServiceDescription Gets the service description Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilities' VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode? VendorSpecificCapabilities { get; } Property Value Type Description Nullable < XmlNode > | Improve this Doc View Source WmsVersion Gets the version of the WMS server (ex. \"1.3.0\") Declaration public string WmsVersion { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateAsync(String, Nullable<String>, Nullable<Func<String, Task<Stream>>>, IUrlPersistentCache) Initializes WMS server and parses the Capabilities request Declaration public static async Task<Client> CreateAsync(string url, string? wmsVersion = null, Func<string, Task<Stream>>? getStreamAsync = null, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String url URL of wms server Nullable < String > wmsVersion WMS version number, null to get the default from service Nullable < Func < String , Task < Stream >>> getStreamAsync Download method, leave null for default IUrlPersistentCache persistentCache persistent Cache Returns Type Description Task < Client >"
  },
  "api/Mapsui.Providers.Wms.Client.WmsLayerStyle.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsLayerStyle.html",
    "title": "Struct Client.WmsLayerStyle",
    "keywords": "Struct Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsLayerStyle Fields | Improve this Doc View Source Abstract Abstract Declaration public string? Abstract Field Value Type Description Nullable < String > | Improve this Doc View Source LegendUrl Legend Declaration public Client.WmsStyleLegend LegendUrl Field Value Type Description Client.WmsStyleLegend | Improve this Doc View Source Name Name Declaration public string? Name Field Value Type Description Nullable < String > | Improve this Doc View Source StyleSheetUrl Style Sheet Url Declaration public Client.WmsOnlineResource StyleSheetUrl Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Title Title Declaration public string? Title Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Client.WmsOnlineResource.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsOnlineResource.html",
    "title": "Struct Client.WmsOnlineResource",
    "keywords": "Struct Client.WmsOnlineResource Structure for storing info on an Online Resource Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsOnlineResource Fields | Improve this Doc View Source OnlineResource URI of online resource Declaration public string? OnlineResource Field Value Type Description Nullable < String > | Improve this Doc View Source Type Type of online resource (Ex. request method 'Get' or 'Post') Declaration public string? Type Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Client.WmsServerLayer.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsServerLayer.html",
    "title": "Struct Client.WmsServerLayer",
    "keywords": "Struct Client.WmsServerLayer Structure for holding information about a WMS Layer Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsServerLayer Fields | Improve this Doc View Source Abstract Abstract Declaration public string? Abstract Field Value Type Description Nullable < String > | Improve this Doc View Source BoundingBoxes Coordinate Reference Systems supported by layer Declaration public IDictionary<string, MRect> BoundingBoxes Field Value Type Description IDictionary < String , MRect > | Improve this Doc View Source ChildLayers Collection of child layers Declaration public Client.WmsServerLayer[] ChildLayers Field Value Type Description Client.WmsServerLayer [] | Improve this Doc View Source CRS Coordinate Reference Systems supported by layer Declaration public string[] CRS Field Value Type Description String [] | Improve this Doc View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description String [] | Improve this Doc View Source LatLonBoundingBox Latitudal/longitudal extent of this layer Declaration public MRect LatLonBoundingBox Field Value Type Description MRect | Improve this Doc View Source Name Unique name of this layer used for requesting layer Declaration public string? Name Field Value Type Description Nullable < String > | Improve this Doc View Source Queryable Specifies whether this layer is queryable using GetFeatureInfo requests Declaration public bool Queryable Field Value Type Description Boolean | Improve this Doc View Source Style List of styles supported by layer Declaration public Client.WmsLayerStyle[] Style Field Value Type Description Client.WmsLayerStyle [] | Improve this Doc View Source Title Layer title Declaration public string? Title Field Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.Client.WmsStyleLegend.html": {
    "href": "api/Mapsui.Providers.Wms.Client.WmsStyleLegend.html",
    "title": "Struct Client.WmsStyleLegend",
    "keywords": "Struct Client.WmsStyleLegend Structure for storing WMS Legend information Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public struct WmsStyleLegend Fields | Improve this Doc View Source OnlineResource Online resource for legend style Declaration public Client.WmsOnlineResource OnlineResource Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Size Size of legend Declaration public Size Size Field Value Type Description Size"
  },
  "api/Mapsui.Providers.Wms.FeatureInfo.html": {
    "href": "api/Mapsui.Providers.Wms.FeatureInfo.html",
    "title": "Class FeatureInfo",
    "keywords": "Class FeatureInfo Inheritance Object FeatureInfo Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class FeatureInfo : object Properties | Improve this Doc View Source FeatureInfos Declaration public List<Dictionary<string, string>>? FeatureInfos { get; set; } Property Value Type Description Nullable < List < Dictionary < String , String >>> | Improve this Doc View Source LayerName Declaration public string? LayerName { get; set; } Property Value Type Description Nullable < String >"
  },
  "api/Mapsui.Providers.Wms.GetFeatureInfo.html": {
    "href": "api/Mapsui.Providers.Wms.GetFeatureInfo.html",
    "title": "Class GetFeatureInfo",
    "keywords": "Class GetFeatureInfo Inheritance Object GetFeatureInfo Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class GetFeatureInfo : object Constructors | Improve this Doc View Source GetFeatureInfo(Nullable<Func<String, Task<Stream>>>) Declaration public GetFeatureInfo(Func<string, Task<Stream>>? getStreamAsync = null) Parameters Type Name Description Nullable < Func < String , Task < Stream >>> getStreamAsync Properties | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string>? ExtraParams { get; set; } Property Value Type Description Nullable < Dictionary < String , String >> | Improve this Doc View Source TimeOut Timeout of web request in milliseconds. Default is 7 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Request(String, String, String, String, String, Double, Double, Double, Double, Int32, Int32, Int32, Int32) Request FeatureInfo for a WMS Server Declaration public void Request(string baseUrl, string wmsVersion, string infoFormat, string srs, string layer, double extendXmin, double extendYmin, double extendXmax, double extendYmax, int x, int y, int mapWidth, int mapHeight) Parameters Type Name Description String baseUrl Base URL of the WMS server String wmsVersion WMS Version String infoFormat Format of response (text/xml, text/plain, etc) String srs EPSG Code of the coordinate system String layer Layer to get FeatureInfo From Double extendXmin Double extendYmin Double extendXmax Double extendYmax Int32 x Coordinate in pixels x Int32 y Coordinate in pixels y Int32 mapWidth Width of the map Int32 mapHeight Height of the map Events | Improve this Doc View Source IdentifyFailed Declaration public event StatusEventHandler IdentifyFailed Event Type Type Description StatusEventHandler | Improve this Doc View Source IdentifyFinished Declaration public event StatusEventHandler IdentifyFinished Event Type Type Description StatusEventHandler"
  },
  "api/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html",
    "title": "Class GmlGetFeatureInfoParser",
    "keywords": "Class GmlGetFeatureInfoParser Inheritance Object GmlGetFeatureInfoParser Implements IGetFeatureInfoParser Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class GmlGetFeatureInfoParser : object, IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(Nullable<String>, Stream) Declaration public FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description Nullable < String > layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Providers.Wms.html": {
    "href": "api/Mapsui.Providers.Wms.html",
    "title": "Namespace Mapsui.Providers.Wms",
    "keywords": "Namespace Mapsui.Providers.Wms Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WMS servers capabilities FeatureInfo GetFeatureInfo GmlGetFeatureInfoParser WmsProvider Web Map Service layer XmlGetFeatureInfoParser Structs Capabilities.WmsContactInformation Stores contact metadata about WMS service Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Client.WmsOnlineResource Structure for storing info on an Online Resource Client.WmsServerLayer Structure for holding information about a WMS Layer Client.WmsStyleLegend Structure for storing WMS Legend information Interfaces IGetFeatureInfoParser Delegates StatusEventHandler"
  },
  "api/Mapsui.Providers.Wms.IGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.IGetFeatureInfoParser.html",
    "title": "Interface IGetFeatureInfoParser",
    "keywords": "Interface IGetFeatureInfoParser Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public interface IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(Nullable<String>, Stream) Declaration FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description Nullable < String > layerName Stream result Returns Type Description FeatureInfo"
  },
  "api/Mapsui.Providers.Wms.StatusEventHandler.html": {
    "href": "api/Mapsui.Providers.Wms.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public delegate void StatusEventHandler(object sender, FeatureInfo featureInfo); Parameters Type Name Description Object sender FeatureInfo featureInfo"
  },
  "api/Mapsui.Providers.Wms.WmsProvider.html": {
    "href": "api/Mapsui.Providers.Wms.WmsProvider.html",
    "title": "Class WmsProvider",
    "keywords": "Class WmsProvider Web Map Service layer Inheritance Object WmsProvider Implements IProjectingProvider IProvider Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class WmsProvider : object, IProjectingProvider, IProvider Remarks The WmsLayer is currently very basic and doesn't support automatic fetching of the WMS Service Description. Instead you would have to add the necessary parameters to the URL, and the WmsLayer will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Constructors | Improve this Doc View Source WmsProvider(XmlDocument, Nullable<Func<String, Task<Stream>>>, IUrlPersistentCache) Declaration public WmsProvider(XmlDocument capabilities, Func<string, Task<Stream>>? getStreamAsync = null, IUrlPersistentCache persistentCache = null) Parameters Type Name Description XmlDocument capabilities Nullable < Func < String , Task < Stream >>> getStreamAsync IUrlPersistentCache persistentCache Properties | Improve this Doc View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer Declaration public bool ContinueOnError { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials? Credentials { get; set; } Property Value Type Description Nullable < ICredentials > | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source ExtraParams Declaration public Dictionary<string, string>? ExtraParams { get; set; } Property Value Type Description Nullable < Dictionary < String , String >> | Improve this Doc View Source GetFeatureInfoFormats Gets the list of available FeatureInfo Output Format Declaration public Collection<string> GetFeatureInfoFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source LayerList Gets the list of enabled layers Declaration public Collection<string>? LayerList { get; } Property Value Type Description Nullable < Collection < String >> | Improve this Doc View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source RootLayer Gets the hierarchical list of available WMS layers from this service Declaration public Client.WmsServerLayer? RootLayer { get; } Property Value Type Description Nullable < Client.WmsServerLayer > | Improve this Doc View Source ServiceDescription Gets the service description from this server Declaration public Capabilities.WmsServiceDescription? ServiceDescription { get; } Property Value Type Description Nullable < Capabilities.WmsServiceDescription > | Improve this Doc View Source StylesList Gets the list of enabled styles Declaration public Collection<string>? StylesList { get; } Property Value Type Description Nullable < Collection < String >> | Improve this Doc View Source TimeOut Timeout of web request in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Version Gets the WMS Server version of this service Declaration public string? Version { get; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source AddLayer(String) Adds a layer to WMS request Declaration public void AddLayer(string name) Parameters Type Name Description String name Name of layer Remarks Layer names are case sensitive. | Improve this Doc View Source AddStyle(String) Adds a style to the style collection Declaration public void AddStyle(string name) Parameters Type Name Description String name Name of style | Improve this Doc View Source CreateAsync(String, Nullable<String>, Nullable<Func<String, Task<Stream>>>, IUrlPersistentCache) Initializes a new layer, and downloads and parses the service description Declaration public static async Task<WmsProvider> CreateAsync(string url, string? wmsVersion = null, Func<string, Task<Stream>>? getStreamAsync = null, IUrlPersistentCache persistentCache = null) Parameters Type Name Description String url Url of WMS server Nullable < String > wmsVersion Version number of wms leave null to get the default service version Nullable < Func < String , Task < Stream >>> getStreamAsync Download method, leave null for default IUrlPersistentCache persistentCache Returns Type Description Task < WmsProvider > | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> | Improve this Doc View Source GetLayer(String) Get a layer from the WMS Declaration public Client.WmsServerLayer GetLayer(string name) Parameters Type Name Description String name Name of layer Returns Type Description Client.WmsServerLayer Remarks Layer names are case sensitive. | Improve this Doc View Source GetLegendRequestUrls() Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public IEnumerable<string> GetLegendRequestUrls() Returns Type Description IEnumerable < String > URL for WMS request | Improve this Doc View Source GetLegendsAsync() Declaration public async IAsyncEnumerable<MemoryStream> GetLegendsAsync() Returns Type Description IAsyncEnumerable < MemoryStream > | Improve this Doc View Source GetRequestUrl(MRect, Int32, Int32) Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public string GetRequestUrl(MRect box, int width, int height) Parameters Type Name Description MRect box Int32 width Int32 height Returns Type Description String URL for WMS request | Improve this Doc View Source IsCrsSupported(String) Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description String crs Returns Type Description Nullable < Boolean > | Improve this Doc View Source RemoveAllLayers() Removes all layers Declaration public void RemoveAllLayers() | Improve this Doc View Source RemoveAllStyles() Removes all styles from the list Declaration public void RemoveAllStyles() | Improve this Doc View Source RemoveLayer(String) Removes a layer from the layer list Declaration public void RemoveLayer(string name) Parameters Type Name Description String name Name of layer to remove | Improve this Doc View Source RemoveLayerAt(Int32) Removes the layer at the specified index Declaration public void RemoveLayerAt(int index) Parameters Type Name Description Int32 index | Improve this Doc View Source RemoveStyle(String) Removes a style from the collection Declaration public void RemoveStyle(string name) Parameters Type Name Description String name Name of style | Improve this Doc View Source RemoveStyleAt(Int32) Removes a style at specified index Declaration public void RemoveStyleAt(int index) Parameters Type Name Description Int32 index Index | Improve this Doc View Source SetImageFormat(String) Sets the image type to use when requesting images from the WMS server Declaration public void SetImageFormat(string mimeType) Parameters Type Name Description String mimeType Mime type of image format Remarks See the OutputFormats property for a list of available mime types supported by the WMS server | Improve this Doc View Source TryGetMapAsync(IViewport) Declaration public async Task<(bool Success, MRaster)> TryGetMapAsync(IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description Task < (, ) < Boolean , MRaster >> Implements IProjectingProvider IProvider"
  },
  "api/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html": {
    "href": "api/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html",
    "title": "Class XmlGetFeatureInfoParser",
    "keywords": "Class XmlGetFeatureInfoParser Inheritance Object XmlGetFeatureInfoParser Implements IGetFeatureInfoParser Namespace : Mapsui.Providers.Wms Assembly : Mapsui.dll Syntax public class XmlGetFeatureInfoParser : object, IGetFeatureInfoParser Methods | Improve this Doc View Source ParseWMSResult(Nullable<String>, Stream) Declaration public FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description Nullable < String > layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser"
  },
  "api/Mapsui.Rendering.DefaultRendererFactory.html": {
    "href": "api/Mapsui.Rendering.DefaultRendererFactory.html",
    "title": "Class DefaultRendererFactory",
    "keywords": "Class DefaultRendererFactory Inheritance Object DefaultRendererFactory Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class DefaultRendererFactory : object Properties | Improve this Doc View Source Create Declaration public static Func<IRenderer> Create { get; set; } Property Value Type Description Func < IRenderer >"
  },
  "api/Mapsui.Rendering.html": {
    "href": "api/Mapsui.Rendering.html",
    "title": "Namespace Mapsui.Rendering",
    "keywords": "Namespace Mapsui.Rendering Classes DefaultRendererFactory MapInfoRecord RenderException Exception thrown when a layer rendering fails VisibleFeatureIterator Interfaces IBitmapInfo IRenderer IRenderInfo ISymbolCache Enums RenderFormat Formats the MapRenderer should render to"
  },
  "api/Mapsui.Rendering.IBitmapInfo.html": {
    "href": "api/Mapsui.Rendering.IBitmapInfo.html",
    "title": "Interface IBitmapInfo",
    "keywords": "Interface IBitmapInfo Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IBitmapInfo Properties | Improve this Doc View Source IterationUsed Declaration long IterationUsed { get; set; } Property Value Type Description Int64"
  },
  "api/Mapsui.Rendering.IRenderer.html": {
    "href": "api/Mapsui.Rendering.IRenderer.html",
    "title": "Interface IRenderer",
    "keywords": "Interface IRenderer Inherited Members IRenderInfo.GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderer : IRenderInfo Properties | Improve this Doc View Source StyleRenderers Declaration IDictionary<Type, IStyleRenderer> StyleRenderers { get; } Property Value Type Description IDictionary < Type , IStyleRenderer > | Improve this Doc View Source SymbolCache Declaration ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description IDictionary < Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description Object target IReadOnlyViewport viewport IEnumerable < ILayer > layers IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color, Single, Nullable<IEnumerable<IWidget>>, RenderFormat) Declaration MemoryStream? RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null, float pixelDensity = null, IEnumerable<IWidget>? widgets = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Color background Single pixelDensity Nullable < IEnumerable < IWidget >> widgets RenderFormat renderFormat Returns Type Description Nullable < MemoryStream >"
  },
  "api/Mapsui.Rendering.IRenderInfo.html": {
    "href": "api/Mapsui.Rendering.IRenderInfo.html",
    "title": "Interface IRenderInfo",
    "keywords": "Interface IRenderInfo Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface IRenderInfo Methods | Improve this Doc View Source GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Declaration MapInfo GetMapInfo(double screenX, double screenY, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, int margin = 0) Parameters Type Name Description Double screenX Double screenY IReadOnlyViewport viewport IEnumerable < ILayer > layers Int32 margin Returns Type Description MapInfo"
  },
  "api/Mapsui.Rendering.ISymbolCache.html": {
    "href": "api/Mapsui.Rendering.ISymbolCache.html",
    "title": "Interface ISymbolCache",
    "keywords": "Interface ISymbolCache Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public interface ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration IBitmapInfo GetOrCreate(int bitmapID) Parameters Type Name Description Int32 bitmapID Returns Type Description IBitmapInfo | Improve this Doc View Source GetSize(Int32) Declaration Size GetSize(int bitmapId) Parameters Type Name Description Int32 bitmapId Returns Type Description Size"
  },
  "api/Mapsui.Rendering.MapInfoRecord.html": {
    "href": "api/Mapsui.Rendering.MapInfoRecord.html",
    "title": "Class MapInfoRecord",
    "keywords": "Class MapInfoRecord Inheritance Object MapInfoRecord Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class MapInfoRecord : object Constructors | Improve this Doc View Source MapInfoRecord(IFeature, IStyle, ILayer) Declaration public MapInfoRecord(IFeature feature, IStyle style, ILayer layer) Parameters Type Name Description IFeature feature IStyle style ILayer layer Properties | Improve this Doc View Source Feature Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Improve this Doc View Source Layer Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Improve this Doc View Source Style Declaration public IStyle Style { get; set; } Property Value Type Description IStyle"
  },
  "api/Mapsui.Rendering.RenderException.html": {
    "href": "api/Mapsui.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance Object RenderException Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public class RenderException : Exception Constructors | Improve this Doc View Source RenderException(String) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description String message | Improve this Doc View Source RenderException(String, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description String message Exception inner"
  },
  "api/Mapsui.Rendering.RenderFormat.html": {
    "href": "api/Mapsui.Rendering.RenderFormat.html",
    "title": "Enum RenderFormat",
    "keywords": "Enum RenderFormat Formats the MapRenderer should render to Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public enum RenderFormat : int Fields Name Description Png Default Format works everywhere Skp Skia Vector Format WebP 20 - 30% smaller lossless Format"
  },
  "api/Mapsui.Rendering.Skia.BitmapHelper.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapHelper.html",
    "title": "Class BitmapHelper",
    "keywords": "Class BitmapHelper Inheritance Object BitmapHelper Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class BitmapHelper : object Methods | Improve this Doc View Source InvalidBitmapInfo(BitmapInfo) Declaration public static bool InvalidBitmapInfo(BitmapInfo bitmapInfo) Parameters Type Name Description BitmapInfo bitmapInfo Returns Type Description Boolean | Improve this Doc View Source LoadBitmap(Nullable<Object>) Declaration public static BitmapInfo LoadBitmap(object? bitmapStream) Parameters Type Name Description Nullable < Object > bitmapStream Returns Type Description BitmapInfo"
  },
  "api/Mapsui.Rendering.Skia.BitmapInfo.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapInfo.html",
    "title": "Class BitmapInfo",
    "keywords": "Class BitmapInfo Inheritance Object BitmapInfo Implements IBitmapInfo Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class BitmapInfo : object, IBitmapInfo Properties | Improve this Doc View Source Bitmap Declaration public SKImage? Bitmap { get; set; } Property Value Type Description Nullable < SKImage > | Improve this Doc View Source Height Declaration public float Height { get; } Property Value Type Description Single | Improve this Doc View Source IterationUsed Declaration public long IterationUsed { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Picture Declaration public SKPicture? Picture { get; set; } Property Value Type Description Nullable < SKPicture > | Improve this Doc View Source Sprite Declaration public Sprite Sprite { get; set; } Property Value Type Description Sprite | Improve this Doc View Source Svg Declaration public SKSvg? Svg { get; set; } Property Value Type Description Nullable < SKSvg > | Improve this Doc View Source Type Declaration public BitmapType Type { get; } Property Value Type Description BitmapType | Improve this Doc View Source Width Declaration public float Width { get; } Property Value Type Description Single Implements IBitmapInfo"
  },
  "api/Mapsui.Rendering.Skia.BitmapType.html": {
    "href": "api/Mapsui.Rendering.Skia.BitmapType.html",
    "title": "Enum BitmapType",
    "keywords": "Enum BitmapType Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public enum BitmapType : int Fields Name Description Bitmap Picture Sprite Svg"
  },
  "api/Mapsui.Rendering.Skia.CalloutStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.CalloutStyleRenderer.html",
    "title": "Class CalloutStyleRenderer",
    "keywords": "Class CalloutStyleRenderer Inheritance Object CalloutStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class CalloutStyleRenderer : object, ISkiaStyleRenderer, IStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Declaration public bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long iteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer IFeature feature IStyle style ISymbolCache symbolCache Int64 iteration Returns Type Description Boolean | Improve this Doc View Source RenderCallout(CalloutStyle) Declaration public static void RenderCallout(CalloutStyle callout) Parameters Type Name Description CalloutStyle callout | Improve this Doc View Source ToSkia(Color) Convert Mapsui color to Skia color Declaration public static SKColor ToSkia(Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description SKColor Color in Skia format | Improve this Doc View Source UpdateContent(CalloutStyle) Update content for single and detail Declaration public static void UpdateContent(CalloutStyle callout) Parameters Type Name Description CalloutStyle callout Implements ISkiaStyleRenderer IStyleRenderer"
  },
  "api/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html",
    "title": "Class AlignmentExtensions",
    "keywords": "Class AlignmentExtensions Inheritance Object AlignmentExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class AlignmentExtensions : object Methods | Improve this Doc View Source ToRichTextKit(Alignment) Declaration public static TextAlignment ToRichTextKit(this Alignment textAlignment) Parameters Type Name Description Alignment textAlignment Returns Type Description TextAlignment"
  },
  "api/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance Object ColorExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ColorExtensions : object Methods | Improve this Doc View Source ToSkia(Color, Single) Declaration public static SKColor ToSkia(this Color color, float layerOpacity = null) Parameters Type Name Description Color color Single layerOpacity Returns Type Description SKColor"
  },
  "api/Mapsui.Rendering.Skia.Extensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Extensions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Extensions Classes AlignmentExtensions ColorExtensions MRectExtensions PenStrokeCapExtensions PenStrokeJoinExtensions PenStyleExtension SKColorExtensions SKNativeObjectExtensions ViewportExtensions"
  },
  "api/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance Object MRectExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class MRectExtensions : object Methods | Improve this Doc View Source ToSkia(MRect) Declaration public static SKRect ToSkia(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description SKRect"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html",
    "title": "Class PenStrokeCapExtensions",
    "keywords": "Class PenStrokeCapExtensions Inheritance Object PenStrokeCapExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeCapExtensions : object Methods | Improve this Doc View Source ToSkia(PenStrokeCap) Declaration public static SKStrokeCap ToSkia(this PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description SKStrokeCap"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html",
    "title": "Class PenStrokeJoinExtensions",
    "keywords": "Class PenStrokeJoinExtensions Inheritance Object PenStrokeJoinExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeJoinExtensions : object Methods | Improve this Doc View Source ToSkia(StrokeJoin) Declaration public static SKStrokeJoin ToSkia(this StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description SKStrokeJoin"
  },
  "api/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html",
    "title": "Class PenStyleExtension",
    "keywords": "Class PenStyleExtension Inheritance Object PenStyleExtension Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class PenStyleExtension : object Methods | Improve this Doc View Source ToSkia(PenStyle, Single, Single[], Single) Declaration public static SKPathEffect ToSkia(this PenStyle penStyle, float width, float[] dashArray = null, float dashOffset = null) Parameters Type Name Description PenStyle penStyle Single width Single [] dashArray Single dashOffset Returns Type Description SKPathEffect"
  },
  "api/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html",
    "title": "Class SKColorExtensions",
    "keywords": "Class SKColorExtensions Inheritance Object SKColorExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SKColorExtensions : object Methods | Improve this Doc View Source ToMapsui(SKColor) Declaration public static Color ToMapsui(this SKColor color) Parameters Type Name Description SKColor color Returns Type Description Color"
  },
  "api/Mapsui.Rendering.Skia.Extensions.SKNativeObjectExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.SKNativeObjectExtensions.html",
    "title": "Class SKNativeObjectExtensions",
    "keywords": "Class SKNativeObjectExtensions Inheritance Object SKNativeObjectExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SKNativeObjectExtensions : object Methods | Improve this Doc View Source IsDisposed(Nullable<SKNativeObject>) Declaration public static bool IsDisposed(this SKNativeObject? skNativeObject) Parameters Type Name Description Nullable < SKNativeObject > skNativeObject Returns Type Description Boolean"
  },
  "api/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html": {
    "href": "api/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html",
    "title": "Class ViewportExtensions",
    "keywords": "Class ViewportExtensions Inheritance Object ViewportExtensions Namespace : Mapsui.Rendering.Skia.Extensions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ViewportExtensions : object Methods | Improve this Doc View Source ToSKMatrix(IViewport) Declaration public static SKMatrix ToSKMatrix(this IViewport viewport) Parameters Type Name Description IViewport viewport Returns Type Description SKMatrix"
  },
  "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html",
    "title": "Class ClippingFunctions",
    "keywords": "Class ClippingFunctions Inheritance Object ClippingFunctions Namespace : Mapsui.Rendering.Skia.Functions Assembly : Mapsui.Rendering.Skia.dll Syntax public static class ClippingFunctions : object Methods | Improve this Doc View Source LiangBarskyClip(SKPoint, SKPoint, SKRect, out SKPoint, out SKPoint) A Liang-Barsky implementation to detect the intersection between a line and a rect. With this, all lines, that aren't visible on screen could be sorted out. Found at https://gist.github.com/ChickenProp/3194723 Declaration public static ClippingFunctions.Intersection LiangBarskyClip(SKPoint point1, SKPoint point2, SKRect clipRect, out SKPoint intersectionPoint1, out SKPoint intersectionPoint2) Parameters Type Name Description SKPoint point1 First point of line SKPoint point2 Second point of line SKRect clipRect SKPoint intersectionPoint1 First intersection point SKPoint intersectionPoint2 Second intersection point Returns Type Description ClippingFunctions.Intersection | Improve this Doc View Source ReducePointsToClipRect(Nullable<IEnumerable<Coordinate>>, IReadOnlyViewport, SKRect) Reduce list of points, so that all are inside of cliptRect See https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm Declaration public static List<SKPoint> ReducePointsToClipRect(IEnumerable<Coordinate>? points, IReadOnlyViewport viewport, SKRect clipRect) Parameters Type Name Description Nullable < IEnumerable < Coordinate >> points List of points to reduce IReadOnlyViewport viewport Viewport implementation SKRect clipRect Rectangle to clip to. All points outside aren't drawn. Returns Type Description List < SKPoint >"
  },
  "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html",
    "title": "Enum ClippingFunctions.Intersection",
    "keywords": "Enum ClippingFunctions.Intersection Type of intersection Namespace : Mapsui.Rendering.Skia.Functions Assembly : Mapsui.Rendering.Skia.dll Syntax public enum Intersection : int Fields Name Description Both CompleteInside CompleteOutside FirstInside SecondInside Unknown"
  },
  "api/Mapsui.Rendering.Skia.Functions.html": {
    "href": "api/Mapsui.Rendering.Skia.Functions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Functions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Functions Classes ClippingFunctions Enums ClippingFunctions.Intersection Type of intersection"
  },
  "api/Mapsui.Rendering.Skia.html": {
    "href": "api/Mapsui.Rendering.Skia.html",
    "title": "Namespace Mapsui.Rendering.Skia",
    "keywords": "Namespace Mapsui.Rendering.Skia Classes BitmapHelper BitmapInfo CalloutStyleRenderer LabelStyleRenderer LineStringRenderer MapRenderer RasterStyleRenderer SvgRenderer SymbolCache SymbolStyleRenderer VectorStyleRenderer Enums BitmapType"
  },
  "api/Mapsui.Rendering.Skia.LabelStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LabelStyleRenderer.html",
    "title": "Class LabelStyleRenderer",
    "keywords": "Class LabelStyleRenderer Inheritance Object LabelStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class LabelStyleRenderer : object, ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Declaration public bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long iteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer IFeature feature IStyle style ISymbolCache symbolCache Int64 iteration Returns Type Description Boolean | Improve this Doc View Source DrawAsBitmap(SKCanvas, LabelStyle, IFeature, Single, Single, Single) Declaration public void DrawAsBitmap(SKCanvas canvas, LabelStyle style, IFeature feature, float x, float y, float layerOpacity) Parameters Type Name Description SKCanvas canvas LabelStyle style IFeature feature Single x Single y Single layerOpacity | Improve this Doc View Source FeatureSize(IFeature, LabelStyle, SKPaint) Declaration public static double FeatureSize(IFeature feature, LabelStyle labelStyle, SKPaint paint) Parameters Type Name Description IFeature feature LabelStyle labelStyle SKPaint paint Returns Type Description Double Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize"
  },
  "api/Mapsui.Rendering.Skia.LineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance Object LineStringRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public static class LineStringRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, VectorStyle, LineString, Single) Declaration public static void Draw(SKCanvas canvas, IReadOnlyViewport viewport, VectorStyle vectorStyle, LineString lineString, float opacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport VectorStyle vectorStyle LineString lineString Single opacity"
  },
  "api/Mapsui.Rendering.Skia.MapRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance Object MapRenderer Implements IRenderer IRenderInfo Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class MapRenderer : object, IRenderer, IRenderInfo Constructors | Improve this Doc View Source MapRenderer() Declaration public MapRenderer() Properties | Improve this Doc View Source StyleRenderers Dictionary holding all special renderers for styles Declaration public IDictionary<Type, IStyleRenderer> StyleRenderers { get; } Property Value Type Description IDictionary < Type , IStyleRenderer > | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration public IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description IDictionary < Type , IWidgetRenderer > Methods | Improve this Doc View Source GetMapInfo(Double, Double, IReadOnlyViewport, IEnumerable<ILayer>, Int32) Declaration public MapInfo GetMapInfo(double x, double y, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, int margin = 0) Parameters Type Name Description Double x Double y IReadOnlyViewport viewport IEnumerable < ILayer > layers Int32 margin Returns Type Description MapInfo | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Color) Declaration public void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Color background = null) Parameters Type Name Description Object target IReadOnlyViewport viewport IEnumerable < ILayer > layers IEnumerable < IWidget > widgets Color background | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Color, Single, Nullable<IEnumerable<IWidget>>, RenderFormat) Declaration public MemoryStream? RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Color background = null, float pixelDensity = null, IEnumerable<IWidget>? widgets = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Color background Single pixelDensity Nullable < IEnumerable < IWidget >> widgets RenderFormat renderFormat Returns Type Description Nullable < MemoryStream > Implements IRenderer IRenderInfo"
  },
  "api/Mapsui.Rendering.Skia.RasterStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.RasterStyleRenderer.html",
    "title": "Class RasterStyleRenderer",
    "keywords": "Class RasterStyleRenderer Inheritance Object RasterStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class RasterStyleRenderer : object, ISkiaStyleRenderer, IStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Declaration public bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long currentIteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer IFeature feature IStyle style ISymbolCache symbolCache Int64 currentIteration Returns Type Description Boolean Implements ISkiaStyleRenderer IStyleRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaStyles.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaStyles.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaStyles",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaStyles Interfaces ISkiaStyleRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html",
    "title": "Interface ISkiaStyleRenderer",
    "keywords": "Interface ISkiaStyleRenderer Namespace : Mapsui.Rendering.Skia.SkiaStyles Assembly : Mapsui.Rendering.Skia.dll Syntax public interface ISkiaStyleRenderer : IStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Drawing function for special styles Declaration bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing IReadOnlyViewport viewport Active viewport for this drawing operation ILayer layer Layer that contains feature IFeature feature Feature to draw IStyle style Style to draw ISymbolCache symbolCache SymbolCache for ready rendered bitmaps Int64 iteration Returns Type Description Boolean"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ButtonWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ButtonWidgetRenderer.html",
    "title": "Class ButtonWidgetRenderer",
    "keywords": "Class ButtonWidgetRenderer Inheritance Object ButtonWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ButtonWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaWidgets",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaWidgets Classes ButtonWidgetRenderer HyperlinkWidgetRenderer PerformanceWidgetRenderer ScaleBarWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer Interfaces ISkiaWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.HyperlinkWidgetRenderer.html",
    "title": "Class HyperlinkWidgetRenderer",
    "keywords": "Class HyperlinkWidgetRenderer Inheritance Object HyperlinkWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class HyperlinkWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html",
    "title": "Interface ISkiaWidgetRenderer",
    "keywords": "Interface ISkiaWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public interface ISkiaWidgetRenderer : IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html",
    "title": "Class PerformanceWidgetRenderer",
    "keywords": "Class PerformanceWidgetRenderer Inheritance Object PerformanceWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class PerformanceWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Constructors | Improve this Doc View Source PerformanceWidgetRenderer(Single, Single, Int32, SKColor, SKColor) Renderer for PerformanceWidget Declaration public PerformanceWidgetRenderer(float x, float y, int textSize, SKColor textColor, SKColor backgroundColor) Parameters Type Name Description Single x X position of widget on screen Single y Y position of widget on screen Int32 textSize Size of text SKColor textColor Color for text SKColor backgroundColor Color for background Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance Object ScaleBarWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ScaleBarWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance Object WidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public static class WidgetRenderer : object Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>, Single) Declaration public static void Render(object target, IReadOnlyViewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renders, float layerOpacity) Parameters Type Name Description Object target IReadOnlyViewport viewport IEnumerable < IWidget > widgets IDictionary < Type , IWidgetRenderer > renders Single layerOpacity"
  },
  "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance Object ZoomInOutWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Namespace : Mapsui.Rendering.Skia.SkiaWidgets Assembly : Mapsui.Rendering.Skia.dll Syntax public class ZoomInOutWidgetRenderer : object, ISkiaWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, IWidget, Single) Declaration public void Draw(SKCanvas canvas, IReadOnlyViewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport IWidget widget Single layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Skia.SvgRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SvgRenderer.html",
    "title": "Class SvgRenderer",
    "keywords": "Class SvgRenderer Inheritance Object SvgRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SvgRenderer : object Methods | Improve this Doc View Source Draw(SKCanvas, SKSvg, Single, Single, Single, Single, Single, Single, Single) Declaration public static void Draw(SKCanvas canvas, SKSvg svg, float x, float y, float orientation = null, float offsetX = null, float offsetY = null, float opacity = 1F, float scale = 1F) Parameters Type Name Description SKCanvas canvas SKSvg svg Single x Single y Single orientation Single offsetX Single offsetY Single opacity Single scale"
  },
  "api/Mapsui.Rendering.Skia.SymbolCache.html": {
    "href": "api/Mapsui.Rendering.Skia.SymbolCache.html",
    "title": "Class SymbolCache",
    "keywords": "Class SymbolCache Inheritance Object SymbolCache Implements ISymbolCache Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SymbolCache : object, ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration public IBitmapInfo GetOrCreate(int bitmapId) Parameters Type Name Description Int32 bitmapId Returns Type Description IBitmapInfo | Improve this Doc View Source GetSize(Int32) Declaration public Size GetSize(int bitmapId) Parameters Type Name Description Int32 bitmapId Returns Type Description Size Implements ISymbolCache"
  },
  "api/Mapsui.Rendering.Skia.SymbolStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.SymbolStyleRenderer.html",
    "title": "Class SymbolStyleRenderer",
    "keywords": "Class SymbolStyleRenderer Inheritance Object SymbolStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class SymbolStyleRenderer : object, ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Declaration public bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long iteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer IFeature feature IStyle style ISymbolCache symbolCache Int64 iteration Returns Type Description Boolean | Improve this Doc View Source DrawSymbol(SKCanvas, IReadOnlyViewport, ILayer, Double, Double, SymbolStyle) Declaration public static bool DrawSymbol(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, double x, double y, SymbolStyle symbolStyle) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer Double x Double y SymbolStyle symbolStyle Returns Type Description Boolean | Improve this Doc View Source FeatureSize(SymbolStyle, ISymbolCache) Declaration public static double FeatureSize(SymbolStyle symbolStyle, ISymbolCache symbolCache) Parameters Type Name Description SymbolStyle symbolStyle ISymbolCache symbolCache Returns Type Description Double Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize"
  },
  "api/Mapsui.Rendering.Skia.VectorStyleRenderer.html": {
    "href": "api/Mapsui.Rendering.Skia.VectorStyleRenderer.html",
    "title": "Class VectorStyleRenderer",
    "keywords": "Class VectorStyleRenderer Inheritance Object VectorStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Namespace : Mapsui.Rendering.Skia Assembly : Mapsui.Rendering.Skia.dll Syntax public class VectorStyleRenderer : object, ISkiaStyleRenderer, IStyleRenderer Methods | Improve this Doc View Source Draw(SKCanvas, IReadOnlyViewport, ILayer, IFeature, IStyle, ISymbolCache, Int64) Declaration public bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache, long iteration) Parameters Type Name Description SKCanvas canvas IReadOnlyViewport viewport ILayer layer IFeature feature IStyle style ISymbolCache symbolCache Int64 iteration Returns Type Description Boolean Implements ISkiaStyleRenderer IStyleRenderer"
  },
  "api/Mapsui.Rendering.VisibleFeatureIterator.html": {
    "href": "api/Mapsui.Rendering.VisibleFeatureIterator.html",
    "title": "Class VisibleFeatureIterator",
    "keywords": "Class VisibleFeatureIterator Inheritance Object VisibleFeatureIterator Namespace : Mapsui.Rendering Assembly : Mapsui.dll Syntax public static class VisibleFeatureIterator : object Methods | Improve this Doc View Source IterateLayers(IReadOnlyViewport, IEnumerable<ILayer>, Int64, Action<IReadOnlyViewport, ILayer, IStyle, IFeature, Single, Int64>) Declaration public static void IterateLayers(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, long iteration, Action<IReadOnlyViewport, ILayer, IStyle, IFeature, float, long> callback) Parameters Type Name Description IReadOnlyViewport viewport IEnumerable < ILayer > layers Int64 iteration Action < IReadOnlyViewport , ILayer , IStyle , IFeature , Single , Int64 > callback"
  },
  "api/Mapsui.Styles.ArrowAlignment.html": {
    "href": "api/Mapsui.Styles.ArrowAlignment.html",
    "title": "Enum ArrowAlignment",
    "keywords": "Enum ArrowAlignment Determines, where the pointer is Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum ArrowAlignment : int Fields Name Description Bottom Callout arrow is at bottom side of bubble Left Callout arrow is at left side of bubble Right Callout arrow is at right side of bubble Top Callout arrow is at top side of bubble"
  },
  "api/Mapsui.Styles.BitmapRegistry.html": {
    "href": "api/Mapsui.Styles.BitmapRegistry.html",
    "title": "Class BitmapRegistry",
    "keywords": "Class BitmapRegistry Class for managing all bitmaps, which are registered for Mapsui drawing Inheritance Object BitmapRegistry Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class BitmapRegistry : object Properties | Improve this Doc View Source Instance Singleton of BitmapRegistry class Declaration public static BitmapRegistry Instance { get; } Property Value Type Description BitmapRegistry Methods | Improve this Doc View Source Get(Int32) Get bitmap data of registered bitmap Declaration public object Get(int id) Parameters Type Name Description Int32 id Id of existing bitmap data Returns Type Description Object | Improve this Doc View Source Register(Object, Nullable<String>) Register a new bitmap Declaration public int Register(object bitmapData, string? key = null) Parameters Type Name Description Object bitmapData Bitmap data to register Nullable < String > key key for accessing bitmap Returns Type Description Int32 Id of registered bitmap data | Improve this Doc View Source Set(Int32, Object) Set new bitmap data for a already registered bitmap Declaration public bool Set(int id, object bitmapData) Parameters Type Name Description Int32 id Id of existing bitmap data Object bitmapData New bitmap data to replace Returns Type Description Boolean True, if replacing worked correct | Improve this Doc View Source TryGetBitmapId(String, out Int32) Try Get Bitmap Id Declaration public bool TryGetBitmapId(string key, out int bitmapId) Parameters Type Name Description String key key Int32 bitmapId bitmap id Returns Type Description Boolean true if found | Improve this Doc View Source Unregister(Int32) Unregister an existing bitmap Declaration public object? Unregister(int id) Parameters Type Name Description Int32 id Id of registered bitmap data Returns Type Description Nullable < Object > The unregistered object"
  },
  "api/Mapsui.Styles.Brush.html": {
    "href": "api/Mapsui.Styles.Brush.html",
    "title": "Class Brush",
    "keywords": "Class Brush Inheritance Object Brush Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Brush : object Constructors | Improve this Doc View Source Brush() Declaration public Brush() | Improve this Doc View Source Brush(Brush) Declaration public Brush(Brush brush) Parameters Type Name Description Brush brush | Improve this Doc View Source Brush(Color) Declaration public Brush(Color color) Parameters Type Name Description Color color Properties | Improve this Doc View Source Background Declaration public Color Background { get; set; } Property Value Type Description Color | Improve this Doc View Source BitmapId This identifies bitmap in the BitmapRegistry Declaration public int BitmapId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source FillStyle This identifies how the brush is applied, works for Color not for bitmaps Declaration public FillStyle FillStyle { get; set; } Property Value Type Description FillStyle Methods | Improve this Doc View Source Equals(Brush) Declaration public bool Equals(Brush brush) Parameters Type Name Description Brush brush Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Brush, Brush) Declaration public static bool operator ==(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description Boolean | Improve this Doc View Source Inequality(Brush, Brush) Declaration public static bool operator !=(Brush brush1, Brush brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description Boolean"
  },
  "api/Mapsui.Styles.CalloutStyle.html": {
    "href": "api/Mapsui.Styles.CalloutStyle.html",
    "title": "Class CalloutStyle",
    "keywords": "Class CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps Inheritance Object Style VectorStyle SymbolStyle CalloutStyle Implements IStyle Inherited Members SymbolStyle.SymbolType SymbolStyle.UnitType SymbolStyle.BitmapId SymbolStyle.SymbolRotation SymbolStyle.RotateWithMap SymbolStyle.SymbolScale SymbolStyle.SymbolOffset SymbolStyle.SymbolOffsetRotatesWithMap SymbolStyle.BlendModeColor SymbolStyle.Equals(Nullable<Object>) SymbolStyle.Equals(SymbolStyle) SymbolStyle.GetHashCode() VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class CalloutStyle : SymbolStyle, IStyle Remarks There are three different types of Callouts Type = CalloutType.Single The text in Title will be shown Type = CalloutType.Detail The text in Title and SubTitle will be shown Type = CalloutType.Custom The bitmap with ID in Content will be shown Properties | Improve this Doc View Source ArrowAlignment Anchor position of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height of anchor of Callout Declaration public float ArrowHeight { get; set; } Property Value Type Description Single | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by AnchorType Declaration public float ArrowPosition { get; set; } Property Value Type Description Single | Improve this Doc View Source ArrowWidth Width of opening of anchor of Callout Declaration public float ArrowWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description Int32 Remarks Is a BitmapId of a save image | Improve this Doc View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source InternalContent Declaration public int InternalContent { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Invalidated Declaration public bool Invalidated { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Offset Offset position in pixels of Callout Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Improve this Doc View Source Padding Padding around content of Callout Declaration public MRect Padding { get; set; } Property Value Type Description MRect | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public float RectRadius { get; set; } Property Value Type Description Single | Improve this Doc View Source Rotation Gets or sets the rotation of the Callout in degrees (clockwise is positive) Declaration public double Rotation { get; set; } Property Value Type Description Double | Improve this Doc View Source ShadowWidth Width of shadow around Callout Declaration public float ShadowWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public float StrokeWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source Subtitle Content of Callout subtitle label Declaration public string? Subtitle { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source SubtitleFont Declaration public Font SubtitleFont { get; set; } Property Value Type Description Font | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Color SubtitleFontColor { get; set; } Property Value Type Description Color | Improve this Doc View Source SubtitleTextAlignment Text alignment of subtitle Declaration public Alignment SubtitleTextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source Title Content of Callout title label Declaration public string? Title { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source TitleFont Declaration public Font TitleFont { get; set; } Property Value Type Description Font | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Color TitleFontColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public Alignment TitleTextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be Single, Detail or Custom. The last need a bitmap id in Content for an owner drawn image. Implements IStyle"
  },
  "api/Mapsui.Styles.CalloutType.html": {
    "href": "api/Mapsui.Styles.CalloutType.html",
    "title": "Enum CalloutType",
    "keywords": "Enum CalloutType Type of CalloutStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum CalloutType : int Fields Name Description Custom Content is custom, the bitmap given in Content is shown Detail Header and detail is shown Single Only one line is shown"
  },
  "api/Mapsui.Styles.Color.html": {
    "href": "api/Mapsui.Styles.Color.html",
    "title": "Class Color",
    "keywords": "Class Color Inheritance Object Color Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Color : object Constructors | Improve this Doc View Source Color() Declaration public Color() | Improve this Doc View Source Color(Color) Declaration public Color(Color color) Parameters Type Name Description Color color | Improve this Doc View Source Color(Int32, Int32, Int32, Int32) Declaration public Color(int red, int green, int blue, int alpha = 255) Parameters Type Name Description Int32 red Int32 green Int32 blue Int32 alpha Fields | Improve this Doc View Source KnownColors Known HTML color names and hex code for RGB color Declaration public static readonly Dictionary<string, string> KnownColors Field Value Type Description Dictionary < String , String > Properties | Improve this Doc View Source A Declaration public int A { get; set; } Property Value Type Description Int32 | Improve this Doc View Source B Declaration public int B { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Improve this Doc View Source Blue Declaration public static Color Blue { get; } Property Value Type Description Color | Improve this Doc View Source Cyan Declaration public static Color Cyan { get; } Property Value Type Description Color | Improve this Doc View Source DarkGray Declaration public static Color DarkGray { get; } Property Value Type Description Color | Improve this Doc View Source G Declaration public int G { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Gray Declaration public static Color Gray { get; } Property Value Type Description Color | Improve this Doc View Source Green Declaration public static Color Green { get; } Property Value Type Description Color | Improve this Doc View Source Indigo Declaration public static Color Indigo { get; } Property Value Type Description Color | Improve this Doc View Source Orange Declaration public static Color Orange { get; } Property Value Type Description Color | Improve this Doc View Source R Declaration public int R { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Improve this Doc View Source Transparent Declaration public static Color Transparent { get; } Property Value Type Description Color | Improve this Doc View Source Violet Declaration public static Color Violet { get; } Property Value Type Description Color | Improve this Doc View Source White Declaration public static Color White { get; } Property Value Type Description Color | Improve this Doc View Source Yellow Declaration public static Color Yellow { get; } Property Value Type Description Color Methods | Improve this Doc View Source Equals(Color) Declaration public bool Equals(Color color) Parameters Type Name Description Color color Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source FromArgb(Int32, Int32, Int32, Int32) Declaration public static Color FromArgb(int a, int r, int g, int b) Parameters Type Name Description Int32 a Int32 r Int32 g Int32 b Returns Type Description Color | Improve this Doc View Source FromHsl(Single, Single, Single, Int32) Found at http://james-ramsden.com/convert-from-hsl-to-rgb-colour-codes-in-c/ Declaration public static Color FromHsl(float h, float s, float l, int a = 255) Parameters Type Name Description Single h Single s Single l Int32 a Returns Type Description Color | Improve this Doc View Source FromString(String) Converts a string in Mapbox GL format to a Mapsui Color This function assumes, that alpha is a float in range from 0.0 to 1.0. It converts this float in Mapsui Color alpha without rounding. The following colors could be converted: Named colors with known Html names Colors as Html color values with leading '#' and 6 or 3 numbers Function rgb(r,g,b) with values for red, green and blue Function rgba(r,g,b,a) with values for red, green, blue and alpha. Here alpha is between 0.0 and 1.0 like opacity. Function hsl(h,s,l) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%) and lightness (0.0% - 100.0%) Function hsla(h,s,l,a) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%), lightness (0.0% - 100.0%) and alpha. Here alpha is between 0.0 and 1.0 like opacity. Declaration public static Color FromString(string from) Parameters Type Name Description String from String with HTML color representation or function like rgb() or hsl() Returns Type Description Color Converted Mapsui Color | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source Opacity(Color, Nullable<Single>) Change alpha channel from given color to respect opacity Declaration public static Color Opacity(Color color, float? opacity) Parameters Type Name Description Color color Mapsui Color to change Nullable < Single > opacity Opacity of the new color Returns Type Description Color New color respecting old alpha and new opacity Operators | Improve this Doc View Source Equality(Color, Color) Declaration public static bool operator ==(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description Boolean | Improve this Doc View Source Inequality(Color, Color) Declaration public static bool operator !=(Color color1, Color color2) Parameters Type Name Description Color color1 Color color2 Returns Type Description Boolean Extension Methods ColorExtensions.ToSkia(Color, Single) ColorExtensions.ToMaui(Color) ColorExtensions.ToNative(Color) ColorExtensions.ToForms(Color) ColorExtensions.ToNative(Color)"
  },
  "api/Mapsui.Styles.FillStyle.html": {
    "href": "api/Mapsui.Styles.FillStyle.html",
    "title": "Enum FillStyle",
    "keywords": "Enum FillStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum FillStyle : int Fields Name Description BackwardDiagonal Bitmap BitmapRotated Cross DiagonalCross Dotted ForwardDiagonal Hollow Horizontal Solid Svg Vertical"
  },
  "api/Mapsui.Styles.Font.html": {
    "href": "api/Mapsui.Styles.Font.html",
    "title": "Class Font",
    "keywords": "Class Font Inheritance Object Font Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Font : object Constructors | Improve this Doc View Source Font() Declaration public Font() | Improve this Doc View Source Font(Font) Declaration public Font(Font font) Parameters Type Name Description Font font Properties | Improve this Doc View Source Bold Declaration public bool Bold { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FontFamily Declaration public string? FontFamily { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source Invalidated Declaration public bool Invalidated { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Italic Declaration public bool Italic { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Size Declaration public double Size { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/Mapsui.Styles.html": {
    "href": "api/Mapsui.Styles.html",
    "title": "Namespace Mapsui.Styles",
    "keywords": "Namespace Mapsui.Styles Classes BitmapRegistry Class for managing all bitmaps, which are registered for Mapsui drawing Brush CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps Color Font IdentityComparer<T> LabelStyle Defines a style used for rendering labels Offset Pen RasterStyle RelativeOffset Size Sprite Style Defines a style used for rendering vector data StyleCollection SymbolStyle SymbolStyles VectorStyle Interfaces IFeatureSize For Detecting Feature Size is used in Rasterizing Tiling Rendering to determine how much more Features needs to be loaded IStyle Defines an interface for defining layer styles IStyleRenderer Enums ArrowAlignment Determines, where the pointer is CalloutType Type of CalloutStyle FillStyle LabelStyle.HorizontalAlignmentEnum Label text alignment LabelStyle.LineBreakMode LabelStyle.VerticalAlignmentEnum Label text alignment PenStrokeCap PenStyle StrokeJoin SymbolType UnitType"
  },
  "api/Mapsui.Styles.IdentityComparer-1.html": {
    "href": "api/Mapsui.Styles.IdentityComparer-1.html",
    "title": "Class IdentityComparer<T>",
    "keywords": "Class IdentityComparer<T> Inheritance Object IdentityComparer<T> Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class IdentityComparer<T> : IEqualityComparer<T> where T : class Type Parameters Name Description T Methods | Improve this Doc View Source Equals(T, T) Declaration public bool Equals(T obj, T otherObj) Parameters Type Name Description T obj T otherObj Returns Type Description Boolean | Improve this Doc View Source GetHashCode(T) Declaration public int GetHashCode(T obj) Parameters Type Name Description T obj Returns Type Description Int32"
  },
  "api/Mapsui.Styles.IFeatureSize.html": {
    "href": "api/Mapsui.Styles.IFeatureSize.html",
    "title": "Interface IFeatureSize",
    "keywords": "Interface IFeatureSize For Detecting Feature Size is used in Rasterizing Tiling Rendering to determine how much more Features needs to be loaded Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IFeatureSize Methods | Improve this Doc View Source FeatureSize(IFeature, IStyle, ISymbolCache) The Feature Size is in points of the screen Declaration double FeatureSize(IFeature feature, IStyle style, ISymbolCache symbolCache) Parameters Type Name Description IFeature feature feature to detect size IStyle style symbol style to detect size ISymbolCache symbolCache symbol Cache Returns Type Description Double size in points"
  },
  "api/Mapsui.Styles.IStyle.html": {
    "href": "api/Mapsui.Styles.IStyle.html",
    "title": "Interface IStyle",
    "keywords": "Interface IStyle Defines an interface for defining layer styles Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IStyle Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Opacity Gets or sets the objects overall opacity Declaration float Opacity { get; set; } Property Value Type Description Single"
  },
  "api/Mapsui.Styles.IStyleRenderer.html": {
    "href": "api/Mapsui.Styles.IStyleRenderer.html",
    "title": "Interface IStyleRenderer",
    "keywords": "Interface IStyleRenderer Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public interface IStyleRenderer"
  },
  "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html",
    "title": "Enum LabelStyle.HorizontalAlignmentEnum",
    "keywords": "Enum LabelStyle.HorizontalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum HorizontalAlignmentEnum : short Fields Name Description Center Centered Left Left oriented Right Right oriented"
  },
  "api/Mapsui.Styles.LabelStyle.html": {
    "href": "api/Mapsui.Styles.LabelStyle.html",
    "title": "Class LabelStyle",
    "keywords": "Class LabelStyle Defines a style used for rendering labels Inheritance Object Style LabelStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Nullable<Object>) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class LabelStyle : Style, IStyle Constructors | Improve this Doc View Source LabelStyle() Declaration public LabelStyle() | Improve this Doc View Source LabelStyle(LabelStyle) Declaration public LabelStyle(LabelStyle labelStyle) Parameters Type Name Description LabelStyle labelStyle Properties | Improve this Doc View Source BackColor The background color of the label. Set to transparent brush or null if background isn't needed Declaration public Brush BackColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source BorderColor The color of the border around the background. Declaration public Color BorderColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderThickness The thickness of the border around the background. Declaration public double BorderThickness { get; set; } Property Value Type Description Double | Improve this Doc View Source CollisionDetection Gets or sets whether Collision Detection is enabled for the labels. If set to true, label collision will be tested. Declaration public bool CollisionDetection { get; set; } Property Value Type Description Boolean | Improve this Doc View Source CornerRounding The radius of the oval used to round the corners of the background. See . Declaration public int CornerRounding { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Font Label Font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Halo Creates a halo around the text Declaration public Pen Halo { get; set; } Property Value Type Description Pen | Improve this Doc View Source HorizontalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.HorizontalAlignmentEnum HorizontalAlignment { get; set; } Property Value Type Description LabelStyle.HorizontalAlignmentEnum | Improve this Doc View Source LabelColumn The column of the feature used by GetLabelText to return the label text. Declaration public string? LabelColumn { get; set; } Property Value Type Description Nullable < String > Remarks Used only when LabelMethod is not set. Overrides use of the Text field. | Improve this Doc View Source LabelMethod Method used by GetLabelText to return the label text. Declaration public Func<IFeature, string?>? LabelMethod { get; set; } Property Value Type Description Nullable < Func < IFeature , Nullable < String >>> Remarks Overrides use of Text and LabelColumn fields. | Improve this Doc View Source LineHeight Space from one text line to next text line in em Declaration public double LineHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source MaxWidth Maximum width of text in em. If text is wider than this, text is shorten or word wrapped regarding WordWrap. Declaration public double MaxWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Offset Specifies relative position of labels with respect to objects label point Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Improve this Doc View Source Text The text used for this specific label. Declaration public string? Text { set; } Property Value Type Description Nullable < String > Remarks Used only when LabelColumn and LabelMethod are not set. | Improve this Doc View Source VerticalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.VerticalAlignmentEnum VerticalAlignment { get; set; } Property Value Type Description LabelStyle.VerticalAlignmentEnum | Improve this Doc View Source WordWrap Line break mode for text, if width is bigger than MaxWidth Declaration public LabelStyle.LineBreakMode WordWrap { get; set; } Property Value Type Description LabelStyle.LineBreakMode Methods | Improve this Doc View Source GetLabelText(IFeature) The text used for this specific label. Declaration public string? GetLabelText(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description Nullable < String > Implements IStyle"
  },
  "api/Mapsui.Styles.LabelStyle.LineBreakMode.html": {
    "href": "api/Mapsui.Styles.LabelStyle.LineBreakMode.html",
    "title": "Enum LabelStyle.LineBreakMode",
    "keywords": "Enum LabelStyle.LineBreakMode Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum LineBreakMode : short Fields Name Description CharacterWrap Wrap at character boundaries HeadTruncation Truncate the head of text MiddleTruncation Truncate the middle of text. This may be done, for example, by replacing it with an ellipsis NoWrap Do not wrap text TailTruncation Truncate the tail of text WordWrap Wrap at word boundaries"
  },
  "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html": {
    "href": "api/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html",
    "title": "Enum LabelStyle.VerticalAlignmentEnum",
    "keywords": "Enum LabelStyle.VerticalAlignmentEnum Label text alignment Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum VerticalAlignmentEnum : short Fields Name Description Bottom Left oriented Center Centered Top Right oriented"
  },
  "api/Mapsui.Styles.Offset.html": {
    "href": "api/Mapsui.Styles.Offset.html",
    "title": "Class Offset",
    "keywords": "Class Offset Inheritance Object Offset RelativeOffset Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Offset : object Constructors | Improve this Doc View Source Offset() Offset of images from the center of the image. If IsRelative, than the offset is between -0.5 and +0.5. Declaration public Offset() | Improve this Doc View Source Offset(Offset, Boolean) Declaration public Offset(Offset offset, bool isRelative = false) Parameters Type Name Description Offset offset Boolean isRelative | Improve this Doc View Source Offset(Double, Double, Boolean) Declaration public Offset(double x, double y, bool isRelative = false) Parameters Type Name Description Double x Double y Boolean isRelative Properties | Improve this Doc View Source IsRelative Declaration public bool IsRelative { get; set; } Property Value Type Description Boolean | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Equals(Offset) Declaration public bool Equals(Offset offset) Parameters Type Name Description Offset offset Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source ToPoint() Declaration public MPoint ToPoint() Returns Type Description MPoint Operators | Improve this Doc View Source Equality(Offset, Offset) Declaration public static bool operator ==(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description Boolean | Improve this Doc View Source Inequality(Offset, Offset) Declaration public static bool operator !=(Offset offset1, Offset offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description Boolean"
  },
  "api/Mapsui.Styles.Pen.html": {
    "href": "api/Mapsui.Styles.Pen.html",
    "title": "Class Pen",
    "keywords": "Class Pen Inheritance Object Pen Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Pen : object Constructors | Improve this Doc View Source Pen() Declaration public Pen() | Improve this Doc View Source Pen(Color, Double) Declaration public Pen(Color color, double width = null) Parameters Type Name Description Color color Double width Properties | Improve this Doc View Source Color Color of line Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source DashArray Array for drawing user defined dashes. Should be even and values are multiplied by line width before drawing. Declaration public float[] DashArray { get; set; } Property Value Type Description Single [] | Improve this Doc View Source DashOffset Offset for drawing user defined dashes Declaration public float DashOffset { get; set; } Property Value Type Description Single | Improve this Doc View Source PenStrokeCap Defines the end of a line Declaration public PenStrokeCap PenStrokeCap { get; set; } Property Value Type Description PenStrokeCap | Improve this Doc View Source PenStyle Style of the line (solid/dashed), which is drawn Declaration public PenStyle PenStyle { get; set; } Property Value Type Description PenStyle | Improve this Doc View Source StrokeJoin Defines how line parts are join together Declaration public StrokeJoin StrokeJoin { get; set; } Property Value Type Description StrokeJoin | Improve this Doc View Source StrokeMiterLimit Defines up to which width of line StrokeJoin is used Declaration public float StrokeMiterLimit { get; set; } Property Value Type Description Single | Improve this Doc View Source Width Width of line Declaration public double Width { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Equals(Pen) Declaration public bool Equals(Pen pen) Parameters Type Name Description Pen pen Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Pen, Pen) Declaration public static bool operator ==(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description Boolean | Improve this Doc View Source Inequality(Pen, Pen) Declaration public static bool operator !=(Pen pen1, Pen pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description Boolean"
  },
  "api/Mapsui.Styles.PenStrokeCap.html": {
    "href": "api/Mapsui.Styles.PenStrokeCap.html",
    "title": "Enum PenStrokeCap",
    "keywords": "Enum PenStrokeCap Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStrokeCap : int Fields Name Description Butt Round Square Extension Methods PenStrokeCapExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.PenStyle.html": {
    "href": "api/Mapsui.Styles.PenStyle.html",
    "title": "Enum PenStyle",
    "keywords": "Enum PenStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum PenStyle : int Fields Name Description Dash DashDot DashDotDot Dot LongDash LongDashDot ShortDash ShortDashDot ShortDashDotDot ShortDot Solid UserDefined Extension Methods PenStyleExtension.ToSkia(Single, Single[], Single)"
  },
  "api/Mapsui.Styles.RasterStyle.html": {
    "href": "api/Mapsui.Styles.RasterStyle.html",
    "title": "Class RasterStyle",
    "keywords": "Class RasterStyle Inheritance Object RasterStyle Implements IStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class RasterStyle : object, IStyle Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Opacity Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source TileCache Declaration public IDictionary<object, IBitmapInfo> TileCache { get; } Property Value Type Description IDictionary < Object , IBitmapInfo > Methods | Improve this Doc View Source UpdateCache(Int64) Declaration public void UpdateCache(long iteration) Parameters Type Name Description Int64 iteration Implements IStyle"
  },
  "api/Mapsui.Styles.RelativeOffset.html": {
    "href": "api/Mapsui.Styles.RelativeOffset.html",
    "title": "Class RelativeOffset",
    "keywords": "Class RelativeOffset Inheritance Object Offset RelativeOffset Inherited Members Offset.X Offset.Y Offset.IsRelative Offset.ToPoint() Offset.Equals(Nullable<Object>) Offset.Equals(Offset) Offset.GetHashCode() Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class RelativeOffset : Offset Constructors | Improve this Doc View Source RelativeOffset() Offset of an image to the center of the source. The unit of measure is the width or height of an image. So in case of an an offset of (0.5, 0.5) the symbol will be moved half the width of the image to the right and half the height of the image to the top. So the bottom left point of the image will be on the location. Declaration public RelativeOffset() | Improve this Doc View Source RelativeOffset(Offset) Declaration public RelativeOffset(Offset offset) Parameters Type Name Description Offset offset | Improve this Doc View Source RelativeOffset(Double, Double) Declaration public RelativeOffset(double x, double y) Parameters Type Name Description Double x Double y"
  },
  "api/Mapsui.Styles.Size.html": {
    "href": "api/Mapsui.Styles.Size.html",
    "title": "Class Size",
    "keywords": "Class Size Inheritance Object Size Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Size : object Constructors | Improve this Doc View Source Size() Declaration public Size() | Improve this Doc View Source Size(Size) Declaration public Size(Size size) Parameters Type Name Description Size size | Improve this Doc View Source Size(Double, Double) Declaration public Size(double width, double height) Parameters Type Name Description Double width Double height Properties | Improve this Doc View Source Height Declaration public double Height { get; set; } Property Value Type Description Double | Improve this Doc View Source Width Declaration public double Width { get; set; } Property Value Type Description Double"
  },
  "api/Mapsui.Styles.Sprite.html": {
    "href": "api/Mapsui.Styles.Sprite.html",
    "title": "Class Sprite",
    "keywords": "Class Sprite Inheritance Object Sprite Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Sprite : object Constructors | Improve this Doc View Source Sprite(Int32, MPoint, Size, Single) Declaration public Sprite(int atlas, MPoint p, Size s, float pixelRatio) Parameters Type Name Description Int32 atlas MPoint p Size s Single pixelRatio | Improve this Doc View Source Sprite(Int32, Int32, Int32, Int32, Int32, Single) Declaration public Sprite(int atlas, int x, int y, int width, int height, float pixelRatio) Parameters Type Name Description Int32 atlas Int32 x Int32 y Int32 width Int32 height Single pixelRatio Properties | Improve this Doc View Source Atlas Declaration public int Atlas { get; } Property Value Type Description Int32 | Improve this Doc View Source Data Declaration public object? Data { get; set; } Property Value Type Description Nullable < Object > | Improve this Doc View Source Height Declaration public int Height { get; } Property Value Type Description Int32 | Improve this Doc View Source PixelRatio Declaration public float PixelRatio { get; } Property Value Type Description Single | Improve this Doc View Source Width Declaration public int Width { get; } Property Value Type Description Int32 | Improve this Doc View Source X Declaration public int X { get; } Property Value Type Description Int32 | Improve this Doc View Source Y Declaration public int Y { get; } Property Value Type Description Int32"
  },
  "api/Mapsui.Styles.StrokeJoin.html": {
    "href": "api/Mapsui.Styles.StrokeJoin.html",
    "title": "Enum StrokeJoin",
    "keywords": "Enum StrokeJoin Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum StrokeJoin : int Fields Name Description Bevel Miter Round Extension Methods PenStrokeJoinExtensions.ToSkia()"
  },
  "api/Mapsui.Styles.Style.html": {
    "href": "api/Mapsui.Styles.Style.html",
    "title": "Class Style",
    "keywords": "Class Style Defines a style used for rendering vector data Inheritance Object Style LabelStyle CustomTheme GradientTheme ThemeStyle VectorStyle Implements IStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class Style : object, IStyle Constructors | Improve this Doc View Source Style() Declaration public Style() Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Opacity Gets or sets the objects base opacity Declaration public float Opacity { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Equals(Style) Declaration public bool Equals(Style style) Parameters Type Name Description Style style Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Style, Style) Declaration public static bool operator ==(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description Boolean | Improve this Doc View Source Inequality(Style, Style) Declaration public static bool operator !=(Style style1, Style style2) Parameters Type Name Description Style style1 Style style2 Returns Type Description Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.StyleCollection.html": {
    "href": "api/Mapsui.Styles.StyleCollection.html",
    "title": "Class StyleCollection",
    "keywords": "Class StyleCollection Inheritance Object StyleCollection Implements IStyle Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class StyleCollection : Collection<IStyle>, IStyle Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Opacity Declaration public float Opacity { get; set; } Property Value Type Description Single Implements IStyle"
  },
  "api/Mapsui.Styles.SymbolStyle.html": {
    "href": "api/Mapsui.Styles.SymbolStyle.html",
    "title": "Class SymbolStyle",
    "keywords": "Class SymbolStyle Inheritance Object Style VectorStyle SymbolStyle CalloutStyle Implements IStyle Inherited Members VectorStyle.Line VectorStyle.Outline VectorStyle.Fill VectorStyle.Equals(VectorStyle) Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class SymbolStyle : VectorStyle, IStyle Properties | Improve this Doc View Source BitmapId Id of the image in the BitmapRegistry, if SymbolType is Image Declaration public int BitmapId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source BlendModeColor When BlendModeColor is set a BitmapType.Picture (e.g. used for SVG) will be drawn in the BlendModeColor ignoring the colors of the Picture itself. Declaration public Color BlendModeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. This is useful if you need to symbolize the direction in which a vehicle is moving. When the symbol is false it will retain it's position to the screen. This is useful for pins like symbols. The default is false. This mode is not supported in the WPF renderer. Declaration public bool RotateWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SymbolOffset Gets or sets the offset in pixels of the symbol. Declaration public Offset SymbolOffset { get; set; } Property Value Type Description Offset Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset of SymbolScale =1.0. | Improve this Doc View Source SymbolOffsetRotatesWithMap Should SymbolOffset position rotate with map Declaration public bool SymbolOffsetRotatesWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public double SymbolRotation { get; set; } Property Value Type Description Double | Improve this Doc View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public double SymbolScale { get; set; } Property Value Type Description Double Remarks Setting the SymbolScale to '2.0' doubles the size of the symbol. A SymbolScale of 0.5 makes the scale half the size. of the original image | Improve this Doc View Source SymbolType Declaration public SymbolType SymbolType { get; set; } Property Value Type Description SymbolType | Improve this Doc View Source UnitType Declaration public UnitType UnitType { get; set; } Property Value Type Description UnitType Methods | Improve this Doc View Source Equals(SymbolStyle) Declaration public bool Equals(SymbolStyle symbolStyle) Parameters Type Name Description SymbolStyle symbolStyle Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean Overrides VectorStyle.Equals(Nullable<Object>) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides VectorStyle.GetHashCode() Operators | Improve this Doc View Source Equality(SymbolStyle, SymbolStyle) Declaration public static bool operator ==(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description Boolean | Improve this Doc View Source Inequality(SymbolStyle, SymbolStyle) Declaration public static bool operator !=(SymbolStyle symbolStyle1, SymbolStyle symbolStyle2) Parameters Type Name Description SymbolStyle symbolStyle1 SymbolStyle symbolStyle2 Returns Type Description Boolean Implements IStyle"
  },
  "api/Mapsui.Styles.SymbolStyles.html": {
    "href": "api/Mapsui.Styles.SymbolStyles.html",
    "title": "Class SymbolStyles",
    "keywords": "Class SymbolStyles Inheritance Object SymbolStyles Namespace : Mapsui.Styles Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SymbolStyles : object Methods | Improve this Doc View Source CreatePinStyle(Color, Double) Declaration public static SymbolStyle CreatePinStyle(Color pinColor = null, double symbolScale = 1) Parameters Type Name Description Color pinColor Double symbolScale Returns Type Description SymbolStyle"
  },
  "api/Mapsui.Styles.SymbolType.html": {
    "href": "api/Mapsui.Styles.SymbolType.html",
    "title": "Enum SymbolType",
    "keywords": "Enum SymbolType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum SymbolType : int Fields Name Description Ellipse Image Rectangle Triangle"
  },
  "api/Mapsui.Styles.Thematics.ColorBlend.html": {
    "href": "api/Mapsui.Styles.Thematics.ColorBlend.html",
    "title": "Class ColorBlend",
    "keywords": "Class ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. Inheritance Object ColorBlend Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ColorBlend : object Constructors | Improve this Doc View Source ColorBlend(Color[], Double[]) Initializes a new instance of the ColorBlend class. Declaration public ColorBlend(Color[] colors, double[] positions) Parameters Type Name Description Color [] colors An array of Color structures that represents the colors to use at corresponding positions along a gradient. Double [] positions An array of values that specify percentages of distance along the gradient line. Properties | Improve this Doc View Source BlackToWhite Gets a linear gradient scale from black to white Declaration public static ColorBlend BlackToWhite { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToGreen Gets a linear gradient scale from blue to green Declaration public static ColorBlend BlueToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToRed Gets a linear gradient scale from blue to red Declaration public static ColorBlend BlueToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Colors Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient. Declaration public Color[] Colors { get; set; } Property Value Type Description Color [] | Improve this Doc View Source GreenToBlue Gets a linear gradient scale from green to blue Declaration public static ColorBlend GreenToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source GreenToRed Gets a linear gradient scale from green to red Declaration public static ColorBlend GreenToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Positions Gets or sets the positions along a gradient line. Declaration public double[] Positions { get; set; } Property Value Type Description Double [] An array of values that specify percentages of distance along the gradient line. Remarks The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f, and the first element of the array must be 0.0f and the last element must be 1.0f. Along with the Colors property, this property defines a multicolor gradient. | Improve this Doc View Source Rainbow5 Gets a linear gradient scale with five colors making a rainbow from red to blue. Declaration public static ColorBlend Rainbow5 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 0.25: { Color.Red, Color.Yellow, Color.Green, Color.Cyan, Color.Blue } | Improve this Doc View Source Rainbow7 Gets a linear gradient scale with seven colors making a rainbow from red to violet. Declaration public static ColorBlend Rainbow7 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 1/6: { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Violet } | Improve this Doc View Source RedToBlue Gets a linear gradient scale from red to blue Declaration public static ColorBlend RedToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source RedToGreen Gets a linear gradient scale from red to green Declaration public static ColorBlend RedToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source WhiteToBlack Gets a linear gradient scale from white to black Declaration public static ColorBlend WhiteToBlack { get; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetColor(Double) Gets the color from the scale at position 'pos'. Declaration public Color GetColor(double pos) Parameters Type Name Description Double pos Position on scale between 0.0f and 1.0f Returns Type Description Color Color on scale Remarks If the position is outside the scale [0..1] only the fractional part is used (in other words the scale restarts for each integer-part). | Improve this Doc View Source ThreeColors(Color, Color, Color) Creates a linear gradient scale from three colors Declaration public static ColorBlend ThreeColors(Color fromColor, Color middleColor, Color toColor) Parameters Type Name Description Color fromColor Color middleColor Color toColor Returns Type Description ColorBlend | Improve this Doc View Source TwoColors(Color, Color) Creates a linear gradient scale from two colors Declaration public static ColorBlend TwoColors(Color fromColor, Color toColor) Parameters Type Name Description Color fromColor Color toColor Returns Type Description ColorBlend"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.GetStyleMethod.html",
    "title": "Delegate CustomTheme.GetStyleMethod",
    "keywords": "Delegate CustomTheme.GetStyleMethod Custom Style Delegate method Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public delegate IStyle GetStyleMethod(IFeature feature); Parameters Type Name Description IFeature feature Feature Returns Type Description IStyle Style to be applied to feature"
  },
  "api/Mapsui.Styles.Thematics.CustomTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.CustomTheme.html",
    "title": "Class CustomTheme",
    "keywords": "Class CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. Inheritance Object Style CustomTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Nullable<Object>) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class CustomTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source CustomTheme(CustomTheme.GetStyleMethod) Initializes a new instance of the CustomTheme class Declaration public CustomTheme(CustomTheme.GetStyleMethod getStyleMethod) Parameters Type Name Description CustomTheme.GetStyleMethod getStyleMethod Properties | Improve this Doc View Source DefaultStyle Gets or sets the default style when an attribute isn't found in any bucket Declaration public IStyle DefaultStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source StyleDelegate Gets or sets the style delegate used for determining the style of a feature Declaration public CustomTheme.GetStyleMethod StyleDelegate { get; set; } Property Value Type Description CustomTheme.GetStyleMethod See Also CustomTheme.GetStyleMethod Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.GradientTheme.html": {
    "href": "api/Mapsui.Styles.Thematics.GradientTheme.html",
    "title": "Class GradientTheme",
    "keywords": "Class GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. Inheritance Object Style GradientTheme Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Nullable<Object>) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class GradientTheme : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source GradientTheme(String, Double, Double, IStyle, IStyle) Initializes a new instance of the GradientTheme class Declaration public GradientTheme(string columnName, double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description String columnName Name of column to extract the attribute Double minValue Minimum value Double maxValue Maximum value IStyle minStyle Color for minimum value IStyle maxStyle Color for maximum value Remarks The gradient theme interpolates linearly between two styles based on a numerical attribute in the data source. This is useful for scaling symbols, line widths, line and fill colors from numerical attributes. Colors are interpolated between two colors, but if you want to interpolate through more colors (fx. a rainbow), set the TextColorBlend , LineColorBlend and FillColorBlend properties to a custom ColorBlend . The following properties are scaled (properties not mentioned here are not interpolated): Property Remarks Color Red, Green, Blue and Alpha values are linearly interpolated. Pen The color, width, color of pens are interpolated. MiterLimit,StartCap,EndCap,LineJoin,DashStyle,DashPattern,DashOffset,DashCap,CompoundArray, and Alignment are switched in the middle of the min/max values. Brush Brush color are interpolated. Other brushes are not supported. VectorStyle MaxVisible, MinVisible, Line, Outline, Fill and SymbolScale are scaled linearly. Symbol, EnableOutline and Enabled switch in the middle of the min/max values. LabelStyle FontSize, BackColor, ForeColor, MaxVisible, MinVisible, Offset are scaled linearly. All other properties use min-style. Creating a rainbow color blend showing colors from red, through yellow, green and blue depicting the population density of a country. //Create two vector styles to interpolate between Mapsui.Styles.VectorStyle min = new Mapsui.Styles.VectorStyle(); Mapsui.Styles.VectorStyle max = new Mapsui.Styles.VectorStyle(); min.Outline.Width = 1f; //Outline width of the minimum value max.Outline.Width = 3f; //Outline width of the maximum value //Create a theme interpolating population density between 0 and 400 Mapsui.Rendering.Thematics.GradientTheme popdens = new Mapsui.Rendering.Thematics.GradientTheme(\"PopDens\", 0, 400, min, max); //Set the fill-style colors to be a rainbow blend from red to blue. popdens.FillColorBlend = Mapsui.Rendering.Thematics.ColorBlend.Rainbow5; myVectorLayer.Styles.Add(popdens); Properties | Improve this Doc View Source ColumnName Gets or sets the column name from where to get the attribute value Declaration public string ColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source FillColorBlend Gets or sets the ColorBlend used as Fill Declaration public ColorBlend FillColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source LineColorBlend Gets or sets the ColorBlend used on lines Declaration public ColorBlend LineColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source Max Gets or sets the maximum value of the gradient Declaration public double Max { get; set; } Property Value Type Description Double | Improve this Doc View Source MaxStyle Gets or sets the style for the maximum value Declaration public IStyle MaxStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Min Gets or sets the minimum value of the gradient Declaration public double Min { get; set; } Property Value Type Description Double | Improve this Doc View Source MinStyle Gets or sets the style for the minimum value Declaration public IStyle MinStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source TextColorBlend Gets or sets the ColorBlend used on labels Declaration public ColorBlend TextColorBlend { get; set; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a numeric DataColumn, where style properties are linearly interpolated between max and min values. Declaration public IStyle GetStyle(IFeature row) Parameters Type Name Description IFeature row Feature Returns Type Description IStyle Style calculated by a linear interpolation between the min/max styles Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.Thematics.html": {
    "href": "api/Mapsui.Styles.Thematics.html",
    "title": "Namespace Mapsui.Styles.Thematics",
    "keywords": "Namespace Mapsui.Styles.Thematics Classes ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. ThemeStyle Interfaces IThemeStyle Interface for rendering a thematic layer Delegates CustomTheme.GetStyleMethod Custom Style Delegate method"
  },
  "api/Mapsui.Styles.Thematics.IThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.IThemeStyle.html",
    "title": "Interface IThemeStyle",
    "keywords": "Interface IThemeStyle Interface for rendering a thematic layer Inherited Members IStyle.MinVisible IStyle.MaxVisible IStyle.Enabled IStyle.Opacity Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public interface IThemeStyle : IStyle Methods | Improve this Doc View Source GetStyle(IFeature) Returns the style based on a feature Declaration IStyle GetStyle(IFeature feature) Parameters Type Name Description IFeature feature Feature to calculate color from Returns Type Description IStyle Color"
  },
  "api/Mapsui.Styles.Thematics.ThemeStyle.html": {
    "href": "api/Mapsui.Styles.Thematics.ThemeStyle.html",
    "title": "Class ThemeStyle",
    "keywords": "Class ThemeStyle Inheritance Object Style ThemeStyle Implements IThemeStyle IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Nullable<Object>) Style.Equals(Style) Style.GetHashCode() Namespace : Mapsui.Styles.Thematics Assembly : Mapsui.dll Syntax public class ThemeStyle : Style, IThemeStyle, IStyle Constructors | Improve this Doc View Source ThemeStyle(Func<IFeature, IStyle>) Declaration public ThemeStyle(Func<IFeature, IStyle> method) Parameters Type Name Description Func < IFeature , IStyle > method Methods | Improve this Doc View Source GetStyle(IFeature) Declaration public IStyle GetStyle(IFeature attribute) Parameters Type Name Description IFeature attribute Returns Type Description IStyle Implements IThemeStyle IStyle"
  },
  "api/Mapsui.Styles.UnitType.html": {
    "href": "api/Mapsui.Styles.UnitType.html",
    "title": "Enum UnitType",
    "keywords": "Enum UnitType Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public enum UnitType : int Fields Name Description Pixel WorldUnit"
  },
  "api/Mapsui.Styles.VectorStyle.html": {
    "href": "api/Mapsui.Styles.VectorStyle.html",
    "title": "Class VectorStyle",
    "keywords": "Class VectorStyle Inheritance Object Style VectorStyle SymbolStyle Implements IStyle Inherited Members Style.MinVisible Style.MaxVisible Style.Enabled Style.Opacity Style.Equals(Style) Namespace : Mapsui.Styles Assembly : Mapsui.dll Syntax public class VectorStyle : Style, IStyle Constructors | Improve this Doc View Source VectorStyle() Declaration public VectorStyle() Properties | Improve this Doc View Source Fill Fill style for Polygon geometries Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Line Line style for line geometries Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source Outline Outline style for line and polygon geometries Declaration public Pen Outline { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source Equals(VectorStyle) Declaration public bool Equals(VectorStyle vectorStyle) Parameters Type Name Description VectorStyle vectorStyle Returns Type Description Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean Overrides Style.Equals(Nullable<Object>) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Style.GetHashCode() Operators | Improve this Doc View Source Equality(VectorStyle, VectorStyle) Declaration public static bool operator ==(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description Boolean | Improve this Doc View Source Inequality(VectorStyle, VectorStyle) Declaration public static bool operator !=(VectorStyle vectorStyle1, VectorStyle vectorStyle2) Parameters Type Name Description VectorStyle vectorStyle1 VectorStyle vectorStyle2 Returns Type Description Boolean Implements IStyle"
  },
  "api/Mapsui.Tests.Layers.html": {
    "href": "api/Mapsui.Tests.Layers.html",
    "title": "Namespace Mapsui.Tests.Layers",
    "keywords": "Namespace Mapsui.Tests.Layers Classes LayerThreadingTests"
  },
  "api/Mapsui.Tests.Layers.LayerThreadingTests.html": {
    "href": "api/Mapsui.Tests.Layers.LayerThreadingTests.html",
    "title": "Class LayerThreadingTests",
    "keywords": "Class LayerThreadingTests Inheritance Object LayerThreadingTests Namespace : Mapsui.Tests.Layers Assembly : Mapsui.UI.Forms.Tests.dll Syntax public class LayerThreadingTests : object Methods | Improve this Doc View Source TestObservableCollectionProviderAsync() Declaration public async Task TestObservableCollectionProviderAsync() Returns Type Description Task"
  },
  "api/Mapsui.Tests.Memory.html": {
    "href": "api/Mapsui.Tests.Memory.html",
    "title": "Namespace Mapsui.Tests.Memory",
    "keywords": "Namespace Mapsui.Tests.Memory Classes MapControlTests MapViewTests"
  },
  "api/Mapsui.Tests.Memory.MapControlTests.html": {
    "href": "api/Mapsui.Tests.Memory.MapControlTests.html",
    "title": "Class MapControlTests",
    "keywords": "Class MapControlTests Inheritance Object MapControlTests Namespace : Mapsui.Tests.Memory Assembly : Mapsui.UI.Forms.Tests.dll Syntax public class MapControlTests : object Methods | Improve this Doc View Source MapControlIsNotAliveAfterUsage() Declaration public void MapControlIsNotAliveAfterUsage() | Improve this Doc View Source MapIsAliveAfterUsage() Declaration public void MapIsAliveAfterUsage()"
  },
  "api/Mapsui.Tests.Memory.MapViewTests.html": {
    "href": "api/Mapsui.Tests.Memory.MapViewTests.html",
    "title": "Class MapViewTests",
    "keywords": "Class MapViewTests Inheritance Object MapViewTests Namespace : Mapsui.Tests.Memory Assembly : Mapsui.UI.Forms.Tests.dll Syntax public class MapViewTests : object Methods | Improve this Doc View Source MapViewIsNotAliveAfterUsage() Declaration public void MapViewIsNotAliveAfterUsage()"
  },
  "api/Mapsui.Tiling.Extensions.ExtentExtensions.html": {
    "href": "api/Mapsui.Tiling.Extensions.ExtentExtensions.html",
    "title": "Class ExtentExtensions",
    "keywords": "Class ExtentExtensions Inheritance Object ExtentExtensions Namespace : Mapsui.Tiling.Extensions Assembly : Mapsui.Tiling.dll Syntax public static class ExtentExtensions : object Methods | Improve this Doc View Source ToMRect(Extent) Declaration public static MRect ToMRect(this Extent extent) Parameters Type Name Description Extent extent Returns Type Description MRect"
  },
  "api/Mapsui.Tiling.Extensions.html": {
    "href": "api/Mapsui.Tiling.Extensions.html",
    "title": "Namespace Mapsui.Tiling.Extensions",
    "keywords": "Namespace Mapsui.Tiling.Extensions Classes ExtentExtensions MRectExtensions"
  },
  "api/Mapsui.Tiling.Extensions.MRectExtensions.html": {
    "href": "api/Mapsui.Tiling.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance Object MRectExtensions Namespace : Mapsui.Tiling.Extensions Assembly : Mapsui.Tiling.dll Syntax public static class MRectExtensions : object Methods | Improve this Doc View Source ToExtent(MRect) Declaration public static Extent ToExtent(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Extent"
  },
  "api/Mapsui.Tiling.Fetcher.DataFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Fetcher.DataFetchStrategy.html",
    "title": "Class DataFetchStrategy",
    "keywords": "Class DataFetchStrategy Inheritance Object DataFetchStrategy Implements IDataFetchStrategy Namespace : Mapsui.Tiling.Fetcher Assembly : Mapsui.Tiling.dll Syntax public class DataFetchStrategy : object, IDataFetchStrategy Constructors | Improve this Doc View Source DataFetchStrategy(Int32) Declaration public DataFetchStrategy(int maxLevelsUp = null) Parameters Type Name Description Int32 maxLevelsUp Methods | Improve this Doc View Source Get(ITileSchema, Extent, Int32) Declaration public IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent Int32 level Returns Type Description IList < TileInfo > Implements IDataFetchStrategy"
  },
  "api/Mapsui.Tiling.Fetcher.html": {
    "href": "api/Mapsui.Tiling.Fetcher.html",
    "title": "Namespace Mapsui.Tiling.Fetcher",
    "keywords": "Namespace Mapsui.Tiling.Fetcher Classes DataFetchStrategy MinimalDataFetchStrategy TileFetchDispatcher Interfaces IDataFetchStrategy"
  },
  "api/Mapsui.Tiling.Fetcher.IDataFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Fetcher.IDataFetchStrategy.html",
    "title": "Interface IDataFetchStrategy",
    "keywords": "Interface IDataFetchStrategy Namespace : Mapsui.Tiling.Fetcher Assembly : Mapsui.Tiling.dll Syntax public interface IDataFetchStrategy Methods | Improve this Doc View Source Get(ITileSchema, Extent, Int32) Fetches the tiles from the data source to put them into the cache. A strategy could pre-fetch certain tiles to anticipate future use. Declaration IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent Int32 level Returns Type Description IList < TileInfo >"
  },
  "api/Mapsui.Tiling.Fetcher.MinimalDataFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Fetcher.MinimalDataFetchStrategy.html",
    "title": "Class MinimalDataFetchStrategy",
    "keywords": "Class MinimalDataFetchStrategy Inheritance Object MinimalDataFetchStrategy Implements IDataFetchStrategy Namespace : Mapsui.Tiling.Fetcher Assembly : Mapsui.Tiling.dll Syntax public class MinimalDataFetchStrategy : object, IDataFetchStrategy Methods | Improve this Doc View Source Get(ITileSchema, Extent, Int32) Declaration public IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent Int32 level Returns Type Description IList < TileInfo > Implements IDataFetchStrategy"
  },
  "api/Mapsui.Tiling.Fetcher.TileFetchDispatcher.html": {
    "href": "api/Mapsui.Tiling.Fetcher.TileFetchDispatcher.html",
    "title": "Class TileFetchDispatcher",
    "keywords": "Class TileFetchDispatcher Inheritance Object TileFetchDispatcher Implements IFetchDispatcher INotifyPropertyChanged Namespace : Mapsui.Tiling.Fetcher Assembly : Mapsui.Tiling.dll Syntax public class TileFetchDispatcher : object, IFetchDispatcher Constructors | Improve this Doc View Source TileFetchDispatcher(ITileCache<IFeature>, Nullable<ITileSchema>, Func<TileInfo, Task<IFeature>>, IDataFetchStrategy) Declaration public TileFetchDispatcher(ITileCache<IFeature> tileCache, ITileSchema? tileSchema, Func<TileInfo, Task<IFeature>> fetchTileAsFeature, IDataFetchStrategy dataFetchStrategy = null) Parameters Type Name Description ITileCache < IFeature > tileCache Nullable < ITileSchema > tileSchema Func < TileInfo , Task < IFeature >> fetchTileAsFeature IDataFetchStrategy dataFetchStrategy Properties | Improve this Doc View Source Busy Declaration public bool Busy { get; } Property Value Type Description Boolean | Improve this Doc View Source NumberTilesNeeded Declaration public int NumberTilesNeeded { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source SetViewport(FetchInfo) Declaration public void SetViewport(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Improve this Doc View Source StartFetching() Declaration public void StartFetching() | Improve this Doc View Source StopFetching() Declaration public void StopFetching() | Improve this Doc View Source TryTake(out Nullable<Func<Task>>) Declaration public bool TryTake(out Func<Task>? method) Parameters Type Name Description Nullable < Func < Task >> method Returns Type Description Boolean Events | Improve this Doc View Source DataChanged Declaration public event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > Implements IFetchDispatcher INotifyPropertyChanged"
  },
  "api/Mapsui.Tiling.html": {
    "href": "api/Mapsui.Tiling.html",
    "title": "Namespace Mapsui.Tiling",
    "keywords": "Namespace Mapsui.Tiling Classes OpenStreetMap"
  },
  "api/Mapsui.Tiling.Layers.html": {
    "href": "api/Mapsui.Tiling.Layers.html",
    "title": "Namespace Mapsui.Tiling.Layers",
    "keywords": "Namespace Mapsui.Tiling.Layers Classes RasterizingTileLayer TileLayer Layer, which displays a map consisting of individual tiles TmsTileSourceBuilder"
  },
  "api/Mapsui.Tiling.Layers.RasterizingTileLayer.html": {
    "href": "api/Mapsui.Tiling.Layers.RasterizingTileLayer.html",
    "title": "Class RasterizingTileLayer",
    "keywords": "Class RasterizingTileLayer Inheritance Object BaseLayer TileLayer RasterizingTileLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IDisposable ISourceLayer IAsyncDataFetcher Inherited Members TileLayer.TileSource TileLayer.Resolutions TileLayer.Extent TileLayer.GetFeatures(MRect, Double) TileLayer.AbortFetch() TileLayer.ClearCache() TileLayer.RefreshData(FetchInfo) TileLayer.Dispose(Boolean) BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Tiling.Layers Assembly : Mapsui.Tiling.dll Syntax public class RasterizingTileLayer : TileLayer, ILayer, IAnimatable, ISourceLayer, IAsyncDataFetcher Constructors | Improve this Doc View Source RasterizingTileLayer(ILayer, Double, IRenderer, Single, Int32, Int32, IDataFetchStrategy, IRenderFetchStrategy, Int32, Int32, Nullable<IPersistentCache<Byte[]>>, IProjection, RenderFormat) Creates a RasterizingTileLayer which rasterizes a layer for performance Declaration public RasterizingTileLayer(ILayer layer, double renderResolutionMultiplier = null, IRenderer rasterizer = null, float pixelDensity = null, int minTiles = 200, int maxTiles = 300, IDataFetchStrategy dataFetchStrategy = null, IRenderFetchStrategy renderFetchStrategy = null, int minExtraTiles = null, int maxExtraTiles = null, IPersistentCache<byte[]>? persistentCache = null, IProjection projection = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description ILayer layer The Layer to be rasterized Double renderResolutionMultiplier IRenderer rasterizer Rasterizer to use. null will use the default Single pixelDensity Int32 minTiles Minimum number of tiles to cache Int32 maxTiles Maximum number of tiles to cache IDataFetchStrategy dataFetchStrategy Strategy to get list of tiles for given extent IRenderFetchStrategy renderFetchStrategy Int32 minExtraTiles Number of minimum extra tiles for memory cache Int32 maxExtraTiles Number of maximum extra tiles for memory cache Nullable < IPersistentCache < Byte []>> persistentCache Persistent Cache IProjection projection Projection RenderFormat renderFormat Format to Render To Properties | Improve this Doc View Source SourceLayer Declaration public ILayer SourceLayer { get; } Property Value Type Description ILayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IDisposable ISourceLayer IAsyncDataFetcher"
  },
  "api/Mapsui.Tiling.Layers.TileLayer.html": {
    "href": "api/Mapsui.Tiling.Layers.TileLayer.html",
    "title": "Class TileLayer",
    "keywords": "Class TileLayer Layer, which displays a map consisting of individual tiles Inheritance Object BaseLayer TileLayer RasterizingTileLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher IDisposable Inherited Members BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.Tiling.Layers Assembly : Mapsui.Tiling.dll Syntax public class TileLayer : BaseLayer, ILayer, IAnimatable, IAsyncDataFetcher Constructors | Improve this Doc View Source TileLayer(ITileSource, Int32, Int32, IDataFetchStrategy, IRenderFetchStrategy, Int32, Int32, Nullable<Func<TileInfo, Task<IFeature>>>) Create tile layer for given tile source Declaration public TileLayer(ITileSource tileSource, int minTiles = 200, int maxTiles = 300, IDataFetchStrategy dataFetchStrategy = null, IRenderFetchStrategy renderFetchStrategy = null, int minExtraTiles = null, int maxExtraTiles = null, Func<TileInfo, Task<IFeature>>? fetchTileAsFeature = null) Parameters Type Name Description ITileSource tileSource Tile source to use for this layer Int32 minTiles Minimum number of tiles to cache Int32 maxTiles Maximum number of tiles to cache IDataFetchStrategy dataFetchStrategy Strategy to get list of tiles for given extent IRenderFetchStrategy renderFetchStrategy Int32 minExtraTiles Number of minimum extra tiles for memory cache Int32 maxExtraTiles Number of maximum extra tiles for memory cache Nullable < Func < TileInfo , Task < IFeature >>> fetchTileAsFeature Fetch tile as feature Properties | Improve this Doc View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Improve this Doc View Source Resolutions List of native resolutions Declaration public override IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList < Double > Overrides BaseLayer.Resolutions | Improve this Doc View Source TileSource TileSource Declaration public ITileSource TileSource { get; } Property Value Type Description ITileSource Methods | Improve this Doc View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Improve this Doc View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source GetFeatures(MRect, Double) Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Double resolution Returns Type Description IEnumerable < IFeature > | Improve this Doc View Source RefreshData(FetchInfo) Indicates that there has been a change in the view of the map Declaration public void RefreshData(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo FetchInfo Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher IDisposable"
  },
  "api/Mapsui.Tiling.Layers.TmsTileSourceBuilder.html": {
    "href": "api/Mapsui.Tiling.Layers.TmsTileSourceBuilder.html",
    "title": "Class TmsTileSourceBuilder",
    "keywords": "Class TmsTileSourceBuilder Inheritance Object TmsTileSourceBuilder Namespace : Mapsui.Tiling.Layers Assembly : Mapsui.Tiling.dll Syntax public static class TmsTileSourceBuilder : object Methods | Improve this Doc View Source Build(String, Boolean, Nullable<IPersistentCache<Byte[]>>) Declaration public static ITileSource Build(string urlToTileMapXml, bool overrideTmsUrlWithUrlToTileMapXml, IPersistentCache<byte[]>? persistentCache = null) Parameters Type Name Description String urlToTileMapXml Boolean overrideTmsUrlWithUrlToTileMapXml Nullable < IPersistentCache < Byte []>> persistentCache Returns Type Description ITileSource"
  },
  "api/Mapsui.Tiling.OpenStreetMap.html": {
    "href": "api/Mapsui.Tiling.OpenStreetMap.html",
    "title": "Class OpenStreetMap",
    "keywords": "Class OpenStreetMap Inheritance Object OpenStreetMap Namespace : Mapsui.Tiling Assembly : Mapsui.Tiling.dll Syntax public static class OpenStreetMap : object Fields | Improve this Doc View Source DefaultCache Declaration public static IPersistentCache<byte[]>? DefaultCache Field Value Type Description Nullable < IPersistentCache < Byte []>> Methods | Improve this Doc View Source CreateTileLayer(Nullable<String>) Declaration public static TileLayer CreateTileLayer(string? userAgent = null) Parameters Type Name Description Nullable < String > userAgent Returns Type Description TileLayer"
  },
  "api/Mapsui.Tiling.Provider.html": {
    "href": "api/Mapsui.Tiling.Provider.html",
    "title": "Namespace Mapsui.Tiling.Provider",
    "keywords": "Namespace Mapsui.Tiling.Provider Classes RasterizingTileProvider The rasterizing tile provider. Tiles the Layer for faster Rasterizing on Zoom and Move. TileProvider"
  },
  "api/Mapsui.Tiling.Provider.RasterizingTileProvider.html": {
    "href": "api/Mapsui.Tiling.Provider.RasterizingTileProvider.html",
    "title": "Class RasterizingTileProvider",
    "keywords": "Class RasterizingTileProvider The rasterizing tile provider. Tiles the Layer for faster Rasterizing on Zoom and Move. Inheritance Object RasterizingTileProvider Namespace : Mapsui.Tiling.Provider Assembly : Mapsui.Tiling.dll Syntax public class RasterizingTileProvider : ITileSource Constructors | Improve this Doc View Source RasterizingTileProvider(ILayer, Double, IRenderer, Single, Nullable<IPersistentCache<Byte[]>>, IProjection, RenderFormat) Declaration public RasterizingTileProvider(ILayer layer, double renderResolutionMultiplier = null, IRenderer rasterizer = null, float pixelDensity = null, IPersistentCache<byte[]>? persistentCache = null, IProjection projection = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description ILayer layer Double renderResolutionMultiplier IRenderer rasterizer Single pixelDensity Nullable < IPersistentCache < Byte []>> persistentCache IProjection projection RenderFormat renderFormat Properties | Improve this Doc View Source Attribution Declaration public BruTile.Attribution Attribution { get; } Property Value Type Description BruTile.Attribution | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source PersistentCache Declaration public IPersistentCache<byte[]> PersistentCache { get; set; } Property Value Type Description IPersistentCache < Byte []> | Improve this Doc View Source Schema Declaration public ITileSchema Schema { get; } Property Value Type Description ITileSchema Methods | Improve this Doc View Source GetTileAsync(TileInfo) Declaration public async Task<byte[]> GetTileAsync(TileInfo tileInfo) Parameters Type Name Description TileInfo tileInfo Returns Type Description Task < Byte []>"
  },
  "api/Mapsui.Tiling.Provider.TileProvider.html": {
    "href": "api/Mapsui.Tiling.Provider.TileProvider.html",
    "title": "Class TileProvider",
    "keywords": "Class TileProvider Inheritance Object TileProvider Implements IProvider Namespace : Mapsui.Tiling.Provider Assembly : Mapsui.Tiling.dll Syntax public class TileProvider : object, IProvider Constructors | Improve this Doc View Source TileProvider(ITileSource) Declaration public TileProvider(ITileSource tileSource) Parameters Type Name Description ITileSource tileSource Properties | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public async Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.Tiling.Rendering.html": {
    "href": "api/Mapsui.Tiling.Rendering.html",
    "title": "Namespace Mapsui.Tiling.Rendering",
    "keywords": "Namespace Mapsui.Tiling.Rendering Classes MinimalRenderFetchStrategy RenderException Exception thrown when a layer rendering fails RenderFetchStrategy Interfaces IRenderFetchStrategy"
  },
  "api/Mapsui.Tiling.Rendering.IRenderFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Rendering.IRenderFetchStrategy.html",
    "title": "Interface IRenderFetchStrategy",
    "keywords": "Interface IRenderFetchStrategy Namespace : Mapsui.Tiling.Rendering Assembly : Mapsui.Tiling.dll Syntax public interface IRenderFetchStrategy Methods | Improve this Doc View Source Get(MRect, Double, ITileSchema, ITileCache<IFeature>) Given the current extent and resolution it determines which tiles should be returned from the memory cache Declaration IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature> memoryCache) Parameters Type Name Description MRect extent The extent of the target area Double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache < IFeature > memoryCache The cached features from which to select Returns Type Description IList < IFeature >"
  },
  "api/Mapsui.Tiling.Rendering.MinimalRenderFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Rendering.MinimalRenderFetchStrategy.html",
    "title": "Class MinimalRenderFetchStrategy",
    "keywords": "Class MinimalRenderFetchStrategy Inheritance Object MinimalRenderFetchStrategy Implements IRenderFetchStrategy Namespace : Mapsui.Tiling.Rendering Assembly : Mapsui.Tiling.dll Syntax public class MinimalRenderFetchStrategy : object, IRenderFetchStrategy Methods | Improve this Doc View Source Get(MRect, Double, ITileSchema, ITileCache<IFeature>) Declaration public IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature> memoryCache) Parameters Type Name Description MRect extent Double resolution ITileSchema schema ITileCache < IFeature > memoryCache Returns Type Description IList < IFeature > Implements IRenderFetchStrategy"
  },
  "api/Mapsui.Tiling.Rendering.RenderException.html": {
    "href": "api/Mapsui.Tiling.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance Object RenderException Namespace : Mapsui.Tiling.Rendering Assembly : Mapsui.Tiling.dll Syntax public class RenderException : Exception Constructors | Improve this Doc View Source RenderException(String) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description String message | Improve this Doc View Source RenderException(String, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description String message Exception inner"
  },
  "api/Mapsui.Tiling.Rendering.RenderFetchStrategy.html": {
    "href": "api/Mapsui.Tiling.Rendering.RenderFetchStrategy.html",
    "title": "Class RenderFetchStrategy",
    "keywords": "Class RenderFetchStrategy Inheritance Object RenderFetchStrategy Implements IRenderFetchStrategy Namespace : Mapsui.Tiling.Rendering Assembly : Mapsui.Tiling.dll Syntax public class RenderFetchStrategy : object, IRenderFetchStrategy Methods | Improve this Doc View Source Get(MRect, Double, ITileSchema, ITileCache<IFeature>) Declaration public IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature> memoryCache) Parameters Type Name Description MRect extent Double resolution ITileSchema schema ITileCache < IFeature > memoryCache Returns Type Description IList < IFeature > | Improve this Doc View Source GetRecursive(IDictionary<TileIndex, IFeature>, ITileSchema, ITileCache<IFeature>, Extent, Int32) Declaration public static void GetRecursive(IDictionary<TileIndex, IFeature> resultTiles, ITileSchema schema, ITileCache<IFeature> cache, Extent extent, int level) Parameters Type Name Description IDictionary < TileIndex , IFeature > resultTiles ITileSchema schema ITileCache < IFeature > cache Extent extent Int32 level Implements IRenderFetchStrategy"
  },
  "api/Mapsui.UI.Android.Extensions.html": {
    "href": "api/Mapsui.UI.Android.Extensions.html",
    "title": "Namespace Mapsui.UI.Android.Extensions",
    "keywords": "Namespace Mapsui.UI.Android.Extensions Classes PointExtensions"
  },
  "api/Mapsui.UI.Android.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.UI.Android.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance Object PointExtensions Namespace : Mapsui.UI.Android.Extensions Assembly : Mapsui.UI.Android.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToDeviceIndependentUnits(MPoint, Single) Declaration public static MPoint ToDeviceIndependentUnits(this MPoint point, float pixelDensity) Parameters Type Name Description MPoint point Single pixelDensity Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Android.html": {
    "href": "api/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl Enums SkiaRenderMode"
  },
  "api/Mapsui.UI.Android.MapControl.html": {
    "href": "api/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class MapControl : ViewGroup, IMapControl Constructors | Improve this Doc View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Context context IAttributeSet attrs | Improve this Doc View Source MapControl(Context, IAttributeSet, Int32) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Context context IAttributeSet attrs Int32 defStyle Properties | Improve this Doc View Source RenderMode Declaration public SkiaRenderMode RenderMode { get; set; } Property Value Type Description SkiaRenderMode Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source MapView_Touch(Nullable<Object>, TouchEventArgs) Declaration public void MapView_Touch(object? sender, TouchEventArgs args) Parameters Type Name Description Nullable < Object > sender TouchEventArgs args | Improve this Doc View Source OnFling(Nullable<Object>, GestureDetector.FlingEventArgs) Declaration public void OnFling(object? sender, GestureDetector.FlingEventArgs args) Parameters Type Name Description Nullable < Object > sender GestureDetector.FlingEventArgs args | Improve this Doc View Source OnLayout(Boolean, Int32, Int32, Int32, Int32) Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description Boolean changed Int32 l Int32 t Int32 r Int32 b | Improve this Doc View Source OnSizeChanged(Int32, Int32, Int32, Int32) Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description Int32 width Int32 height Int32 oldWidth Int32 oldHeight | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url Implements IMapControl"
  },
  "api/Mapsui.UI.Android.SkiaRenderMode.html": {
    "href": "api/Mapsui.UI.Android.SkiaRenderMode.html",
    "title": "Enum SkiaRenderMode",
    "keywords": "Enum SkiaRenderMode Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public enum SkiaRenderMode : int Fields Name Description Hardware Software"
  },
  "api/Mapsui.UI.Avalonia.Extensions.html": {
    "href": "api/Mapsui.UI.Avalonia.Extensions.html",
    "title": "Namespace Mapsui.UI.Avalonia.Extensions",
    "keywords": "Namespace Mapsui.UI.Avalonia.Extensions Classes PointExtensions"
  },
  "api/Mapsui.UI.Avalonia.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.UI.Avalonia.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance Object PointExtensions Namespace : Mapsui.UI.Avalonia.Extensions Assembly : Mapsui.UI.Avalonia.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static MPoint ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Avalonia.html": {
    "href": "api/Mapsui.UI.Avalonia.html",
    "title": "Namespace Mapsui.UI.Avalonia",
    "keywords": "Namespace Mapsui.UI.Avalonia Classes MapControl"
  },
  "api/Mapsui.UI.Avalonia.MapControl.html": {
    "href": "api/Mapsui.UI.Avalonia.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl IDisposable Grid Namespace : Mapsui.UI.Avalonia Assembly : Mapsui.UI.Avalonia.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPointerMoved(PointerEventArgs) Declaration protected override void OnPointerMoved(PointerEventArgs e) Parameters Type Name Description PointerEventArgs e | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OnPropertyChanged<T>(AvaloniaPropertyChangedEventArgs<T>) Declaration protected override void OnPropertyChanged<T>(AvaloniaPropertyChangedEventArgs<T> change) Parameters Type Name Description AvaloniaPropertyChangedEventArgs <T> change Type Parameters Name Description T | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source Render(DrawingContext) Declaration public override void Render(DrawingContext context) Parameters Type Name Description DrawingContext context | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source FeatureInfo Declaration public event EventHandler<FeatureInfoEventArgs>? FeatureInfo Event Type Type Description Nullable < EventHandler < FeatureInfoEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Implements IMapControl IDisposable Grid"
  },
  "api/Mapsui.UI.Eto.Extensions.Extensions.html": {
    "href": "api/Mapsui.UI.Eto.Extensions.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Inheritance Object Extensions Namespace : Mapsui.UI.Eto.Extensions Assembly : Mapsui.UI.Eto.dll Syntax public static class Extensions : object Methods | Improve this Doc View Source ToMapsui(PointF) Declaration public static MPoint ToMapsui(this PointF point) Parameters Type Name Description PointF point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Eto.Extensions.html": {
    "href": "api/Mapsui.UI.Eto.Extensions.html",
    "title": "Namespace Mapsui.UI.Eto.Extensions",
    "keywords": "Namespace Mapsui.UI.Eto.Extensions Classes Extensions"
  },
  "api/Mapsui.UI.Eto.html": {
    "href": "api/Mapsui.UI.Eto.html",
    "title": "Namespace Mapsui.UI.Eto",
    "keywords": "Namespace Mapsui.UI.Eto Classes MapControl"
  },
  "api/Mapsui.UI.Eto.MapControl.html": {
    "href": "api/Mapsui.UI.Eto.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl IDisposable SkiaDrawable Namespace : Mapsui.UI.Eto Assembly : Mapsui.UI.Eto.dll Syntax public class MapControl : INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map? Map { get; set; } Property Value Type Description Nullable < Map > | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source MoveButton Declaration public MouseButtons MoveButton { get; set; } Property Value Type Description MouseButtons | Improve this Doc View Source MoveCursor Declaration public Cursor MoveCursor { get; set; } Property Value Type Description Cursor | Improve this Doc View Source MoveModifier Declaration public Keys MoveModifier { get; set; } Property Value Type Description Keys | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator? Navigator { get; set; } Property Value Type Description Nullable < INavigator > | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance? Performance { get; set; } Property Value Type Description Nullable < Performance > Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source ZoomButton Declaration public MouseButtons ZoomButton { get; set; } Property Value Type Description MouseButtons | Improve this Doc View Source ZoomModifier Declaration public Keys ZoomModifier { get; set; } Property Value Type Description Keys Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(Nullable<MPoint>, Int32) Declaration public MapInfo? GetMapInfo(MPoint? screenPosition, int margin = 0) Parameters Type Name Description Nullable < MPoint > screenPosition Int32 margin Returns Type Description Nullable < MapInfo > | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnLoadComplete(EventArgs) Declaration protected override void OnLoadComplete(EventArgs e) Parameters Type Name Description EventArgs e | Improve this Doc View Source OnMouseDown(MouseEventArgs) Declaration protected override void OnMouseDown(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Improve this Doc View Source OnMouseMove(MouseEventArgs) Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Improve this Doc View Source OnMouseUp(MouseEventArgs) Declaration protected override void OnMouseUp(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Improve this Doc View Source OnMouseWheel(MouseEventArgs) Declaration protected override void OnMouseWheel(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Improve this Doc View Source OnPaint(SKPaintEventArgs) Declaration protected override void OnPaint(SKPaintEventArgs e) Parameters Type Name Description SKPaintEventArgs e | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OnSizeChanged(EventArgs) Declaration protected override void OnSizeChanged(EventArgs e) Parameters Type Name Description EventArgs e | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Returns Type Description MPoint | Improve this Doc View Source ToPixels(MPoint) Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Returns Type Description MPoint | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() | Improve this Doc View Source ZoomToBox(MPoint, MPoint) Declaration public void ZoomToBox(MPoint beginPoint, MPoint endPoint) Parameters Type Name Description MPoint beginPoint MPoint endPoint Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Implements IMapControl IDisposable SkiaDrawable"
  },
  "api/Mapsui.UI.FeatureInfoEventArgs.html": {
    "href": "api/Mapsui.UI.FeatureInfoEventArgs.html",
    "title": "Class FeatureInfoEventArgs",
    "keywords": "Class FeatureInfoEventArgs Inheritance Object FeatureInfoEventArgs Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class FeatureInfoEventArgs : EventArgs Properties | Improve this Doc View Source FeatureInfo Declaration public IDictionary<string, IEnumerable<IFeature>>? FeatureInfo { get; set; } Property Value Type Description Nullable < IDictionary < String , IEnumerable < IFeature >>>"
  },
  "api/Mapsui.UI.Forms.Callout.html": {
    "href": "api/Mapsui.UI.Forms.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance Object Callout Implements IFeatureProvider IDisposable Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Callout : BindableObject, IFeatureProvider Constructors | Improve this Doc View Source Callout(Pin) Declaration public Callout(Pin pin) Parameters Type Name Description Pin pin Fields | Improve this Doc View Source AnchorProperty Bindable property for the Anchor property Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowAlignmentProperty Bindable property for the ArrowAlignment property Declaration public static readonly BindableProperty ArrowAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowHeightProperty Bindable property for the ArrowHeight property Declaration public static readonly BindableProperty ArrowHeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowPositionProperty Bindable property for the ArrowPosition property Declaration public static readonly BindableProperty ArrowPositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowWidthProperty Bindable property for the ArrowWidth property Declaration public static readonly BindableProperty ArrowWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source BackgroundColorProperty Bindable property for the BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Bindable property for the Color property Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ContentProperty Bindable property for the Content property Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty | Improve this Doc View Source DefaultSubtitleFontAttributes Declaration public static FontAttributes DefaultSubtitleFontAttributes Field Value Type Description FontAttributes | Improve this Doc View Source DefaultSubtitleFontColor Declaration public static Xamarin.Forms.Color DefaultSubtitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultSubtitleFontName Declaration public static string DefaultSubtitleFontName Field Value Type Description String | Improve this Doc View Source DefaultSubtitleFontSize Declaration public static double DefaultSubtitleFontSize Field Value Type Description Double | Improve this Doc View Source DefaultSubtitleTextAlignment Declaration public static TextAlignment DefaultSubtitleTextAlignment Field Value Type Description TextAlignment | Improve this Doc View Source DefaultTitleFontAttributes Declaration public static FontAttributes DefaultTitleFontAttributes Field Value Type Description FontAttributes | Improve this Doc View Source DefaultTitleFontColor Declaration public static Xamarin.Forms.Color DefaultTitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultTitleFontName Declaration public static string DefaultTitleFontName Field Value Type Description String | Improve this Doc View Source DefaultTitleFontSize Declaration public static double DefaultTitleFontSize Field Value Type Description Double | Improve this Doc View Source DefaultTitleTextAlignment Declaration public static TextAlignment DefaultTitleTextAlignment Field Value Type Description TextAlignment | Improve this Doc View Source IsClosableByClickProperty Bindable property for the IsClosableByClick property Declaration public static readonly BindableProperty IsClosableByClickProperty Field Value Type Description BindableProperty | Improve this Doc View Source MaxWidthProperty Bindable property for the MaxWidth property Declaration public static readonly BindableProperty MaxWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source PaddingProperty Bindable property for the Padding property Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description BindableProperty | Improve this Doc View Source RectRadiusProperty Bindable property for the RectRadius property Declaration public static readonly BindableProperty RectRadiusProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotateWithMapProperty Bindable property for the RotateWithMap property Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationProperty Bindable property for the Rotation property Declaration public static readonly BindableProperty RotationProperty Field Value Type Description BindableProperty | Improve this Doc View Source ShadowWidthProperty Bindable property for the ShadowWidth property Declaration public static readonly BindableProperty ShadowWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source SpacingProperty Bindable property for the Spacing property Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeWidthProperty Bindable property for the StrokeWidth property Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontAttributesProperty Bindable property for the SubtitleFontAttributes property Declaration public static readonly BindableProperty SubtitleFontAttributesProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontColorProperty Bindable property for the SubtitleFontColor property Declaration public static readonly BindableProperty SubtitleFontColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontNameProperty Bindable property for the SubtitleFontName property Declaration public static readonly BindableProperty SubtitleFontNameProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontSizeProperty Bindable property for the SubtitleFontSize property Declaration public static readonly BindableProperty SubtitleFontSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleProperty Bindable property for the Subtitle property Declaration public static readonly BindableProperty SubtitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleTextAlignmentProperty Bindable property for the SubtitleTextAlignment property Declaration public static readonly BindableProperty SubtitleTextAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontAttributesProperty Bindable property for the TitleFontAttributes property Declaration public static readonly BindableProperty TitleFontAttributesProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontColorProperty Bindable property for the TitleFontColor property Declaration public static readonly BindableProperty TitleFontColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontNameProperty Bindable property for the TitleFontName property Declaration public static readonly BindableProperty TitleFontNameProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontSizeProperty Bindable property for the TitleFontSize property Declaration public static readonly BindableProperty TitleFontSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleProperty Bindable property for the Title property Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleTextAlignmentProperty Bindable property for the TitleTextAlignment property Declaration public static readonly BindableProperty TitleTextAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Bindable property for the Type property Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Anchor Anchor position of Callout Declaration public Xamarin.Forms.Point Anchor { get; set; } Property Value Type Description Xamarin.Forms.Point | Improve this Doc View Source ArrowAlignment Arrow alignment of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height from arrow of Callout Declaration public double ArrowHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by ArrowAlignment Declaration public double ArrowPosition { get; set; } Property Value Type Description Double | Improve this Doc View Source ArrowWidth Width from arrow of Callout Declaration public double ArrowWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Xamarin.Forms.Color BackgroundColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Xamarin.Forms.Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Feature Feature, which belongs to callout. Should be the same as for the pin to which this callout belongs. Declaration public GeometryFeature Feature { get; } Property Value Type Description GeometryFeature | Improve this Doc View Source IsClosableByClick Is Callout closable by a click on the callout Declaration public bool IsClosableByClick { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness | Improve this Doc View Source Pin Pin to which this callout belongs Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public double RectRadius { get; set; } Property Value Type Description Double | Improve this Doc View Source RotateWithMap Rotate Callout with map Declaration public bool RotateWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rotation Rotation of Callout around the anchor Declaration public double Rotation { get; set; } Property Value Type Description Double | Improve this Doc View Source ShadowWidth Shadow width around Callout Declaration public double ShadowWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public double StrokeWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Subtitle Content of Callout detail label Declaration public string Subtitle { get; set; } Property Value Type Description String | Improve this Doc View Source SubtitleFontAttributes Font attributes to render subtitle Declaration public FontAttributes SubtitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Xamarin.Forms.Color SubtitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source SubtitleFontName Font name to use rendering subtitle Declaration public string SubtitleFontName { get; set; } Property Value Type Description String | Improve this Doc View Source SubtitleFontSize Font size to rendering subtitle Declaration public double SubtitleFontSize { get; set; } Property Value Type Description Double | Improve this Doc View Source SubtitleTextAlignment Text alignment of title Declaration public TextAlignment SubtitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Title Content of Callout title label Declaration public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source TitleFontAttributes Font attributes to render title Declaration public FontAttributes TitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Xamarin.Forms.Color TitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source TitleFontName Font name to use rendering title Declaration public string TitleFontName { get; set; } Property Value Type Description String | Improve this Doc View Source TitleFontSize Font size to rendering title Declaration public double TitleFontSize { get; set; } Property Value Type Description Double | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public TextAlignment TitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be single, detail or custom. The last is a bitmap id for an owner drawn image. Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Events | Improve this Doc View Source CalloutClicked Declaration public event EventHandler<CalloutClickedEventArgs>? CalloutClicked Event Type Type Description Nullable < EventHandler < CalloutClickedEventArgs >> Implements IFeatureProvider IDisposable"
  },
  "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html",
    "title": "Class CalloutClickedEventArgs",
    "keywords": "Class CalloutClickedEventArgs Inheritance Object CalloutClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class CalloutClickedEventArgs : EventArgs Properties | Improve this Doc View Source Callout Callout that is clicked Declaration public Callout Callout { get; } Property Value Type Description Callout | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Forms.Circle.html": {
    "href": "api/Mapsui.UI.Forms.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance Object Drawable Circle Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Circle : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Circle() Declaration public Circle() Fields | Improve this Doc View Source CenterProperty Declaration public static readonly BindableProperty CenterProperty Field Value Type Description BindableProperty | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source QualityProperty Declaration public static readonly BindableProperty QualityProperty Field Value Type Description BindableProperty | Improve this Doc View Source RadiusProperty Declaration public static readonly BindableProperty RadiusProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Improve this Doc View Source FillColor Color to fill circle with Declaration public Xamarin.Forms.Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description Double | Improve this Doc View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Distance.html": {
    "href": "api/Mapsui.UI.Forms.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Distance Constructors | Improve this Doc View Source Distance(Double) Constructor for Distance object. Declaration public Distance(double meters) Parameters Type Name Description Double meters Meters. Properties | Improve this Doc View Source Kilometers Distance in kilometers Declaration public readonly double Kilometers { get; } Property Value Type Description Double Distance in kilometers | Improve this Doc View Source Meters Distance in meters Declaration public readonly double Meters { get; } Property Value Type Description Double Distance in meters | Improve this Doc View Source Miles Distance in miles Declaration public readonly double Miles { get; } Property Value Type Description Double Distance im miles | Improve this Doc View Source NauticalMiles Distance in nautic miles Declaration public readonly double NauticalMiles { get; } Property Value Type Description Double Distance in nautical miles Methods | Improve this Doc View Source Equals(Distance) Determines whether the specified Distance is equal to the current Distance . Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Distance Returns Type Description Boolean True if the specified Distance is equal to the current Distance ; otherwise, false . | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source FromKilometers(Double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description Double kilometers Distance in kilometers Returns Type Description Distance Distance object | Improve this Doc View Source FromMeters(Double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description Double meters Distance in meters Returns Type Description Distance Distance object | Improve this Doc View Source FromMiles(Double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description Double miles Distance in miles Returns Type Description Distance Distance object | Improve this Doc View Source FromNauticalMiles(Double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description Double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description Boolean | Improve this Doc View Source Inequality(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance Object DrawableClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance Object ColorExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ColorExtensions : object Methods | Improve this Doc View Source ToForms(Color) Convert Mapsui.Styles.Color to Xamarin.Forms.Color Declaration public static Xamarin.Forms.Color ToForms(this Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description Xamarin.Forms.Color Color in Xamarin.Forms.Maps format | Improve this Doc View Source ToMapsui(Xamarin.Forms.Color) Convert Xamarin.Forms.Color to Mapsui.Style.Color Declaration public static Color ToMapsui(this Xamarin.Forms.Color color) Parameters Type Name Description Xamarin.Forms.Color color Color in Xamarin.Forms.Color format Returns Type Description Color Color in Mapsui.Styles.Color format | Improve this Doc View Source ToNative(Color) Declaration public static Xamarin.Forms.Color ToNative(this Color color) Parameters Type Name Description Color color Returns Type Description Xamarin.Forms.Color"
  },
  "api/Mapsui.UI.Forms.Extensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.html",
    "title": "Namespace Mapsui.UI.Forms.Extensions",
    "keywords": "Namespace Mapsui.UI.Forms.Extensions Classes ColorExtensions PositionExtensions TextAlignmentExtensions ZoomLevelExtensions"
  },
  "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance Object PositionExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class PositionExtensions : object Methods | Improve this Doc View Source ToForms(MPoint) Convert Mapsui.Geometries.Point to Xamarin.Forms.Maps.Position Declaration public static Position ToForms(this MPoint point) Parameters Type Name Description MPoint point Point in Mapsui format Returns Type Description Position Position in Xamarin.Forms.Maps format | Improve this Doc View Source ToNative(MPoint) Declaration public static Position ToNative(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Position"
  },
  "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html",
    "title": "Class TextAlignmentExtensions",
    "keywords": "Class TextAlignmentExtensions Inheritance Object TextAlignmentExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class TextAlignmentExtensions : object Methods | Improve this Doc View Source ToMapsui(TextAlignment) Convert Xamarin.Forms.TextAlignment to Mapsui/RichTextKit.Styles.Color Declaration public static Alignment ToMapsui(this TextAlignment textAlignment) Parameters Type Name Description TextAlignment textAlignment TextAlignment in Xamarin.Forms format Returns Type Description Alignment TextAlignment in Mapsui/RichTextKit format"
  },
  "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html",
    "title": "Class ZoomLevelExtensions",
    "keywords": "Class ZoomLevelExtensions Inheritance Object ZoomLevelExtensions Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ZoomLevelExtensions : object Methods | Improve this Doc View Source ToMapsuiResolution(Double) Convert zoom level (as described at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this double zoomLevel) Parameters Type Name Description Double zoomLevel Zoom level Returns Type Description Double Resolution in Mapsui format"
  },
  "api/Mapsui.UI.Forms.html": {
    "href": "api/Mapsui.UI.Forms.html",
    "title": "Namespace Mapsui.UI.Forms",
    "keywords": "Namespace Mapsui.UI.Forms Classes Callout CalloutClickedEventArgs Circle DrawableClickedEventArgs MapClickedEventArgs MapControl Class, that uses the API of all other Mapsui MapControls MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "api/Mapsui.UI.Forms.MapClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance Object MapClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapClickedEventArgs : EventArgs Constructors | Improve this Doc View Source MapClickedEventArgs(Position, Int32) Declaration public MapClickedEventArgs(Position point, int numOfTaps) Parameters Type Name Description Position point Int32 numOfTaps Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapControl.html": {
    "href": "api/Mapsui.UI.Forms.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Class, that uses the API of all other Mapsui MapControls Inheritance Object MapControl MapView Implements IMapControl IDisposable ContentView Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Fields | Improve this Doc View Source _initialized Declaration protected readonly bool _initialized Field Value Type Description Boolean | Improve this Doc View Source UseDoubleTap Declaration public bool UseDoubleTap Field Value Type Description Boolean | Improve this Doc View Source UseFling Declaration public bool UseFling Field Value Type Description Boolean | Improve this Doc View Source UseGPU Declaration public static bool UseGPU Field Value Type Description Boolean Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source ScreenHeight Declaration public float ScreenHeight { get; } Property Value Type Description Single | Improve this Doc View Source ScreenWidth Declaration public float ScreenWidth { get; } Property Value Type Description Single | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OpenBrowser(String) Public functions Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source RunOnUIThread(Action) Declaration protected void RunOnUIThread(Action action) Parameters Type Name Description Action action | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source DoubleTap DoubleTap is called, when user clicks with a mouse button or tap with a finger two or more times on map Declaration public event EventHandler<TappedEventArgs>? DoubleTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs>? Fling Event Type Type Description Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source Hovered Hover is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs>? Hovered Event Type Type Description Nullable < EventHandler < HoveredEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source LongTap LongTap is called, when user clicks with a mouse button or tap with a finger on map for 500 ms Declaration public event EventHandler<TappedEventArgs>? LongTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source SingleTap SingleTap is called, when user clicks with a mouse button or tap with a finger on map Declaration public event EventHandler<TappedEventArgs>? SingleTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs>? Swipe Event Type Type Description Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source TouchAction TouchAction is called, when user provoques a touch event Declaration public event EventHandler<SKTouchEventArgs>? TouchAction Event Type Type Description Nullable < EventHandler < SKTouchEventArgs >> | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs>? TouchEnded Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchEntered TouchEntered is called, when user moves an active touch onto the view Declaration public event EventHandler<TouchedEventArgs>? TouchEntered Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchExited TouchExited is called, when user moves an active touch off the view Declaration public event EventHandler<TouchedEventArgs>? TouchExited Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs>? TouchMove Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchStarted Event handlers Declaration public event EventHandler<TouchedEventArgs>? TouchStarted Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs>? Zoomed Event Type Type Description Nullable < EventHandler < ZoomedEventArgs >> Implements IMapControl IDisposable ContentView"
  },
  "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance Object MapLongClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapSpan.html": {
    "href": "api/Mapsui.UI.Forms.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance Object MapSpan Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapSpan : object Constructors | Improve this Doc View Source MapSpan(Position, Double, Double) Initializes a new instance of the MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan Double latitudeDegrees Extend of MapSpan in latitude direction in degrees Double longitudeDegrees Extend of MapSpan in longitude direction in degrees Properties | Improve this Doc View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Improve this Doc View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description Double Extend in latitude degrees | Improve this Doc View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description Double Extend in longitude degrees | Improve this Doc View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Improve this Doc View Source ClampLatitude(Double, Double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description Double north Maximal latitude degrees for north Double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Improve this Doc View Source Equals(Nullable<Object>) Determines whether the specified is equal to the current MapSpan Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj The to compare with current MapSpan Returns Type Description Boolean true if the specified is equal to the current MapSpan ; otherwise, false . | Improve this Doc View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source FromPositions(IEnumerable<Position>) Create a new MapSpan from multiple positions Declaration public static MapSpan FromPositions(IEnumerable<Position> positions) Parameters Type Name Description IEnumerable < Position > positions List of positions to get the new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source WithZoom(Double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description Double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Improve this Doc View Source Equality(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description Boolean | Improve this Doc View Source Inequality(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Forms.MapView.html": {
    "href": "api/Mapsui.UI.Forms.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance Object MapControl MapView Implements IMapControl IDisposable ContentView INotifyPropertyChanged IEnumerable < Pin > Inherited Members MapControl.UseGPU MapControl._initialized MapControl.ScreenWidth MapControl.ScreenHeight MapControl.SymbolCache MapControl.UseDoubleTap MapControl.UseFling MapControl.TouchStarted MapControl.TouchEnded MapControl.TouchEntered MapControl.TouchExited MapControl.TouchMove MapControl.TouchAction MapControl.Hovered MapControl.Swipe MapControl.Fling MapControl.SingleTap MapControl.LongTap MapControl.DoubleTap MapControl.Zoomed MapControl.OpenBrowser(String) MapControl.RunOnUIThread(Action) MapControl.Dispose() MapControl.StartUpdates(Boolean) MapControl.StopUpdates() MapControl.ForceUpdate() MapControl.UpdateInterval MapControl.Performance MapControl.UnSnapRotationDegrees MapControl.ReSnapRotationDegrees MapControl.PixelDensity MapControl.Renderer MapControl.Viewport MapControl.Navigator MapControl.ViewportInitialized MapControl.Info MapControl.PropertyChanged MapControl.Unsubscribe() MapControl.Refresh(ChangeType) MapControl.RefreshGraphics() MapControl.CallHomeIfNeeded() MapControl.Map MapControl.ToPixels(MPoint) MapControl.ToDeviceIndependentUnits(MPoint) MapControl.RefreshData(ChangeType) MapControl.GetMapInfo(MPoint, Int32) MapControl.GetSnapshot(Nullable<IEnumerable<ILayer>>) Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapView : MapControl, IMapControl Constructors | Improve this Doc View Source MapView() Initializes a new instance of the MapView class. Declaration public MapView() Fields | Improve this Doc View Source ButtonMarginProperty Declaration public static readonly BindableProperty ButtonMarginProperty Field Value Type Description BindableProperty | Improve this Doc View Source ButtonSizeProperty Declaration public static readonly BindableProperty ButtonSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source ButtonSpacingProperty Declaration public static readonly BindableProperty ButtonSpacingProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description BindableProperty | Improve this Doc View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description BindableProperty | Improve this Doc View Source UniqueCalloutProperty Declaration public static readonly BindableProperty UniqueCalloutProperty Field Value Type Description BindableProperty | Improve this Doc View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseFlingProperty Declaration public static readonly BindableProperty UseFlingProperty Field Value Type Description BindableProperty | Improve this Doc View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source ButtonMargin Margin for buttons Declaration public Thickness ButtonMargin { get; set; } Property Value Type Description Thickness | Improve this Doc View Source ButtonSize Size of buttons in x- and y-direction Declaration public double ButtonSize { get; set; } Property Value Type Description Double | Improve this Doc View Source ButtonSpacing Spacing between buttons Declaration public double ButtonSpacing { get; set; } Property Value Type Description Double | Improve this Doc View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description IList < Drawable > | Improve this Doc View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description Boolean Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Improve this Doc View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Improve this Doc View Source PanLock Enable paning Declaration public bool PanLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description IList < Pin > | Improve this Doc View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SelectedPin Selected pin Declaration public Pin SelectedPin { get; set; } Property Value Type Description Pin | Improve this Doc View Source UniqueCallout Single or multiple callouts possible Declaration public bool UniqueCallout { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides MapControl.Dispose(Boolean) | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description IEnumerator < Pin > | Improve this Doc View Source HideCallouts() Hide all visible callouts Declaration public void HideCallouts() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName Overrides MapControl.OnPropertyChanged(String) | Improve this Doc View Source Reset() Declaration public void Reset() Events | Improve this Doc View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs>? MapClicked Event Type Type Description Nullable < EventHandler < MapClickedEventArgs >> | Improve this Doc View Source MapLongClicked Occurs when map long clicked Declaration public event EventHandler<MapLongClickedEventArgs>? MapLongClicked Event Type Type Description Nullable < EventHandler < MapLongClickedEventArgs >> | Improve this Doc View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs>? PinClicked Event Type Type Description Nullable < EventHandler < PinClickedEventArgs >> | Improve this Doc View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs>? SelectedPinChanged Event Type Type Description Nullable < EventHandler < SelectedPinChangedEventArgs >> Implements IMapControl IDisposable ContentView INotifyPropertyChanged IEnumerable<>"
  },
  "api/Mapsui.UI.Forms.Pin.html": {
    "href": "api/Mapsui.UI.Forms.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance Object Pin Implements IFeatureProvider IDisposable Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Pin : BindableObject, IFeatureProvider Constructors | Improve this Doc View Source Pin() Initializes a new instance of the Pin class Declaration public Pin() | Improve this Doc View Source Pin(MapView) Initializes a new instance of the Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Fields | Improve this Doc View Source AddressProperty Declaration public static readonly BindableProperty AddressProperty Field Value Type Description BindableProperty | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source HeightProperty Declaration public static readonly BindableProperty HeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source IconProperty Declaration public static readonly BindableProperty IconProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source PositionProperty Declaration public static readonly BindableProperty PositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotateWithMapProperty Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationProperty Declaration public static readonly BindableProperty RotationProperty Field Value Type Description BindableProperty | Improve this Doc View Source ScaleProperty Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description BindableProperty | Improve this Doc View Source SvgProperty Declaration public static readonly BindableProperty SvgProperty Field Value Type Description BindableProperty | Improve this Doc View Source TransparencyProperty Declaration public static readonly BindableProperty TransparencyProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty | Improve this Doc View Source WidthProperty Declaration public static readonly BindableProperty WidthProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Address Adress (like street) of pin Declaration public string Address { get; set; } Property Value Type Description String | Improve this Doc View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Point | Improve this Doc View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Improve this Doc View Source Color Color of pin Declaration public Xamarin.Forms.Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Feature Mapsui feature for this pin Declaration public GeometryFeature? Feature { get; } Property Value Type Description Nullable < GeometryFeature > Mapsui feature | Improve this Doc View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source Icon Byte[] holding the bitmap informations Declaration public byte[] Icon { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Label Label of pin Declaration public string Label { get; set; } Property Value Type Description String | Improve this Doc View Source MaxVisible MaxVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible MinVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description Single | Improve this Doc View Source Svg String holding the Svg image informations Declaration public string Svg { get; set; } Property Value Type Description String | Improve this Doc View Source Tag Tag holding free data Declaration public object? Tag { get; set; } Property Value Type Description Nullable < Object > | Improve this Doc View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description Single | Improve this Doc View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Improve this Doc View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Equals(Nullable<Object>) Determines whether the specified is equal to the current Pin . Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj The to compare with the current Pin . Returns Type Description Boolean true if the specified is equal to the current Pin ; otherwise, false . | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source HideCallout() Hide corresponding callout Declaration public void HideCallout() | Improve this Doc View Source IsCalloutVisible() Check visibility for corresponding callout Declaration public bool IsCalloutVisible() Returns Type Description Boolean True, if callout is visible on map | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName | Improve this Doc View Source ShowCallout() Show corresponding callout Declaration public void ShowCallout() Operators | Improve this Doc View Source Equality(Pin, Pin) Declaration public static bool operator ==(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description Boolean | Improve this Doc View Source Inequality(Pin, Pin) Declaration public static bool operator !=(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description Boolean Implements IFeatureProvider IDisposable"
  },
  "api/Mapsui.UI.Forms.PinClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance Object PinClickedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.PinType.html": {
    "href": "api/Mapsui.UI.Forms.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public enum PinType : int Fields Name Description Icon Pin as icon image Pin Pin with image, which could change color Svg Pin as Svg image"
  },
  "api/Mapsui.UI.Forms.Polygon.html": {
    "href": "api/Mapsui.UI.Forms.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance Object Drawable Polygon Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polygon : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Polygon() Initializes a new instance of the Polygon class. Declaration public Polygon() Fields | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source FillColor Color to fill circle with Declaration public Xamarin.Forms.Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description IList < Position []> | Improve this Doc View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Polyline.html": {
    "href": "api/Mapsui.UI.Forms.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance Object Drawable Polyline Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polyline : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Polyline() Initializes a new instance of the Polyline class. Declaration public Polyline() | Improve this Doc View Source Polyline(String) Initializes a new instance of the Polyline class from encoded string as described here https://developers.google.com/maps/documentation/utilities/polylinealgorithm Declaration public Polyline(string encodedPolyline) Parameters Type Name Description String encodedPolyline Encoded polyline Properties | Improve this Doc View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Position.html": {
    "href": "api/Mapsui.UI.Forms.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Position Constructors | Improve this Doc View Source Position(Position) Initializes a new instance of the Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Improve this Doc View Source Position(Double, Double) Initializes a new instance of the Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description Double latitude Latitude of position Double longitude Longitude of position Fields | Improve this Doc View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = null Field Value Type Description String | Improve this Doc View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = null Field Value Type Description String | Improve this Doc View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = null Field Value Type Description String Properties | Improve this Doc View Source Latitude Latitude of position Declaration public readonly double Latitude { get; } Property Value Type Description Double | Improve this Doc View Source Longitude Longitude of position Declaration public readonly double Longitude { get; } Property Value Type Description Double Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source ToCoordinate() Declaration public Coordinate ToCoordinate() Returns Type Description Coordinate | Improve this Doc View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public MPoint ToMapsui() Returns Type Description MPoint Position in Mapsui format | Improve this Doc View Source ToPoint() Declaration public Point ToPoint() Returns Type Description Point | Improve this Doc View Source ToString() Returns a String that represents the current Position Declaration public override string ToString() Returns Type Description String A String that represents the current Position | Improve this Doc View Source ToString(String) Returns a String that represents the current Position in a given format Declaration public string ToString(string format) Parameters Type Name Description String format Format string Returns Type Description String Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Improve this Doc View Source Equality(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean | Improve this Doc View Source Inequality(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance Object SelectedPinChangedEventArgs Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Improve this Doc View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin"
  },
  "api/Mapsui.UI.Forms.Utils.html": {
    "href": "api/Mapsui.UI.Forms.Utils.html",
    "title": "Namespace Mapsui.UI.Forms.Utils",
    "keywords": "Namespace Mapsui.UI.Forms.Utils Classes PolylineConverter Polyline helper class"
  },
  "api/Mapsui.UI.Forms.Utils.PolylineConverter.html": {
    "href": "api/Mapsui.UI.Forms.Utils.PolylineConverter.html",
    "title": "Class PolylineConverter",
    "keywords": "Class PolylineConverter Polyline helper class Inheritance Object PolylineConverter Namespace : Mapsui.UI.Forms.Utils Assembly : Mapsui.UI.Forms.dll Syntax public static class PolylineConverter : object Methods | Improve this Doc View Source DecodePolyline(String) Decode Declaration public static List<Position>? DecodePolyline(string encodedPolyline) Parameters Type Name Description String encodedPolyline Returns Type Description Nullable < List < Position >>"
  },
  "api/Mapsui.UI.HoveredEventArgs.html": {
    "href": "api/Mapsui.UI.HoveredEventArgs.html",
    "title": "Class HoveredEventArgs",
    "keywords": "Class HoveredEventArgs Inheritance Object HoveredEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public class HoveredEventArgs : EventArgs Constructors | Improve this Doc View Source HoveredEventArgs(MPoint) Declaration public HoveredEventArgs(MPoint screenPosition) Parameters Type Name Description MPoint screenPosition Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.html": {
    "href": "api/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes FeatureInfoEventArgs HoveredEventArgs MapInfo MapInfoEventArgs MinMax MouseWheelAnimation SwipedEventArgs TappedEventArgs TouchedEventArgs ViewportLimiter ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. ViewportLimiterWithoutLimits ZoomedEventArgs Interfaces IMapControl IViewportLimiter Enums TouchMode ZoomDirection ZoomMode"
  },
  "api/Mapsui.UI.IMapControl.html": {
    "href": "api/Mapsui.UI.IMapControl.html",
    "title": "Interface IMapControl",
    "keywords": "Interface IMapControl Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IMapControl Properties | Improve this Doc View Source Map Declaration Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Declaration INavigator Navigator { get; } Property Value Type Description INavigator | Improve this Doc View Source Performance Declaration Performance Performance { get; set; } Property Value Type Description Performance | Improve this Doc View Source PixelDensity The number of pixel per device independent unit Declaration float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Declaration IRenderer Renderer { get; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees Declaration double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees Declaration double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source Viewport Declaration IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source GetMapInfo(MPoint, Int32) Check, if a feature at a given screen position is hit Declaration MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Screen position to check for widgets and features Int32 margin An optional extra margin around the feature to enlarge the hit area. Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Create a snapshot form map as PNG image Declaration byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Layers that should be included in snapshot Returns Type Description Byte [] Byte array with snapshot in png format. If there are any problems than returns null. | Improve this Doc View Source OpenBrowser(String) Declaration void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Declaration void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Declaration void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Declaration void Unsubscribe() Events | Improve this Doc View Source Info Declaration event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source ViewportInitialized Declaration event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Extension Methods MapControlExtensions.WaitForLoadingAsync(IMapControl)"
  },
  "api/Mapsui.UI.iOS.html": {
    "href": "api/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "api/Mapsui.UI.iOS.MapControl.html": {
    "href": "api/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl Namespace : Mapsui.UI.iOS Assembly : Mapsui.UI.iOS.dll Syntax public class MapControl : UIView, IMapControl Constructors | Improve this Doc View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CGRect frame | Improve this Doc View Source MapControl(IntPtr) Declaration public MapControl(IntPtr handle) Parameters Type Name Description IntPtr handle Properties | Improve this Doc View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CGRect | Improve this Doc View Source UseGPU Declaration public static bool UseGPU { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source TouchesBegan(NSSet, Nullable<UIEvent>) Declaration public override void TouchesBegan(NSSet touches, UIEvent? evt) Parameters Type Name Description NSSet touches Nullable < UIEvent > evt | Improve this Doc View Source TouchesEnded(NSSet, Nullable<UIEvent>) Declaration public override void TouchesEnded(NSSet touches, UIEvent? e) Parameters Type Name Description NSSet touches Nullable < UIEvent > e | Improve this Doc View Source TouchesMoved(NSSet, Nullable<UIEvent>) Declaration public override void TouchesMoved(NSSet touches, UIEvent? evt) Parameters Type Name Description NSSet touches Nullable < UIEvent > evt Implements IMapControl"
  },
  "api/Mapsui.UI.IViewportLimiter.html": {
    "href": "api/Mapsui.UI.IViewportLimiter.html",
    "title": "Interface IViewportLimiter",
    "keywords": "Interface IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public interface IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport IReadOnlyList < Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Double resolution Double screenWidth Double screenHeight IReadOnlyList < Double > mapResolutions MRect mapEnvelope Returns Type Description Double"
  },
  "api/Mapsui.UI.MapInfo.html": {
    "href": "api/Mapsui.UI.MapInfo.html",
    "title": "Class MapInfo",
    "keywords": "Class MapInfo Inheritance Object MapInfo Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfo : object Properties | Improve this Doc View Source Feature The feature touched by the user Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Improve this Doc View Source Layer The layer to which the touched feature belongs Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Improve this Doc View Source MapInfoRecords Declaration public List<MapInfoRecord> MapInfoRecords { get; set; } Property Value Type Description List < MapInfoRecord > | Improve this Doc View Source Resolution The resolution at which the info was retrieved. This can be useful to calculate screen distances, which are needed for editing functionality. Declaration public double Resolution { get; set; } Property Value Type Description Double | Improve this Doc View Source ScreenPosition Screen position of the place the user touched Declaration public MPoint ScreenPosition { get; set; } Property Value Type Description MPoint | Improve this Doc View Source Style The style of feature touched by the user Declaration public IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source WorldPosition World position of the place the user touched Declaration public MPoint WorldPosition { get; set; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.MapInfoEventArgs.html": {
    "href": "api/Mapsui.UI.MapInfoEventArgs.html",
    "title": "Class MapInfoEventArgs",
    "keywords": "Class MapInfoEventArgs Inheritance Object MapInfoEventArgs Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MapInfoEventArgs : EventArgs Properties | Improve this Doc View Source Handled If the interaction was handled by the event subscriber Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MapInfo Declaration public MapInfo MapInfo { get; set; } Property Value Type Description MapInfo | Improve this Doc View Source NumTaps Number of times the user tapped the location Declaration public int NumTaps { get; set; } Property Value Type Description Int32"
  },
  "api/Mapsui.UI.Maui.Callout.html": {
    "href": "api/Mapsui.UI.Maui.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance Object Callout Implements IFeatureProvider IDisposable Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class Callout : BindableObject, IFeatureProvider Constructors | Improve this Doc View Source Callout(Pin) Declaration public Callout(Pin pin) Parameters Type Name Description Pin pin Fields | Improve this Doc View Source AnchorProperty Bindable property for the Anchor property Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowAlignmentProperty Bindable property for the ArrowAlignment property Declaration public static readonly BindableProperty ArrowAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowHeightProperty Bindable property for the ArrowHeight property Declaration public static readonly BindableProperty ArrowHeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowPositionProperty Bindable property for the ArrowPosition property Declaration public static readonly BindableProperty ArrowPositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source ArrowWidthProperty Bindable property for the ArrowWidth property Declaration public static readonly BindableProperty ArrowWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source BackgroundColorProperty Bindable property for the BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Bindable property for the Color property Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ContentProperty Bindable property for the Content property Declaration public static readonly BindableProperty ContentProperty Field Value Type Description BindableProperty | Improve this Doc View Source DefaultSubtitleFontAttributes Declaration public static FontAttributes DefaultSubtitleFontAttributes Field Value Type Description FontAttributes | Improve this Doc View Source DefaultSubtitleFontColor Declaration public static Microsoft.Maui.Graphics.Color DefaultSubtitleFontColor Field Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source DefaultSubtitleFontName Declaration public static string? DefaultSubtitleFontName Field Value Type Description Nullable < String > | Improve this Doc View Source DefaultSubtitleFontSize Declaration public static double DefaultSubtitleFontSize Field Value Type Description Double | Improve this Doc View Source DefaultSubtitleTextAlignment Declaration public static TextAlignment DefaultSubtitleTextAlignment Field Value Type Description TextAlignment | Improve this Doc View Source DefaultTitleFontAttributes Declaration public static FontAttributes DefaultTitleFontAttributes Field Value Type Description FontAttributes | Improve this Doc View Source DefaultTitleFontColor Declaration public static Microsoft.Maui.Graphics.Color DefaultTitleFontColor Field Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source DefaultTitleFontName Declaration public static string? DefaultTitleFontName Field Value Type Description Nullable < String > | Improve this Doc View Source DefaultTitleFontSize Declaration public static double DefaultTitleFontSize Field Value Type Description Double | Improve this Doc View Source DefaultTitleTextAlignment Declaration public static TextAlignment DefaultTitleTextAlignment Field Value Type Description TextAlignment | Improve this Doc View Source IsClosableByClickProperty Bindable property for the IsClosableByClick property Declaration public static readonly BindableProperty IsClosableByClickProperty Field Value Type Description BindableProperty | Improve this Doc View Source MaxWidthProperty Bindable property for the MaxWidth property Declaration public static readonly BindableProperty MaxWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source PaddingProperty Bindable property for the Padding property Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description BindableProperty | Improve this Doc View Source RectRadiusProperty Bindable property for the RectRadius property Declaration public static readonly BindableProperty RectRadiusProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotateWithMapProperty Bindable property for the RotateWithMap property Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationProperty Bindable property for the Rotation property Declaration public static readonly BindableProperty RotationProperty Field Value Type Description BindableProperty | Improve this Doc View Source ShadowWidthProperty Bindable property for the ShadowWidth property Declaration public static readonly BindableProperty ShadowWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source SpacingProperty Bindable property for the Spacing property Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeWidthProperty Bindable property for the StrokeWidth property Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontAttributesProperty Bindable property for the SubtitleFontAttributes property Declaration public static readonly BindableProperty SubtitleFontAttributesProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontColorProperty Bindable property for the SubtitleFontColor property Declaration public static readonly BindableProperty SubtitleFontColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontNameProperty Bindable property for the SubtitleFontName property Declaration public static readonly BindableProperty SubtitleFontNameProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleFontSizeProperty Bindable property for the SubtitleFontSize property Declaration public static readonly BindableProperty SubtitleFontSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleProperty Bindable property for the Subtitle property Declaration public static readonly BindableProperty SubtitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source SubtitleTextAlignmentProperty Bindable property for the SubtitleTextAlignment property Declaration public static readonly BindableProperty SubtitleTextAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontAttributesProperty Bindable property for the TitleFontAttributes property Declaration public static readonly BindableProperty TitleFontAttributesProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontColorProperty Bindable property for the TitleFontColor property Declaration public static readonly BindableProperty TitleFontColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontNameProperty Bindable property for the TitleFontName property Declaration public static readonly BindableProperty TitleFontNameProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleFontSizeProperty Bindable property for the TitleFontSize property Declaration public static readonly BindableProperty TitleFontSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleProperty Bindable property for the Title property Declaration public static readonly BindableProperty TitleProperty Field Value Type Description BindableProperty | Improve this Doc View Source TitleTextAlignmentProperty Bindable property for the TitleTextAlignment property Declaration public static readonly BindableProperty TitleTextAlignmentProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Bindable property for the Type property Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Anchor Anchor position of Callout Declaration public Microsoft.Maui.Graphics.Point Anchor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Point | Improve this Doc View Source ArrowAlignment Arrow alignment of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height from arrow of Callout Declaration public double ArrowHeight { get; set; } Property Value Type Description Double | Improve this Doc View Source ArrowPosition Relative position of anchor of Callout on the side given by ArrowAlignment Declaration public double ArrowPosition { get; set; } Property Value Type Description Double | Improve this Doc View Source ArrowWidth Width from arrow of Callout Declaration public double ArrowWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Microsoft.Maui.Graphics.Color BackgroundColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Microsoft.Maui.Graphics.Color Color { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Feature Feature, which belongs to callout. Should be the same as for the pin to which this callout belongs. Declaration public GeometryFeature Feature { get; } Property Value Type Description GeometryFeature | Improve this Doc View Source IsClosableByClick Is Callout closable by a click on the callout Declaration public bool IsClosableByClick { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness | Improve this Doc View Source Pin Pin to which this callout belongs Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public double RectRadius { get; set; } Property Value Type Description Double | Improve this Doc View Source RotateWithMap Rotate Callout with map Declaration public bool RotateWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rotation Rotation of Callout around the anchor Declaration public double Rotation { get; set; } Property Value Type Description Double | Improve this Doc View Source ShadowWidth Shadow width around Callout Declaration public double ShadowWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public double StrokeWidth { get; set; } Property Value Type Description Double | Improve this Doc View Source Subtitle Content of Callout detail label Declaration public string Subtitle { get; set; } Property Value Type Description String | Improve this Doc View Source SubtitleFontAttributes Font attributes to render subtitle Declaration public FontAttributes SubtitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Microsoft.Maui.Graphics.Color SubtitleFontColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source SubtitleFontName Font name to use rendering subtitle Declaration public string SubtitleFontName { get; set; } Property Value Type Description String | Improve this Doc View Source SubtitleFontSize Font size to rendering subtitle Declaration public double SubtitleFontSize { get; set; } Property Value Type Description Double | Improve this Doc View Source SubtitleTextAlignment Text alignment of title Declaration public TextAlignment SubtitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Title Content of Callout title label Declaration public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source TitleFontAttributes Font attributes to render title Declaration public FontAttributes TitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Microsoft.Maui.Graphics.Color TitleFontColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source TitleFontName Font name to use rendering title Declaration public string TitleFontName { get; set; } Property Value Type Description String | Improve this Doc View Source TitleFontSize Font size to rendering title Declaration public double TitleFontSize { get; set; } Property Value Type Description Double | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public TextAlignment TitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be single, detail or custom. The last is a bitmap id for an owner drawn image. Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Events | Improve this Doc View Source CalloutClicked Declaration public event EventHandler<CalloutClickedEventArgs>? CalloutClicked Event Type Type Description Nullable < EventHandler < CalloutClickedEventArgs >> Implements IFeatureProvider IDisposable"
  },
  "api/Mapsui.UI.Maui.CalloutClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.CalloutClickedEventArgs.html",
    "title": "Class CalloutClickedEventArgs",
    "keywords": "Class CalloutClickedEventArgs Inheritance Object CalloutClickedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class CalloutClickedEventArgs : EventArgs Properties | Improve this Doc View Source Callout Callout that is clicked Declaration public Callout Callout { get; } Property Value Type Description Callout | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Maui.Circle.html": {
    "href": "api/Mapsui.UI.Maui.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance Object Drawable Circle Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class Circle : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Circle() Declaration public Circle() Fields | Improve this Doc View Source CenterProperty Declaration public static readonly BindableProperty CenterProperty Field Value Type Description BindableProperty | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source QualityProperty Declaration public static readonly BindableProperty QualityProperty Field Value Type Description BindableProperty | Improve this Doc View Source RadiusProperty Declaration public static readonly BindableProperty RadiusProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Improve this Doc View Source FillColor Color to fill circle with Declaration public Microsoft.Maui.Graphics.Color FillColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description Double | Improve this Doc View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Maui.Distance.html": {
    "href": "api/Mapsui.UI.Maui.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public struct Distance Constructors | Improve this Doc View Source Distance(Double) Constructor for Distance object. Declaration public Distance(double meters) Parameters Type Name Description Double meters Meters. Properties | Improve this Doc View Source Kilometers Distance in kilometers Declaration public readonly double Kilometers { get; } Property Value Type Description Double Distance in kilometers | Improve this Doc View Source Meters Distance in meters Declaration public readonly double Meters { get; } Property Value Type Description Double Distance in meters | Improve this Doc View Source Miles Distance in miles Declaration public readonly double Miles { get; } Property Value Type Description Double Distance im miles | Improve this Doc View Source NauticalMiles Distance in nautic miles Declaration public readonly double NauticalMiles { get; } Property Value Type Description Double Distance in nautical miles Methods | Improve this Doc View Source Equals(Distance) Determines whether the specified Distance is equal to the current Distance . Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Distance Returns Type Description Boolean True if the specified Distance is equal to the current Distance ; otherwise, false . | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source FromKilometers(Double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description Double kilometers Distance in kilometers Returns Type Description Distance Distance object | Improve this Doc View Source FromMeters(Double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description Double meters Distance in meters Returns Type Description Distance Distance object | Improve this Doc View Source FromMiles(Double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description Double miles Distance in miles Returns Type Description Distance Distance object | Improve this Doc View Source FromNauticalMiles(Double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description Double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description Boolean | Improve this Doc View Source Inequality(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Maui.DrawableClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance Object DrawableClickedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point"
  },
  "api/Mapsui.UI.Maui.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.UI.Maui.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance Object ColorExtensions Namespace : Mapsui.UI.Maui.Extensions Assembly : Mapsui.UI.Maui.dll Syntax public static class ColorExtensions : object Methods | Improve this Doc View Source ToMapsui(Microsoft.Maui.Graphics.Color) Convert Microsoft.Maui.Graphics.Color to Mapsui.Style.Color Declaration public static Color ToMapsui(this Microsoft.Maui.Graphics.Color color) Parameters Type Name Description Microsoft.Maui.Graphics.Color color Color in Microsoft.Maui.Graphics.Color format Returns Type Description Color Color in Mapsui.Styles.Color format | Improve this Doc View Source ToMaui(Color) Convert Mapsui.Styles.Color to Microsoft.Maui.Graphics.Color Declaration public static Microsoft.Maui.Graphics.Color ToMaui(this Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description Microsoft.Maui.Graphics.Color Color in Microsoft.Maui.Graphics format | Improve this Doc View Source ToNative(Color) Declaration public static Microsoft.Maui.Graphics.Color ToNative(this Color color) Parameters Type Name Description Color color Returns Type Description Microsoft.Maui.Graphics.Color"
  },
  "api/Mapsui.UI.Maui.Extensions.html": {
    "href": "api/Mapsui.UI.Maui.Extensions.html",
    "title": "Namespace Mapsui.UI.Maui.Extensions",
    "keywords": "Namespace Mapsui.UI.Maui.Extensions Classes ColorExtensions PositionExtensions TextAlignmentExtensions ZoomLevelExtensions"
  },
  "api/Mapsui.UI.Maui.Extensions.PositionExtensions.html": {
    "href": "api/Mapsui.UI.Maui.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance Object PositionExtensions Namespace : Mapsui.UI.Maui.Extensions Assembly : Mapsui.UI.Maui.dll Syntax public static class PositionExtensions : object Methods | Improve this Doc View Source ToMaui(MPoint) Convert Mapsui.Geometries.Point to Mapsui.UI.Maui.Position Declaration public static Position ToMaui(this MPoint point) Parameters Type Name Description MPoint point Point in Mapsui format Returns Type Description Position Position in Xamarin.Forms.Maps format | Improve this Doc View Source ToNative(MPoint) Declaration public static Position ToNative(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Position"
  },
  "api/Mapsui.UI.Maui.Extensions.TextAlignmentExtensions.html": {
    "href": "api/Mapsui.UI.Maui.Extensions.TextAlignmentExtensions.html",
    "title": "Class TextAlignmentExtensions",
    "keywords": "Class TextAlignmentExtensions Inheritance Object TextAlignmentExtensions Namespace : Mapsui.UI.Maui.Extensions Assembly : Mapsui.UI.Maui.dll Syntax public static class TextAlignmentExtensions : object Methods | Improve this Doc View Source ToMapsui(TextAlignment) Convert Xamarin.Forms.TextAlignment to Mapsui/RichTextKit.Styles.Color Declaration public static Alignment ToMapsui(this TextAlignment textAlignment) Parameters Type Name Description TextAlignment textAlignment TextAlignment in Xamarin.Forms format Returns Type Description Alignment TextAlignment in Mapsui/RichTextKit format"
  },
  "api/Mapsui.UI.Maui.Extensions.ZoomLevelExtensions.html": {
    "href": "api/Mapsui.UI.Maui.Extensions.ZoomLevelExtensions.html",
    "title": "Class ZoomLevelExtensions",
    "keywords": "Class ZoomLevelExtensions Inheritance Object ZoomLevelExtensions Namespace : Mapsui.UI.Maui.Extensions Assembly : Mapsui.UI.Maui.dll Syntax public static class ZoomLevelExtensions : object Methods | Improve this Doc View Source ToMapsuiResolution(Double) Convert zoom level (as described at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this double zoomLevel) Parameters Type Name Description Double zoomLevel Zoom level Returns Type Description Double Resolution in Mapsui format"
  },
  "api/Mapsui.UI.Maui.html": {
    "href": "api/Mapsui.UI.Maui.html",
    "title": "Namespace Mapsui.UI.Maui",
    "keywords": "Namespace Mapsui.UI.Maui Classes Callout CalloutClickedEventArgs Circle DrawableClickedEventArgs KnownColor Known Color Helper for Maui MapClickedEventArgs MapControl Class, that uses the API of all other Mapsui MapControls MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "api/Mapsui.UI.Maui.KnownColor.html": {
    "href": "api/Mapsui.UI.Maui.KnownColor.html",
    "title": "Class KnownColor",
    "keywords": "Class KnownColor Known Color Helper for Maui Inheritance Object KnownColor Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public static class KnownColor : object Properties | Improve this Doc View Source Black Declaration public static Microsoft.Maui.Graphics.Color Black { get; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source DarkGray Declaration public static Microsoft.Maui.Graphics.Color DarkGray { get; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Red Declaration public static Microsoft.Maui.Graphics.Color Red { get; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source White Declaration public static Microsoft.Maui.Graphics.Color White { get; } Property Value Type Description Microsoft.Maui.Graphics.Color"
  },
  "api/Mapsui.UI.Maui.MapClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance Object MapClickedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class MapClickedEventArgs : EventArgs Constructors | Improve this Doc View Source MapClickedEventArgs(Position, Int32) Declaration public MapClickedEventArgs(Position point, int numOfTaps) Parameters Type Name Description Position point Int32 numOfTaps Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Maui.MapControl.html": {
    "href": "api/Mapsui.UI.Maui.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Class, that uses the API of all other Mapsui MapControls Inheritance Object MapControl MapView Implements IMapControl IDisposable ContentView Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Fields | Improve this Doc View Source _initialized Declaration protected readonly bool _initialized Field Value Type Description Boolean | Improve this Doc View Source MapProperty Declaration public static readonly BindableProperty MapProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseDoubleTap Declaration public bool UseDoubleTap Field Value Type Description Boolean | Improve this Doc View Source UseFling Declaration public bool UseFling Field Value Type Description Boolean | Improve this Doc View Source UseGPU Declaration public static bool UseGPU Field Value Type Description Boolean Properties | Improve this Doc View Source Map Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source ScreenHeight Declaration public float ScreenHeight { get; } Property Value Type Description Single | Improve this Doc View Source ScreenWidth Declaration public float ScreenWidth { get; } Property Value Type Description Single | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OpenBrowser(String) Public functions Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source RunOnUIThread(Action) Declaration protected void RunOnUIThread(Action action) Parameters Type Name Description Action action | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source DoubleTap DoubleTap is called, when user clicks with a mouse button or tap with a finger two or more times on map Declaration public event EventHandler<TappedEventArgs>? DoubleTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs>? Fling Event Type Type Description Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source Hovered Hover is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs>? Hovered Event Type Type Description Nullable < EventHandler < HoveredEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source LongTap LongTap is called, when user clicks with a mouse button or tap with a finger on map for 500 ms Declaration public event EventHandler<TappedEventArgs>? LongTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source SingleTap SingleTap is called, when user clicks with a mouse button or tap with a finger on map Declaration public event EventHandler<TappedEventArgs>? SingleTap Event Type Type Description Nullable < EventHandler < TappedEventArgs >> | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs>? Swipe Event Type Type Description Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source TouchAction TouchAction is called, when user provoques a touch event Declaration public event EventHandler<SKTouchEventArgs>? TouchAction Event Type Type Description Nullable < EventHandler < SKTouchEventArgs >> | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs>? TouchEnded Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchEntered TouchEntered is called, when user moves an active touch onto the view Declaration public event EventHandler<TouchedEventArgs>? TouchEntered Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchExited TouchExited is called, when user moves an active touch off the view Declaration public event EventHandler<TouchedEventArgs>? TouchExited Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs>? TouchMove Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source TouchStarted Event handlers Declaration public event EventHandler<TouchedEventArgs>? TouchStarted Event Type Type Description Nullable < EventHandler < TouchedEventArgs >> | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs>? Zoomed Event Type Type Description Nullable < EventHandler < ZoomedEventArgs >> Implements IMapControl IDisposable ContentView"
  },
  "api/Mapsui.UI.Maui.MapLongClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance Object MapLongClickedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Maui.MapSpan.html": {
    "href": "api/Mapsui.UI.Maui.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance Object MapSpan Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class MapSpan : object Constructors | Improve this Doc View Source MapSpan(Position, Double, Double) Initializes a new instance of the MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan Double latitudeDegrees Extend of MapSpan in latitude direction in degrees Double longitudeDegrees Extend of MapSpan in longitude direction in degrees Properties | Improve this Doc View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Improve this Doc View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description Double Extend in latitude degrees | Improve this Doc View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description Double Extend in longitude degrees | Improve this Doc View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Improve this Doc View Source ClampLatitude(Double, Double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description Double north Maximal latitude degrees for north Double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Improve this Doc View Source Equals(Nullable<Object>) Determines whether the specified is equal to the current MapSpan Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj The to compare with current MapSpan Returns Type Description Boolean true if the specified is equal to the current MapSpan ; otherwise, false . | Improve this Doc View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source FromPositions(IEnumerable<Position>) Create a new MapSpan from multiple positions Declaration public static MapSpan FromPositions(IEnumerable<Position> positions) Parameters Type Name Description IEnumerable < Position > positions List of positions to get the new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source WithZoom(Double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description Double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Improve this Doc View Source Equality(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description Boolean | Improve this Doc View Source Inequality(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Maui.MapView.html": {
    "href": "api/Mapsui.UI.Maui.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance Object MapControl MapView Implements IMapControl IDisposable ContentView INotifyPropertyChanged IEnumerable < Pin > Inherited Members MapControl.UseGPU MapControl._initialized MapControl.ScreenWidth MapControl.ScreenHeight MapControl.SymbolCache MapControl.UseDoubleTap MapControl.UseFling MapControl.TouchStarted MapControl.TouchEnded MapControl.TouchEntered MapControl.TouchExited MapControl.TouchMove MapControl.TouchAction MapControl.Hovered MapControl.Swipe MapControl.Fling MapControl.SingleTap MapControl.LongTap MapControl.DoubleTap MapControl.Zoomed MapControl.OpenBrowser(String) MapControl.RunOnUIThread(Action) MapControl.Dispose() MapControl.StartUpdates(Boolean) MapControl.StopUpdates() MapControl.ForceUpdate() MapControl.UpdateInterval MapControl.Performance MapControl.UnSnapRotationDegrees MapControl.ReSnapRotationDegrees MapControl.PixelDensity MapControl.Renderer MapControl.Viewport MapControl.Navigator MapControl.ViewportInitialized MapControl.Info MapControl.PropertyChanged MapControl.Unsubscribe() MapControl.Refresh(ChangeType) MapControl.RefreshGraphics() MapControl.CallHomeIfNeeded() MapControl.MapProperty MapControl.Map MapControl.ToPixels(MPoint) MapControl.ToDeviceIndependentUnits(MPoint) MapControl.RefreshData(ChangeType) MapControl.GetMapInfo(MPoint, Int32) MapControl.GetSnapshot(Nullable<IEnumerable<ILayer>>) Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class MapView : MapControl, IMapControl Constructors | Improve this Doc View Source MapView() Initializes a new instance of the MapView class. Declaration public MapView() Fields | Improve this Doc View Source ButtonMarginProperty Declaration public static readonly BindableProperty ButtonMarginProperty Field Value Type Description BindableProperty | Improve this Doc View Source ButtonSizeProperty Declaration public static readonly BindableProperty ButtonSizeProperty Field Value Type Description BindableProperty | Improve this Doc View Source ButtonSpacingProperty Declaration public static readonly BindableProperty ButtonSpacingProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description BindableProperty | Improve this Doc View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description BindableProperty | Improve this Doc View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description BindableProperty | Improve this Doc View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description BindableProperty | Improve this Doc View Source UniqueCalloutProperty Declaration public static readonly BindableProperty UniqueCalloutProperty Field Value Type Description BindableProperty | Improve this Doc View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description BindableProperty | Improve this Doc View Source UseFlingProperty Declaration public static readonly BindableProperty UseFlingProperty Field Value Type Description BindableProperty | Improve this Doc View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source ButtonMargin Margin for buttons Declaration public Thickness ButtonMargin { get; set; } Property Value Type Description Thickness | Improve this Doc View Source ButtonSize Size of buttons in x- and y-direction Declaration public double ButtonSize { get; set; } Property Value Type Description Double | Improve this Doc View Source ButtonSpacing Spacing between buttons Declaration public double ButtonSpacing { get; set; } Property Value Type Description Double | Improve this Doc View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description IList < Drawable > | Improve this Doc View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description Boolean Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Improve this Doc View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Improve this Doc View Source PanLock Enable paning Declaration public bool PanLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description IList < Pin > | Improve this Doc View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SelectedPin Selected pin Declaration public Pin SelectedPin { get; set; } Property Value Type Description Pin | Improve this Doc View Source UniqueCallout Single or multiple callouts possible Declaration public bool UniqueCallout { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides MapControl.Dispose(Boolean) | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description IEnumerator < Pin > | Improve this Doc View Source HideCallouts() Hide all visible callouts Declaration public void HideCallouts() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName Overrides MapControl.OnPropertyChanged(String) | Improve this Doc View Source Reset() Declaration public void Reset() Events | Improve this Doc View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs>? MapClicked Event Type Type Description Nullable < EventHandler < MapClickedEventArgs >> | Improve this Doc View Source MapLongClicked Occurs when map long clicked Declaration public event EventHandler<MapLongClickedEventArgs>? MapLongClicked Event Type Type Description Nullable < EventHandler < MapLongClickedEventArgs >> | Improve this Doc View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs>? PinClicked Event Type Type Description Nullable < EventHandler < PinClickedEventArgs >> | Improve this Doc View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs>? SelectedPinChanged Event Type Type Description Nullable < EventHandler < SelectedPinChangedEventArgs >> Implements IMapControl IDisposable ContentView INotifyPropertyChanged IEnumerable<>"
  },
  "api/Mapsui.UI.Maui.Pin.html": {
    "href": "api/Mapsui.UI.Maui.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance Object Pin Implements IFeatureProvider IDisposable Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class Pin : BindableObject, IFeatureProvider Constructors | Improve this Doc View Source Pin() Initializes a new instance of the Pin class Declaration public Pin() | Improve this Doc View Source Pin(MapView) Initializes a new instance of the Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Fields | Improve this Doc View Source AddressProperty Declaration public static readonly BindableProperty AddressProperty Field Value Type Description BindableProperty | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source HeightProperty Declaration public static readonly BindableProperty HeightProperty Field Value Type Description BindableProperty | Improve this Doc View Source IconProperty Declaration public static readonly BindableProperty IconProperty Field Value Type Description BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source PositionProperty Declaration public static readonly BindableProperty PositionProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotateWithMapProperty Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description BindableProperty | Improve this Doc View Source RotationProperty Declaration public static readonly BindableProperty RotationProperty Field Value Type Description BindableProperty | Improve this Doc View Source ScaleProperty Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description BindableProperty | Improve this Doc View Source SvgProperty Declaration public static readonly BindableProperty SvgProperty Field Value Type Description BindableProperty | Improve this Doc View Source TransparencyProperty Declaration public static readonly BindableProperty TransparencyProperty Field Value Type Description BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description BindableProperty | Improve this Doc View Source WidthProperty Declaration public static readonly BindableProperty WidthProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Address Adress (like street) of pin Declaration public string Address { get; set; } Property Value Type Description String | Improve this Doc View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Point | Improve this Doc View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Improve this Doc View Source Color Color of pin Declaration public Microsoft.Maui.Graphics.Color Color { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Feature Mapsui feature for this pin Declaration public GeometryFeature Feature { get; } Property Value Type Description GeometryFeature Mapsui feature | Improve this Doc View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source Icon Byte[] holding the bitmap informations Declaration public byte[] Icon { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Label Label of pin Declaration public string Label { get; set; } Property Value Type Description String | Improve this Doc View Source MaxVisible MaxVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible MinVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description Single | Improve this Doc View Source Svg String holding the Svg image informations Declaration public string Svg { get; set; } Property Value Type Description String | Improve this Doc View Source Tag Tag holding free data Declaration public object? Tag { get; set; } Property Value Type Description Nullable < Object > | Improve this Doc View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description Single | Improve this Doc View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Improve this Doc View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Equals(Nullable<Object>) Determines whether the specified is equal to the current Pin . Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj The to compare with the current Pin . Returns Type Description Boolean true if the specified is equal to the current Pin ; otherwise, false . | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source HideCallout() Hide corresponding callout Declaration public void HideCallout() | Improve this Doc View Source IsCalloutVisible() Check visibility for corresponding callout Declaration public bool IsCalloutVisible() Returns Type Description Boolean True, if callout is visible on map | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName | Improve this Doc View Source ShowCallout() Show corresponding callout Declaration public void ShowCallout() Operators | Improve this Doc View Source Equality(Pin, Pin) Declaration public static bool operator ==(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description Boolean | Improve this Doc View Source Inequality(Pin, Pin) Declaration public static bool operator !=(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description Boolean Implements IFeatureProvider IDisposable"
  },
  "api/Mapsui.UI.Maui.PinClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance Object PinClickedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Maui.PinType.html": {
    "href": "api/Mapsui.UI.Maui.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public enum PinType : int Fields Name Description Icon Pin as icon image Pin Pin with image, which could change color Svg Pin as Svg image"
  },
  "api/Mapsui.UI.Maui.Polygon.html": {
    "href": "api/Mapsui.UI.Maui.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance Object Drawable Polygon Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class Polygon : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Polygon() Initializes a new instance of the Polygon class. Declaration public Polygon() Fields | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source FillColor Color to fill circle with Declaration public Microsoft.Maui.Graphics.Color FillColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description IList < Position []> | Improve this Doc View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Maui.Polyline.html": {
    "href": "api/Mapsui.UI.Maui.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance Object Drawable Polyline Implements IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.StrokeColorProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public class Polyline : Drawable, IFeatureProvider Constructors | Improve this Doc View Source Polyline() Initializes a new instance of the Polyline class. Declaration public Polyline() | Improve this Doc View Source Polyline(String) Initializes a new instance of the Polyline class from encoded string as described here https://developers.google.com/maps/documentation/utilities/polylinealgorithm Declaration public Polyline(string encodedPolyline) Parameters Type Name Description String encodedPolyline Encoded polyline Properties | Improve this Doc View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Overrides Drawable.OnPropertyChanged(Nullable<String>) Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Maui.Position.html": {
    "href": "api/Mapsui.UI.Maui.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public struct Position Constructors | Improve this Doc View Source Position(Position) Initializes a new instance of the Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Improve this Doc View Source Position(Double, Double) Initializes a new instance of the Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description Double latitude Latitude of position Double longitude Longitude of position Fields | Improve this Doc View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = null Field Value Type Description String | Improve this Doc View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = null Field Value Type Description String | Improve this Doc View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = null Field Value Type Description String Properties | Improve this Doc View Source Latitude Latitude of position Declaration public readonly double Latitude { get; } Property Value Type Description Double | Improve this Doc View Source Longitude Longitude of position Declaration public readonly double Longitude { get; } Property Value Type Description Double Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description Nullable < Object > obj Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 | Improve this Doc View Source ToCoordinate() Declaration public Coordinate ToCoordinate() Returns Type Description Coordinate | Improve this Doc View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public MPoint ToMapsui() Returns Type Description MPoint Position in Mapsui format | Improve this Doc View Source ToPoint() Declaration public Point ToPoint() Returns Type Description Point | Improve this Doc View Source ToString() Returns a String that represents the current Position Declaration public override string ToString() Returns Type Description String A String that represents the current Position | Improve this Doc View Source ToString(String) Returns a String that represents the current Position in a given format Declaration public string ToString(string format) Parameters Type Name Description String format Format string Returns Type Description String Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Improve this Doc View Source Equality(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean | Improve this Doc View Source Inequality(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Maui.SelectedPinChangedEventArgs.html": {
    "href": "api/Mapsui.UI.Maui.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance Object SelectedPinChangedEventArgs Namespace : Mapsui.UI.Maui Assembly : Mapsui.UI.Maui.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Improve this Doc View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin"
  },
  "api/Mapsui.UI.Maui.Utils.html": {
    "href": "api/Mapsui.UI.Maui.Utils.html",
    "title": "Namespace Mapsui.UI.Maui.Utils",
    "keywords": "Namespace Mapsui.UI.Maui.Utils Classes PolylineConverter Polyline helper class"
  },
  "api/Mapsui.UI.Maui.Utils.PolylineConverter.html": {
    "href": "api/Mapsui.UI.Maui.Utils.PolylineConverter.html",
    "title": "Class PolylineConverter",
    "keywords": "Class PolylineConverter Polyline helper class Inheritance Object PolylineConverter Namespace : Mapsui.UI.Maui.Utils Assembly : Mapsui.UI.Maui.dll Syntax public static class PolylineConverter : object Methods | Improve this Doc View Source DecodePolyline(String) Decode Declaration public static List<Position>? DecodePolyline(string encodedPolyline) Parameters Type Name Description String encodedPolyline Returns Type Description Nullable < List < Position >>"
  },
  "api/Mapsui.UI.MinMax.html": {
    "href": "api/Mapsui.UI.MinMax.html",
    "title": "Class MinMax",
    "keywords": "Class MinMax Inheritance Object MinMax Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MinMax : object Constructors | Improve this Doc View Source MinMax(Double, Double) Declaration public MinMax(double value1, double value2) Parameters Type Name Description Double value1 Double value2 Properties | Improve this Doc View Source Max Declaration public double Max { get; } Property Value Type Description Double | Improve this Doc View Source Min Declaration public double Min { get; } Property Value Type Description Double"
  },
  "api/Mapsui.UI.MouseWheelAnimation.html": {
    "href": "api/Mapsui.UI.MouseWheelAnimation.html",
    "title": "Class MouseWheelAnimation",
    "keywords": "Class MouseWheelAnimation Inheritance Object MouseWheelAnimation Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class MouseWheelAnimation : object Properties | Improve this Doc View Source Duration Declaration public int Duration { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Easing Declaration public Easing Easing { get; set; } Property Value Type Description Easing Methods | Improve this Doc View Source GetResolution(Int32, IViewport, IMap) Declaration public double GetResolution(int delta, IViewport viewport, IMap map) Parameters Type Name Description Int32 delta IViewport viewport IMap map Returns Type Description Double | Improve this Doc View Source IsAnimating() Declaration public bool IsAnimating() Returns Type Description Boolean"
  },
  "api/Mapsui.UI.Objects.Drawable.html": {
    "href": "api/Mapsui.UI.Objects.Drawable.html",
    "title": "Class Drawable",
    "keywords": "Class Drawable Base class for all drawables like polyline, polygon and circle Inheritance Object Drawable Circle Polygon Polyline Circle Polygon Polyline Implements IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Maui.dll Syntax public class Drawable : BindableObject, IFeatureProvider Fields | Improve this Doc View Source IsClickableProperty Declaration public static readonly BindableProperty IsClickableProperty Field Value Type Description BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeColorProperty Declaration public static readonly BindableProperty StrokeColorProperty Field Value Type Description BindableProperty | Improve this Doc View Source StrokeWidthProperty Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description BindableProperty | Improve this Doc View Source ZIndexProperty Declaration public static readonly BindableProperty ZIndexProperty Field Value Type Description BindableProperty Properties | Improve this Doc View Source Feature Mapsui Feature belonging to this drawable Declaration public GeometryFeature Feature { get; set; } Property Value Type Description GeometryFeature | Improve this Doc View Source IsClickable Is this drawable clickable Declaration public bool IsClickable { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Label Label of drawable Declaration public string Label { get; set; } Property Value Type Description String | Improve this Doc View Source MaxVisible MaxVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible MinVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source StrokeColor StrokeColor for drawable Declaration public Microsoft.Maui.Graphics.Color StrokeColor { get; set; } Property Value Type Description Microsoft.Maui.Graphics.Color | Improve this Doc View Source StrokeWidth StrokeWidth of drawable in pixel Declaration public float StrokeWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source Tag Object for free use Declaration public object? Tag { get; set; } Property Value Type Description Nullable < Object > | Improve this Doc View Source ZIndex ZIndex of this drawable Declaration public int ZIndex { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description Nullable < String > propertyName Events | Improve this Doc View Source Clicked Event called, if this drawable is clicked an IsClickable is true Declaration public event EventHandler<DrawableClickedEventArgs>? Clicked Event Type Type Description Nullable < EventHandler < DrawableClickedEventArgs >> Implements IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.html": {
    "href": "api/Mapsui.UI.Objects.html",
    "title": "Namespace Mapsui.UI.Objects",
    "keywords": "Namespace Mapsui.UI.Objects Classes Drawable Base class for all drawables like polyline, polygon and circle MyLocationLayer A layer to display a symbol for own location ObservableCollectionProvider<T> Interfaces IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.IFeatureProvider.html": {
    "href": "api/Mapsui.UI.Objects.IFeatureProvider.html",
    "title": "Interface IFeatureProvider",
    "keywords": "Interface IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Maui.dll Syntax public interface IFeatureProvider Properties | Improve this Doc View Source Feature Declaration GeometryFeature Feature { get; } Property Value Type Description GeometryFeature"
  },
  "api/Mapsui.UI.Objects.MyLocationLayer.html": {
    "href": "api/Mapsui.UI.Objects.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance Object BaseLayer MemoryLayer MyLocationLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members MemoryLayer.Features MemoryLayer.GetFeatures(MRect, Double) MemoryLayer.Extent BaseLayer.GetLayerStyles(ILayer) BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.IsMapInfoLayer BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(String) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Maui.dll Syntax public class MyLocationLayer : MemoryLayer, ILayer, IAnimatable Remarks There are two different symbols for own loaction: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Improve this Doc View Source MyLocationLayer(MapView) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(MapView view) Parameters Type Name Description MapView view MapView, to which this layer belongs | Improve this Doc View Source MyLocationLayer(MapView, Position) Initializes a new instance of the MyLocationLayer class with a starting location. Declaration public MyLocationLayer(MapView view, Position position) Parameters Type Name Description MapView view MapView, to which this layer belongs Position position Position, where to start Properties | Improve this Doc View Source CalloutText The text that is displayed in the MyLocation callout (can contain line breaks). Declaration public string CalloutText { get; set; } Property Value Type Description String | Improve this Doc View Source Direction Movement direction of device at location Declaration public double Direction { get; } Property Value Type Description Double Direction at location | Improve this Doc View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MyLocation Position of location, that is displayed Declaration public Position MyLocation { get; } Property Value Type Description Position Position of location | Improve this Doc View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description Double Scale of symbol | Improve this Doc View Source ShowCallout Show or hide a callout with further infos next to the MyLocation symbol. Declaration public bool ShowCallout { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ViewingDirection Viewing direction of device (in degrees wrt. north direction) Declaration public double ViewingDirection { get; } Property Value Type Description Double Direction at location Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source UpdateMyDirection(Double, Double, Boolean) Updates my movement direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description Double newDirection New direction Double newViewportRotation New viewport rotation Boolean animated | Improve this Doc View Source UpdateMyLocation(Position, Boolean) Updates my location Declaration public void UpdateMyLocation(Position newLocation, bool animated = false) Parameters Type Name Description Position newLocation New location Boolean animated | Improve this Doc View Source UpdateMySpeed(Double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description Double newSpeed New speed | Improve this Doc View Source UpdateMyViewDirection(Double, Double, Boolean) Updates my view direction Declaration public void UpdateMyViewDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description Double newDirection New direction Double newViewportRotation New viewport rotation Boolean animated Events | Improve this Doc View Source Clicked This event is triggered whenever the MyLocation symbol or label is clicked. Declaration public event EventHandler<DrawableClickedEventArgs>? Clicked Event Type Type Description Nullable < EventHandler < DrawableClickedEventArgs >> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable"
  },
  "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html": {
    "href": "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html",
    "title": "Class ObservableCollectionProvider<T>",
    "keywords": "Class ObservableCollectionProvider<T> Inheritance Object ObservableCollectionProvider<T> Implements IProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Maui.dll Syntax public class ObservableCollectionProvider<T> : object, IProvider where T : IFeatureProvider Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableCollectionProvider(ObservableCollection<T>) Declaration public ObservableCollectionProvider(ObservableCollection<T> collection) Parameters Type Name Description ObservableCollection <T> collection Properties | Improve this Doc View Source Collection Declaration public ObservableCollection<T> Collection { get; } Property Value Type Description ObservableCollection <T> | Improve this Doc View Source CRS Declaration public string? CRS { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source GetExtent() Declaration public MRect GetExtent() Returns Type Description MRect | Improve this Doc View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task < IEnumerable < IFeature >> Implements IProvider"
  },
  "api/Mapsui.UI.SwipedEventArgs.html": {
    "href": "api/Mapsui.UI.SwipedEventArgs.html",
    "title": "Class SwipedEventArgs",
    "keywords": "Class SwipedEventArgs Inheritance Object SwipedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public class SwipedEventArgs : EventArgs Constructors | Improve this Doc View Source SwipedEventArgs(Double, Double) Declaration public SwipedEventArgs(double velocityX, double velocityY) Parameters Type Name Description Double velocityX Double velocityY Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source VelocityX Declaration public double VelocityX { get; } Property Value Type Description Double | Improve this Doc View Source VelocityY Declaration public double VelocityY { get; } Property Value Type Description Double"
  },
  "api/Mapsui.UI.TappedEventArgs.html": {
    "href": "api/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance Object TappedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public class TappedEventArgs : EventArgs Constructors | Improve this Doc View Source TappedEventArgs(MPoint, Int32) Declaration public TappedEventArgs(MPoint screenPosition, int numOfTaps) Parameters Type Name Description MPoint screenPosition Int32 numOfTaps Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source NumOfTaps Declaration public int NumOfTaps { get; } Property Value Type Description Int32 | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.TouchedEventArgs.html": {
    "href": "api/Mapsui.UI.TouchedEventArgs.html",
    "title": "Class TouchedEventArgs",
    "keywords": "Class TouchedEventArgs Inheritance Object TouchedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public class TouchedEventArgs : EventArgs Constructors | Improve this Doc View Source TouchedEventArgs(List<MPoint>) Declaration public TouchedEventArgs(List<MPoint> screenPoints) Parameters Type Name Description List < MPoint > screenPoints Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ScreenPoints Declaration public List<MPoint> ScreenPoints { get; } Property Value Type Description List < MPoint >"
  },
  "api/Mapsui.UI.TouchMode.html": {
    "href": "api/Mapsui.UI.TouchMode.html",
    "title": "Enum TouchMode",
    "keywords": "Enum TouchMode Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public enum TouchMode : int Fields Name Description Dragging None Zooming"
  },
  "api/Mapsui.UI.Utils.FlingTracker.html": {
    "href": "api/Mapsui.UI.Utils.FlingTracker.html",
    "title": "Class FlingTracker",
    "keywords": "Class FlingTracker Inheritance Object FlingTracker Namespace : Mapsui.UI.Utils Assembly : Mapsui.UI.Eto.dll Syntax public class FlingTracker : object Constructors | Improve this Doc View Source FlingTracker() Declaration public FlingTracker() Methods | Improve this Doc View Source AddEvent(Int64, MPoint, Int64) Declaration public void AddEvent(long id, MPoint location, long ticks) Parameters Type Name Description Int64 id MPoint location Int64 ticks | Improve this Doc View Source CalcVelocity(Int64, Int64) Declaration public (double vx, double vy) CalcVelocity(long id, long now) Parameters Type Name Description Int64 id Int64 now Returns Type Description (, ) < Double , Double > | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source RemoveId(Int64) Declaration public void RemoveId(long id) Parameters Type Name Description Int64 id"
  },
  "api/Mapsui.UI.Utils.html": {
    "href": "api/Mapsui.UI.Utils.html",
    "title": "Namespace Mapsui.UI.Utils",
    "keywords": "Namespace Mapsui.UI.Utils Classes FlingTracker"
  },
  "api/Mapsui.UI.Uwp.html": {
    "href": "api/Mapsui.UI.Uwp.html",
    "title": "Namespace Mapsui.UI.Uwp",
    "keywords": "Namespace Mapsui.UI.Uwp Classes MapControl"
  },
  "api/Mapsui.UI.Uwp.MapControl.html": {
    "href": "api/Mapsui.UI.Uwp.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl IDisposable Grid Namespace : Mapsui.UI.Uwp Assembly : Mapsui.UI.Uno.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Implements IMapControl IDisposable Grid"
  },
  "api/Mapsui.UI.ViewportLimiter.html": {
    "href": "api/Mapsui.UI.ViewportLimiter.html",
    "title": "Class ViewportLimiter",
    "keywords": "Class ViewportLimiter Inheritance Object ViewportLimiter Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiter : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). If ZoomMode is set to anything else than None, resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax | Improve this Doc View Source ZoomMode Zoom mode to use, when map is zoomed Declaration public ZoomMode ZoomMode { get; set; } Property Value Type Description ZoomMode Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport IReadOnlyList < Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Double resolution Double screenWidth Double screenHeight IReadOnlyList < Double > mapResolutions MRect mapEnvelope Returns Type Description Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiterKeepWithin.html": {
    "href": "api/Mapsui.UI.ViewportLimiterKeepWithin.html",
    "title": "Class ViewportLimiterKeepWithin",
    "keywords": "Class ViewportLimiterKeepWithin This Viewport limiter will always keep the map within the zoom and pan limits. An exception is rotation. Inheritance Object ViewportLimiterKeepWithin Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterKeepWithin : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Sets the limit to which the user can pan the map. If PanLimits is not set, Map.Extent will be used as restricted extent. Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Pair of the limits for the resolutions (smallest and biggest). The resolution is kept between these values. Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport IReadOnlyList < Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Double resolution Double screenWidth Double screenHeight IReadOnlyList < Double > mapResolutions MRect mapEnvelope Returns Type Description Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.ViewportLimiterWithoutLimits.html": {
    "href": "api/Mapsui.UI.ViewportLimiterWithoutLimits.html",
    "title": "Class ViewportLimiterWithoutLimits",
    "keywords": "Class ViewportLimiterWithoutLimits Inheritance Object ViewportLimiterWithoutLimits Implements IViewportLimiter Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public class ViewportLimiterWithoutLimits : object, IViewportLimiter Properties | Improve this Doc View Source PanLimits Declaration public MRect PanLimits { get; set; } Property Value Type Description MRect | Improve this Doc View Source ZoomLimits Declaration public MinMax ZoomLimits { get; set; } Property Value Type Description MinMax Methods | Improve this Doc View Source Limit(Viewport, IReadOnlyList<Double>, MRect) Declaration public void Limit(Viewport viewport, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Viewport viewport IReadOnlyList < Double > mapResolutions MRect mapEnvelope | Improve this Doc View Source LimitExtent(Viewport, MRect) Declaration public void LimitExtent(Viewport viewport, MRect mapEnvelope) Parameters Type Name Description Viewport viewport MRect mapEnvelope | Improve this Doc View Source LimitResolution(Double, Double, Double, IReadOnlyList<Double>, MRect) Declaration public double LimitResolution(double resolution, double screenWidth, double screenHeight, IReadOnlyList<double> mapResolutions, MRect mapEnvelope) Parameters Type Name Description Double resolution Double screenWidth Double screenHeight IReadOnlyList < Double > mapResolutions MRect mapEnvelope Returns Type Description Double Implements IViewportLimiter"
  },
  "api/Mapsui.UI.WinUI.Extensions.html": {
    "href": "api/Mapsui.UI.WinUI.Extensions.html",
    "title": "Namespace Mapsui.UI.WinUI.Extensions",
    "keywords": "Namespace Mapsui.UI.WinUI.Extensions Classes PointExtensions"
  },
  "api/Mapsui.UI.WinUI.Extensions.PointExtensions.html": {
    "href": "api/Mapsui.UI.WinUI.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance Object PointExtensions Namespace : Mapsui.UI.WinUI.Extensions Assembly : Mapsui.UI.Uno.WinUI.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static MPoint ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.WinUI.html": {
    "href": "api/Mapsui.UI.WinUI.html",
    "title": "Namespace Mapsui.UI.WinUI",
    "keywords": "Namespace Mapsui.UI.WinUI Classes MapControl"
  },
  "api/Mapsui.UI.WinUI.MapControl.html": {
    "href": "api/Mapsui.UI.WinUI.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl IDisposable Grid Namespace : Mapsui.UI.WinUI Assembly : Mapsui.UI.Uno.WinUI.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Implements IMapControl IDisposable Grid"
  },
  "api/Mapsui.UI.Wpf.Extensions.html": {
    "href": "api/Mapsui.UI.Wpf.Extensions.html",
    "title": "Namespace Mapsui.UI.Wpf.Extensions",
    "keywords": "Namespace Mapsui.UI.Wpf.Extensions Classes WindowsPointExtensions"
  },
  "api/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html",
    "title": "Class WindowsPointExtensions",
    "keywords": "Class WindowsPointExtensions Inheritance Object WindowsPointExtensions Namespace : Mapsui.UI.Wpf.Extensions Assembly : Mapsui.UI.Wpf.dll Syntax public static class WindowsPointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static MPoint ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "api/Mapsui.UI.Wpf.html": {
    "href": "api/Mapsui.UI.Wpf.html",
    "title": "Namespace Mapsui.UI.Wpf",
    "keywords": "Namespace Mapsui.UI.Wpf Classes MapControl"
  },
  "api/Mapsui.UI.Wpf.MapControl.html": {
    "href": "api/Mapsui.UI.Wpf.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance Object MapControl Implements IMapControl IDisposable Grid Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source Performance Object to save performance information about the drawing of the map Declaration public Performance Performance { get; set; } Property Value Type Description Performance Remarks If this is null, no performance information is saved. | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source WpfCanvas Declaration public Canvas WpfCanvas { get; } Property Value Type Description Canvas Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(MPoint, Int32) Declaration public MapInfo GetMapInfo(MPoint screenPosition, int margin = 0) Parameters Type Name Description MPoint screenPosition Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(Nullable<IEnumerable<ILayer>>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null) Parameters Type Name Description Nullable < IEnumerable < ILayer >> layers Returns Type Description Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(MPoint) Converts coordinates in pixels to device independent units (or DIP or DP). Declaration public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Improve this Doc View Source ToPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to pixels. Declaration public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in pixels | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() | Improve this Doc View Source ZoomToBox(MPoint, MPoint) Declaration public void ZoomToBox(MPoint beginPoint, MPoint endPoint) Parameters Type Name Description MPoint beginPoint MPoint endPoint Events | Improve this Doc View Source FeatureInfo Declaration public event EventHandler<FeatureInfoEventArgs>? FeatureInfo Event Type Type Description Nullable < EventHandler < FeatureInfoEventArgs >> | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs>? Fling Event Type Type Description Nullable < EventHandler < SwipedEventArgs >> | Improve this Doc View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description Nullable < EventHandler < MapInfoEventArgs >> | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description Nullable < EventHandler > Implements IMapControl IDisposable Grid"
  },
  "api/Mapsui.UI.ZoomDirection.html": {
    "href": "api/Mapsui.UI.ZoomDirection.html",
    "title": "Enum ZoomDirection",
    "keywords": "Enum ZoomDirection Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public enum ZoomDirection : int Fields Name Description ZoomIn ZoomOut"
  },
  "api/Mapsui.UI.ZoomedEventArgs.html": {
    "href": "api/Mapsui.UI.ZoomedEventArgs.html",
    "title": "Class ZoomedEventArgs",
    "keywords": "Class ZoomedEventArgs Inheritance Object ZoomedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Eto.dll Syntax public class ZoomedEventArgs : EventArgs Constructors | Improve this Doc View Source ZoomedEventArgs(MPoint, ZoomDirection) Declaration public ZoomedEventArgs(MPoint screenPosition, ZoomDirection direction) Parameters Type Name Description MPoint screenPosition ZoomDirection direction Properties | Improve this Doc View Source Direction Declaration public ZoomDirection Direction { get; } Property Value Type Description ZoomDirection | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ScreenPosition Declaration public MPoint ScreenPosition { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.UI.ZoomMode.html": {
    "href": "api/Mapsui.UI.ZoomMode.html",
    "title": "Enum ZoomMode",
    "keywords": "Enum ZoomMode Namespace : Mapsui.UI Assembly : Mapsui.dll Syntax public enum ZoomMode : int Fields Name Description KeepWithinResolutions Restricts zoom of the viewport to ZoomLimits and, if ZoomLimits isn't set, to minimum and maximum of Resolutions Unlimited Restricts zoom in no way"
  },
  "api/Mapsui.Utilities.Algorithms.html": {
    "href": "api/Mapsui.Utilities.Algorithms.html",
    "title": "Class Algorithms",
    "keywords": "Class Algorithms Inheritance Object Algorithms Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Algorithms : object Methods | Improve this Doc View Source DegreesToRadians(Double) Converts the specified angle from degrees to radians Declaration public static double DegreesToRadians(double degrees) Parameters Type Name Description Double degrees Angle to convert (degrees) Returns Type Description Double Returns the angle in radians | Improve this Doc View Source Distance(MPoint, MPoint) Declaration public static double Distance(MPoint a, MPoint b) Parameters Type Name Description MPoint a MPoint b Returns Type Description Double | Improve this Doc View Source Distance(Double, Double, Double, Double) Gets the euclidean distance between two points. Declaration public static double Distance(double x1, double y1, double x2, double y2) Parameters Type Name Description Double x1 The first point's X coordinate. Double y1 The first point's Y coordinate. Double x2 The second point's X coordinate. Double y2 The second point's Y coordinate. Returns Type Description Double | Improve this Doc View Source DistancePointLine(MPoint, MPoint, MPoint) Computes the distance from a point p to a line segment AB. Note: NON-ROBUST! Declaration public static double DistancePointLine(MPoint p, MPoint a, MPoint b) Parameters Type Name Description MPoint p The point to compute the distance for. MPoint a One point of the line. MPoint b Another point of the line (must be different to A). Returns Type Description Double The distance from p to line segment AB. | Improve this Doc View Source RadiansToDegrees(Double) Declaration public static double RadiansToDegrees(double radians) Parameters Type Name Description Double radians Returns Type Description Double | Improve this Doc View Source RotateClockwiseDegrees(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseDegrees(double x, double y, double degrees) Parameters Type Name Description Double x X coordinate to rotate Double y Y coordinate to rotate Double degrees Angle to rotate (degrees) Returns Type Description MPoint Returns the rotated point | Improve this Doc View Source RotateClockwiseRadians(Double, Double, Double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseRadians(double x, double y, double radians) Parameters Type Name Description Double x X coordinate to rotate Double y Y coordinate to rotate Double radians Angle to rotate (radians) Returns Type Description MPoint Returns the rotated point"
  },
  "api/Mapsui.Utilities.Animation.html": {
    "href": "api/Mapsui.Utilities.Animation.html",
    "title": "Class Animation",
    "keywords": "Class Animation Inheritance Object Animation Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Animation : object Methods | Improve this Doc View Source Start<T>(IEnumerable<AnimationEntry<T>>, Int64) Start a list of AnimationEntrys Declaration public static void Start<T>(IEnumerable<AnimationEntry<T>> entries, long duration) Parameters Type Name Description IEnumerable < AnimationEntry <T>> entries List of AnimationEntry to start Int64 duration Duration im ms for the given AnimationEntry Type Parameters Name Description T Remarks All AnimationEntries are started at the same time. | Improve this Doc View Source Start<T>(AnimationEntry<T>, Int64) List of all active animations Declaration public static void Start<T>(AnimationEntry<T> entry, long duration) Parameters Type Name Description AnimationEntry <T> entry AnimationEntry to start Int64 duration Duration im ms for the given AnimationEntry Type Parameters Name Description T | Improve this Doc View Source Stop<T>(T, IEnumerable<AnimationEntry<T>>, Boolean) Stop all AnimationEntrys in a given list Declaration public static void Stop<T>(T target, IEnumerable<AnimationEntry<T>> entries, bool callFinal = true) Parameters Type Name Description T target IEnumerable < AnimationEntry <T>> entries Boolean callFinal Final function is called, if callFinal is true Type Parameters Name Description T | Improve this Doc View Source Stop<T>(T, AnimationEntry<T>, Boolean) Stop a given AnimationEntry Declaration public static void Stop<T>(T target, AnimationEntry<T> entry, bool callFinal = true) Parameters Type Name Description T target AnimationEntry <T> entry AnimationEntry to stop Boolean callFinal Final function is called, if callFinal is true Type Parameters Name Description T | Improve this Doc View Source UpdateAnimations<T>(T, IEnumerable<AnimationEntry<T>>) Update all AnimationEntrys and check, if a redraw is needed Declaration public static bool UpdateAnimations<T>(T target, IEnumerable<AnimationEntry<T>> entries) Parameters Type Name Description T target IEnumerable < AnimationEntry <T>> entries Returns Type Description Boolean True, if a redraw of the screen is needed Type Parameters Name Description T"
  },
  "api/Mapsui.Utilities.AnimationEntry-1.html": {
    "href": "api/Mapsui.Utilities.AnimationEntry-1.html",
    "title": "Class AnimationEntry<T>",
    "keywords": "Class AnimationEntry<T> Inheritance Object AnimationEntry<T> Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class AnimationEntry<T> : object Type Parameters Name Description T Constructors | Improve this Doc View Source AnimationEntry(Object, Object, Double, Double, Easing, Boolean, Nullable<Action<T, AnimationEntry<T>, Double>>, Nullable<Action<T, AnimationEntry<T>>>) Declaration public AnimationEntry(object start, object end, double animationStart = null, double animationEnd = null, Easing easing = null, bool repeat = false, Action<T, AnimationEntry<T>, double>? tick = null, Action<T, AnimationEntry<T>>? final = null) Parameters Type Name Description Object start Object end Double animationStart Double animationEnd Easing easing Boolean repeat Nullable < Action <T, AnimationEntry <T>, Double >> tick Nullable < Action <T, AnimationEntry <T>>> final Properties | Improve this Doc View Source AnimationEnd When this animation ends in animation cycle. Value between 0 and 1. Declaration public double AnimationEnd { get; } Property Value Type Description Double | Improve this Doc View Source AnimationStart When this animation starts in animation cycle. Value between 0 and 1. Declaration public double AnimationStart { get; } Property Value Type Description Double | Improve this Doc View Source Easing Easing to use for this animation Declaration public Easing Easing { get; } Property Value Type Description Easing | Improve this Doc View Source End Object holding the end value Declaration public object End { get; } Property Value Type Description Object | Improve this Doc View Source Repeat Is this a repeating animation that starts over and over again Declaration public bool Repeat { get; } Property Value Type Description Boolean | Improve this Doc View Source Start Object holding the starting value Declaration public object Start { get; } Property Value Type Description Object"
  },
  "api/Mapsui.Utilities.AnimationEventArgs.html": {
    "href": "api/Mapsui.Utilities.AnimationEventArgs.html",
    "title": "Class AnimationEventArgs",
    "keywords": "Class AnimationEventArgs Inheritance Object AnimationEventArgs Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class AnimationEventArgs : object Constructors | Improve this Doc View Source AnimationEventArgs(Double, ChangeType) Declaration public AnimationEventArgs(double value, ChangeType changeType) Parameters Type Name Description Double value ChangeType changeType Properties | Improve this Doc View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Improve this Doc View Source Value Declaration public double Value { get; } Property Value Type Description Double"
  },
  "api/Mapsui.Utilities.Constants.html": {
    "href": "api/Mapsui.Utilities.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Inheritance Object Constants Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Constants : object Fields | Improve this Doc View Source DefaultResolution Declaration public const float DefaultResolution = null Field Value Type Description Single | Improve this Doc View Source DegreesToRadians Declaration public const float DegreesToRadians = null Field Value Type Description Single | Improve this Doc View Source Epsilon Declaration public const double Epsilon = null Field Value Type Description Double"
  },
  "api/Mapsui.Utilities.Easing.html": {
    "href": "api/Mapsui.Utilities.Easing.html",
    "title": "Class Easing",
    "keywords": "Class Easing Inheritance Object Easing Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class Easing : object Constructors | Improve this Doc View Source Easing(Func<Double, Double>) Declaration public Easing(Func<double, double> easingFunc) Parameters Type Name Description Func < Double , Double > easingFunc Fields | Improve this Doc View Source BounceIn Declaration public static readonly Easing BounceIn Field Value Type Description Easing | Improve this Doc View Source BounceOut Declaration public static readonly Easing BounceOut Field Value Type Description Easing | Improve this Doc View Source CubicIn Declaration public static readonly Easing CubicIn Field Value Type Description Easing | Improve this Doc View Source CubicInOut Declaration public static readonly Easing CubicInOut Field Value Type Description Easing | Improve this Doc View Source CubicOut Declaration public static readonly Easing CubicOut Field Value Type Description Easing | Improve this Doc View Source Linear Declaration public static readonly Easing Linear Field Value Type Description Easing | Improve this Doc View Source QuarticIn Declaration public static readonly Easing QuarticIn Field Value Type Description Easing | Improve this Doc View Source QuarticOut Declaration public static readonly Easing QuarticOut Field Value Type Description Easing | Improve this Doc View Source SinIn Declaration public static readonly Easing SinIn Field Value Type Description Easing | Improve this Doc View Source SinInOut Declaration public static readonly Easing SinInOut Field Value Type Description Easing | Improve this Doc View Source SinOut Declaration public static readonly Easing SinOut Field Value Type Description Easing | Improve this Doc View Source SpringIn Declaration public static readonly Easing SpringIn Field Value Type Description Easing | Improve this Doc View Source SpringOut Declaration public static readonly Easing SpringOut Field Value Type Description Easing Methods | Improve this Doc View Source Ease(Double) Declaration public double Ease(double v) Parameters Type Name Description Double v Returns Type Description Double Operators | Improve this Doc View Source Implicit(Func<Double, Double> to Easing) Declaration public static implicit operator Easing(Func<double, double> func) Parameters Type Name Description Func < Double , Double > func Returns Type Description Easing"
  },
  "api/Mapsui.Utilities.EmbeddedResourceLoader.html": {
    "href": "api/Mapsui.Utilities.EmbeddedResourceLoader.html",
    "title": "Class EmbeddedResourceLoader",
    "keywords": "Class EmbeddedResourceLoader Inheritance Object EmbeddedResourceLoader Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class EmbeddedResourceLoader : object Methods | Improve this Doc View Source Load(String, Type) Declaration public static Stream Load(string relativePathToEmbeddedResource, Type typeInAssemblyOfEmbeddedResource) Parameters Type Name Description String relativePathToEmbeddedResource This is the path of the resource without the assembly path but including possible project folders. So if an image 'myimage.png' is in a project folders 'images' the path is 'images.myimage.png'. Resources always uses '.' as separators. Type typeInAssemblyOfEmbeddedResource This should be a type that is in the same assembly as the EmbeddedResource. It is used to infer the full path and is necessary to load the resource. Returns Type Description Stream"
  },
  "api/Mapsui.Utilities.Haversine.html": {
    "href": "api/Mapsui.Utilities.Haversine.html",
    "title": "Class Haversine",
    "keywords": "Class Haversine Inheritance Object Haversine Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Haversine : object Methods | Improve this Doc View Source Distance(Double, Double, Double, Double) Returns the distance in kilometers of any two latitude / longitude points. Declaration public static double Distance(double lon1, double lat1, double lon2, double lat2) Parameters Type Name Description Double lon1 Double lat1 Double lon2 Double lat2 Returns Type Description Double"
  },
  "api/Mapsui.Utilities.html": {
    "href": "api/Mapsui.Utilities.html",
    "title": "Namespace Mapsui.Utilities",
    "keywords": "Namespace Mapsui.Utilities Classes Algorithms Animation AnimationEntry<T> AnimationEventArgs Constants Easing EmbeddedResourceLoader Haversine Performance StreamHelper SvgHelper TransformationAlgorithms Version Version information helper class ZoomHelper Enums ScaleMethod"
  },
  "api/Mapsui.Utilities.Performance.html": {
    "href": "api/Mapsui.Utilities.Performance.html",
    "title": "Class Performance",
    "keywords": "Class Performance Inheritance Object Performance Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public class Performance : object Constructors | Improve this Doc View Source Performance(Int32) Declaration public Performance(int maxValues = 20) Parameters Type Name Description Int32 maxValues Properties | Improve this Doc View Source Count Counter for number of redraws of map Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source DrawingTimes Get list of all drawing times Declaration public List<double> DrawingTimes { get; } Property Value Type Description List < Double > Remarks First entry is the newest time | Improve this Doc View Source Dropped Number of dropped frames, because the screen is already updated Declaration public int Dropped { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FPS Possible frames per second calculated from Mean Declaration public int FPS { get; } Property Value Type Description Int32 | Improve this Doc View Source LastDrawingTime Time be used for the last drawing Declaration public double LastDrawingTime { get; } Property Value Type Description Double | Improve this Doc View Source Max Maximal drawing time Declaration public double Max { get; } Property Value Type Description Double | Improve this Doc View Source MaxValues MaxValues of drawing times that are saved and used for mean value Declaration public int MaxValues { get; } Property Value Type Description Int32 | Improve this Doc View Source Mean Mean value of all MaxValues drawing times Declaration public double Mean { get; } Property Value Type Description Double | Improve this Doc View Source Min Minimal drawing time Declaration public double Min { get; } Property Value Type Description Double Methods | Improve this Doc View Source Add(Double) Add next drawing time Declaration public void Add(double time) Parameters Type Name Description Double time | Improve this Doc View Source Clear() Clear all existing values up to now Declaration public void Clear()"
  },
  "api/Mapsui.Utilities.ScaleMethod.html": {
    "href": "api/Mapsui.Utilities.ScaleMethod.html",
    "title": "Enum ScaleMethod",
    "keywords": "Enum ScaleMethod Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public enum ScaleMethod : int Fields Name Description Fill Fill up the entire view port of the screen Fit Fit within the view port of the screen FitHeight Fill the height of the screen FitWidth Fill the width of the screen"
  },
  "api/Mapsui.Utilities.StreamHelper.html": {
    "href": "api/Mapsui.Utilities.StreamHelper.html",
    "title": "Class StreamHelper",
    "keywords": "Class StreamHelper Inheritance Object StreamHelper Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class StreamHelper : object Methods | Improve this Doc View Source ReadFully(Stream) Reads data from a stream until the end is reached. The data is returned as a byte array. An IOException is thrown if any of the underlying IO calls fail. Declaration public static byte[] ReadFully(Stream stream) Parameters Type Name Description Stream stream The stream to read data from Returns Type Description Byte []"
  },
  "api/Mapsui.Utilities.SvgHelper.html": {
    "href": "api/Mapsui.Utilities.SvgHelper.html",
    "title": "Class SvgHelper",
    "keywords": "Class SvgHelper Inheritance Object SvgHelper Namespace : Mapsui.Utilities Assembly : Mapsui.Rendering.Skia.dll Syntax public static class SvgHelper : object Methods | Improve this Doc View Source LoadSvg(Nullable<Stream>) Load Svg from String Declaration public static SKSvg? LoadSvg(this Stream? str) Parameters Type Name Description Nullable < Stream > str string Returns Type Description Nullable < SKSvg > loaded svg image | Improve this Doc View Source LoadSvg(Nullable<String>) Load Svg from String Declaration public static SKSvg? LoadSvg(this string? str) Parameters Type Name Description Nullable < String > str string Returns Type Description Nullable < SKSvg > loaded svg image | Improve this Doc View Source LoadSvgId(Type, String) Declaration public static int LoadSvgId(this Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description Type typeInAssemblyOfEmbeddedResource String relativePathToEmbeddedResource Returns Type Description Int32 | Improve this Doc View Source LoadSvgPicture(Nullable<Stream>) Load Svg Picture from String Declaration public static SKPicture? LoadSvgPicture(this Stream? str) Parameters Type Name Description Nullable < Stream > str string Returns Type Description Nullable < SKPicture > loaded svg image | Improve this Doc View Source LoadSvgPicture(Nullable<String>) Load Svg Picture from String Declaration public static SKPicture? LoadSvgPicture(this string? str) Parameters Type Name Description Nullable < String > str string Returns Type Description Nullable < SKPicture > loaded svg image"
  },
  "api/Mapsui.Utilities.TransformationAlgorithms.html": {
    "href": "api/Mapsui.Utilities.TransformationAlgorithms.html",
    "title": "Class TransformationAlgorithms",
    "keywords": "Class TransformationAlgorithms Inheritance Object TransformationAlgorithms Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class TransformationAlgorithms : object Methods | Improve this Doc View Source CalculateCenterOfMap(Double, Double, Double, Double, Double, Double) Calculates the new CenterOfMap based on the CenterOfZoom and the new resolution. The CenterOfZoom is not the same as the CenterOfMap. CenterOfZoom is the one place in the map that stays on the same location when zooming. In Mapsui is can be equal to the CenterOfMap, for instance when using the +/- buttons. When using mouse wheel zoom the CenterOfZoom is the location of the mouse. Declaration public static (double x, double y) CalculateCenterOfMap(double centerOfZoomX, double centerOfZoomY, double newResolution, double currentCenterX, double currentCenterY, double currentResolution) Parameters Type Name Description Double centerOfZoomX Double centerOfZoomY Double newResolution Double currentCenterX Double currentCenterY Double currentResolution Returns Type Description (, ) < Double , Double >"
  },
  "api/Mapsui.Utilities.Version.html": {
    "href": "api/Mapsui.Utilities.Version.html",
    "title": "Class Version",
    "keywords": "Class Version Version information helper class Inheritance Object Version Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class Version : object Methods | Improve this Doc View Source GetCurrentVersion() Returns the current build version of Mapsui Declaration public static Version? GetCurrentVersion() Returns Type Description Nullable < Version >"
  },
  "api/Mapsui.Utilities.ZoomHelper.html": {
    "href": "api/Mapsui.Utilities.ZoomHelper.html",
    "title": "Class ZoomHelper",
    "keywords": "Class ZoomHelper Inheritance Object ZoomHelper Namespace : Mapsui.Utilities Assembly : Mapsui.dll Syntax public static class ZoomHelper : object Methods | Improve this Doc View Source ClipResolutionToExtremes(IReadOnlyList<Double>, Double) Declaration public static double ClipResolutionToExtremes(IReadOnlyList<double> resolutions, double resolution) Parameters Type Name Description IReadOnlyList < Double > resolutions Double resolution Returns Type Description Double | Improve this Doc View Source DetermineResolution(Double, Double, Double, Double, ScaleMethod) Declaration public static double DetermineResolution(double worldWidth, double worldHeight, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description Double worldWidth Double worldHeight Double screenWidth Double screenHeight ScaleMethod scaleMethod Returns Type Description Double | Improve this Doc View Source ZoomIn(Nullable<IReadOnlyList<Double>>, Double) Declaration public static double ZoomIn(IReadOnlyList<double>? resolutions, double resolution) Parameters Type Name Description Nullable < IReadOnlyList < Double >> resolutions Double resolution Returns Type Description Double | Improve this Doc View Source ZoomOut(Nullable<IReadOnlyList<Double>>, Double) Declaration public static double ZoomOut(IReadOnlyList<double>? resolutions, double resolution) Parameters Type Name Description Nullable < IReadOnlyList < Double >> resolutions Double resolution Returns Type Description Double | Improve this Doc View Source ZoomToBoudingbox(Viewport, Double, Double, Double, Double, Double, Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(Viewport viewport, double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description Viewport viewport Double x1 Double y1 Double x2 Double y2 Double screenWidth Double screenHeight ScaleMethod scaleMethod | Improve this Doc View Source ZoomToBoudingbox(Double, Double, Double, Double, Double, Double, out Double, out Double, out Double, ScaleMethod) Declaration public static void ZoomToBoudingbox(double x1, double y1, double x2, double y2, double screenWidth, double screenHeight, out double x, out double y, out double resolution, ScaleMethod scaleMethod = ScaleMethod.Fit) Parameters Type Name Description Double x1 Double y1 Double x2 Double y2 Double screenWidth Double screenHeight Double x Double y Double resolution ScaleMethod scaleMethod"
  },
  "api/Mapsui.Viewport.html": {
    "href": "api/Mapsui.Viewport.html",
    "title": "Class Viewport",
    "keywords": "Class Viewport Viewport holds all information about the visible part of the map. Inheritance Object Viewport Implements IViewport IReadOnlyViewport IAnimatable Namespace : Mapsui Assembly : Mapsui.dll Syntax public class Viewport : object, IViewport, IReadOnlyViewport, IAnimatable Remarks Viewport is the connection between Map and MapControl. It tells MapControl, which part of Map should be displayed on screen. Constructors | Improve this Doc View Source Viewport() Create a new viewport Declaration public Viewport() | Improve this Doc View Source Viewport(IReadOnlyViewport) Create a new viewport from another viewport Declaration public Viewport(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Viewport from which to copy all values Properties | Improve this Doc View Source Center Coordinate of center of viewport in map coordinates Declaration public MReadOnlyPoint Center { get; } Property Value Type Description MReadOnlyPoint | Improve this Doc View Source CenterX Declaration public double CenterX { get; set; } Property Value Type Description Double | Improve this Doc View Source CenterY Declaration public double CenterY { get; set; } Property Value Type Description Double | Improve this Doc View Source Extent MRect of viewport in map coordinates respecting Rotation Declaration public MRect Extent { get; } Property Value Type Description MRect Remarks This MRect is horizontally and vertically aligned, even if the viewport is rotated. So this MRect perhaps contain parts, that are not visible. | Improve this Doc View Source HasSize Declaration public bool HasSize { get; } Property Value Type Description Boolean | Improve this Doc View Source Height Height of viewport in screen pixels Declaration public double Height { get; set; } Property Value Type Description Double | Improve this Doc View Source IsRotated IsRotated is true, when viewport displays map rotated Declaration public bool IsRotated { get; } Property Value Type Description Boolean | Improve this Doc View Source Resolution Resolution of the viewport in units per pixel Declaration public double Resolution { get; set; } Property Value Type Description Double Remarks The Resolution in Mapsui is what is often called zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Improve this Doc View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration public double Rotation { get; set; } Property Value Type Description Double | Improve this Doc View Source Width Width of viewport in screen pixels Declaration public double Width { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Create(MRect, Double) Declaration public static Viewport Create(MRect extent, double resolution) Parameters Type Name Description MRect extent Double resolution Returns Type Description Viewport | Improve this Doc View Source Rotate(Double, Double, Double, Double, Double) Declaration public (double x, double y) Rotate(double degrees, double x, double y, double centerX, double centerY) Parameters Type Name Description Double degrees Double x Double y Double centerX Double centerY Returns Type Description (, ) < Double , Double > | Improve this Doc View Source ScreenToWorld(MPoint) Converts a point in screen pixels to one in map units, respecting rotation Declaration public MPoint ScreenToWorld(MPoint position) Parameters Type Name Description MPoint position Coordinate in map units Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorld(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration public MPoint ScreenToWorld(double positionX, double positionY) Parameters Type Name Description Double positionX Double positionY Returns Type Description MPoint MPoint in map units | Improve this Doc View Source ScreenToWorldXY(Double, Double) Converts X/Y in screen pixels to a point in map units, respecting rotation Declaration public (double worldX, double worldY) ScreenToWorldXY(double screenX, double screenY) Parameters Type Name Description Double screenX Double screenY Returns Type Description (, ) < Double , Double > Tuple of x and y in world coordintes | Improve this Doc View Source SetAnimations(List<AnimationEntry<Viewport>>) Declaration public void SetAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description List < AnimationEntry < Viewport >> animations | Improve this Doc View Source SetCenter(MReadOnlyPoint, Int64, Easing) Declaration public void SetCenter(MReadOnlyPoint center, long duration = null, Easing easing = null) Parameters Type Name Description MReadOnlyPoint center Int64 duration Easing easing | Improve this Doc View Source SetCenter(Double, Double, Int64, Easing) Declaration public void SetCenter(double x, double y, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Int64 duration Easing easing | Improve this Doc View Source SetCenterAndResolution(Double, Double, Double, Int64, Easing) Declaration public void SetCenterAndResolution(double x, double y, double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double x Double y Double resolution Int64 duration Easing easing | Improve this Doc View Source SetResolution(Double, Int64, Easing) Declaration public void SetResolution(double resolution, long duration = null, Easing easing = null) Parameters Type Name Description Double resolution Int64 duration Easing easing | Improve this Doc View Source SetRotation(Double, Int64, Easing) Declaration public void SetRotation(double rotation, long duration = null, Easing easing = null) Parameters Type Name Description Double rotation Int64 duration Easing easing | Improve this Doc View Source SetSize(Double, Double) Declaration public void SetSize(double width, double height) Parameters Type Name Description Double width Double height | Improve this Doc View Source Transform(MPoint, MPoint, Double, Double) Moving the position of viewport to a new one Declaration public void Transform(MPoint positionScreen, MPoint previousPositionScreen, double deltaResolution = null, double deltaRotation = null) Parameters Type Name Description MPoint positionScreen MPoint previousPositionScreen Double deltaResolution Change of resolution for transformation (<1: zoom out, >1: zoom in) Double deltaRotation Change of rotation | Improve this Doc View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description Boolean | Improve this Doc View Source WorldToScreen(MPoint) Converts X/Y in map units to a point in device independent unit (or DIP or DP), respecting rotation Declaration public MPoint WorldToScreen(MPoint worldPosition) Parameters Type Name Description MPoint worldPosition Coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreen(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public MPoint WorldToScreen(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description MPoint MPoint in screen pixels | Improve this Doc View Source WorldToScreenUnrotated(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public (double screenX, double screenY) WorldToScreenUnrotated(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description (, ) < Double , Double > The x and y in screen pixels | Improve this Doc View Source WorldToScreenXY(Double, Double) Converts X/Y in map units to a point in device independent units (or DIP or DP), respecting rotation Declaration public (double screenX, double screenY) WorldToScreenXY(double worldX, double worldY) Parameters Type Name Description Double worldX X coordinate in map units Double worldY Y coordinate in map units Returns Type Description (, ) < Double , Double > Tuple of x and y in screen coordinates Events | Improve this Doc View Source ViewportChanged Declaration public event PropertyChangedEventHandler? ViewportChanged Event Type Type Description Nullable < PropertyChangedEventHandler > Implements IViewport IReadOnlyViewport IAnimatable"
  },
  "api/Mapsui.ViewportAnimations.CenterAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.CenterAnimation.html",
    "title": "Class CenterAnimation",
    "keywords": "Class CenterAnimation Inheritance Object CenterAnimation Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class CenterAnimation : object Methods | Improve this Doc View Source Create(IViewport, Double, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(IViewport viewport, double centerX, double centerY, long duration, Easing easing) Parameters Type Name Description IViewport viewport Double centerX Double centerY Int64 duration Easing easing Returns Type Description List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.FlingAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.FlingAnimation.html",
    "title": "Class FlingAnimation",
    "keywords": "Class FlingAnimation Inheritance Object FlingAnimation Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public static class FlingAnimation : object Methods | Improve this Doc View Source Create(Double, Double, Int64) Declaration public static (List<AnimationEntry<Viewport>> Entries, long Duration) Create(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description Double velocityX Double velocityY Int64 maxDuration Returns Type Description (, ) < List < AnimationEntry < Viewport >>, Int64 >"
  },
  "api/Mapsui.ViewportAnimations.FlyToAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.FlyToAnimation.html",
    "title": "Class FlyToAnimation",
    "keywords": "Class FlyToAnimation Inheritance Object FlyToAnimation Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class FlyToAnimation : object Methods | Improve this Doc View Source Create(IViewport, MPoint, Double, Int64) Declaration public static List<AnimationEntry<Viewport>> Create(IViewport viewport, MPoint center, double maxResolution, long duration) Parameters Type Name Description IViewport viewport MPoint center Double maxResolution Int64 duration Returns Type Description List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.html": {
    "href": "api/Mapsui.ViewportAnimations.html",
    "title": "Namespace Mapsui.ViewportAnimations",
    "keywords": "Namespace Mapsui.ViewportAnimations Classes CenterAnimation FlingAnimation FlyToAnimation RotateAnimation ZoomAnimation"
  },
  "api/Mapsui.ViewportAnimations.RotateAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.RotateAnimation.html",
    "title": "Class RotateAnimation",
    "keywords": "Class RotateAnimation Inheritance Object RotateAnimation Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class RotateAnimation : object Methods | Improve this Doc View Source Create(Viewport, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(Viewport viewport, double rotation, long duration, Easing easing) Parameters Type Name Description Viewport viewport Double rotation Int64 duration Easing easing Returns Type Description List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.ViewportAnimations.ZoomAnimation.html": {
    "href": "api/Mapsui.ViewportAnimations.ZoomAnimation.html",
    "title": "Class ZoomAnimation",
    "keywords": "Class ZoomAnimation Inheritance Object ZoomAnimation Namespace : Mapsui.ViewportAnimations Assembly : Mapsui.dll Syntax public class ZoomAnimation : object Methods | Improve this Doc View Source Create(Viewport, Double, Int64, Easing) Declaration public static List<AnimationEntry<Viewport>> Create(Viewport viewport, double resolution, long duration, Easing easing) Parameters Type Name Description Viewport viewport Double resolution Int64 duration Easing easing Returns Type Description List < AnimationEntry < Viewport >>"
  },
  "api/Mapsui.Widgets.Alignment.html": {
    "href": "api/Mapsui.Widgets.Alignment.html",
    "title": "Enum Alignment",
    "keywords": "Enum Alignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum Alignment : int Fields Name Description Auto Center Left Right Extension Methods AlignmentExtensions.ToRichTextKit()"
  },
  "api/Mapsui.Widgets.ButtonWidget.ButtonWidget.html": {
    "href": "api/Mapsui.Widgets.ButtonWidget.ButtonWidget.html",
    "title": "Class ButtonWidget",
    "keywords": "Class ButtonWidget Widget which shows a buttons Inheritance Object Widget ButtonWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.ButtonWidget Assembly : Mapsui.dll Syntax public class ButtonWidget : Widget, IWidget Remarks With this, the user could add buttons with SVG icons to the map. Usage To show a ButtonWidget, add a instance of the ButtonWidget to Map.Widgets by map.Widgets.Add(new ButtonWidget(map, picture)); Customize Picture: SVG image to display for button Rotation: Value for rotation in degrees Opacity: Opacity of button Properties | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source Picture Object for prerendered image. For internal use only. Declaration public object? Picture { get; set; } Property Value Type Description Nullable < Object > | Improve this Doc View Source Rotation Rotation of the SVG image Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source SvgImage SVG image to show for button Declaration public string? SvgImage { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Event handler which is called, when the button is touched Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source WidgetTouched Event handler which is called, when the button is touched Declaration public event EventHandler<WidgetTouchedEventArgs>? WidgetTouched Event Type Type Description Nullable < EventHandler < WidgetTouchedEventArgs >> Implements IWidget INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.ButtonWidget.html": {
    "href": "api/Mapsui.Widgets.ButtonWidget.html",
    "title": "Namespace Mapsui.Widgets.ButtonWidget",
    "keywords": "Namespace Mapsui.Widgets.ButtonWidget Classes ButtonWidget Widget which shows a buttons"
  },
  "api/Mapsui.Widgets.HorizontalAlignment.html": {
    "href": "api/Mapsui.Widgets.HorizontalAlignment.html",
    "title": "Enum HorizontalAlignment",
    "keywords": "Enum HorizontalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum HorizontalAlignment : int Fields Name Description Center Left Right"
  },
  "api/Mapsui.Widgets.html": {
    "href": "api/Mapsui.Widgets.html",
    "title": "Namespace Mapsui.Widgets",
    "keywords": "Namespace Mapsui.Widgets Classes Hyperlink HyperlinkWidgetArguments TextBox Widget WidgetTouch WidgetTouchedEventArgs Interfaces IWidget IWidgetRenderer Enums Alignment HorizontalAlignment VerticalAlignment"
  },
  "api/Mapsui.Widgets.Hyperlink.html": {
    "href": "api/Mapsui.Widgets.Hyperlink.html",
    "title": "Class Hyperlink",
    "keywords": "Class Hyperlink Inheritance Object Widget TextBox Hyperlink Implements IWidget Inherited Members TextBox.PaddingX TextBox.PaddingY TextBox.CornerRadius TextBox.Text TextBox.BackColor TextBox.TextColor Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class Hyperlink : TextBox, IWidget Properties | Improve this Doc View Source Url Declaration public string? Url { get; set; } Property Value Type Description Nullable < String > Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source Touched Declaration public event EventHandler<HyperlinkWidgetArguments>? Touched Event Type Type Description Nullable < EventHandler < HyperlinkWidgetArguments >> Implements IWidget"
  },
  "api/Mapsui.Widgets.HyperlinkWidgetArguments.html": {
    "href": "api/Mapsui.Widgets.HyperlinkWidgetArguments.html",
    "title": "Class HyperlinkWidgetArguments",
    "keywords": "Class HyperlinkWidgetArguments Inheritance Object HyperlinkWidgetArguments Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class HyperlinkWidgetArguments : object Fields | Improve this Doc View Source Handled Declaration public bool Handled Field Value Type Description Boolean"
  },
  "api/Mapsui.Widgets.IWidget.html": {
    "href": "api/Mapsui.Widgets.IWidget.html",
    "title": "Interface IWidget",
    "keywords": "Interface IWidget Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidget Properties | Improve this Doc View Source Enabled Declaration bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Envelope The hit box of the widget. This needs to be updated from the widget renderer. Declaration MRect Envelope { get; set; } Property Value Type Description MRect | Improve this Doc View Source HorizontalAlignment Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration float MarginX { get; set; } Property Value Type Description Single | Improve this Doc View Source MarginY Declaration float MarginY { get; set; } Property Value Type Description Single | Improve this Doc View Source VerticalAlignment Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Function, which is called, when a Widget is hidden Declaration bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator Navigator of MapControl MPoint position Screen position Returns Type Description Boolean True, if the Widget had handled the touch event"
  },
  "api/Mapsui.Widgets.IWidgetRenderer.html": {
    "href": "api/Mapsui.Widgets.IWidgetRenderer.html",
    "title": "Interface IWidgetRenderer",
    "keywords": "Interface IWidgetRenderer Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public interface IWidgetRenderer"
  },
  "api/Mapsui.Widgets.PerformanceWidget.html": {
    "href": "api/Mapsui.Widgets.PerformanceWidget.html",
    "title": "Namespace Mapsui.Widgets.PerformanceWidget",
    "keywords": "Namespace Mapsui.Widgets.PerformanceWidget Classes PerformanceWidget Widget which shows the drawing performance"
  },
  "api/Mapsui.Widgets.PerformanceWidget.PerformanceWidget.html": {
    "href": "api/Mapsui.Widgets.PerformanceWidget.PerformanceWidget.html",
    "title": "Class PerformanceWidget",
    "keywords": "Class PerformanceWidget Widget which shows the drawing performance Inheritance Object Widget PerformanceWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.PerformanceWidget Assembly : Mapsui.dll Syntax public class PerformanceWidget : Widget, IWidget Remarks With this, the user could see the drawing performance on the screen. It shows always the values for the last draw before this draw. Constructors | Improve this Doc View Source PerformanceWidget(Performance) Declaration public PerformanceWidget(Performance performance) Parameters Type Name Description Performance performance Properties | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source Performance Performance object which holds the values Declaration public Performance Performance { get; } Property Value Type Description Performance Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Event handler which is called, when the button is touched Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source WidgetTouched Event handler which is called, when the button is touched Declaration public event EventHandler<WidgetTouchedEventArgs>? WidgetTouched Event Type Type Description Nullable < EventHandler < WidgetTouchedEventArgs >> Implements IWidget INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.ScaleBar.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.html",
    "title": "Namespace Mapsui.Widgets.ScaleBar",
    "keywords": "Namespace Mapsui.Widgets.ScaleBar Classes ImperialUnitConverter MetricUnitConverter NauticalUnitConverter ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Interfaces IUnitConverter Enums ScaleBarMode"
  },
  "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html",
    "title": "Class ImperialUnitConverter",
    "keywords": "Class ImperialUnitConverter Inheritance Object ImperialUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ImperialUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly ImperialUnitConverter Instance Field Value Type Description ImperialUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description Int32 mapScaleValue Returns Type Description String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.IUnitConverter.html",
    "title": "Interface IUnitConverter",
    "keywords": "Interface IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public interface IUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration double MeterRatio { get; } Property Value Type Description Double | Improve this Doc View Source ScaleBarValues Declaration IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration string GetScaleText(int mapScaleValue) Parameters Type Name Description Int32 mapScaleValue Returns Type Description String"
  },
  "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html",
    "title": "Class MetricUnitConverter",
    "keywords": "Class MetricUnitConverter Inheritance Object MetricUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class MetricUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly MetricUnitConverter Instance Field Value Type Description MetricUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description Int32 mapScaleValue Returns Type Description String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html",
    "title": "Class NauticalUnitConverter",
    "keywords": "Class NauticalUnitConverter Inheritance Object NauticalUnitConverter Implements IUnitConverter Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class NauticalUnitConverter : object, IUnitConverter Fields | Improve this Doc View Source Instance Declaration public static readonly NauticalUnitConverter Instance Field Value Type Description NauticalUnitConverter Properties | Improve this Doc View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description Double | Improve this Doc View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable < Int32 > Methods | Improve this Doc View Source GetScaleText(Int32) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description Int32 mapScaleValue Returns Type Description String Implements IUnitConverter"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarMode.html",
    "title": "Enum ScaleBarMode",
    "keywords": "Enum ScaleBarMode Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public enum ScaleBarMode : int Fields Name Description Both Single"
  },
  "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html": {
    "href": "api/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html",
    "title": "Class ScaleBarWidget",
    "keywords": "Class ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Inheritance Object Widget ScaleBarWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.ScaleBar Assembly : Mapsui.dll Syntax public class ScaleBarWidget : Widget, IWidget Constructors | Improve this Doc View Source ScaleBarWidget(Map, IProjection) Declaration public ScaleBarWidget(Map map, IProjection projection = null) Parameters Type Name Description Map map IProjection projection Properties | Improve this Doc View Source Font Font to use for drawing text Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source Halo Halo color of scalebar and text, so that it is better visible Declaration public Color Halo { get; set; } Property Value Type Description Color | Improve this Doc View Source Height Real height of scalebar. Depends on number of unit converters and text size. Is calculated by renderer. Declaration public float Height { get; set; } Property Value Type Description Single | Improve this Doc View Source MaxWidth Maximum usable width for scalebar. The real used width could be less, because we want only integers as text. Declaration public float MaxWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Declaration public float Scale { get; } Property Value Type Description Single | Improve this Doc View Source ScaleBarMode ScaleBarMode of scalebar. Could be Single to show only one or Both for showing two units. Declaration public ScaleBarMode ScaleBarMode { get; set; } Property Value Type Description ScaleBarMode | Improve this Doc View Source SecondaryUnitConverter Secondary unit converter for lower text if ScaleBarMode is Both. Default is ImperialUnitConverter. Declaration public IUnitConverter SecondaryUnitConverter { get; set; } Property Value Type Description IUnitConverter | Improve this Doc View Source ShowEnvelop Draw a rectangle around the scale bar for testing Declaration public bool ShowEnvelop { get; set; } Property Value Type Description Boolean | Improve this Doc View Source StrokeWidth Stroke width for lines Declaration public float StrokeWidth { get; set; } Property Value Type Description Single | Improve this Doc View Source StrokeWidthHalo Stroke width for halo of lines Declaration public float StrokeWidthHalo { get; set; } Property Value Type Description Single | Improve this Doc View Source TextAlignment Alignment of text of scalebar Declaration public Alignment TextAlignment { get; set; } Property Value Type Description Alignment | Improve this Doc View Source TextColor Foreground color of scalebar and text Declaration public Color TextColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextMargin Margin between end of tick and text Declaration public float TextMargin { get; } Property Value Type Description Single | Improve this Doc View Source TickLength Length of the ticks Declaration public float TickLength { get; set; } Property Value Type Description Single | Improve this Doc View Source UnitConverter Normal unit converter for upper text. Default is MetricUnitConverter. Declaration public IUnitConverter UnitConverter { get; set; } Property Value Type Description IUnitConverter Methods | Improve this Doc View Source CanProject() Declaration public bool CanProject() Returns Type Description Boolean | Improve this Doc View Source GetScaleBarLengthAndText(IReadOnlyViewport) Calculates the length and text for both scalebars Declaration public (float scaleBarLength1, string? scaleBarText1, float scaleBarLength2, string? scaleBarText2) GetScaleBarLengthAndText(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Returns Type Description (, , , ) < Single , Nullable < String >, Single , Nullable < String >> Length of upper scalebar Text of upper scalebar Length of lower scalebar Text of lower scalebar | Improve this Doc View Source GetScaleBarLinePositions(IReadOnlyViewport, Single, Single, Single) Get pairs of points, which determine start and stop of the lines used to draw the scalebar Declaration public IReadOnlyList<MPoint> GetScaleBarLinePositions(IReadOnlyViewport viewport, float scaleBarLength1, float scaleBarLength2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport of the map Single scaleBarLength1 Length of upper scalebar Single scaleBarLength2 Length of lower scalebar Single stroke Width of line Returns Type Description IReadOnlyList < MPoint > Array with pairs of Points. First is always the start point, the second is the end point. | Improve this Doc View Source GetScaleBarTextPositions(IReadOnlyViewport, MRect, MRect, MRect, Single) Calculates the top-left-position of upper and lower text Declaration public (float posX1, float posY1, float posX2, float posY2) GetScaleBarTextPositions(IReadOnlyViewport viewport, MRect textSize, MRect textSize1, MRect textSize2, float stroke) Parameters Type Name Description IReadOnlyViewport viewport The viewport MRect textSize Default text size for the string \"9999 m\" MRect textSize1 Size of upper text of scalebar MRect textSize2 Size of lower text of scalebar Single stroke Width of line Returns Type Description (, , , ) < Single , Single , Single , Single > posX1 as left position of upper scalebar text posY1 as top position of upper scalebar text posX2 as left position of lower scalebar text posY2 as top position of lower scalebar text | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > Implements IWidget INotifyPropertyChanged"
  },
  "api/Mapsui.Widgets.TextBox.html": {
    "href": "api/Mapsui.Widgets.TextBox.html",
    "title": "Class TextBox",
    "keywords": "Class TextBox Inheritance Object Widget TextBox Hyperlink Implements IWidget Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Widget.HandleWidgetTouched(INavigator, MPoint) Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class TextBox : Widget, IWidget Properties | Improve this Doc View Source BackColor Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CornerRadius Declaration public int CornerRadius { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PaddingX Declaration public int PaddingX { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PaddingY Declaration public int PaddingY { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Text Declaration public string? Text { get; set; } Property Value Type Description Nullable < String > | Improve this Doc View Source TextColor Declaration public Color TextColor { get; set; } Property Value Type Description Color Implements IWidget"
  },
  "api/Mapsui.Widgets.VerticalAlignment.html": {
    "href": "api/Mapsui.Widgets.VerticalAlignment.html",
    "title": "Enum VerticalAlignment",
    "keywords": "Enum VerticalAlignment Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public enum VerticalAlignment : int Fields Name Description Bottom Center Top"
  },
  "api/Mapsui.Widgets.Widget.html": {
    "href": "api/Mapsui.Widgets.Widget.html",
    "title": "Class Widget",
    "keywords": "Class Widget Inheritance Object Widget ButtonWidget PerformanceWidget ScaleBarWidget TextBox ZoomInOutWidget Implements IWidget Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public abstract class Widget : object, IWidget Properties | Improve this Doc View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Envelope Declaration public MRect Envelope { get; set; } Property Value Type Description MRect | Improve this Doc View Source HorizontalAlignment Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Improve this Doc View Source MarginX Declaration public float MarginX { get; set; } Property Value Type Description Single | Improve this Doc View Source MarginY Declaration public float MarginY { get; set; } Property Value Type Description Single | Improve this Doc View Source VerticalAlignment Declaration public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Methods | Improve this Doc View Source CalculatePositionX(Single, Single, Single) Declaration public float CalculatePositionX(float left, float right, float width) Parameters Type Name Description Single left Single right Single width Returns Type Description Single | Improve this Doc View Source CalculatePositionY(Single, Single, Single) Declaration public float CalculatePositionY(float top, float bottom, float height) Parameters Type Name Description Single top Single bottom Single height Returns Type Description Single | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public abstract bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Implements IWidget"
  },
  "api/Mapsui.Widgets.WidgetTouch.html": {
    "href": "api/Mapsui.Widgets.WidgetTouch.html",
    "title": "Class WidgetTouch",
    "keywords": "Class WidgetTouch Inheritance Object WidgetTouch Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public static class WidgetTouch : object Methods | Improve this Doc View Source GetTouchedWidget(MPoint, MPoint, IEnumerable<IWidget>) Gets the widget selected by touch positions Declaration public static IEnumerable<IWidget> GetTouchedWidget(MPoint screenPosition, MPoint startScreenPosition, IEnumerable<IWidget> widgets) Parameters Type Name Description MPoint screenPosition The screen position in device independent units (or DIP or DP) MPoint startScreenPosition The start screen position in device independent units (or DIP or DP) IEnumerable < IWidget > widgets The widgets to select from. Returns Type Description IEnumerable < IWidget > Returns the first Widget in the list that contains the screenPosition within it's Envelope. Returns null if there are none."
  },
  "api/Mapsui.Widgets.WidgetTouchedEventArgs.html": {
    "href": "api/Mapsui.Widgets.WidgetTouchedEventArgs.html",
    "title": "Class WidgetTouchedEventArgs",
    "keywords": "Class WidgetTouchedEventArgs Inheritance Object WidgetTouchedEventArgs Namespace : Mapsui.Widgets Assembly : Mapsui.dll Syntax public class WidgetTouchedEventArgs : EventArgs Constructors | Improve this Doc View Source WidgetTouchedEventArgs(MPoint) Declaration public WidgetTouchedEventArgs(MPoint position) Parameters Type Name Description MPoint position Properties | Improve this Doc View Source Handled True, if this Widget had handled this event Declaration public bool Handled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Position Declaration public MPoint Position { get; } Property Value Type Description MPoint"
  },
  "api/Mapsui.Widgets.Zoom.html": {
    "href": "api/Mapsui.Widgets.Zoom.html",
    "title": "Namespace Mapsui.Widgets.Zoom",
    "keywords": "Namespace Mapsui.Widgets.Zoom Classes ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Enums Orientation"
  },
  "api/Mapsui.Widgets.Zoom.Orientation.html": {
    "href": "api/Mapsui.Widgets.Zoom.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public enum Orientation : int Fields Name Description Horizontal Vertical"
  },
  "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html": {
    "href": "api/Mapsui.Widgets.Zoom.ZoomInOutWidget.html",
    "title": "Class ZoomInOutWidget",
    "keywords": "Class ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Inheritance Object Widget ZoomInOutWidget Implements IWidget INotifyPropertyChanged Inherited Members Widget.HorizontalAlignment Widget.VerticalAlignment Widget.MarginX Widget.MarginY Widget.Envelope Widget.Enabled Widget.CalculatePositionX(Single, Single, Single) Widget.CalculatePositionY(Single, Single, Single) Namespace : Mapsui.Widgets.Zoom Assembly : Mapsui.dll Syntax public class ZoomInOutWidget : Widget, IWidget Properties | Improve this Doc View Source BackColor Color of background Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Opacity Opacity of background, frame and signs Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source Orientation Orientation of buttons Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source Size Width and height of buttons Declaration public float Size { get; set; } Property Value Type Description Single | Improve this Doc View Source StrokeColor Color of button frames Declaration public Color StrokeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source TextColor Color of \"+\" and \"-\" sign Declaration public Color TextColor { get; set; } Property Value Type Description Color Methods | Improve this Doc View Source HandleWidgetTouched(INavigator, MPoint) Declaration public override bool HandleWidgetTouched(INavigator navigator, MPoint position) Parameters Type Name Description INavigator navigator MPoint position Returns Type Description Boolean Overrides Widget.HandleWidgetTouched(INavigator, MPoint) Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description Nullable < PropertyChangedEventHandler > | Improve this Doc View Source WidgetTouched Event handler which is called, when buttons are touched. If there isn't one, than the default handler is used, which change the Resolution of Viewport. Declaration public event EventHandler<WidgetTouchedEventArgs>? WidgetTouched Event Type Type Description Nullable < EventHandler < WidgetTouchedEventArgs >> Implements IWidget INotifyPropertyChanged"
  },
  "api/System.Collections.ObjectModel.html": {
    "href": "api/System.Collections.ObjectModel.html",
    "title": "Namespace System.Collections.ObjectModel",
    "keywords": "Namespace System.Collections.ObjectModel Classes ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed."
  },
  "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html": {
    "href": "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html",
    "title": "Class ObservableRangeCollection<T>",
    "keywords": "Class ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed. Inheritance Object ObservableRangeCollection<T> Namespace : System.Collections.ObjectModel Assembly : Mapsui.UI.Maui.dll Syntax public class ObservableRangeCollection<T> : ObservableCollection<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableRangeCollection() Initializes a new instance of ObservableCollection that is empty and has default initial capacity. Declaration public ObservableRangeCollection() | Improve this Doc View Source ObservableRangeCollection(IEnumerable<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied. Declaration public ObservableRangeCollection(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The collection whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the collection. | Improve this Doc View Source ObservableRangeCollection(List<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list Declaration public ObservableRangeCollection(List<T> list) Parameters Type Name Description List <T> list The list whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the list. Methods | Improve this Doc View Source AddRange(IEnumerable<T>) Adds the elements of the specified collection to the end of the . Declaration public void AddRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The collection whose elements should be added to the end of the . The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. | Improve this Doc View Source ClearItems() Called by base class Collection<T> when the list is being cleared; raises a CollectionChanged event to any listeners. Declaration protected override void ClearItems() | Improve this Doc View Source DeferEvents() Declaration protected virtual IDisposable DeferEvents() Returns Type Description IDisposable | Improve this Doc View Source InsertRange(Int32, IEnumerable<T>) Inserts the elements of a collection into the at the specified index. Declaration public void InsertRange(int index, IEnumerable<T> collection) Parameters Type Name Description Int32 index The zero-based index at which the new elements should be inserted. IEnumerable <T> collection The collection whose elements should be inserted into the List{T}. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. | Improve this Doc View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Raise CollectionChanged event to any listeners. Properties/methods modifying this ObservableCollection will raise a collection changed event through this virtual method. Declaration protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e) Parameters Type Name Description NotifyCollectionChangedEventArgs e Remarks When overriding this method, either call its base implementation or call to guard against reentrant collection changes. | Improve this Doc View Source RemoveAll(Predicate<T>) Iterates over the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(Predicate<T> match) Parameters Type Name Description Predicate <T> match Returns Type Description Int32 Returns the number of elements that where Remarks The complexity is O(n). | Improve this Doc View Source RemoveAll(Int32, Int32, Predicate<T>) Iterates over the specified range within the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(int index, int count, Predicate<T> match) Parameters Type Name Description Int32 index The index of where to start performing the search. Int32 count The number of items to iterate on. Predicate <T> match Returns Type Description Int32 Returns the number of elements that where Remarks The complexity is O(n). | Improve this Doc View Source RemoveRange(IEnumerable<T>) Removes the first occurence of each item in the specified collection from the . Declaration public void RemoveRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The items to remove. | Improve this Doc View Source RemoveRange(Int32, Int32) Removes a range of elements from the >. Declaration public void RemoveRange(int index, int count) Parameters Type Name Description Int32 index The zero-based starting index of the range of elements to remove. Int32 count The number of elements to remove. | Improve this Doc View Source ReplaceRange(IEnumerable<T>) Clears the current collection and replaces it with the specified collection, using the default . Declaration public void ReplaceRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable <T> collection The items to fill the collection with, after clearing it. | Improve this Doc View Source ReplaceRange(IEnumerable<T>, IEqualityComparer<T>) Clears the current collection and replaces it with the specified collection, using the specified comparer to skip equal items. Declaration public void ReplaceRange(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description IEnumerable <T> collection The items to fill the collection with, after clearing it. IEqualityComparer <T> comparer An to be used to check whether an item in the same location already existed before, which in case it would not be added to the collection, and no event will be raised for it. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>) Removes the specified range and inserts the specified collection, ignoring equal items (using ). Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection) Parameters Type Name Description Int32 index The index of where to start the replacement. Int32 count The number of items to be replaced. IEnumerable <T> collection The collection to insert in that location. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>, IEqualityComparer<T>) Removes the specified range and inserts the specified collection in its position, leaving equal items in equal positions intact. Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description Int32 index The index of where to start the replacement. Int32 count The number of items to be replaced. IEnumerable <T> collection The collection to insert in that location. IEqualityComparer <T> comparer The comparer to use when checking for equal items. | Improve this Doc View Source SetItem(Int32, T) Called by base class Collection<T> when an item is set in list; raises a CollectionChanged event to any listeners. Declaration protected override void SetItem(int index, T item) Parameters Type Name Description Int32 index T item"
  },
  "documentation/async-fetching.html": {
    "href": "documentation/async-fetching.html",
    "title": "Asynchronous Data Fetching",
    "keywords": "Asynchronous Data Fetching Some background To get smooth performance while panning and zooming data needs to be fetched on a background thread. Even if it is fetched on a background thread it will use resources which could be noticible in the responsiveness of the map. The asyncronous data fetching of Mapsui tries to take this into account to optimize the user experience. ChangeType (ChangeType was introduced in V3, in V2 the majorType boolean has this purpose) When calling the RefreshData method on the layers we pass in a ChangeType parameter which could be: Continous - During dragging, pinching zoom, or animations. Discrete - On zoom in/out button press, on touch up, or at the end of an animation. The layers itself decides how to respond to the refresh call. For different data types different strategies are used. TileLayer data fetching The diagram below shows how the TileLayers data fetcher works. The data fetcher runs on a background thread. The UI and Fetcher communicate through non blocking messages. Whenever the user pans or zooms a View Changed message is sent to the Fetcher. This will trigger the fetcher to start fetching data. Whenever new data arrives a Data Changed message is sent to the UI so that it knows it should redraw the map. The fetcher dumps incoming data into a cache. The UI renderer retrieves whatever is needed from that cache when rendering, not taking into account what the data fetcher is doing. This loose coupling keeps things simple and flexible and the renderer never has to wait for the fetcher which results in a smooth (perceived) performance. Read/Write cache For rendering the cache is only read. For data fetching the cache is primarily written but it is also needs to read the cache in order to know which data is already available and does not need to be fetched. Strategies Both the fetcher and the renderer can use some smart tricks to optimize the experience, for example: The fetcher can pre‐fetch tiles that are not directly needed but could be in the future. The renderer could search for alternative tiles (higher or lower levels) when the optimal tiles are not available. The implementation of these strategies can be overridden by the user by implementing interfaces that can be passed into the TileLayer constructor. The IDataFetchStrategy (IFetchStrategy in V2) determines which tiles are fetched from the data source to be stored in the cache. There is a DataFetchStrategy default implementation and a MinimalDataFetchStrategy which only fetches the tiles directly needed. The IRenderFetchStrategy (IRenderGetStrategy in V2) determines which tiles are fetched from the cache to use for rendering. There is a RenderFetchStrategy default implementation and a MinimalRenderFetchStrategy which only fetches the tiles directly needed. Those strategies should be tuned to support each other. For instance, in the current implementation the renderer uses higher level tiles when the optimal tiles are not available, and the fetcher pre‐fetches higher level tiles to assist the renderer. The way they play together is not specified in the interface so developers should take this into account. Data fetching in other layers Other layers like the Layer and ImageLayer have their own implementation. They use a delay mechanism in fetching new data and ignore ChangeType.Continuous."
  },
  "documentation/contributors-guidelines.html": {
    "href": "documentation/contributors-guidelines.html",
    "title": "Mapsui Contributor Guidelines",
    "keywords": "Mapsui Contributor Guidelines Issue first Submit an issue before a pull request so we can discuss the possible solutions to the problem. Sign the Contributor License Agreement (CLA) To contribute you need to sign our CLA Complexity Complexity is the biggest problem in software development. The primary effort should be to keep the complexity low. Complexity can be caused by clueless spaghetti code but also by astronaut architectures . Keeping things simple is not easy but hard work. It involves thinking up several solutions to your problem weighing the pros and cons and moving it around and upside down to look for even better (simpler) solutions. Continuous Refactoring Mapsui has some older code in it. Don't despair. We continuously improve or replace older code. It is a gradual process. We do it step by step. We have made major changes in the past; From WinForms to WPF, From GDI+ to SL rendering. From .NET Framework to PCL. From PCL to .NET Standard. From WPF rendering to SkiaSharp. Add support for Xamarin.Forms. Future changes will include moving to NTS geometries, improving the Layers list. Taking these steps will cause breaking changes. We are aware of this and clearly communicate it with the user. We use semver so breaking changes go in to major version upgrades. All checks should be green all the time At all times: All projects should compile The unit tests should succeed All samples should run properly Use ReSharper Mapsui uses the resharper team settings by committing the DotSettings to git, so that all developers can use the same settings. We should have zero warnings. Suggestions should be treated as actual suggestions, use them only when you think it improves the code. Keep dependencies in the csproj and nuspec in sync If we upgrade a nuget package in the solution we should also upgrade the lower bound of the nuget package in the nuspec because this is what nuget installs. We want the user to get the same version as the one that we are working and testing with. example csproj <PackageReference Include=\"SkiaSharp\" Version=\"2.80.2\" /> exmple nuspec <dependency id=\"SkiaSharp\" version=\"[2.80.2,3.0.0)\"/> Keep our direct and indirect dependencies in sync When we have direct and indirect dependecies on a nuget package those should all refer to the same version. For instance we have a direct dependency on SkiaSharp, but we also use SvgSkia and RichTextKit and those have a dependency on SkiaSharp too. It would be optimal if all referred to the same version of SkiaSharp. This might not always be possible. Extension methods Extension methods should always be in a Extensions folder. They should be in a class that has the name '{ClassItExtends}Extensions'. It should be in a namespace that follows the folder name (so not in the namespace of the class it extends). Extensions of a collection (IEnumerable, List, Array etc) of a type should also be in the class that extends the individual type. Ordering of lon lat In our code we prefor a lon, lat order consistent with the x, y order of most cartographic projections. Some background: The order of lon and lat always causes a lot of confusion. The official notation is lat, lon, but in map projections the lat corresponds to the y-axis and the lon to the x-axis. This is confusing because in math the ordering is the other way around: x, y. In our code we need to translate the lat/lon to an X/Y coordinate to draw it on the map. In the constructor of such a point the x (lon) will be the first parameter. There is no way that this problem can be fundamentally solved, there will always be some confusion. To mitigate it we choose one way of ordering which is lon, lat (consistent with x, y). Also there are many ways in which we can avoid ordering altogher. For instance if we work with Longitude and Latitude properties. In the case of SphericalMercator.FromLonLat we use lon/lat in the method name to avoid confusion. No rendering in the draw/paint loop Mapsui strives for optiomal performance, so in the rendering loop the objects should be ready to be painted to canvas directly without any need for preparation. This is currently (4.0.0-beta.1) not the case. For instance in the case of tiles they are rendered on the first iteration, after that the cached version is used. This needs to be improved. About the terminology Rendering : Create a platform specific resource. SKPath path = ToSKPath(feature, style); Drawing or Painting : Draw the platform specific resource to the canvas. canvas.DrawPath(path, paint); Formatting We use .editorconfig and we should follow these settings. To apply it in Visual Studio you can select your file and run:: sln explorer menu | Analyze and Code Cleanup | Run Code Cleanup (Profile 1 of 2). You can configure which rules to apply in your profile. For xml (not supported by .editorconfig) two spaces indentation is used."
  },
  "documentation/custom-style-renders.html": {
    "href": "documentation/custom-style-renders.html",
    "title": "Custom Style Renderers",
    "keywords": "Custom Style Renderers Summary Mapsui 2.0 supports custom style renderers . This means a user can create a custom style and associate this with a custom style renderer to allow full freedom in rendering a feature the way the user would like. How it works Create a custom style by deriving a class from IStyle. Assign that style to an ILayer.Style or IFeature.Styles. Create a custom renderer by deriving a class from ISkiaStyleRenderer and implement the Draw method. Register the association of the custom style to the custom style renderer as in the line below. The consequence will be that if the Mapsui renderer detects this style it will call the Draw method on the style renderer. This is how you register the association of a custom style to a custom style renderer mapControl.Renderer.StyleRenderers.Add(typeof(CustomStyle), new SkiaCustomStyleRenderer()); This is the ISkiaStyleRenderer interface that you need to implement: public interface ISkiaStyleRenderer : IStyleRenderer { bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache); } The IFeature has a Geometry field. The renderer is responsible to cast the IFeature.Geometry to the type it intends to render. The IStyle is the custom style the user defined. It could contain extra style information not present in the default style classes. The user will need to cast that IStyle to the custom style to use this extra information. Code sample Look in the Mapsui source code for CustomStyleSample.cs. This is the most relevant code. In this sample the custom style contains no extra information, it is just an indication to use the associated custom renderer. It would be possible to add extra field like EarColor and NoseSize to the custom style which could be used in the renderer. Remarks Note, that the renderer depends on the technology we use for the rendering implementation, in this case SkiaSharp. Currently we still support XAML as renderer but this may be removed in the future. We expect to support SkiaSharp for a long time but it may be replaced at some point. There are no such plans just yet."
  },
  "documentation/development-constraints.html": {
    "href": "documentation/development-constraints.html",
    "title": "Development constraints",
    "keywords": "Development constraints When developing for Mapsui we take into account the following constraints. Not limited to certain coordinate system Mapsui's Map can be in any coordinate system. If you do not specify a coordinate system in the Map and Layers it assumes they are in the same coordinate system (whatever they are). In this case it only transforms these unspecified 'world-coordinates' to 'screen-coordinates' and nothing more. It is also possible to setup a coordinate transformation system using Map.CRS, DataSource.CRS and Map.Transformation. See projections . Full implementation of the feature matrix These are some of the feature dimensions: Renderers: WPF and Skia Geometries: Point, LineString, Polygon etc. Operations on Geometries: Distance, Contains. Coordinate projection support Style: fill color, line color, line cap, symbol opacity, symbol scale If we choose to support a feature each 'cell' of the multi dimensional matrix should be supported. No surprises for the user. Currently there are holes in the matrix on some point (like differences between WPF and Skia). The current focus is to fill these holes. If this support does not seem attainable (is that proper English?) but does seem very useful we should look for ways to make Mapsui extendable Write clear, simple and little code Maintenance is enemy that can bring a project like this to a halt. We should look for ways to implement the functionality with the simplest possible code."
  },
  "documentation/device-independent-units.html": {
    "href": "documentation/device-independent-units.html",
    "title": "Device Independent Units",
    "keywords": "Device Independent Units Modern devices have a very high resolution. If something is drawn onto the canvas using raw pixels as coordinates the fonts would become tiny and unreadable and lines would become very thin. To correct for this a scale factor is used. Those scaled-up coordinates are called device independent units. Most of the time users deal with the device independent units. In some context they are also called device independent pixels, or dip, or dp. Device Independent Units in SkiaSharp The scale in skia has caused some confusion in the past and bugs as a consequence. So here some extra information on this topic. This is mainly targetted at contributors, users of the Mapsui nugets do not need to know about this. Most (all?) views in SkiaSharp use pixels as coordinates by default but for our purposes we need to use device independent units, so we need to correct for this. We do this by setting the scale of skia's SKCanvas. This needs to be done in the render loop because it is the only place where we have access to the SKCanvas. Also the size of the map needs to be adjusted at that point, otherwise we would draw outsize the screen."
  },
  "documentation/documentation.html": {
    "href": "documentation/documentation.html",
    "title": "Documentation",
    "keywords": "Documentation Documentation setup We use docfx to generate the documentation. There is a /docfx folder with a docfx project called Mapsui. This projects documenation folder contains all the md files used to generate the 'documentation' tab in the site. This is the source of those files, they should be edited there. In the docfx folder there is a script (build-site.cmd) that generates the documentation site (in /docfx/mapsui/_site) and copies it to the /docs folder. The Mapsui project on github is configured to automatically publish this docs folder to https://mapsui.github.io/mapsui A commit of an md file should trigger the build server. This should run the build-site.cmd. This should commit the generated site to the repo. It will when then show up on the website. We should have two separate build configurations one for the docs which ignores the project and one for the project which ignores the docs. Documentation guidelines All md files should be in lower case. All md files should be directly in the root of /docfx. Hierachy is created by indenting page references in the toc.md in the documenation folder. By keeping the files itself in the root it is easier to change the hierarchy later one - you do not need to move the files as well - and easier to get contributers to follow the guidelines. All md files should start with a header one (#) and should have no other header one in that file. All the headers in the toc should be equal to the header one in the file it points to. Mapsui is cased as Mapsui not MapsUI. We should iteratively improve the documentation. If questions are asked in the issues we should search for the answer in the documentation. Update the documentation when it is missing and answer the issue with a url to the documentation. Writing documentation is not only useful to inform the user but also as a sanity check for the developer. If what you have to tell becomes complicated and hard to grasp this could mean the software is not well designed. Writing documentation early should be used as a part of the software development process."
  },
  "documentation/faq.html": {
    "href": "documentation/faq.html",
    "title": "Frequently Asked Questions",
    "keywords": "Frequently Asked Questions The openstreetmap layer does not show The most common reason is that the default user-agent used by the osm layer is blocked. The default user-agent gets blocked by osm at some point because there is always someone somewhere abusing the api. Within your app you need to use a user-agent that is specific to your app. We change the user agent from time to time so that the samples work but it will probably get blocked again at some point. Better not to wait until that happens and create you own user-agent right away. MapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); Why is all my data in a small area near the west coast of Africa? This is because the background data is in SphericalMercator (it is in the SphericalMercator coordinate system) and the foreground data is in WGS84 (latlon). Use SphericalMercator.FromLonLat to transform it. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. Why does NavigateTo zoom into an area near the west coast of Africa? This is because the coordinates you pass to NavigateTo are in WGS84 whereas the background data is in SphericalMercator. Use SphericalMercator.FromLonLat to transform the NavigateTo arguments to SphericalMercator. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. How can I get rid of the white dots or black lines? In Mapsui v1 and v2 a layer is created with a default style ( Layer.Style ). This style applies to all features in the layer. You need to set the Style field to null if you do not want to use it ( Layer.Style = null ). The default style shows as a white dot on Point geometries and a black line on LineStrings and Polygons. Since most users work with styles on the feature they are not aware of the style on the layer , this make the default style confusing and it should be removed in v3."
  },
  "documentation/getting-started-android.html": {
    "href": "documentation/getting-started-android.html",
    "title": "Mapsui Android getting started",
    "keywords": "Mapsui Android getting started Step 1 Create 'Blank App (Android)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.Android -pre Step 3 In Resources/layout/Main.axml add Mapsui.UI.Android.MapControl: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <Mapsui.UI.Android.MapControl android:id=\"@+id/mapcontrol\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </LinearLayout> Step 4 In MainActivity.cs add MapControl after SetContentView(Resource.Layout.Main): protected override void OnCreate(Bundle savedInstanceState) { base.OnCreate(savedInstanceState); // Set our view from the \"main\" layout resource SetContentView(Resource.Layout.Main); var mapControl = FindViewById<MapControl>(Resource.Id.mapcontrol); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; } Add the following using statements: using Mapsui; using Mapsui.Utilities; using Mapsui.UI.Android; Step 5: Run it and you should see a map of the world."
  },
  "documentation/getting-started-avalonia.html": {
    "href": "documentation/getting-started-avalonia.html",
    "title": "Mapsui Avalonia getting started",
    "keywords": "Mapsui Avalonia getting started Step 1 Create a new Avalonia application in your IDE. You may need to install Avalonia IDE support . Step 2 In the package manager console type: PM> Install-Package Mapsui.Avalonia -pre Step 3 In MainWindow.axaml.cs add this to the constructor after InitializeComponent():: var mapControl = new Mapsui.UI.Avalonia.MapControl(); mapControl.Map?.Layers.Add(Mapsui.Tiling.OpenStreetMap.CreateTileLayer()); Content = mapControl; Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-eto.html": {
    "href": "documentation/getting-started-eto.html",
    "title": "Mapsui Eto getting started",
    "keywords": "Mapsui Eto getting started Step 1 Start a new Eto.Forms application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui.Eto -pre Step 3 In MainForm.cs add this to the class constructor: var mapControl = new Mapsui.UI.Eto.MapControl(); mapControl.Map.Layers.Add(Mapsui.Tiling.OpenStreetMap.CreateTileLayer()); Content = mapControl; Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-ios.html": {
    "href": "documentation/getting-started-ios.html",
    "title": "Mapsui iOS Getting Started",
    "keywords": "Mapsui iOS Getting Started Step 1 Create new 'Single View App' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.iOS -pre Step 3 Open ViewController.cs add namespaces: using Mapsui; using Mapsui.UI.iOS; using Mapsui.Utilities; add code to ViewDidLoad() method: public override void ViewDidLoad() { base.ViewDidLoad(); var mapControl = new MapControl(View.Bounds); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; View = mapControl; } Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-maui.html": {
    "href": "documentation/getting-started-maui.html",
    "title": "Mapsui MAUI getting started",
    "keywords": "Mapsui MAUI getting started Step 1 Start a new MAUI application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui.Maui -pre Step 3 In MauiProgram.cs add .UseSkiaSharp() to the builder like this: builder .UseMauiApp<App>() .UseSkiaSharp() .ConfigureFonts(fonts => and add namespace 'SkiaSharp.Views.Maui.Controls.Hosting': using SkiaSharp.Views.Maui.Controls.Hosting; This is because Mapsui depends on SkiaSharp which needs this call. We hope that this will not be necessary in a future version of Mapsui.Maui. Without this line the app will crash with this exception: \"Catastrophic failure (0x8000FFFF (E_UNEXPECTED))\". Step 4 In MainPage.xaml.cs replace the constuctor with this code: public MainPage() { InitializeComponent(); var mapControl = new Mapsui.UI.Maui.MapControl(); mapControl.Map?.Layers.Add(Mapsui.Tiling.OpenStreetMap.CreateTileLayer()); Content = mapControl; } Step 5 Run it and you should see a map of the world."
  },
  "documentation/getting-started-uno.html": {
    "href": "documentation/getting-started-uno.html",
    "title": "Mapsui Uno Getting Started",
    "keywords": "Mapsui Uno Getting Started Uno Preparation https://platform.uno/docs/articles/get-started-vs.html Step 1 Create new 'Uno App (Xamarin,UWP)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.Uno -pre repeat this for all the targets you are using (Change the default Project in the Package Manager Console) Step 3 Open MainPage.xaml and add namespace: xmlns:mapsui=\"clr-namespace:Mapsui.UI.Uwp;assembly=Mapsui.UI.Uno\" Add MapControl to the Grid: <Grid> <mapsui:MapControl x:Name=\"MyMap\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MyMap.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); } Step 4 Run it and you should see a map of the world. Troubleshooting Unable to resolve the .NET SDK version as specified in the global.json. global.json (change the version to \"6.0.400\" or what is installed on the Computer) Duplicate Attribute errors: Add following line to the ...Wpf.csproj. <!-- Work around https://github.com/dotnet/wpf/issues/6792 --> <ItemGroup> <FilteredAnalyzer Include=\"@(Analyzer->Distinct())\" /> <Analyzer Remove=\"@(Analyzer)\" /> <Analyzer Include=\"@(FilteredAnalyzer)\" /> </ItemGroup> </Target> System.MissingMethodException: Method not found: See for solution here https://github.com/unoplatform/uno/issues/9297 Upgrading to the latest Uno.UI Dev Version should help too."
  },
  "documentation/getting-started-uno-winui.html": {
    "href": "documentation/getting-started-uno-winui.html",
    "title": "Mapsui Uno Getting Started",
    "keywords": "Mapsui Uno Getting Started Uno Preparation https://platform.uno/docs/articles/get-started-vs.html Step 1 Create new 'Uno Platform App' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.Uno.WinUI -pre repeat this for all the targets you are using (Change the default Project in the Package Manager Console) Step 3 Open MainPage.xaml and add namespace: xmlns:mapsui=\"clr-namespace:Mapsui.UI.WinUI;assembly=Mapsui.UI.Uno.WinUI\" Add MapControl to the Grid: <Grid> <mapsui:MapControl x:Name=\"MyMap\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MyMap.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); } Step 4 Run it and you should see a map of the world. Troubleshooting Unable to resolve the .NET SDK version as specified in the global.json. global.json (change the version to \"6.0.400\" or what is installed on the Computer) Duplicate Attribute errors: Add following line to the ...Wpf.csproj. <!-- Work around https://github.com/dotnet/wpf/issues/6792 --> <ItemGroup> <FilteredAnalyzer Include=\"@(Analyzer->Distinct())\" /> <Analyzer Remove=\"@(Analyzer)\" /> <Analyzer Include=\"@(FilteredAnalyzer)\" /> </ItemGroup> </Target> System.MissingMethodException: Method not found: See for solution here https://github.com/unoplatform/uno/issues/9297 Upgrading to the latest Uno.UI Dev Version should help too."
  },
  "documentation/getting-started-winui.html": {
    "href": "documentation/getting-started-winui.html",
    "title": "Mapsui WinUI Getting Started",
    "keywords": "Mapsui WinUI Getting Started Step 1 Create new 'Blank App. Packaged (WinUI 3 in Desktop)' in Visual Studio Step 2 In the package manager console type: PM> Install-Package Mapsui.WinUI -pre Step 3 Open MainPage.xaml and add namespace: xmlns:winui=\"using:Mapsui.UI.WinUI\" Add MapControl to the Grid: <Grid> <winui:MapControl x:Name=\"MyMap\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MyMap.Map.Layers.Add(OpenStreetMap.CreateTileLayer()); } Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-wpf.html": {
    "href": "documentation/getting-started-wpf.html",
    "title": "Mapsui WPF getting started",
    "keywords": "Mapsui WPF getting started Step 1 Start a new WPF application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui.Wpf -pre Step 4 In MainWindow.xaml.cs add in the constructor after InitializeComponent(): var mapControl = new Mapsui.UI.Wpf.MapControl(); mapControl.Map?.Layers.Add(Mapsui.Tiling.OpenStreetMap.CreateTileLayer()); Content = mapControl; Step 4 Run it and you should see a map of the world."
  },
  "documentation/getting-started-xamarin-forms.html": {
    "href": "documentation/getting-started-xamarin-forms.html",
    "title": "Mapsui for Xamarin.Forms getting started",
    "keywords": "Mapsui for Xamarin.Forms getting started Step 1 Create a normal Xamarin.Forms project Step 2 In the package manager console type: PM> Install-Package Mapsui.Forms -pre Step 3 Add the line xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" to the Xaml file Step 4 Add the Mapsui.Forms view with <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> to the Xaml part file. Nest the MapView element inside a container, this child element needs to be placed inside a parent Layout for the view to be correctly setup and attached to the code behind, for instance, <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" mc:Ignorable=\"d\"> <StackLayout> <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> </StackLayout> </ContentPage> the Xaml file should look similar to this after this step. Step 5 Add in the code behind the following var map = new Map { CRS = \"EPSG:3857\", Transformation = new MinimalTransformation() }; var tileLayer = OpenStreetMap.CreateTileLayer(); map.Layers.Add(tileLayer); map.Widgets.Add(new Widgets.ScaleBar.ScaleBarWidget(map) { TextAlignment = Widgets.Alignment.Center, HorizontalAlignment = Widgets.HorizontalAlignment.Left, VerticalAlignment = Widgets.VerticalAlignment.Bottom }); mapView.Map = map; Step 6 Run it and you should see a map of the world."
  },
  "documentation/home.html": {
    "href": "documentation/home.html",
    "title": "Introduction",
    "keywords": "Introduction Mapsui is a .NET component to show a map in your app. Supported platforms in v3 Xamarin.Forms WPF UWP Xamarin.Android Xamarin.iOS Upcoming in v4 Avalonia Eto.Forms MAUI Uno platform Win UI Supported data Points, Lines and Polygons. Mapsui uses the BruTile library to display tile layers such as: OpenStreetMap tiles WMTS TMS WMS MBTiles. An offline format to store tile data in sqlite file."
  },
  "documentation/how-to-work-with-mapsui.html": {
    "href": "documentation/how-to-work-with-mapsui.html",
    "title": "How to Work with Mapsui",
    "keywords": "How to Work with Mapsui Logging Sooner or later there comes a time where you are struggling with a bug. You can save yourself some time by writing the Mapsui log events to your own log from the start of your project. In Mapsui errors and warnings are logged to a static class which has an event handler you can listen to. Mapsui.Logging.Logger.LogDelegate += (level, message, ex) => // todo: Write to your own logger; Extension of Mapsui If you need more functionality from the MapControl you could create your own version of the MapControl by making a copy. You can customize these for your own needs. While it is also possible to extend functionality by adding your own ILayer or IProvider implementation. If you encounter breaking changes please take a look at the release notes . You can check the related commits by clicking the 'x commits to masters since this release' of the previous release (a bit odd but that is how github works)."
  },
  "documentation/logging.html": {
    "href": "documentation/logging.html",
    "title": "Logging",
    "keywords": "Logging Sooner or later there comes a time where you are struggling with a bug. You can save yourself some time by writing the Mapsui log events to your own log from the start of your project. In Mapsui errors and warnings are logged to a static class which has an event handler you can listen to. Mapsui.Logging.Logger.LogDelegate += (level, message, ex) => // todo: Write to your own logger; This is an example of how to forward it to Microsoft.Extensions.Logging.ILogger public static void AttachMapsuiLogging(this IServiceProvider serviceProvider) { var logger = serviceProvider.GetRequiredService<ILogger<MyLoggerCategory>>(); var mapsuiPrefix = \"[Mapsui]\"; Mapsui.Logging.Logger.LogDelegate += (level, message, ex) => { if (level == Mapsui.Logging.LogLevel.Error) logger.LogError(ex, $\"{mapsuiPrefix} {message}\"); else if (level == Mapsui.Logging.LogLevel.Warning) logger.LogWarning(ex, $\"{mapsuiPrefix} {message}\"); else if (level == Mapsui.Logging.LogLevel.Information) logger.LogInformation(ex, $\"{mapsuiPrefix} {message}\"); else if (level == Mapsui.Logging.LogLevel.Debug) logger.LogDebug(ex, $\"{mapsuiPrefix} {message}\"); else if (level == Mapsui.Logging.LogLevel.Trace) logger.LogTrace(ex, $\"{mapsuiPrefix} {message}\"); }; }"
  },
  "documentation/mapsui-components.html": {
    "href": "documentation/mapsui-components.html",
    "title": "Mapsui Components",
    "keywords": "Mapsui Components If you install the NuGet package into your app these assemblies are added: Mapsui.UI.{platform} - Platform specific UI. Contains the MapControl Mapsui.Rendering.Skia Mapsui Mapsui.Geometries On Windows desktop Mapsui.Rendering.Xaml is added. A number of nuget dependencies Mapsui Parts There are three important classes that you will deal with MapControl This is the UI component that you add to you project. Map Holds all information about the map like layers and widgets. Viewport Holds all information about the part of the map that is visible on the screen like center, extent, rotation, resolution and so on. It is created automatically when Map is created. You can access it with MapControl.Map.Viewport."
  },
  "documentation/mapsui-forms.html": {
    "href": "documentation/mapsui-forms.html",
    "title": "Mapsui.Forms",
    "keywords": "Mapsui.Forms Mapsui can be used on Xamarin.Forms with the Mapsui.Forms nuget package. Mapsui.Forms is a 'native' Xamarin.Forms implementation, meaning it does not use Xamarin.Forms Renderers around platform specific components but implements a Xamarin.Forms implementation instead. Mapsui.Forms uses SkiaSharp.Views.Forms to display the map on the device. This works for iOS, Android, UWP and Mac OS. On WPF there still is an issue with placing controls over the Map. To get started see getting started with Xamarin.Forms ."
  },
  "documentation/nuget-of-latest-build.html": {
    "href": "documentation/nuget-of-latest-build.html",
    "title": "NuGet of Latest Build",
    "keywords": "NuGet of Latest Build On every commit the build server is triggered which publishes a NuGet package of that build. It's version number is the current version of the master branch followed by a dot and the build number. The package is not published to nuget.org but to a AppVeyor feed. You can see the latest packages here . You need to add this feed to be able to install the package to your project. Add the feed in Visual Studio Add the feed in tools | options | nuget | package sources https://ci.appveyor.com/nuget/mapsui Install the package PM> nuget install-package mapsui -source https://ci.appveyor.com/nuget/mapsui -pre This installs only the mapsui core package but you could install any other package this way. Build your own nuget package It is also possible to build you own nuget package locally by running scripts\\buildpack.bat 3.0.0-custom.1 from the sln folder. You can set the file location as a Package Source in visual studio."
  },
  "documentation/performance-widget.html": {
    "href": "documentation/performance-widget.html",
    "title": "PerformanceWidget",
    "keywords": "PerformanceWidget Summary Mapsui 3.0 supports a widget, that could show the main performance values for drawing the map. How it works Create a new Performance object for the MapControl, where the values could be stored if (mapControl.Performance == null) mapControl.Performance = new Utilities.Performance(10); Create the PerformanceWidget. As parameter you have to provide the Performance object, that the widget should be use var widget = new Widgets.Performance.PerformanceWidget(mapControl.Performance); If you want to clear all values of the Performance object, then add the following event handler for the touch event of the widget widget.WidgetTouched += (sender, args) => { mapControl?.Performance.Clear(); mapControl?.RefreshGraphics(); args.Handled = true; }; Add the widget to the list of known widgets mapControl.Map.Widgets.Add(widget); To draw the widget on the screen, we need a widget renderer. To use the default widget renderer, use the following lines mapControl.Renderer.WidgetRenders[typeof(Widgets.Performance.PerformanceWidget)] = new Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer(10, 10, 12, SkiaSharp.SKColors.Black, SkiaSharp.SKColors.White); The first two parameters are the X and Y coordiantes for the widget. Third parameter is the text size. Fourth is the text color and fifth is the background color. Code copy if (mapControl.Performance == null) mapControl. Performance = new Utilities.Performance(); var widget = new Widgets.Performance.PerformanceWidget(mapControl.Performance); widget.WidgetTouched += (sender, args) => { mapControl?.Performance.Clear(); mapControl?.RefreshGraphics(); args.Handled = true; }; mapControl.Map.Widgets.Add(widget); mapControl.Renderer.WidgetRenders[typeof(Widgets.Performance.PerformanceWidget)] = new Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer(10, 10, 12, SkiaSharp.SKColors.Black, SkiaSharp.SKColors.White); Values Last Time for drawing of the last screen. Be careful: because the widget is drawn together with the screen, this time is the time for the screen drawn before the screen you see. Mean The mean value is the mean of the last x draws. x is the number, you provide when creating the Performance object. Frames per second This is the number of frames that could be drawn with the actual mean drawing time. Minimum Fastest draw of the screen. Maximum Slowest draw of the screen. Count How often the screen is drawn. Dropped How often the screen isn't invalidated, because a drawing is still in progress. Remarks The Performance object contains the times between start and end of a drawing process. This must not be the real drawing time. It could be, that other tasks running in between the drawing process."
  },
  "documentation/projections.html": {
    "href": "documentation/projections.html",
    "title": "Projections",
    "keywords": "Projections A geospatial projection is the transformation of coordinates in one coordinate system to another coordinate system. If all your data is in one coordinate system there is no need for projection. With a geospectial projection we do not mean transforming spatial coordinates to pixel positions on screen. To distinguish it from that kind of transformation we use the term projection instead of transformation for geospatial projections in Mapsui, although these words mean rougly the same. Some background on projections The topic of geospatial projections is complicated. Users of Mapsui have a wide variety of backgrounds. Some are experienced GIS users that just need to know how this specific map component works. Many others are app developers that just happen to need a map for their current app. This makes it hard to explain things clear for everyone. Below are some basic concepts. I like this video introduction to map projections. Spatial Reference System (CRS) In geospatial there is a standard way to refer to a coordinate systems, the CRS (coordinate reference system). We will use the term CRS to refer to a specific coordinate system. In Mapsui the Map and the IProvider have a CRS field to indicate their coordinate systems. Supported coordinate systems (CRSes) Out of the box Mapsui only supports the projection between two coordinate systems. EPSG:4326 or lat/lon, or WGS84. GPS coordinates are in lat/lon EPSG:3857 or SphericalMercator, or WebMercator, PseudoMercator. This is the coordinate system used in the maps of google and openstreetmap. It is however possible to create your own projection. You need to implement the IProjection interface. Within this implementation you need to use some other projection library. A recommended one is ProjNet4GeoAPI . Parts of Mapsui involved in projections Map : There is one Map. It is inevitably in some kind of coordinate system. Layers : There are several layers that provider data. The layers always need to return data in the coordinate system that the map is using. If not, different projections will be drawn on top of each other and things go wrong. Providers : Some Layers have a DataSource (Provider). This DataSource could contain data in another coordinate system. This data can be converted to the map coordinate system using the ProjectingProvider. The most common scenario If you use OpenStreetMap the map is in SphericalMercator. Often you have geodata in lat/lon, say a GPS track. The Map.CRS has to be set. If you use SphericalMercator set it to \"EPSG:3857\". The Provider.CRS has to be set. If the data is in lat/lon set it to \"EPSG:4326\". Wrap the Provider om the ProjectingProvider. Search the code samples for ProjectingProvider. With this setup the ProjectingProvider will do the projection for you. Another option is to do the projection yourself. You can use Mapsui's SphericalMerator.FromLonLat/ToLonLat to project the data before you add them to a Memorylayer and no CRSes need to be set. Remarks Mapsui is not capable of projecting images. So no projection of tiles as rasters. No attempt will be made to project and the CRS fields will be ignored. Sample"
  },
  "documentation/renderers.html": {
    "href": "documentation/renderers.html",
    "title": "Renderers",
    "keywords": "Renderers As of v4 Mapsui has only one renderer, Skia. We still use a renderer interface but there are no plans to add another renderer atm. Why use an IRenderer interface? If you know there is only one renderer why work with an interface. Some things can be simplified if you directly work with the implementation. Since it looks more and more like skiasharp will be the only renderer for as far as we can see we could just add that dependency to all our code and work directly with SkiaSharp classes, that may simplify some things. However, in the past we had to switch many times to different renderers, so I am not so sure if this won't happen again. So let's not settle for one renderer just yet. For context, these are the renderers Mapsui had in the past: System.Drawing System.Drawing for PocketPC Silverlight XAML WPF XAML UWP XAML (could later be merged with WPF XAML) iOS native rendering Android native rendering (this is actually internally using skia) OpenTK (this was not mature enough at that point) SkiaSharp"
  },
  "documentation/rendering-tests.html": {
    "href": "documentation/rendering-tests.html",
    "title": "Rendering Tests",
    "keywords": "Rendering Tests Mapsui has a way of testing rendering where a Map state is rendered to a bitmap. This bitmap is then compared to the original images which are stored as resource in the repository. This is thus a kind of regresssion test (1). If there are differences between these images the test will fail. If this is the case the developer needs to visually inspect the generated images (2). If the generated image is as expected and the original is not then the original needs to be overwritten. Regression tests Visual inspection. The regression tests are useful during refactoring when you expect no changes. When you are working on changes in the rendered output the regression tests will fail but the visual inspection of the output is still useful to check if this is as intended. 1. Regression tests The generated images are written to: {test project folder}\\bin\\Debug\\net6.0\\Resources\\Images\\Generated Those will be compared to the original images that were deployed in the build located here: {test project folder}\\bin\\Debug\\net6.0\\Resources\\Images\\Original\\ If after code changes there are expected changes in the generated files they should be committed to git so they need to be copied to: {test project folder}\\Resources\\Images\\Original\\ This can be done with a script: scripts\\test-image-copier.cmd . 2. Visual inspection There tests can be inspected in two ways. In the WPF sample there is a 'Tests' category, that shows an interactive version of the test sample. In the output folder (see above) the generated images can be viewed. Currently this folder looks like this:"
  },
  "documentation/resolution.html": {
    "href": "documentation/resolution.html",
    "title": "Resolution",
    "keywords": "Resolution In Mapsui the resolution is a value that indicates to what degree the map is zoomed in or zoomed out. A large value means you are zoomed out (see the whole world), a small value means you are zoomed in (looking at the details). The resolution of a viewport is its size in map coordinates (of the coordinate system used) devided by its size in pixels. If you use the openstreetmap background layer (or another layer in that coordinates system) the resolution is meters / pixel at the equator. The resolution of the Mapsui viewport The Viewport is an important class in Mapsui. It has a Resolution field. Its value can be directly derived from the coordinate extent and the size in pixels. So Viewport.Resolution will always be equal to Viewport.Extent.Width / Viewport.Width. The Viewport.Extent is in the units of the coordinate system (different apps can use different coordinate systems) and the Viewport.Width/Height is in pixels. The resolution in openstreetmap Mapsui's resolution concept is derived from the value for zoom levels used in openstreetmap tile schema . Openstreetmap uses the EPSG:3857 coordinate system (called SphericMercator within Mapsui). The full width of that coordinate system is 40075017 units. The top level tile in openstreetmap is 256x256 pixels. So the top level tile has a resolution of 40075017 / 256 = 156543 if is shown unscaled. Scale in meters / pixel in openstreetmap The coordinates of EPSG:3857 happen to be based on the circumference of the earth in meters at the equator which is 40075017 meters . This means that near the equator the units of EPSG:3875 are equal to meters. It starts to deviate when moving away from the equator. Also note that other coordinate systems can have completely different unit sizes. So the relation between the coordinate system used and meters is complicated. I am just interested in meters / pixel and don't care about the coordinate system That makes sense but at the moment there is no good solution for that in Mapsui. What makes this complicated: The meters / pixel can be different in the x and y direction because of distortion of the map projection. The meters / pixel can be different for different locations within a single map view. To implement this for a coordinate system we need projection support for that coordinate system, which we may not have. What is a pixel? When we talk about pixels on this page we mean device independent pixels or device independent units"
  },
  "documentation/roadmap.html": {
    "href": "documentation/roadmap.html",
    "title": "Roadmap",
    "keywords": "Roadmap Updated March 2022 v4 Use NTS for geometries License to MIT Improvements around Mapsui: Improve the documentation. Adding 'getting started' tutorials for all platforms. Improve the samples. Add comments, make them smaller (single purpose) and make them look better. Options for v5 Improve performance World wrap Add vector tiles"
  },
  "documentation/samples.html": {
    "href": "documentation/samples.html",
    "title": "Samples",
    "keywords": "Samples The best way to get started with mapsui is to download the source and run a samples app. There are sample apps for each supported platform. On Windows you could run Mapsui.Samples.Wpf . In the dropdown at the top left you can select between different categories. With the option buttons you can select between specific samples. All these samples correspond to a specific sample class that is derived from ISample. Where can I find the code for the samples? The samples can be found in this folder: Samples\\Mapsui\\Mapsui.Samples.Common\\Maps. The most easy way to find them is to search for the name of the sample that is shown after the option button. For instance \"1 Points\" For master look here For 3.0 look here For 2.0 look here For 1.4 look here"
  },
  "documentation/v2.0-upgrade-guide.html": {
    "href": "documentation/v2.0-upgrade-guide.html",
    "title": "v2.0 upgrade guide",
    "keywords": "v2.0 upgrade guide This is the incomplete upgrade guide from v1.4 to v2.0. The most apparent changes will be mentioned here. If you notice important things missing then please post an issue. Moved from PCL to .NET Standard 2.0 Look up compatible frameworks in this table . Viewport moved from Map to MapControl and is readonly Use MapControl.Navigator instead. Moved MapControl.NavigateTo methods to MapControl.Navigator All user map manipulation should go the the Navigator. Introduced Map.Home to initialze the map viewport There is now a Home delegate on the Map object that should be used to set the initial state of the map. MapControl.Map.Home = n => n.NavigateTo(myCenter, myResolution); Reason: This is because in some cases the Navigate methods depend on the envelope and resolutions of the layers and in some cases it takes time for these layers to load their data. Added Map.PanLock, Map.ZoomLock and Map.RotationLock The lock fields can be used on all platforms to lock the user from a certain kind of map manipulation. Added Map.Limiter to limit the extent to which the user can navigate The Limter is an implementation of IViewportLimiter. There are currently three limiters part of Mapsui: ViewportLimiter (default) ViewportLimiterKeepWithin ViewportLimiterWithoutLimits It is also possible to implement your own IViewportLimiter. Added RefreshGraphics, RefreshData and Refresh Use RefreshGraphics if you know the data in the layer has changed and the graphics needs refreshing. Use RefreshData if you know there is new data available in the source. Use Refresh if you need to do both. These methods should only be needed if you manipulate data somehow in your own code. Renamed BoundingBox GetCentroid to Centroid and GetBoundingBox to BoundingBox Turned these methods into proper properties making user code a bit more compact. The Info event was moved from Map to MapControl The MapControl contains most other events as well Removed the InfoLayer list and add an InfoLayer boolean on ILayer To indicate that a layer is a info layer you now need to set it's InfoLayer property. In v1.4 it had to be added to the list of InfoLayers. Removed the HoverLayer method. This is because hover could not be implemented crossplatform and could harm performance. It it is still possible to implement hover yourself using a direct call to MapControl.GetMapInfo. Invert label alignment bottom/top. This was incorrect in v1.4. This will not cause a compile error so don't forget to do a search-replace to fix it. Removed ZoomIn/ZoomOut from WPF MapControl Use the ZoomIn/ZoomOut methode on the navigator. Some other changes Move Info event from Map to MapControl Do not derive ILayer from IAsyncDataFetcher. Remove WPFs MapControl.ErrorMessage Rename PanMode.None and ZoomMode.None. Remove the InfoLayer list and add an InfoLayer boolean on ILayer Remove the HoverLayer method. It is not crossplatform and can affect performance. Wrap Viewport in LimitingViewport which limits it to user settings, or access through Navigator. PanLock and ZoomLock working on all platforms. Rework ViewportLimiter"
  },
  "documentation/v4.0-upgrade-guide.html": {
    "href": "documentation/v4.0-upgrade-guide.html",
    "title": "v4.0 upgrade guide",
    "keywords": "v4.0 upgrade guide namespace changes & renaming v3 v4 Mapsui.Geometries (removed) Mapsui.Geometries.Point Mapsui.MPoint Mapsui.Geometries.BoundingBox Mapsui.MRect Mapsui.Layers.TileLayer Mapsui.Tiling.Layers.TileLayer Mapsui.Projection Mapsui.Projections Mapsui.Rendering.Skia.CalloutType Mapsui.Styles.CalloutType"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mapsui documentation.",
    "keywords": "Mapsui documentation. This is the documentation of the Mapsui open source map component. For general documentation go here . For API documentation go here . For the github repository, which also contains the samples, go here . Projects that use Mapsui Breath Companion Squadra @mapsui-users Please send info on other apps using Mapsui to add them here Support If you are interested in more support for Mapsui please mail pauldendulk@gmail.com ."
  }
}