{
  "api/Mapsui.UI.TappedEventArgs.html": {
    "href": "api/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance System.Object TappedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class TappedEventArgs : EventArgs Constructors | Improve this Doc View Source TappedEventArgs(Geometries.Point, Int32) Declaration public TappedEventArgs(Geometries.Point screenPosition, int numOfTaps) Parameters Type Name Description Geometries.Point screenPosition System.Int32 numOfTaps Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NumOfTaps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.SwipedEventArgs.html": {
    "href": "api/Mapsui.UI.SwipedEventArgs.html",
    "title": "Class SwipedEventArgs",
    "keywords": "Class SwipedEventArgs Inheritance System.Object SwipedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class SwipedEventArgs : EventArgs Constructors | Improve this Doc View Source SwipedEventArgs(Double, Double) Declaration public SwipedEventArgs(double velocityX, double velocityY) Parameters Type Name Description System.Double velocityX System.Double velocityY Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VelocityX Declaration public double VelocityX { get; } Property Value Type Description System.Double | Improve this Doc View Source VelocityY Declaration public double VelocityY { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.iOS.html": {
    "href": "api/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "api/Mapsui.UI.iOS.MapControl.html": {
    "href": "api/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl UIView Namespace : Mapsui.UI.iOS Assembly : Mapsui.UI.iOS.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, UIView Constructors | Improve this Doc View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CGRect frame | Improve this Doc View Source MapControl(IntPtr) Declaration public MapControl(IntPtr handle) Parameters Type Name Description IntPtr handle Properties | Improve this Doc View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CGRect | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source TouchesBegan(NSSet, UIEvent) Declaration public override void TouchesBegan(NSSet touches, UIEvent evt) Parameters Type Name Description NSSet touches UIEvent evt | Improve this Doc View Source TouchesEnded(NSSet, UIEvent) Declaration public override void TouchesEnded(NSSet touches, UIEvent e) Parameters Type Name Description NSSet touches UIEvent e | Improve this Doc View Source TouchesMoved(NSSet, UIEvent) Declaration public override void TouchesMoved(NSSet touches, UIEvent evt) Parameters Type Name Description NSSet touches UIEvent evt | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl UIView"
  },
  "api/Mapsui.UI.HoveredEventArgs.html": {
    "href": "api/Mapsui.UI.HoveredEventArgs.html",
    "title": "Class HoveredEventArgs",
    "keywords": "Class HoveredEventArgs Inheritance System.Object HoveredEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class HoveredEventArgs : EventArgs Constructors | Improve this Doc View Source HoveredEventArgs(Geometries.Point) Declaration public HoveredEventArgs(Geometries.Point screenPosition) Parameters Type Name Description Geometries.Point screenPosition Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.Android.html": {
    "href": "api/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl PointExtensions Resource Resource.Attribute Resource.String Resource.Styleable"
  },
  "api/Mapsui.Rendering.Xaml.PolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.PolygonRenderer.html",
    "title": "Class PolygonRenderer",
    "keywords": "Class PolygonRenderer Inheritance System.Object PolygonRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class PolygonRenderer Methods | Improve this Doc View Source CreatePolygonPath(VectorStyle, Double, SymbolCache, Single) Declaration public static Path CreatePolygonPath(VectorStyle style, double resolution, SymbolCache symbolCache, float rotate = 0F) Parameters Type Name Description VectorStyle style System.Double resolution SymbolCache symbolCache System.Single rotate Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RenderPolygon(Polygon, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Shape RenderPolygon(Polygon polygon, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description Polygon polygon IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.OutlinedTextBlock.html": {
    "href": "api/Mapsui.Rendering.Xaml.OutlinedTextBlock.html",
    "title": "Class OutlinedTextBlock",
    "keywords": "Class OutlinedTextBlock Inheritance System.Object System.Windows.Threading.DispatcherObject System.Windows.DependencyObject System.Windows.Media.Visual System.Windows.UIElement System.Windows.FrameworkElement OutlinedTextBlock Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient Inherited Members System.Windows.FrameworkElement.StyleProperty System.Windows.FrameworkElement.OverridesDefaultStyleProperty System.Windows.FrameworkElement.UseLayoutRoundingProperty System.Windows.FrameworkElement.DefaultStyleKeyProperty System.Windows.FrameworkElement.DataContextProperty System.Windows.FrameworkElement.BindingGroupProperty System.Windows.FrameworkElement.LanguageProperty System.Windows.FrameworkElement.NameProperty System.Windows.FrameworkElement.TagProperty System.Windows.FrameworkElement.InputScopeProperty System.Windows.FrameworkElement.RequestBringIntoViewEvent System.Windows.FrameworkElement.SizeChangedEvent System.Windows.FrameworkElement.ActualWidthProperty System.Windows.FrameworkElement.ActualHeightProperty System.Windows.FrameworkElement.LayoutTransformProperty System.Windows.FrameworkElement.WidthProperty System.Windows.FrameworkElement.MinWidthProperty System.Windows.FrameworkElement.MaxWidthProperty System.Windows.FrameworkElement.HeightProperty System.Windows.FrameworkElement.MinHeightProperty System.Windows.FrameworkElement.MaxHeightProperty System.Windows.FrameworkElement.FlowDirectionProperty System.Windows.FrameworkElement.MarginProperty System.Windows.FrameworkElement.HorizontalAlignmentProperty System.Windows.FrameworkElement.VerticalAlignmentProperty System.Windows.FrameworkElement.FocusVisualStyleProperty System.Windows.FrameworkElement.CursorProperty System.Windows.FrameworkElement.ForceCursorProperty System.Windows.FrameworkElement.LoadedEvent System.Windows.FrameworkElement.UnloadedEvent System.Windows.FrameworkElement.ToolTipProperty System.Windows.FrameworkElement.ContextMenuProperty System.Windows.FrameworkElement.ToolTipOpeningEvent System.Windows.FrameworkElement.ToolTipClosingEvent System.Windows.FrameworkElement.ContextMenuOpeningEvent System.Windows.FrameworkElement.ContextMenuClosingEvent System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style, System.Windows.Style) System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement) System.Windows.FrameworkElement.ApplyTemplate() System.Windows.FrameworkElement.OnApplyTemplate() System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard) System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard, System.Windows.Media.Animation.HandoffBehavior) System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard, System.Windows.Media.Animation.HandoffBehavior, System.Boolean) System.Windows.FrameworkElement.GetVisualChild(System.Int32) System.Windows.FrameworkElement.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String) System.Windows.FrameworkElement.GetTemplateChild(System.String) System.Windows.FrameworkElement.FindResource(System.Object) System.Windows.FrameworkElement.TryFindResource(System.Object) System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty, System.Object) System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject) System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty) System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty, System.Windows.Data.BindingBase) System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty, System.String) System.Windows.FrameworkElement.GetUIParentCore() System.Windows.FrameworkElement.BringIntoView() System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect) System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject) System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject, System.Windows.FlowDirection) System.Windows.FrameworkElement.MeasureCore(System.Windows.Size) System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect) System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo) System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size) System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest) System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection) System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs) System.Windows.FrameworkElement.BeginInit() System.Windows.FrameworkElement.EndInit() System.Windows.FrameworkElement.OnInitialized(System.EventArgs) System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs) System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs) System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs) System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs) System.Windows.FrameworkElement.RegisterName(System.String, System.Object) System.Windows.FrameworkElement.UnregisterName(System.String) System.Windows.FrameworkElement.FindName(System.String) System.Windows.FrameworkElement.UpdateDefaultStyle() System.Windows.FrameworkElement.AddLogicalChild(System.Object) System.Windows.FrameworkElement.RemoveLogicalChild(System.Object) System.Windows.FrameworkElement.Style System.Windows.FrameworkElement.OverridesDefaultStyle System.Windows.FrameworkElement.UseLayoutRounding System.Windows.FrameworkElement.DefaultStyleKey System.Windows.FrameworkElement.Triggers System.Windows.FrameworkElement.TemplatedParent System.Windows.FrameworkElement.VisualChildrenCount System.Windows.FrameworkElement.Resources System.Windows.FrameworkElement.InheritanceBehavior System.Windows.FrameworkElement.DataContext System.Windows.FrameworkElement.BindingGroup System.Windows.FrameworkElement.Language System.Windows.FrameworkElement.Name System.Windows.FrameworkElement.Tag System.Windows.FrameworkElement.InputScope System.Windows.FrameworkElement.ActualWidth System.Windows.FrameworkElement.ActualHeight System.Windows.FrameworkElement.LayoutTransform System.Windows.FrameworkElement.Width System.Windows.FrameworkElement.MinWidth System.Windows.FrameworkElement.MaxWidth System.Windows.FrameworkElement.Height System.Windows.FrameworkElement.MinHeight System.Windows.FrameworkElement.MaxHeight System.Windows.FrameworkElement.FlowDirection System.Windows.FrameworkElement.Margin System.Windows.FrameworkElement.HorizontalAlignment System.Windows.FrameworkElement.VerticalAlignment System.Windows.FrameworkElement.FocusVisualStyle System.Windows.FrameworkElement.Cursor System.Windows.FrameworkElement.ForceCursor System.Windows.FrameworkElement.IsInitialized System.Windows.FrameworkElement.IsLoaded System.Windows.FrameworkElement.ToolTip System.Windows.FrameworkElement.ContextMenu System.Windows.FrameworkElement.Parent System.Windows.FrameworkElement.LogicalChildren System.Windows.FrameworkElement.TargetUpdated System.Windows.FrameworkElement.SourceUpdated System.Windows.FrameworkElement.DataContextChanged System.Windows.FrameworkElement.RequestBringIntoView System.Windows.FrameworkElement.SizeChanged System.Windows.FrameworkElement.Initialized System.Windows.FrameworkElement.Loaded System.Windows.FrameworkElement.Unloaded System.Windows.FrameworkElement.ToolTipOpening System.Windows.FrameworkElement.ToolTipClosing System.Windows.FrameworkElement.ContextMenuOpening System.Windows.FrameworkElement.ContextMenuClosing System.Windows.UIElement.PreviewMouseDownEvent System.Windows.UIElement.MouseDownEvent System.Windows.UIElement.PreviewMouseUpEvent System.Windows.UIElement.MouseUpEvent System.Windows.UIElement.PreviewMouseLeftButtonDownEvent System.Windows.UIElement.MouseLeftButtonDownEvent System.Windows.UIElement.PreviewMouseLeftButtonUpEvent System.Windows.UIElement.MouseLeftButtonUpEvent System.Windows.UIElement.PreviewMouseRightButtonDownEvent System.Windows.UIElement.MouseRightButtonDownEvent System.Windows.UIElement.PreviewMouseRightButtonUpEvent System.Windows.UIElement.MouseRightButtonUpEvent System.Windows.UIElement.PreviewMouseMoveEvent System.Windows.UIElement.MouseMoveEvent System.Windows.UIElement.PreviewMouseWheelEvent System.Windows.UIElement.MouseWheelEvent System.Windows.UIElement.MouseEnterEvent System.Windows.UIElement.MouseLeaveEvent System.Windows.UIElement.GotMouseCaptureEvent System.Windows.UIElement.LostMouseCaptureEvent System.Windows.UIElement.QueryCursorEvent System.Windows.UIElement.PreviewStylusDownEvent System.Windows.UIElement.StylusDownEvent System.Windows.UIElement.PreviewStylusUpEvent System.Windows.UIElement.StylusUpEvent System.Windows.UIElement.PreviewStylusMoveEvent System.Windows.UIElement.StylusMoveEvent System.Windows.UIElement.PreviewStylusInAirMoveEvent System.Windows.UIElement.StylusInAirMoveEvent System.Windows.UIElement.StylusEnterEvent System.Windows.UIElement.StylusLeaveEvent System.Windows.UIElement.PreviewStylusInRangeEvent System.Windows.UIElement.StylusInRangeEvent System.Windows.UIElement.PreviewStylusOutOfRangeEvent System.Windows.UIElement.StylusOutOfRangeEvent System.Windows.UIElement.PreviewStylusSystemGestureEvent System.Windows.UIElement.StylusSystemGestureEvent System.Windows.UIElement.GotStylusCaptureEvent System.Windows.UIElement.LostStylusCaptureEvent System.Windows.UIElement.StylusButtonDownEvent System.Windows.UIElement.StylusButtonUpEvent System.Windows.UIElement.PreviewStylusButtonDownEvent System.Windows.UIElement.PreviewStylusButtonUpEvent System.Windows.UIElement.PreviewKeyDownEvent System.Windows.UIElement.KeyDownEvent System.Windows.UIElement.PreviewKeyUpEvent System.Windows.UIElement.KeyUpEvent System.Windows.UIElement.PreviewGotKeyboardFocusEvent System.Windows.UIElement.GotKeyboardFocusEvent System.Windows.UIElement.PreviewLostKeyboardFocusEvent System.Windows.UIElement.LostKeyboardFocusEvent System.Windows.UIElement.PreviewTextInputEvent System.Windows.UIElement.TextInputEvent System.Windows.UIElement.PreviewQueryContinueDragEvent System.Windows.UIElement.QueryContinueDragEvent System.Windows.UIElement.PreviewGiveFeedbackEvent System.Windows.UIElement.GiveFeedbackEvent System.Windows.UIElement.PreviewDragEnterEvent System.Windows.UIElement.DragEnterEvent System.Windows.UIElement.PreviewDragOverEvent System.Windows.UIElement.DragOverEvent System.Windows.UIElement.PreviewDragLeaveEvent System.Windows.UIElement.DragLeaveEvent System.Windows.UIElement.PreviewDropEvent System.Windows.UIElement.DropEvent System.Windows.UIElement.PreviewTouchDownEvent System.Windows.UIElement.TouchDownEvent System.Windows.UIElement.PreviewTouchMoveEvent System.Windows.UIElement.TouchMoveEvent System.Windows.UIElement.PreviewTouchUpEvent System.Windows.UIElement.TouchUpEvent System.Windows.UIElement.GotTouchCaptureEvent System.Windows.UIElement.LostTouchCaptureEvent System.Windows.UIElement.TouchEnterEvent System.Windows.UIElement.TouchLeaveEvent System.Windows.UIElement.IsMouseDirectlyOverProperty System.Windows.UIElement.IsMouseOverProperty System.Windows.UIElement.IsStylusOverProperty System.Windows.UIElement.IsKeyboardFocusWithinProperty System.Windows.UIElement.IsMouseCapturedProperty System.Windows.UIElement.IsMouseCaptureWithinProperty System.Windows.UIElement.IsStylusDirectlyOverProperty System.Windows.UIElement.IsStylusCapturedProperty System.Windows.UIElement.IsStylusCaptureWithinProperty System.Windows.UIElement.IsKeyboardFocusedProperty System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty System.Windows.UIElement.AreAnyTouchesOverProperty System.Windows.UIElement.AreAnyTouchesCapturedProperty System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty System.Windows.UIElement.AllowDropProperty System.Windows.UIElement.RenderTransformProperty System.Windows.UIElement.RenderTransformOriginProperty System.Windows.UIElement.OpacityProperty System.Windows.UIElement.OpacityMaskProperty System.Windows.UIElement.BitmapEffectProperty System.Windows.UIElement.EffectProperty System.Windows.UIElement.BitmapEffectInputProperty System.Windows.UIElement.CacheModeProperty System.Windows.UIElement.UidProperty System.Windows.UIElement.VisibilityProperty System.Windows.UIElement.ClipToBoundsProperty System.Windows.UIElement.ClipProperty System.Windows.UIElement.SnapsToDevicePixelsProperty System.Windows.UIElement.GotFocusEvent System.Windows.UIElement.LostFocusEvent System.Windows.UIElement.IsFocusedProperty System.Windows.UIElement.IsEnabledProperty System.Windows.UIElement.IsHitTestVisibleProperty System.Windows.UIElement.IsVisibleProperty System.Windows.UIElement.FocusableProperty System.Windows.UIElement.IsManipulationEnabledProperty System.Windows.UIElement.ManipulationStartingEvent System.Windows.UIElement.ManipulationStartedEvent System.Windows.UIElement.ManipulationDeltaEvent System.Windows.UIElement.ManipulationInertiaStartingEvent System.Windows.UIElement.ManipulationBoundaryFeedbackEvent System.Windows.UIElement.ManipulationCompletedEvent System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationClock) System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationClock, System.Windows.Media.Animation.HandoffBehavior) System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationTimeline) System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationTimeline, System.Windows.Media.Animation.HandoffBehavior) System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty) System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs) System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent, System.Delegate) System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent, System.Delegate, System.Boolean) System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent, System.Delegate) System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute, System.Windows.RoutedEventArgs) System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs) System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs) System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs) System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs) System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs) System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs) System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs) System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs) System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs) System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs) System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs) System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs) System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs) System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs) System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs) System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs) System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs) System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs) System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs) System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs) System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs) System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs) System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs) System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs) System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs) System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs) System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs) System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs) System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs) System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs) System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs) System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs) System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs) System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs) System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs) System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs) System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs) System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs) System.Windows.UIElement.InvalidateMeasure() System.Windows.UIElement.InvalidateArrange() System.Windows.UIElement.InvalidateVisual() System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement) System.Windows.UIElement.Measure(System.Windows.Size) System.Windows.UIElement.Arrange(System.Windows.Rect) System.Windows.UIElement.UpdateLayout() System.Windows.UIElement.TranslatePoint(System.Windows.Point, System.Windows.UIElement) System.Windows.UIElement.InputHitTest(System.Windows.Point) System.Windows.UIElement.CaptureMouse() System.Windows.UIElement.ReleaseMouseCapture() System.Windows.UIElement.CaptureStylus() System.Windows.UIElement.ReleaseStylusCapture() System.Windows.UIElement.Focus() System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs) System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters) System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters) System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs) System.Windows.UIElement.OnCreateAutomationPeer() System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs) System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs) System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs) System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs) System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs) System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs) System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice) System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice) System.Windows.UIElement.ReleaseAllTouchCaptures() System.Windows.UIElement.HasAnimatedProperties System.Windows.UIElement.InputBindings System.Windows.UIElement.CommandBindings System.Windows.UIElement.AllowDrop System.Windows.UIElement.StylusPlugIns System.Windows.UIElement.DesiredSize System.Windows.UIElement.IsMeasureValid System.Windows.UIElement.IsArrangeValid System.Windows.UIElement.RenderSize System.Windows.UIElement.RenderTransform System.Windows.UIElement.RenderTransformOrigin System.Windows.UIElement.IsMouseDirectlyOver System.Windows.UIElement.IsMouseOver System.Windows.UIElement.IsStylusOver System.Windows.UIElement.IsKeyboardFocusWithin System.Windows.UIElement.IsMouseCaptured System.Windows.UIElement.IsMouseCaptureWithin System.Windows.UIElement.IsStylusDirectlyOver System.Windows.UIElement.IsStylusCaptured System.Windows.UIElement.IsStylusCaptureWithin System.Windows.UIElement.IsKeyboardFocused System.Windows.UIElement.IsInputMethodEnabled System.Windows.UIElement.Opacity System.Windows.UIElement.OpacityMask System.Windows.UIElement.BitmapEffect System.Windows.UIElement.Effect System.Windows.UIElement.BitmapEffectInput System.Windows.UIElement.CacheMode System.Windows.UIElement.Uid System.Windows.UIElement.Visibility System.Windows.UIElement.ClipToBounds System.Windows.UIElement.Clip System.Windows.UIElement.SnapsToDevicePixels System.Windows.UIElement.HasEffectiveKeyboardFocus System.Windows.UIElement.IsFocused System.Windows.UIElement.IsEnabled System.Windows.UIElement.IsEnabledCore System.Windows.UIElement.IsHitTestVisible System.Windows.UIElement.IsVisible System.Windows.UIElement.Focusable System.Windows.UIElement.PersistId System.Windows.UIElement.IsManipulationEnabled System.Windows.UIElement.AreAnyTouchesOver System.Windows.UIElement.AreAnyTouchesDirectlyOver System.Windows.UIElement.AreAnyTouchesCapturedWithin System.Windows.UIElement.AreAnyTouchesCaptured System.Windows.UIElement.TouchesCaptured System.Windows.UIElement.TouchesCapturedWithin System.Windows.UIElement.TouchesOver System.Windows.UIElement.TouchesDirectlyOver System.Windows.UIElement.PreviewMouseDown System.Windows.UIElement.MouseDown System.Windows.UIElement.PreviewMouseUp System.Windows.UIElement.MouseUp System.Windows.UIElement.PreviewMouseLeftButtonDown System.Windows.UIElement.MouseLeftButtonDown System.Windows.UIElement.PreviewMouseLeftButtonUp System.Windows.UIElement.MouseLeftButtonUp System.Windows.UIElement.PreviewMouseRightButtonDown System.Windows.UIElement.MouseRightButtonDown System.Windows.UIElement.PreviewMouseRightButtonUp System.Windows.UIElement.MouseRightButtonUp System.Windows.UIElement.PreviewMouseMove System.Windows.UIElement.MouseMove System.Windows.UIElement.PreviewMouseWheel System.Windows.UIElement.MouseWheel System.Windows.UIElement.MouseEnter System.Windows.UIElement.MouseLeave System.Windows.UIElement.GotMouseCapture System.Windows.UIElement.LostMouseCapture System.Windows.UIElement.QueryCursor System.Windows.UIElement.PreviewStylusDown System.Windows.UIElement.StylusDown System.Windows.UIElement.PreviewStylusUp System.Windows.UIElement.StylusUp System.Windows.UIElement.PreviewStylusMove System.Windows.UIElement.StylusMove System.Windows.UIElement.PreviewStylusInAirMove System.Windows.UIElement.StylusInAirMove System.Windows.UIElement.StylusEnter System.Windows.UIElement.StylusLeave System.Windows.UIElement.PreviewStylusInRange System.Windows.UIElement.StylusInRange System.Windows.UIElement.PreviewStylusOutOfRange System.Windows.UIElement.StylusOutOfRange System.Windows.UIElement.PreviewStylusSystemGesture System.Windows.UIElement.StylusSystemGesture System.Windows.UIElement.GotStylusCapture System.Windows.UIElement.LostStylusCapture System.Windows.UIElement.StylusButtonDown System.Windows.UIElement.StylusButtonUp System.Windows.UIElement.PreviewStylusButtonDown System.Windows.UIElement.PreviewStylusButtonUp System.Windows.UIElement.PreviewKeyDown System.Windows.UIElement.KeyDown System.Windows.UIElement.PreviewKeyUp System.Windows.UIElement.KeyUp System.Windows.UIElement.PreviewGotKeyboardFocus System.Windows.UIElement.GotKeyboardFocus System.Windows.UIElement.PreviewLostKeyboardFocus System.Windows.UIElement.LostKeyboardFocus System.Windows.UIElement.PreviewTextInput System.Windows.UIElement.TextInput System.Windows.UIElement.PreviewQueryContinueDrag System.Windows.UIElement.QueryContinueDrag System.Windows.UIElement.PreviewGiveFeedback System.Windows.UIElement.GiveFeedback System.Windows.UIElement.PreviewDragEnter System.Windows.UIElement.DragEnter System.Windows.UIElement.PreviewDragOver System.Windows.UIElement.DragOver System.Windows.UIElement.PreviewDragLeave System.Windows.UIElement.DragLeave System.Windows.UIElement.PreviewDrop System.Windows.UIElement.Drop System.Windows.UIElement.PreviewTouchDown System.Windows.UIElement.TouchDown System.Windows.UIElement.PreviewTouchMove System.Windows.UIElement.TouchMove System.Windows.UIElement.PreviewTouchUp System.Windows.UIElement.TouchUp System.Windows.UIElement.GotTouchCapture System.Windows.UIElement.LostTouchCapture System.Windows.UIElement.TouchEnter System.Windows.UIElement.TouchLeave System.Windows.UIElement.IsMouseDirectlyOverChanged System.Windows.UIElement.IsKeyboardFocusWithinChanged System.Windows.UIElement.IsMouseCapturedChanged System.Windows.UIElement.IsMouseCaptureWithinChanged System.Windows.UIElement.IsStylusDirectlyOverChanged System.Windows.UIElement.IsStylusCapturedChanged System.Windows.UIElement.IsStylusCaptureWithinChanged System.Windows.UIElement.IsKeyboardFocusedChanged System.Windows.UIElement.LayoutUpdated System.Windows.UIElement.GotFocus System.Windows.UIElement.LostFocus System.Windows.UIElement.IsEnabledChanged System.Windows.UIElement.IsHitTestVisibleChanged System.Windows.UIElement.IsVisibleChanged System.Windows.UIElement.FocusableChanged System.Windows.UIElement.ManipulationStarting System.Windows.UIElement.ManipulationStarted System.Windows.UIElement.ManipulationDelta System.Windows.UIElement.ManipulationInertiaStarting System.Windows.UIElement.ManipulationBoundaryFeedback System.Windows.UIElement.ManipulationCompleted System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual) System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual) System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject, System.Windows.DependencyObject) System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject) System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject) System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject) System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual) System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D) System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual) System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual) System.Windows.Media.Visual.PointToScreen(System.Windows.Point) System.Windows.Media.Visual.PointFromScreen(System.Windows.Point) System.Windows.Media.Visual.VisualParent System.Windows.Media.Visual.VisualTransform System.Windows.Media.Visual.VisualEffect System.Windows.Media.Visual.VisualBitmapEffect System.Windows.Media.Visual.VisualBitmapEffectInput System.Windows.Media.Visual.VisualCacheMode System.Windows.Media.Visual.VisualScrollableAreaClip System.Windows.Media.Visual.VisualClip System.Windows.Media.Visual.VisualOffset System.Windows.Media.Visual.VisualOpacity System.Windows.Media.Visual.VisualEdgeMode System.Windows.Media.Visual.VisualBitmapScalingMode System.Windows.Media.Visual.VisualClearTypeHint System.Windows.Media.Visual.VisualTextRenderingMode System.Windows.Media.Visual.VisualTextHintingMode System.Windows.Media.Visual.VisualOpacityMask System.Windows.Media.Visual.VisualXSnappingGuidelines System.Windows.Media.Visual.VisualYSnappingGuidelines System.Windows.DependencyObject.Equals(System.Object) System.Windows.DependencyObject.GetHashCode() System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty) System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object) System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object) System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object) System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty) System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey) System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty) System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty) System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty) System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty) System.Windows.DependencyObject.GetLocalValueEnumerator() System.Windows.DependencyObject.DependencyObjectType System.Windows.DependencyObject.IsSealed System.Windows.Threading.DispatcherObject.Dispatcher System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class OutlinedTextBlock : FrameworkElement, DUCE.IResource, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IHaveResources, IQueryAmbient Constructors | Improve this Doc View Source OutlinedTextBlock() Declaration public OutlinedTextBlock() Fields | Improve this Doc View Source FillProperty Declaration public static readonly DependencyProperty FillProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source FontFamilyProperty Declaration public static readonly DependencyProperty FontFamilyProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source FontSizeProperty Declaration public static readonly DependencyProperty FontSizeProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source FontStretchProperty Declaration public static readonly DependencyProperty FontStretchProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source FontStyleProperty Declaration public static readonly DependencyProperty FontStyleProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source FontWeightProperty Declaration public static readonly DependencyProperty FontWeightProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source StrokeProperty Declaration public static readonly DependencyProperty StrokeProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source StrokeThicknessProperty Declaration public static readonly DependencyProperty StrokeThicknessProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source TextAlignmentProperty Declaration public static readonly DependencyProperty TextAlignmentProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source TextDecorationsProperty Declaration public static readonly DependencyProperty TextDecorationsProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source TextProperty Declaration public static readonly DependencyProperty TextProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source TextTrimmingProperty Declaration public static readonly DependencyProperty TextTrimmingProperty Field Value Type Description System.Windows.DependencyProperty | Improve this Doc View Source TextWrappingProperty Declaration public static readonly DependencyProperty TextWrappingProperty Field Value Type Description System.Windows.DependencyProperty Properties | Improve this Doc View Source Fill Declaration public Brush Fill { get; set; } Property Value Type Description System.Windows.Media.Brush | Improve this Doc View Source FontFamily Declaration public FontFamily FontFamily { get; set; } Property Value Type Description System.Windows.Media.FontFamily | Improve this Doc View Source FontSize Declaration [TypeConverter(typeof(FontSizeConverter))] public double FontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source FontStretch Declaration public FontStretch FontStretch { get; set; } Property Value Type Description System.Windows.FontStretch | Improve this Doc View Source FontStyle Declaration public FontStyle FontStyle { get; set; } Property Value Type Description System.Windows.FontStyle | Improve this Doc View Source FontWeight Declaration public FontWeight FontWeight { get; set; } Property Value Type Description System.Windows.FontWeight | Improve this Doc View Source Stroke Declaration public Brush Stroke { get; set; } Property Value Type Description System.Windows.Media.Brush | Improve this Doc View Source StrokeThickness Declaration public double StrokeThickness { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source TextAlignment Declaration public TextAlignment TextAlignment { get; set; } Property Value Type Description System.Windows.TextAlignment | Improve this Doc View Source TextDecorations Declaration public TextDecorationCollection TextDecorations { get; set; } Property Value Type Description System.Windows.TextDecorationCollection | Improve this Doc View Source TextTrimming Declaration public TextTrimming TextTrimming { get; set; } Property Value Type Description System.Windows.TextTrimming | Improve this Doc View Source TextWrapping Declaration public TextWrapping TextWrapping { get; set; } Property Value Type Description System.Windows.TextWrapping Methods | Improve this Doc View Source ArrangeOverride(Size) Declaration protected override Size ArrangeOverride(Size finalSize) Parameters Type Name Description System.Windows.Size finalSize Returns Type Description System.Windows.Size Overrides System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size) | Improve this Doc View Source MeasureOverride(Size) Declaration protected override Size MeasureOverride(Size availableSize) Parameters Type Name Description System.Windows.Size availableSize Returns Type Description System.Windows.Size Overrides System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size) | Improve this Doc View Source MeasureText() Declaration public Size MeasureText() Returns Type Description System.Windows.Size | Improve this Doc View Source OnRender(DrawingContext) Declaration protected override void OnRender(DrawingContext drawingContext) Parameters Type Name Description System.Windows.Media.DrawingContext drawingContext Overrides System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext) Implements System.Windows.Media.Animation.IAnimatable System.Windows.IFrameworkInputElement System.Windows.IInputElement System.ComponentModel.ISupportInitialize System.Windows.Markup.IQueryAmbient"
  },
  "api/Mapsui.Rendering.Xaml.MultiLineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MultiLineStringRenderer.html",
    "title": "Class MultiLineStringRenderer",
    "keywords": "Class MultiLineStringRenderer Inheritance System.Object MultiLineStringRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MultiLineStringRenderer Methods | Improve this Doc View Source Render(MultiLineString, IStyle, IReadOnlyViewport) Declaration public static Shape Render(MultiLineString multiLineString, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description MultiLineString multiLineString IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.MapRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance System.Object MapRenderer Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class MapRenderer : IRenderer Constructors | Improve this Doc View Source MapRenderer() Declaration public MapRenderer() Properties | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source WidgetRenders Declaration public IDictionary<Type, IWidgetRenderer> WidgetRenders { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.Type , IWidgetRenderer > Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<ILayer>, IEnumerable<IWidget>, Styles.Color) Declaration public void Render(object target, IReadOnlyViewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, Styles.Color background = null) Parameters Type Name Description System.Object target IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers System.Collections.Generic.IEnumerable < IWidget > widgets Mapsui.Styles.Color background | Improve this Doc View Source RenderLayer(Canvas, IReadOnlyViewport, ILayer, SymbolCache, Boolean) Declaration public static void RenderLayer(Canvas target, IReadOnlyViewport viewport, ILayer layer, SymbolCache symbolCache, bool rasterizing = false) Parameters Type Name Description System.Windows.Controls.Canvas target IReadOnlyViewport viewport ILayer layer SymbolCache symbolCache System.Boolean rasterizing | Improve this Doc View Source RenderToBitmapStream(IReadOnlyViewport, IEnumerable<ILayer>, Styles.Color) Declaration public MemoryStream RenderToBitmapStream(IReadOnlyViewport viewport, IEnumerable<ILayer> layers, Styles.Color background = null) Parameters Type Name Description IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < ILayer > layers Mapsui.Styles.Color background Returns Type Description System.IO.MemoryStream"
  },
  "api/Mapsui.Rendering.Xaml.HorizontaltExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.HorizontaltExtensions.html",
    "title": "Class HorizontaltExtensions",
    "keywords": "Class HorizontaltExtensions Inheritance System.Object HorizontaltExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class HorizontaltExtensions Methods | Improve this Doc View Source ToXaml(Widgets.HorizontalAlignment) Declaration public static HorizontalAlignment ToXaml(this Widgets.HorizontalAlignment horizontalAlignment) Parameters Type Name Description Widgets.HorizontalAlignment horizontalAlignment Returns Type Description System.Windows.HorizontalAlignment"
  },
  "api/Mapsui.Rendering.Xaml.BitmapRendering.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapRendering.html",
    "title": "Namespace Mapsui.Rendering.Xaml.BitmapRendering",
    "keywords": "Namespace Mapsui.Rendering.Xaml.BitmapRendering Classes BitmapConverter"
  },
  "api/Mapsui.Rendering.Xaml.BitmapRendering.BitmapConverter.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapRendering.BitmapConverter.html",
    "title": "Class BitmapConverter",
    "keywords": "Class BitmapConverter Inheritance System.Object BitmapConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml.BitmapRendering Assembly : Mapsui.Rendering.Xaml.dll Syntax public class BitmapConverter Methods | Improve this Doc View Source ToBitmapStream(UIElement, Double, Double) Declaration public static MemoryStream ToBitmapStream(UIElement uiElement, double width, double height) Parameters Type Name Description System.Windows.UIElement uiElement System.Double width System.Double height Returns Type Description System.IO.MemoryStream"
  },
  "api/Mapsui.Rendering.Xaml.PointRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.PointRenderer.html",
    "title": "Class PointRenderer",
    "keywords": "Class PointRenderer Inheritance System.Object PointRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class PointRenderer Methods | Improve this Doc View Source PositionPoint(UIElement, Geometries.Point, IStyle, IReadOnlyViewport) Declaration public static void PositionPoint(UIElement renderedGeometry, Geometries.Point point, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description System.Windows.UIElement renderedGeometry Mapsui.Geometries.Point point IStyle style IReadOnlyViewport viewport | Improve this Doc View Source RenderPoint(Geometries.Point, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Shape RenderPoint(Geometries.Point point, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description Mapsui.Geometries.Point point IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.MultiPolygonRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.MultiPolygonRenderer.html",
    "title": "Class MultiPolygonRenderer",
    "keywords": "Class MultiPolygonRenderer Inheritance System.Object MultiPolygonRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MultiPolygonRenderer Methods | Improve this Doc View Source RenderMultiPolygon(MultiPolygon, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Path RenderMultiPolygon(MultiPolygon geometry, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description MultiPolygon geometry IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Path"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance System.Object ZoomInOutWidgetRenderer Implements IWidgetRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class ZoomInOutWidgetRenderer : IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description System.Windows.Controls.Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.html",
    "title": "Namespace Mapsui.Rendering.Xaml.XamlWidgets",
    "keywords": "Namespace Mapsui.Rendering.Xaml.XamlWidgets Classes HyperlinkWidgetRenderer ScaleBarWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.WidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance System.Object WidgetRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class WidgetRenderer Methods | Improve this Doc View Source Render(Object, IReadOnlyViewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>) Declaration public static void Render(object target, IReadOnlyViewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renderers) Parameters Type Name Description System.Object target IReadOnlyViewport viewport System.Collections.Generic.IEnumerable < IWidget > widgets System.Collections.Generic.IDictionary < System.Type , IWidgetRenderer > renderers"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.ScaleBarWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance System.Object ScaleBarWidgetRenderer Implements IWidgetRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class ScaleBarWidgetRenderer : IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description System.Windows.Controls.Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.XamlWidgets.HyperlinkWidgetRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.XamlWidgets.HyperlinkWidgetRenderer.html",
    "title": "Class HyperlinkWidgetRenderer",
    "keywords": "Class HyperlinkWidgetRenderer Inheritance System.Object HyperlinkWidgetRenderer Implements IWidgetRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml.XamlWidgets Assembly : Mapsui.Rendering.Xaml.dll Syntax public class HyperlinkWidgetRenderer : IXamlWidgetRenderer, IWidgetRenderer Methods | Improve this Doc View Source Draw(Canvas, IReadOnlyViewport, IWidget) Declaration public void Draw(Canvas canvas, IReadOnlyViewport viewport, IWidget widget) Parameters Type Name Description System.Windows.Controls.Canvas canvas IReadOnlyViewport viewport IWidget widget Implements IWidgetRenderer"
  },
  "api/Mapsui.Rendering.Xaml.VerticalAligmentExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.VerticalAligmentExtensions.html",
    "title": "Class VerticalAligmentExtensions",
    "keywords": "Class VerticalAligmentExtensions Inheritance System.Object VerticalAligmentExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class VerticalAligmentExtensions Methods | Improve this Doc View Source ToXaml(Widgets.VerticalAlignment) Declaration public static VerticalAlignment ToXaml(this Widgets.VerticalAlignment verticalAlignment) Parameters Type Name Description Widgets.VerticalAlignment verticalAlignment Returns Type Description System.Windows.VerticalAlignment"
  },
  "api/Mapsui.Rendering.Xaml.SymbolCache.html": {
    "href": "api/Mapsui.Rendering.Xaml.SymbolCache.html",
    "title": "Class SymbolCache",
    "keywords": "Class SymbolCache Inheritance System.Object System.Collections.Generic.Dictionary < System.Int32 , System.Windows.Media.ImageSource > SymbolCache Implements System.Collections.Generic.IDictionary < System.Int32 , System.Windows.Media.ImageSource > System.Collections.Generic.ICollection < System.Collections.Generic.KeyValuePair < System.Int32 , System.Windows.Media.ImageSource >> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary < System.Int32 , System.Windows.Media.ImageSource > System.Collections.Generic.IReadOnlyCollection < System.Collections.Generic.KeyValuePair < System.Int32 , System.Windows.Media.ImageSource >> System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.Int32 , System.Windows.Media.ImageSource >> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback ISymbolCache Inherited Members System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Add(System.Int32, System.Windows.Media.ImageSource) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.Add(System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.Contains(System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.Remove(System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Clear() System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.ContainsKey(System.Int32) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.ContainsValue(System.Windows.Media.ImageSource) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.GetEnumerator() System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.GetEnumerator() System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.OnDeserialization(System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Remove(System.Int32) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.TryGetValue(System.Int32, System.Windows.Media.ImageSource) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>[], System.Int32) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.set_Item(System.Object, System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Add(System.Object, System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Contains(System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.GetEnumerator() System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Remove(System.Object) System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Comparer System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Count System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Keys System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.IDictionary<System.Int32, System.Windows.Media.ImageSource>.Keys System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.IReadOnlyDictionary<System.Int32, System.Windows.Media.ImageSource>.Keys System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Values System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.IDictionary<System.Int32, System.Windows.Media.ImageSource>.Values System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.IReadOnlyDictionary<System.Int32, System.Windows.Media.ImageSource>.Values System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.Item[System.Int32] System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Int32, System.Windows.Media.ImageSource>>.IsReadOnly System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.ICollection.SyncRoot System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.IsFixedSize System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.IsReadOnly System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Keys System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Values System.Collections.Generic.Dictionary<System.Int32, System.Windows.Media.ImageSource>.System.Collections.IDictionary.Item[System.Object] System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public class SymbolCache : Dictionary<int, ImageSource>, IDictionary<int, ImageSource>, ICollection<KeyValuePair<int, ImageSource>>, IDictionary, ICollection, IReadOnlyDictionary<int, ImageSource>, IReadOnlyCollection<KeyValuePair<int, ImageSource>>, IEnumerable<KeyValuePair<int, ImageSource>>, IEnumerable, ISerializable, IDeserializationCallback, ISymbolCache Methods | Improve this Doc View Source GetOrCreate(Int32) Declaration public ImageSource GetOrCreate(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description System.Windows.Media.ImageSource | Improve this Doc View Source GetSize(Int32) Declaration public Size GetSize(int bitmapId) Parameters Type Name Description System.Int32 bitmapId Returns Type Description Size Implements System.Collections.Generic.IDictionary<TKey, TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey, TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback ISymbolCache"
  },
  "api/Mapsui.Rendering.Xaml.StyleConverter.html": {
    "href": "api/Mapsui.Rendering.Xaml.StyleConverter.html",
    "title": "Class StyleConverter",
    "keywords": "Class StyleConverter Inheritance System.Object StyleConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class StyleConverter Methods | Improve this Doc View Source MapsuiBrushToXaml(Styles.Brush, SymbolCache, Double) Declaration public static Brush MapsuiBrushToXaml(Styles.Brush brush, SymbolCache symbolCache = null, double rotate = 0) Parameters Type Name Description Styles.Brush brush SymbolCache symbolCache System.Double rotate Returns Type Description System.Windows.Media.Brush | Improve this Doc View Source MapsuiPentoXaml(PenStyle, Single[]) Declaration public static DoubleCollection MapsuiPentoXaml(PenStyle penStyle, float[] dashArray = null) Parameters Type Name Description PenStyle penStyle System.Single [] dashArray Returns Type Description System.Windows.Media.DoubleCollection | Improve this Doc View Source MapsuiStrokeCaptoPenLineCap(PenStrokeCap) Declaration public static PenLineCap MapsuiStrokeCaptoPenLineCap(PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description System.Windows.Media.PenLineCap | Improve this Doc View Source MapsuiStrokeJointoPenLineJoin(StrokeJoin) Declaration public static PenLineJoin MapsuiStrokeJointoPenLineJoin(StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description System.Windows.Media.PenLineJoin"
  },
  "api/Mapsui.Rendering.Xaml.StreamExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance System.Object StreamExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class StreamExtensions Methods | Improve this Doc View Source ToBitmapImage(Stream) Declaration public static BitmapImage ToBitmapImage(this Stream imageData) Parameters Type Name Description System.IO.Stream imageData Returns Type Description System.Windows.Media.Imaging.BitmapImage"
  },
  "api/Mapsui.Rendering.Xaml.RectExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.RectExtensions.html",
    "title": "Class RectExtensions",
    "keywords": "Class RectExtensions Inheritance System.Object RectExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class RectExtensions Methods | Improve this Doc View Source ToMapsui(Rect) Declaration public static BoundingBox ToMapsui(this Rect rect) Parameters Type Name Description System.Windows.Rect rect Returns Type Description BoundingBox"
  },
  "documentation/Roadmap.html": {
    "href": "documentation/Roadmap.html",
    "title": "Roadmap start 2019",
    "keywords": "Roadmap start 2019 Getting v2 more stable. Improve the documentation. Adding 'getting started' tutorials for all platforms. Show all samples in the iOS and Android projects. Improve the samples. Add comments, make them smaller (single purpose) and make them look better. Later Replace Mapsui.Geometries with NTS Add vector tiles Improve performance Change license to MIT"
  },
  "documentation/Rendering-Tests.html": {
    "href": "documentation/Rendering-Tests.html",
    "title": "Unit Tests for Rendering",
    "keywords": "Unit Tests for Rendering Testing the renderers in done in two ways. Unit tests that compare the current output to previous output. Visual inspection. Unit tests are useful during refactoring when you expect no changes. Visual tests are useful when you are working on a change in the rendering output. 1. Unit tests The generated images are written to: {test project folder}\\bin\\Debug\\Resources\\Images\\Generated\\ Those will be compared to the original images in: {test project folder}\\bin\\Debug\\Resources\\Images\\Original\\ If after code changes there are expected changes in the generated files they should be committed to git so they need to be copied to: {test project folder}\\Resources\\Images\\Original\\ 2. Visual inspection In the WPF sample there is an option to select the list of unit tests. Both WPF and Skia renderers can be selected. We assume the skia renderer on other platforms are identical."
  },
  "documentation/Renderers.html": {
    "href": "documentation/Renderers.html",
    "title": "Renderers",
    "keywords": "Renderers Mapsui has two renderers: Xaml in the Mapsui.Rendering.Xaml assembly. Used only in the WPF MapControl. Older and stable. Skia in the Mapsui.Rendering.Skia assembly. Used in all supported platforms. Newer. Differences Between Xaml and Skia Skia is nearly equivalent to Xaml but there are still some differences (This list has grown shorter over last year): There is a difference in the way halo symbolization is implemented. We will match Xaml to Skia (not the other way around). We already use the correct technique for Xaml halos for labels styles. Skia does not have the option to displayed symbols in world units. The means the icon will grow bigger if you zoom in. This is unlike regular icon but like regular polgons. This is an exotic feature, you will probably not need this. There are probably some more differences I missed. Xaml and Skia side by side in Mapsui.Samples.Wpf The project Mapsui.Samples.Wpf has a dropdown on the top left to select between Skia and Wpf rendering. This is allows you to compare them."
  },
  "documentation/projections.html": {
    "href": "documentation/projections.html",
    "title": "Projections",
    "keywords": "Projections Projections is a complicated topic. Users of Mapsui have a wide variety of backgrounds. Some are experienced GIS users that just need to know how this specific map component works. Many others are app developers that just happen to need a map for their current app. This makes it hard to explain things clear for everyone. Below are some basic concepts. I like this video introduction to map projections. The most common scenario Much point data is in a coordinates system called WGS84, or lat/long coordinates, or EPSG:4326 . Most maps are in some another coordinate system which is better suited for display. The projection used in most online maps these days is SphericalMercator, or WebMercator, PseudoMercator or EPSG:3857 . The OpenStreetMap tile layer that is used in many samples of Mapsui is also in SphericalMercator. If you use this map your coordinates also need to be in SphericalMercator. By default there is no automatic projection in Mapsui. The Mapsui helper methods for this transformation are SphericalMerator.FromLonLat/ToLonLat. Parts of Mapsui involved in projections Map : There is one Map. It is inevitably in some kind of projection. Layers : There are several layers that provider data. This data should be in the same projection as the Map. If not, different projections will be drawn on top of each other and things go wrong. Providers : Some Layers have a DataSource (Provider). This DataSource could contain data in another projection. This data can be converted to the Map projection but a few things need to be set. Configure Mapsui for automatic projections Currently only the Layer layer type can be set up to do automatic projetions from DataSource to Map. Three things need to be configured for this: The CRS on the Map to know what to project to. The CRS on the DataSource to know what to project from. The Transformation on the Map to calculate the projection from DataSource CRS to the Map CRS. Support for projections The out of the box Mapsui support for projections is limited. The MinimalProjection class only projects between SphericalMercator (EPSG:3857) and WGS84 (EPSG:4326). It is however possible to create your own Transformation. You need to implement the ITransformation interface. Within this implementation you need to use some other projection library. A recommended one is ProjNet4GeoAPI . The most common scenario Most likely you will be fine if you use the same projection as Google and OpenStreetMap. This projection is called SphericalMercator. The official code from the OGC for this projection is EPSG:3857. If you use the OpenStreetMap background layer you use EPSG:3857. Often you have GPS locations or points of interests (POIs) in WGS84 or EPGS:4326. These points need to be transformed to EPSG:3857. There are two ways: Follow the configuration for projections mentioned above and in the ProjectionSample.cs. Use SphericalMercator.FromLonLat to do the transformation manually. Remarks A Layer has a CRS field. This field is used by Mapsui to set it to the Map projection. It should not be set by the user. This is could be confusing. Mapsui is not capable of transforming images. So no transformation of tiles as rasters. No attempt will be made to transform and the CRS fields will be ignored."
  },
  "documentation/How-to-work-with-Mapsui.html": {
    "href": "documentation/How-to-work-with-Mapsui.html",
    "title": "How to Work with Mapsui",
    "keywords": "How to Work with Mapsui Mapsui is growing towards a stable component. At all times: All projects should compile The unit tests should succeed All samples should run properly If this is not the case please report it. It will be fixed. Please use the nuget packages to build applications with Mapsui: Install-Package Mapsui Extension of Mapsui If you need more functionality from the MapControl you could create your own version of the MapControl by making a copy. You can customize these for your own needs. While it is also possible to extend functionality by adding your own ILayer or IProvider implementation. If you encounter breaking changes please take a look at the release notes . You can check the related commits by clicking the 'x commits to masters since this release' of the previous release (a bit odd but that is how github works). Logging In Mapsui errors and warnings are logged to one static class. By listening to this with an event handler you can get some debugging information. .. // Logger is a static class that can be accessed when you add the Mapsui core dll. Logger.LogDelegate += LogMethod; .. private void LogMethod(LogLevel logLevel, string message, Exception exception) { // todo: write to your own logger }"
  },
  "documentation/Home.html": {
    "href": "documentation/Home.html",
    "title": "Introduction",
    "keywords": "Introduction Mapsui is a .NET component to show a map in your app. Supported platforms WPF UWP Xamarin.Android Xamarin.iOS Xamarin.Forms (in v2, now in beta) Supported data Mapsui uses the BruTile library to display tile layers such as: OpenStreetMap tiles Open standards for tiles WMTS TMS WMS called tilewise Custom data providers MBTiles. An offline format to store tile data in sqlite file. Mapsui renders and can style vector data (polygons, lines, points)"
  },
  "documentation/getting-started-wpf.html": {
    "href": "documentation/getting-started-wpf.html",
    "title": "Mapsui WPF getting started",
    "keywords": "Mapsui WPF getting started This page will show the steps to add a Mapsui map to your WPF application. Step 1 Start a new WPF application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui Step 3 In WpfApplication1.MainWindow.xaml add this in the Grid element: <xaml:MapControl Name=\"MyMapControl\"></xaml:MapControl> And add the namespace: xmlns:xaml=\"clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf\" Step 4 In WpfApplication1.MainWindow.xaml.cs add in the constructor: MyMapControl.Map.Layers.Add(new TileLayer(KnownTileSources.Create())); And add the namespaces: using BruTile.Predefined; using Mapsui.Layers; Step 5 Run!"
  },
  "documentation/getting-started-android.html": {
    "href": "documentation/getting-started-android.html",
    "title": "Mapsui Android getting started",
    "keywords": "Mapsui Android getting started Step 1 Create 'Blank App (Android)' in Visual Studio Step 2 $ Install-Package Mapsui Step 3 In Resources/layout/Main.axml add Mapsui.UI.Android.MapControl: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <Mapsui.UI.Android.MapControl android:id=\"@+id/mapcontrol\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </LinearLayout> Step 4 In MainActivity.cs add MapControl after SetContentView(Resource.Layout.Main): protected override void OnCreate(Bundle savedInstanceState) { base.OnCreate(savedInstanceState); // Set our view from the \"main\" layout resource SetContentView(Resource.Layout.Main); var mapControl = FindViewById<MapControl>(Resource.Id.mapcontrol); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; } Add the following using statements: using Mapsui; using Mapsui.Utilities; using Mapsui.UI.Android; Step 5: Run!"
  },
  "documentation/faq.html": {
    "href": "documentation/faq.html",
    "title": "Frequently Asked Questions",
    "keywords": "Frequently Asked Questions Why is all my data in a small area near the west coast of Africa? This is because the background data is in SphericalMercator (it is in the SphericalMercator coordinate system) and the foreground data is in WGS84 (latlon). Use SphericalMercator.FromLonLat to transform it. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. Why does NavigateTo zoom into an area near the west coast of Africa? This is because the coordinates you pass to NavigateTo are in WGS84 whereas the background data is in SphericalMercator. Use SphericalMercator.FromLonLat to transform the NavigateTo arguments to SphericalMercator. Note: There can be many other forms of mixing up coordinate systems, but this is the most common."
  },
  "documentation/documentation.html": {
    "href": "documentation/documentation.html",
    "title": "Documentation",
    "keywords": "Documentation Documentation setup We use docfx to generate the documentation. There is a /docfx folder with a docfx project called Mapsui. This projects documenation folder contains all the md files used to generate the 'documentation' tab in the site. This is the source of those files, they should be edited there. In the docfx folder there is a script (build-site.cmd) that generates the documentation site (in /docfx/mapsui/_site) and copies it to the /docs folder. The Mapsui project on github is configured to automatically publish this docs folder to https://mapsui.github.io/mapsui A commit of an md file should trigger the build server. This should run the build-site.cmd. This should commit the generated site to the repo. It will when then show up on the website. We should have two separate build configurations one for the docs which ignores the project and one for the project which ignores the docs. Documentation guidelines All md files should be in lower case (they are not right now). All md files should be directly in the root of /docfx. Hierachy is created with the toc.md in the documenation folder. By keeping the files itself in the root it is easier to change the hierarchy and easier to get contributers to follow the guidelines. All md files should start with a header one (#) and have only one header one. All the headers in the toc should be equal to the header one in the file it points to. Mapsui is cased as Mapsui not MapsUI. We should iteratively improve the documentation. If questions are asked in the issues we should search for the answer in the documentation. Update the documentation when it is missing and answer the issue with a url to the documentation. Writing documentation is not only useful to inform the user but also as a sanity check for the developer. If what you have to tell becomes complicated and hard to grasp this could mean the software is not well designed. Writing documentation early should be used as a part of the software development process."
  },
  "documentation/Development-constraints.html": {
    "href": "documentation/Development-constraints.html",
    "title": "Development constraints",
    "keywords": "Development constraints When developing for Mapsui we take into account the following constraints. Not limited to certain coordinate system Mapsui's Map can be in any coordinate system. If you do not specify a coordinate system in the Map and Layers it assumes they are in the same coordinate system (whatever they are). In this case it only transforms these unspecified 'world-coordinates' to 'screen-coordinates' and nothing more. It is also possible to setup a coordinate transformation system using Map.CRS, DataSource.CRS and Map.Transformation. See projections . Full implementation of the feature matrix These are some of the feature dimensions: Renderers: WPF and Skia Geometries: Point, LineString, Polygon etc. Operations on Geometries: Distance, Contains. Coordinate projection support Style: fill color, line color, line cap, symbol opacity, symbol scale If we choose to support a feature each 'cell' of the multi dimensional matrix should be supported. No surprises for the user. Currently there are holes in the matrix on some point (like differences between WPF and Skia). The current focus is to fill these holes. If this support does not seem attainable (is that proper English?) but does seem very useful we should look for ways to make Mapsui extendable Write clear, simple and little code Maintenance is enemy that can bring a project like this to a halt. We should look for ways to implement the functionality with the simplest possible code."
  },
  "documentation/Contributors-Guidelines.html": {
    "href": "documentation/Contributors-Guidelines.html",
    "title": "Mapsui Contributor Guidelines",
    "keywords": "Mapsui Contributor Guidelines CLA To contribute you need to sign our CLA Complexity Complexity is the biggest problem in software development. The primary effort should be to keep the complexity low. Complexity can be caused by clueless spaghetti code but also by astronaut architectures . Keeping things simple is not easy but hard work. It involves thinking up several solutions to your problem weighing the pros and cons and moving it around and upside down to look for even better (simpler) solutions. Continuous Refactoring Mapsui has some older code in it. Don't despair. We continuously improve or replace older code. It is a gradual process. We do it step by step. We have made major changes in the past; From WinForms to WPF, From GDI+ to SL rendering. From .NET Framework to PCL. From WPF rendering to SkiaSharp. We are working toward the next steps: From PCL to .NET Standard, support for full Xamarin.Forms. Taking these steps will cause breaking changes. We should be aware of this and clearly communicate it with the user. We should use semver (although we still violate it now and then). Issue first Submit an issue before a pull request co we can discuss the possible solutions to the problem. Use ReSharper Mapsui uses the resharper team settings by committing the DotSettings to git, so that all developers can use the same settings. We should have zero warnings. Suggestions should be treated as actual suggestions, use them only when you think it improves the code."
  },
  "documentation/v2.0-upgrade-guide.html": {
    "href": "documentation/v2.0-upgrade-guide.html",
    "title": "v2.0 upgrade guide",
    "keywords": "v2.0 upgrade guide This is the incomplete upgrade guide from v1.4 to v2.0. The most apparent changes will be mentioned here. If you notice important things missing then please post an issue. Moved from PCL to .NET Standard 2.0 Look up compatible frameworks in this table . Viewport moved from Map to MapControl and is readonly Use MapControl.Navigator instead. Moved MapControl.NavigateTo methods to MapControl.Navigator All user map manipulation should go the the Navigator. Introduced Map.Home to initialze the map viewport There is now a Home delegate on the Map object that should be used to set the initial state of the map. MapControl.Map.Home = n => n.NavigateTo(myCenter, myResolution); Reason: This is because in some cases the Navigate methods depend on the envelope and resolutions of the layers and in some cases it takes time for these layers to load their data. Added Map.PanLock, Map.ZoomLock and Map.RotationLock The lock fields can be used on all platforms to lock the user from a certain kind of map manipulation. Added Map.Limiter to limit the extent to which the user can navigate The Limter is an implementation of IViewportLimiter. There are currently three limiters part of Mapsui: ViewportLimiter (default) ViewportLimiterKeepWithin ViewportLimiterWithoutLimits It is also possible to implement your own IViewportLimiter. Added RefreshGraphics, RefreshData and Refresh Use RefreshGraphics if you know the data in the layer has changed and the graphics needs refreshing. Use RefreshData if you know there is new data available in the source. Use Refresh if you need to do both. These methods should only be needed if you manipulate data somehow in your own code. Renamed BoundingBox GetCentroid to Centroid and GetBoundingBox to BoundingBox Turned these methods into proper properties making user code a bit more compact. The Info event was moved from Map to MapControl The MapControl contains most other events as well Removed the InfoLayer list and add an InfoLayer boolean on ILayer To indicate that a layer is a info layer you now need to set it's InfoLayer property. In v1.4 it had to be added to the list of InfoLayers. Removed the HoverLayer method. This is because hover could not be implemented crossplatform and could harm performance. It it is still possible to implement hover yourself using a direct call to MapControl.GetMapInfo. Invert label alignment bottom/top. This was incorrect in v1.4. This will not cause a compile error so don't forget to do a search-replace to fix it. Removed ZoomIn/ZoomOut from WPF MapControl Use the ZoomIn/ZoomOut methode on the navigator."
  },
  "documentation/skia-scale.html": {
    "href": "documentation/skia-scale.html",
    "title": "Skia Scale",
    "keywords": "Skia Scale We have a separate page about this topic because skia scale has caused some confusion in the past and bugs as a consequence. Some context: Device Independent Units Modern devices have a very high resolution. If something is drawn onto the canvas using raw pixels as coordinates the fonts would become tiny and unreadable and lines would become very thin. To correct for this a scale factor is used. Those scaled-up coordinates are called device independent units. Most of the time you deal with the device independent units. Coordinates in SkiaSharp Most (all?) views in SkiaSharp use pixels as coordinates by default but for our purposes we need to use device independent units, so we need to correct for this. There are two ways this can be done: Set the skia view's IgnorePixelScaling. Call the skia view's Scale factor with the appropriate scale. For this you need to request the scale factor from the system. What do we do? We take skia scale into account on a number of places in our code: On WPF and UWP: We set IgnorePixelScaling. On iOS: The GL view we use has no IgnorePixelScaling unfortunately. We determine the skia scale while initializing (or when switching from wpf to skia rendering)ent's size changes. We set the skia scale on the skia surface. This needs to be done in the render loop because this is the only place where we have access to the surface. On Android: We determine the density (pixels per device independent units) while initializing. We initialze the viewport width and height to the skia width and height (on TryInitializeViewport). We set the viewport width and height to the skia width and height whenever the containing parent's size changes. We set the skia scale on the skia surface. This needs to be done in the render loop because this is the only place where we have access to the surface. We pass the skia scale along if we request map info. Why not directly correct the position for scale at the call? Because we want to return the original click position as part of the response. This position can be usefull and we don't want to user to correct for skia scale (in fact we don't want the user to have access to it). When requesting the touch positions when manipulating the map."
  },
  "documentation/samples.html": {
    "href": "documentation/samples.html",
    "title": "Samples",
    "keywords": "Samples The best way to get started with mapsui is to go through the samples. The code samples There are sample apps for each platform. They share a number of Map samples that can be found in this folder in our git repository Samples\\Mapsui\\Mapsui.Samples.Common\\Maps. For 2.0 look here For 1.4 look here Run the samples See the samples in action by running the WPF sample app ( Mapsui.Samples.Wpf ) in the samples folder. On the left side it has a list with all samples."
  },
  "documentation/NuGet-of-latest-build.html": {
    "href": "documentation/NuGet-of-latest-build.html",
    "title": "NuGet of Latest Build",
    "keywords": "NuGet of Latest Build On every commit the build server is triggered which publishes a NuGet package of that build. It's version number is the current version of the master branch followed by a dot and the build number. The package is not published to nuget.org but to a AppVeyor feed. You need to add this feed to be able to install the package to your project. There are three ways to add this feed to your environment. Package Manager Console nuget install-package mapsui -source https://ci.appveyor.com/nuget/mapsui -pre Add the feed in Visual Studio Add the feed in tools | options | nuget | package sources https://ci.appveyor.com/nuget/mapsui And under 'manage nuget packages' select this as source on the top right. Add a .nuget\\NuGet.Config xml In you sln folder add a .nuget folder and in it a NuGet.Config file with content: <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <solution> <add key=\"disableSourceControlIntegration\" value=\"true\" /> </solution> <packageSources> <add key=\"AppVeyor\" value=\"https://ci.appveyor.com/nuget/mapsui \" /> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </packageSources> </configuration> This way you application knows where to find the package and when other developers clone your project it works for them too right away. This is the best option. Build your own nuget package It is also possible to build you own nuget package locally by running scripts\\buildpack.bat 1.0.0-beta.1 from the sln folder. You can set the file location as a Package Source in visual studio."
  },
  "documentation/Mapsui.Forms.html": {
    "href": "documentation/Mapsui.Forms.html",
    "title": "Mapsui.Forms",
    "keywords": "Mapsui.Forms Mapsui.Forms is a Xamarin.Forms native library for Mapsui. With this library it is possible to use Mapsui without any renderer. Mapsui.Forms uses SkaiSharp.Views.Forms to display the map on the device. This works for iOS, Android, UWP and Mac OS. WPF should be possible too, but isn't tested. Installation Create a normal Xamarin.Forms project Add Mapsui.Forms from NuGet to the packages Add the line xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" to the Xaml file Add the Mapsui.Forms view with <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> to the Xaml part file Add in the code behind the following ```` var map = new Map { CRS = \"EPSG:3857\", Transformation = new MinimalTransformation() }; var attribution = new BruTile.Attribution(\"© OpenStreetMap contributors\", \" http://www.openstreetmap.org/copyright \"); var tileSource = new HttpTileSource(new GlobalSphericalMercator(), \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", new[] { \"a\", \"b\", \"c\" }, name: \"OpenStreetMap\", attribution: attribution); var tileLayer = new TileLayer(tileSource) { Name = \"OpenStreetMap\" }; map.Layers.Add(tileLayer); map.Widgets.Add(new Widgets.ScaleBar.ScaleBarWidget(map) { TextAlignment = Widgets.Alignment.Center, HorizontalAlignment = Widgets.HorizontalAlignment.Left, VerticalAlignment = Widgets.VerticalAlignment.Bottom }); mapView.Map = map; 6. Now you are ready to run a test"
  },
  "documentation/Mapsui-Components.html": {
    "href": "documentation/Mapsui-Components.html",
    "title": "Mapsui Components",
    "keywords": "Mapsui Components If you install the NuGet package into your app these assemblies are added: Mapsui.UI.{platform} - Platform specific UI. Contains the MapControl Mapsui.Rendering.Skia Mapsui Mapsui.Geometries On Windows desktop Mapsui.Rendering.Xaml is added. A number of nuget dependencies Mapsui Parts There are three important classes that you will deal with MapControl This is the UI component that you add to you project. Map Holds all information about the map like layers and widgets. Viewport Holds all information about the part of the map that is visible on the screen like center, extent, rotation, resolution and so on. It is created automatically when Map is created. You can access it with MapControl.Map.Viewport."
  },
  "documentation/Mapsui-2.0.html": {
    "href": "documentation/Mapsui-2.0.html",
    "title": "Mapsui 2.0",
    "keywords": "Mapsui 2.0 At the moment we are working on Mapsui v2. The core libraries are .NET Standard instead of PCLs. Here are some of the changes that may go into v2. Todo Testing. Some possible rework following from user feedback. Done Do not derive ILayer from IAsyncDataFetcher. Add an Action field to the Map to zoom to 'home' viewport. Remove Viewport from Map. Remove Navigate methods from Map. Go to .NET Standard Rename Map.ViewChanged to Map.RefreshData Remove WPFs MapControl.ErrorMessage Rename PanMode.None and ZoomMode.None. Rename BoundingBox.GetCentroid to Centroid Rename IGeometry.GetBoundingBox to BoundingBox Move Info event from Map to MapControl Remove the InfoLayer list and add an InfoLayer boolean on ILayer Remove the HoverLayer method. It is not crossplatform and can affect performance. Invert label alignment bottom/top. Remove ZoomIn/ZoomOut from WPF MapControl and turn into Navigate method. Wrap Viewport in LimitingViewport which limits it to user settings, or access through Navigator. PanLock and ZoomLock working on all platforms. Rework ViewportLimiter Add Xamarin.Forms MapControl Not (Later) Use NTS for Geometries Perhaps add animation in an AnimatedViewport which wraps the actual Viewport. Replace ILayer.Style with an ILayer.Styles of type ICollection which is empty by default"
  },
  "documentation/Async-Fetching.html": {
    "href": "documentation/Async-Fetching.html",
    "title": "Asynchronous Data Fetching",
    "keywords": "Asynchronous Data Fetching Some background In most mapping clients drawing a map means first gathering data from disk, database or web and after that a map is drawn. Because gathering data takes time the user has to wait for this process to complete. During this process sometimes a white map is shown and the user cannot interact with the map. This experience can be improved by drawing a buffer of the previous image during pan and zoom. But this results in white space along the edged. This can again be countered by other optimizations but there are limits to what can be done along this design path and it tends to lead to hacked up solutions. In Mapsui we completely seperated drawing from fetching data. The renderer only renders the data it has available in memory at that instant. The fetcher runs on a background thread receives messages from the UI thread telling it what to fetch. The async data fetcher architecture The diagram above shows how Mapsui's data fetcher works. The data fetcher runs on a background thread. The UI and Fetcher communicate through non blocking messages. Whenever the user pans or zooms a View Changed message is sent to the Fetcher. Whenever new data arrives a Data Changed message is sent to the UI so that it knows it should redraw the map. The fetcher dumps incoming data into a cache. The UI renderer retrieves whatever is needed from that cache when rendering. Both the fetcher and the renderer can use all kinds of smart tricks. In case of tiling the fetcher can pre‐fetch tiles based on its current view, or on the way the view changes over time. The renderer could search for alternative tiles (higher or lower levels) when the optimal tiles are not available. Those strategies should be tuned to support each other. For instance, in the current implementation the renderer uses higher level tiles when the optimal tiles are not available, and the fetcher pre‐fetches higher level tiles to assist the renderer. But the way they play together is not specified in the interface. This loose coupling keeps things simple and flexible and the renderer never has to wait for the fetcher which results in a smooth (perceived) performance."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Mapsui API",
    "keywords": "Mapsui API This is the API description of Mapsui"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mapsui documentation.",
    "keywords": "Mapsui documentation. The Mapsui documentation consists of two parts. The general documentation found here . The api documentation found here . Sponsors We are delightly with our first gold sponsor Sebastian Kruze, who has also contributed to Mapsui with informed test reports and expert advice. Sebastian Kruze"
  },
  "api/Mapsui.Rendering.Xaml.MatrixHelper.html": {
    "href": "api/Mapsui.Rendering.Xaml.MatrixHelper.html",
    "title": "Class MatrixHelper",
    "keywords": "Class MatrixHelper Inheritance System.Object MatrixHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class MatrixHelper Methods | Improve this Doc View Source Append(ref Matrix, Matrix) Declaration public static void Append(ref Matrix matrix, Matrix matrixOther) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Windows.Media.Matrix matrixOther | Improve this Doc View Source CreateScaling(Double, Double, Double, Double) Declaration public static Matrix CreateScaling(double scaleX, double scaleY, double centerX, double centerY) Parameters Type Name Description System.Double scaleX System.Double scaleY System.Double centerX System.Double centerY Returns Type Description System.Windows.Media.Matrix | Improve this Doc View Source InvertX(ref Matrix, Double) Declaration public static void InvertX(ref Matrix matrix, double centerX = 0) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double centerX | Improve this Doc View Source InvertY(ref Matrix, Double) Declaration public static void InvertY(ref Matrix matrix, double centerY = 0) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double centerY | Improve this Doc View Source Multiply(ref Matrix, Matrix) Declaration public static void Multiply(ref Matrix trans1, Matrix trans2) Parameters Type Name Description System.Windows.Media.Matrix trans1 System.Windows.Media.Matrix trans2 | Improve this Doc View Source Rotate(ref Matrix, Double) Declaration public static void Rotate(ref Matrix matrix, double angle) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double angle | Improve this Doc View Source RotateAt(ref Matrix, Double, Double, Double) Declaration public static void RotateAt(ref Matrix matrix, double angle, double centerX = 0, double centerY = 0) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double angle System.Double centerX System.Double centerY | Improve this Doc View Source ScaleAt(ref Matrix, Double, Double, Double, Double) Declaration public static void ScaleAt(ref Matrix matrix, double scaleX, double scaleY, double centerX = 0, double centerY = 0) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double scaleX System.Double scaleY System.Double centerX System.Double centerY | Improve this Doc View Source Translate(ref Matrix, Double, Double) Declaration public static void Translate(ref Matrix matrix, double offsetX, double offsetY) Parameters Type Name Description System.Windows.Media.Matrix matrix System.Double offsetX System.Double offsetY"
  },
  "api/Mapsui.Rendering.Xaml.LineStringRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance System.Object LineStringRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class LineStringRenderer Methods | Improve this Doc View Source CreateLineStringPath(VectorStyle) Declaration public static Path CreateLineStringPath(VectorStyle style) Parameters Type Name Description VectorStyle style Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RenderLineString(LineString, IStyle, IReadOnlyViewport) Declaration public static Shape RenderLineString(LineString lineString, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description LineString lineString IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Shape"
  },
  "api/Mapsui.Rendering.Xaml.GeometryRenderer.html": {
    "href": "api/Mapsui.Rendering.Xaml.GeometryRenderer.html",
    "title": "Class GeometryRenderer",
    "keywords": "Class GeometryRenderer Inheritance System.Object GeometryRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class GeometryRenderer Methods | Improve this Doc View Source CounterScaleLineWidth(UIElement, Double) Declaration public static void CounterScaleLineWidth(UIElement renderedGeometry, double resolution) Parameters Type Name Description System.Windows.UIElement renderedGeometry System.Double resolution | Improve this Doc View Source CreateTransformMatrix(IReadOnlyViewport) Declaration public static Matrix CreateTransformMatrix(IReadOnlyViewport viewport) Parameters Type Name Description IReadOnlyViewport viewport Returns Type Description System.Windows.Media.Matrix | Improve this Doc View Source CreateTransformMatrix(IReadOnlyViewport, Geometries.Point) Declaration public static Matrix CreateTransformMatrix(IReadOnlyViewport viewport, Geometries.Point point) Parameters Type Name Description IReadOnlyViewport viewport Mapsui.Geometries.Point point Returns Type Description System.Windows.Media.Matrix | Improve this Doc View Source PositionGeometry(Shape, IReadOnlyViewport) Declaration public static void PositionGeometry(Shape renderedGeometry, IReadOnlyViewport viewport) Parameters Type Name Description System.Windows.Shapes.Shape renderedGeometry IReadOnlyViewport viewport | Improve this Doc View Source PositionRaster(UIElement, BoundingBox, IReadOnlyViewport) Declaration public static void PositionRaster(UIElement renderedGeometry, BoundingBox boundingBox, IReadOnlyViewport viewport) Parameters Type Name Description System.Windows.UIElement renderedGeometry BoundingBox boundingBox IReadOnlyViewport viewport | Improve this Doc View Source RenderMultiPoint(MultiPoint, IStyle, IReadOnlyViewport, SymbolCache) Declaration public static Shape RenderMultiPoint(MultiPoint multiPoint, IStyle style, IReadOnlyViewport viewport, SymbolCache symbolCache) Parameters Type Name Description MultiPoint multiPoint IStyle style IReadOnlyViewport viewport SymbolCache symbolCache Returns Type Description System.Windows.Shapes.Shape | Improve this Doc View Source RenderRaster(IRaster, IStyle, IReadOnlyViewport) Declaration public static Path RenderRaster(IRaster raster, IStyle style, IReadOnlyViewport viewport) Parameters Type Name Description IRaster raster IStyle style IReadOnlyViewport viewport Returns Type Description System.Windows.Shapes.Path | Improve this Doc View Source RoundToPixel(Rect) Declaration public static Rect RoundToPixel(Rect dest) Parameters Type Name Description System.Windows.Rect dest Returns Type Description System.Windows.Rect"
  },
  "api/Mapsui.Rendering.Xaml.BitmapImageExtensions.html": {
    "href": "api/Mapsui.Rendering.Xaml.BitmapImageExtensions.html",
    "title": "Class BitmapImageExtensions",
    "keywords": "Class BitmapImageExtensions Inheritance System.Object BitmapImageExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Mapsui.Rendering.Xaml Assembly : Mapsui.Rendering.Xaml.dll Syntax public static class BitmapImageExtensions Methods | Improve this Doc View Source ToImageBrush(ImageSource) Declaration public static Brush ToImageBrush(this ImageSource bitmapImage) Parameters Type Name Description System.Windows.Media.ImageSource bitmapImage Returns Type Description System.Windows.Media.Brush | Improve this Doc View Source ToTiledImageBrush(BitmapImage) Declaration public static ImageBrush ToTiledImageBrush(this BitmapImage bitmapImage) Parameters Type Name Description System.Windows.Media.Imaging.BitmapImage bitmapImage Returns Type Description System.Windows.Media.ImageBrush"
  },
  "api/Mapsui.UI.ZoomedEventArgs.html": {
    "href": "api/Mapsui.UI.ZoomedEventArgs.html",
    "title": "Class ZoomedEventArgs",
    "keywords": "Class ZoomedEventArgs Inheritance System.Object ZoomedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class ZoomedEventArgs : EventArgs Constructors | Improve this Doc View Source ZoomedEventArgs(Geometries.Point, ZoomDirection) Declaration public ZoomedEventArgs(Geometries.Point screenPosition, ZoomDirection direction) Parameters Type Name Description Geometries.Point screenPosition ZoomDirection direction Properties | Improve this Doc View Source Direction Declaration public ZoomDirection Direction { get; } Property Value Type Description ZoomDirection | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.ZoomDirection.html": {
    "href": "api/Mapsui.UI.ZoomDirection.html",
    "title": "Enum ZoomDirection",
    "keywords": "Enum ZoomDirection Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public enum ZoomDirection : int Fields Name Description ZoomIn ZoomOut"
  },
  "api/Mapsui.UI.html": {
    "href": "api/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes HoveredEventArgs SwipedEventArgs TappedEventArgs TouchedEventArgs ZoomedEventArgs Enums TouchMode ZoomDirection"
  },
  "api/Mapsui.UI.TouchMode.html": {
    "href": "api/Mapsui.UI.TouchMode.html",
    "title": "Enum TouchMode",
    "keywords": "Enum TouchMode Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public enum TouchMode : int Fields Name Description Dragging None Zooming"
  },
  "api/Mapsui.UI.TouchedEventArgs.html": {
    "href": "api/Mapsui.UI.TouchedEventArgs.html",
    "title": "Class TouchedEventArgs",
    "keywords": "Class TouchedEventArgs Inheritance System.Object TouchedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Android.dll Syntax public class TouchedEventArgs : EventArgs Constructors | Improve this Doc View Source TouchedEventArgs(List<Geometries.Point>) Declaration public TouchedEventArgs(List<Geometries.Point> screenPoints) Parameters Type Name Description List < Geometries.Point > screenPoints Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPoints Declaration public List<Geometries.Point> ScreenPoints { get; } Property Value Type Description List < Geometries.Point >"
  },
  "api/Mapsui.UI.Android.Resource.html": {
    "href": "api/Mapsui.UI.Android.Resource.html",
    "title": "Class Resource",
    "keywords": "Class Resource Inheritance System.Object Resource Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Resource : object"
  },
  "api/Mapsui.UI.Android.Resource.Styleable.html": {
    "href": "api/Mapsui.UI.Android.Resource.Styleable.html",
    "title": "Class Resource.Styleable",
    "keywords": "Class Resource.Styleable Inheritance System.Object Resource.Styleable Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Styleable : object Fields | Improve this Doc View Source start_with_openstreetmap_style Declaration public static int[] start_with_openstreetmap_style Field Value Type Description System.Int32 [] | Improve this Doc View Source start_with_openstreetmap_style_start_with_openstreetmap Declaration public static int start_with_openstreetmap_style_start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.String.html": {
    "href": "api/Mapsui.UI.Android.Resource.String.html",
    "title": "Class Resource.String",
    "keywords": "Class Resource.String Inheritance System.Object Resource.String Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class String : object Fields | Improve this Doc View Source ApplicationName Declaration public static int ApplicationName Field Value Type Description System.Int32 | Improve this Doc View Source Hello Declaration public static int Hello Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.Attribute.html": {
    "href": "api/Mapsui.UI.Android.Resource.Attribute.html",
    "title": "Class Resource.Attribute",
    "keywords": "Class Resource.Attribute Inheritance System.Object Resource.Attribute Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Attribute : object Fields | Improve this Doc View Source start_with_openstreetmap Declaration public static int start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.PointExtensions.html": {
    "href": "api/Mapsui.UI.Android.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ToDeviceIndependentUnits(Point, Single) Declaration public static Point ToDeviceIndependentUnits(this Point point, float pixelsPerDeviceIndependentUnit) Parameters Type Name Description Point point System.Single pixelsPerDeviceIndependentUnit Returns Type Description Point"
  },
  "api/Mapsui.UI.Android.MapControl.html": {
    "href": "api/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl ViewGroup Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, ViewGroup Constructors | Improve this Doc View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Context context IAttributeSet attrs | Improve this Doc View Source MapControl(Context, IAttributeSet, Int32) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Context context IAttributeSet attrs System.Int32 defStyle Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source MapView_Touch(Object, TouchEventArgs) Declaration public void MapView_Touch(object sender, TouchEventArgs args) Parameters Type Name Description System.Object sender TouchEventArgs args | Improve this Doc View Source OnLayout(Boolean, Int32, Int32, Int32, Int32) Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description System.Boolean changed System.Int32 l System.Int32 t System.Int32 r System.Int32 b | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnSizeChanged(Int32, Int32, Int32, Int32) Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description System.Int32 width System.Int32 height System.Int32 oldWidth System.Int32 oldHeight | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh() Refresh data of the map and than repaint it Declaration public void Refresh() | Improve this Doc View Source RefreshData() Refresh data of Map, but don't paint it Declaration public void RefreshData() | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl ViewGroup"
  },
  "api/Mapsui.Rendering.Xaml.html": {
    "href": "api/Mapsui.Rendering.Xaml.html",
    "title": "Namespace Mapsui.Rendering.Xaml",
    "keywords": "Namespace Mapsui.Rendering.Xaml Classes BitmapImageExtensions GeometryRenderer HorizontaltExtensions LineStringRenderer MapRenderer MatrixHelper MultiLineStringRenderer MultiPolygonRenderer OutlinedTextBlock PointRenderer PolygonRenderer RectExtensions StreamExtensions StyleConverter SymbolCache VerticalAligmentExtensions"
  }
}