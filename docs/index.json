{
  "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.CalloutClickedEventArgs.html",
    "title": "Class CalloutClickedEventArgs",
    "keywords": "Class CalloutClickedEventArgs Inheritance System.Object System.EventArgs CalloutClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class CalloutClickedEventArgs : EventArgs Properties | Improve this Doc View Source Callout Callout that is clicked Declaration public Callout Callout { get; } Property Value Type Description Callout | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Xamarin.Forms.Point"
  },
  "api/Mapsui.UI.Android.SkiaRenderMode.html": {
    "href": "api/Mapsui.UI.Android.SkiaRenderMode.html",
    "title": "Enum SkiaRenderMode",
    "keywords": "Enum SkiaRenderMode Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public enum SkiaRenderMode Fields Name Description Hardware Software"
  },
  "api/Mapsui.UI.Android.Resource.Styleable.html": {
    "href": "api/Mapsui.UI.Android.Resource.Styleable.html",
    "title": "Class Resource.Styleable",
    "keywords": "Class Resource.Styleable Inheritance System.Object Resource.Styleable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Styleable Fields | Improve this Doc View Source start_with_openstreetmap_style Declaration public static int[] start_with_openstreetmap_style Field Value Type Description System.Int32 [] | Improve this Doc View Source start_with_openstreetmap_style_start_with_openstreetmap Declaration public static int start_with_openstreetmap_style_start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.Resource.Attribute.html": {
    "href": "api/Mapsui.UI.Android.Resource.Attribute.html",
    "title": "Class Resource.Attribute",
    "keywords": "Class Resource.Attribute Inheritance System.Object Resource.Attribute Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Attribute Fields | Improve this Doc View Source start_with_openstreetmap Declaration public static int start_with_openstreetmap Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.iOS.MapControl.html": {
    "href": "api/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object Foundation.NSObject UIKit.UIResponder UIKit.UIView MapControl Implements System.IEquatable < Foundation.NSObject > Foundation.INSObjectProtocol UIKit.IUIPasteConfigurationSupporting UIKit.IUIUserActivityRestoring System.Collections.IEnumerable Foundation.INSCoding UIKit.IUIAccessibilityIdentification UIKit.IUIAppearance UIKit.IUIAppearanceContainer UIKit.IUICoordinateSpace UIKit.IUIDynamicItem UIKit.IUIFocusItem UIKit.IUIFocusEnvironment UIKit.IUIFocusItemContainer UIKit.IUILargeContentViewerItem UIKit.IUITraitEnvironment CoreAnimation.ICALayerDelegate ObjCRuntime.INativeObject System.IDisposable IMapControl System.ComponentModel.INotifyPropertyChanged Inherited Members UIKit.UIView.Add(UIKit.UIView) UIKit.UIView.AddSubviews(UIKit.UIView[]) UIKit.UIView.GetEnumerator() UIKit.UIView.BeginAnimations(System.String) UIKit.UIView.Animate(System.Double, System.Action, System.Action) UIKit.UIView.Animate(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action, System.Action) UIKit.UIView.Transition(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.Transition(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action, System.Action) UIKit.UIView.AnimateAsync(System.Double, System.Action) UIKit.UIView.Capture(System.Boolean) UIKit.UIView.AccessibilityActivate() UIKit.UIView.ActionForLayer(CoreAnimation.CALayer, System.String) UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint) UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[]) UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer) UIKit.UIView.AddInteraction(UIKit.IUIInteraction) UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double, System.Double, System.Action) UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide) UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect) UIKit.UIView.AddSubview(UIKit.UIView) UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect) UIKit.UIView.Animate(System.Double, System.Action) UIKit.UIView.AnimateKeyframes(System.Double, System.Double, UIKit.UIViewKeyframeAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateKeyframesAsync(System.Double, System.Double, UIKit.UIViewKeyframeAnimationOptions, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.AnimateNotify(System.Double, System.Double, System.nfloat, System.nfloat, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.AnimateNotifyAsync(System.Double, System.Double, System.nfloat, System.nfloat, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.BeginAnimations(System.String, System.IntPtr) UIKit.UIView.BringSubviewToFront(UIKit.UIView) UIKit.UIView.CommitAnimations() UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis) UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis) UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint, UIKit.UIView) UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint, UIKit.UIView) UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect, UIKit.UIView) UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace) UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect, UIKit.UIView) UIKit.UIView.DecodeRestorableState(Foundation.NSCoder) UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint) UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext, UIKit.UIFocusAnimationCoordinator) UIKit.UIView.DisplayLayer(CoreAnimation.CALayer) UIKit.UIView.Draw(CoreGraphics.CGRect) UIKit.UIView.DrawLayer(CoreAnimation.CALayer, CoreGraphics.CGContext) UIKit.UIView.DrawRect(CoreGraphics.CGRect, UIKit.UIViewPrintFormatter) UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect, System.Boolean) UIKit.UIView.EncodeRestorableState(Foundation.NSCoder) UIKit.UIView.EncodeTo(Foundation.NSCoder) UIKit.UIView.ExchangeSubview(System.nint, System.nint) UIKit.UIView.ExerciseAmbiguityInLayout() UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect) UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer) UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis) UIKit.UIView.GetFocusItems(CoreGraphics.CGRect) UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute) UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute, UIKit.UIUserInterfaceLayoutDirection) UIKit.UIView.HitTest(CoreGraphics.CGPoint, UIKit.UIEvent) UIKit.UIView.InsertSubview(UIKit.UIView, System.nint) UIKit.UIView.InsertSubviewAbove(UIKit.UIView, UIKit.UIView) UIKit.UIView.InsertSubviewBelow(UIKit.UIView, UIKit.UIView) UIKit.UIView.InvalidateIntrinsicContentSize() UIKit.UIView.IsDescendantOfView(UIKit.UIView) UIKit.UIView.LayoutIfNeeded() UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer) UIKit.UIView.LayoutSubviews() UIKit.UIView.ModifyAnimations(System.nfloat, System.Boolean, System.Action) UIKit.UIView.MovedToSuperview() UIKit.UIView.MovedToWindow() UIKit.UIView.NeedsUpdateConstraints() UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.PerformWithoutAnimation(System.Action) UIKit.UIView.PointInside(CoreGraphics.CGPoint, UIKit.UIEvent) UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint) UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[]) UIKit.UIView.RemoveFromSuperview() UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer) UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction) UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide) UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect) UIKit.UIView.RequiresConstraintBasedLayout() UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect, System.Boolean, UIKit.UIEdgeInsets) UIKit.UIView.SafeAreaInsetsDidChange() UIKit.UIView.SendSubviewToBack(UIKit.UIView) UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean) UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve) UIKit.UIView.SetAnimationDelay(System.Double) UIKit.UIView.SetAnimationDelegate(Foundation.NSObject) UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector) UIKit.UIView.SetAnimationDuration(System.Double) UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean) UIKit.UIView.SetAnimationRepeatCount(System.Single) UIKit.UIView.SetAnimationStartDate(Foundation.NSDate) UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition, UIKit.UIView, System.Boolean) UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector) UIKit.UIView.SetContentCompressionResistancePriority(System.Single, UIKit.UILayoutConstraintAxis) UIKit.UIView.SetContentHuggingPriority(System.Single, UIKit.UILayoutConstraintAxis) UIKit.UIView.SetNeedsDisplay() UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect) UIKit.UIView.SetNeedsFocusUpdate() UIKit.UIView.SetNeedsLayout() UIKit.UIView.SetNeedsUpdateConstraints() UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext) UIKit.UIView.SizeThatFits(CoreGraphics.CGSize) UIKit.UIView.SizeToFit() UIKit.UIView.SnapshotView(System.Boolean) UIKit.UIView.SubviewAdded(UIKit.UIView) UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize) UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize, System.Single, System.Single) UIKit.UIView.TintColorDidChange() UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection) UIKit.UIView.TransitionNotify(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, UIKit.UICompletionHandler) UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions) UIKit.UIView.TransitionNotify(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler) UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, System.Double, UIKit.UIViewAnimationOptions, System.Action) UIKit.UIView.UpdateConstraints() UIKit.UIView.UpdateConstraintsIfNeeded() UIKit.UIView.UpdateFocusIfNeeded() UIKit.UIView.ViewWithTag(System.nint) UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer) UIKit.UIView.WillMoveToSuperview(UIKit.UIView) UIKit.UIView.WillMoveToWindow(UIKit.UIWindow) UIKit.UIView.WillRemoveSubview(UIKit.UIView) UIKit.UIView.GetAppearance<T>() UIKit.UIView.AppearanceWhenContainedIn(System.Type[]) UIKit.UIView.GetAppearance(UIKit.UITraitCollection) UIKit.UIView.GetAppearance(UIKit.UITraitCollection, System.Type[]) UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection) UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection, System.Type[]) UIKit.UIView.ClassHandle UIKit.UIView.AccessibilityActivationPoint UIKit.UIView.AccessibilityAttributedHint UIKit.UIView.AccessibilityAttributedLabel UIKit.UIView.AccessibilityAttributedUserInputLabels UIKit.UIView.AccessibilityAttributedValue UIKit.UIView.AccessibilityElementsHidden UIKit.UIView.AccessibilityFrame UIKit.UIView.AccessibilityHint UIKit.UIView.AccessibilityIdentifier UIKit.UIView.AccessibilityIgnoresInvertColors UIKit.UIView.AccessibilityLabel UIKit.UIView.AccessibilityLanguage UIKit.UIView.AccessibilityNavigationStyle UIKit.UIView.AccessibilityPath UIKit.UIView.AccessibilityRespondsToUserInteraction UIKit.UIView.AccessibilityTextualContext UIKit.UIView.AccessibilityTraits UIKit.UIView.AccessibilityUserInputLabels UIKit.UIView.AccessibilityValue UIKit.UIView.AccessibilityViewIsModal UIKit.UIView.AlignmentRectInsets UIKit.UIView.Alpha UIKit.UIView.AnimationsEnabled UIKit.UIView.AutoresizingMask UIKit.UIView.AutosizesSubviews UIKit.UIView.BackgroundColor UIKit.UIView.BottomAnchor UIKit.UIView.Bounds UIKit.UIView.CanBecomeFocused UIKit.UIView.Center UIKit.UIView.CenterXAnchor UIKit.UIView.CenterYAnchor UIKit.UIView.ClearsContextBeforeDrawing UIKit.UIView.ClipsToBounds UIKit.UIView.CollisionBoundingPath UIKit.UIView.CollisionBoundsType UIKit.UIView.Constraints UIKit.UIView.ContentMode UIKit.UIView.ContentScaleFactor UIKit.UIView.ContentStretch UIKit.UIView.CoordinateSpace UIKit.UIView.DirectionalLayoutMargins UIKit.UIView.EffectiveUserInterfaceLayoutDirection UIKit.UIView.ExclusiveTouch UIKit.UIView.FirstBaselineAnchor UIKit.UIView.FocusGroupIdentifier UIKit.UIView.FocusItemContainer UIKit.UIView.Focused UIKit.UIView.GestureRecognizers UIKit.UIView.HasAmbiguousLayout UIKit.UIView.HeightAnchor UIKit.UIView.Hidden UIKit.UIView.InheritedAnimationDuration UIKit.UIView.InsetsLayoutMarginsFromSafeArea UIKit.UIView.Interactions UIKit.UIView.IntrinsicContentSize UIKit.UIView.IsAccessibilityElement UIKit.UIView.LargeContentImage UIKit.UIView.LargeContentImageInsets UIKit.UIView.LargeContentTitle UIKit.UIView.LastBaselineAnchor UIKit.UIView.Layer UIKit.UIView.LayoutGuides UIKit.UIView.LayoutMargins UIKit.UIView.LayoutMarginsGuide UIKit.UIView.LeadingAnchor UIKit.UIView.LeftAnchor UIKit.UIView.MaskView UIKit.UIView.MotionEffects UIKit.UIView.MultipleTouchEnabled UIKit.UIView.Opaque UIKit.UIView.OverrideUserInterfaceStyle UIKit.UIView.ParentFocusEnvironment UIKit.UIView.PreferredFocusEnvironments UIKit.UIView.PreferredFocusedView UIKit.UIView.PreservesSuperviewLayoutMargins UIKit.UIView.ReadableContentGuide UIKit.UIView.RestorationIdentifier UIKit.UIView.RightAnchor UIKit.UIView.SafeAreaInsets UIKit.UIView.SafeAreaLayoutGuide UIKit.UIView.ScalesLargeContentImage UIKit.UIView.SemanticContentAttribute UIKit.UIView.ShouldGroupAccessibilityChildren UIKit.UIView.ShowsLargeContentViewer UIKit.UIView.Subviews UIKit.UIView.Superview UIKit.UIView.Tag UIKit.UIView.TintAdjustmentMode UIKit.UIView.TintColor UIKit.UIView.TopAnchor UIKit.UIView.TrailingAnchor UIKit.UIView.TraitCollection UIKit.UIView.Transform UIKit.UIView.Transform3D UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints UIKit.UIView.UserInteractionEnabled UIKit.UIView.ViewForBaselineLayout UIKit.UIView.ViewForFirstBaselineLayout UIKit.UIView.ViewForLastBaselineLayout UIKit.UIView.ViewPrintFormatter UIKit.UIView.WidthAnchor UIKit.UIView.Window UIKit.UIView.AnnouncementDidFinishNotification UIKit.UIView.AnnouncementNotification UIKit.UIView.AssistiveTechnologyKey UIKit.UIView.AssistiveTouchStatusDidChangeNotification UIKit.UIView.BoldTextStatusDidChangeNotification UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification UIKit.UIView.ClosedCaptioningStatusDidChangeNotification UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification UIKit.UIView.ElementFocusedNotification UIKit.UIView.FocusedElementKey UIKit.UIView.GrayscaleStatusDidChangeNotification UIKit.UIView.GuidedAccessStatusDidChangeNotification UIKit.UIView.HearingDevicePairedEarDidChangeNotification UIKit.UIView.InvertColorsStatusDidChangeNotification UIKit.UIView.LayoutChangedNotification UIKit.UIView.MonoAudioStatusDidChangeNotification UIKit.UIView.NoIntrinsicMetric UIKit.UIView.NotificationSwitchControlIdentifier UIKit.UIView.NotificationVoiceOverIdentifier UIKit.UIView.OnOffSwitchLabelsDidChangeNotification UIKit.UIView.PageScrolledNotification UIKit.UIView.PauseAssistiveTechnologyNotification UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification UIKit.UIView.ReduceMotionStatusDidChangeNotification UIKit.UIView.ReduceTransparencyStatusDidChangeNotification UIKit.UIView.ResumeAssistiveTechnologyNotification UIKit.UIView.ScreenChangedNotification UIKit.UIView.ShakeToUndoDidChangeNotification UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification UIKit.UIView.SpeakScreenStatusDidChangeNotification UIKit.UIView.SpeakSelectionStatusDidChangeNotification UIKit.UIView.SpeechAttributeIpaNotation UIKit.UIView.SpeechAttributeLanguage UIKit.UIView.SpeechAttributePitch UIKit.UIView.SpeechAttributePunctuation UIKit.UIView.SpeechAttributeQueueAnnouncement UIKit.UIView.SpeechAttributeSpellOut UIKit.UIView.SwitchControlStatusDidChangeNotification UIKit.UIView.TextAttributeContext UIKit.UIView.TextAttributeCustom UIKit.UIView.TextAttributeHeadingLevel UIKit.UIView.TraitAdjustable UIKit.UIView.TraitAllowsDirectInteraction UIKit.UIView.TraitButton UIKit.UIView.TraitCausesPageTurn UIKit.UIView.TraitHeader UIKit.UIView.TraitImage UIKit.UIView.TraitKeyboardKey UIKit.UIView.TraitLink UIKit.UIView.TraitNone UIKit.UIView.TraitNotEnabled UIKit.UIView.TraitPlaysSound UIKit.UIView.TraitSearchField UIKit.UIView.TraitSelected UIKit.UIView.TraitStartsMediaSession UIKit.UIView.TraitStaticText UIKit.UIView.TraitSummaryElement UIKit.UIView.TraitTabBar UIKit.UIView.TraitUpdatesFrequently UIKit.UIView.UILayoutFittingCompressedSize UIKit.UIView.UILayoutFittingExpandedSize UIKit.UIView.UnfocusedElementKey UIKit.UIView.VideoAutoplayStatusDidChangeNotification UIKit.UIView.VoiceOverStatusChanged UIKit.UIView.VoiceOverStatusDidChangeNotification UIKit.UIView.Appearance UIKit.UIView.AnimationWillStart UIKit.UIView.AnimationWillEnd UIKit.UIResponder.AccessibilityDecrement() UIKit.UIResponder.AccessibilityElementDidBecomeFocused() UIKit.UIResponder.AccessibilityElementDidLoseFocus() UIKit.UIResponder.AccessibilityElementIsFocused() UIKit.UIResponder.AccessibilityIncrement() UIKit.UIResponder.AccessibilityPerformEscape() UIKit.UIResponder.AccessibilityPerformMagicTap() UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection) UIKit.UIResponder.BecomeFirstResponder() UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder) UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[]) UIKit.UIResponder.CanPerform(ObjCRuntime.Selector, Foundation.NSObject) UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString) UIKit.UIResponder.Copy(Foundation.NSObject) UIKit.UIResponder.Cut(Foundation.NSObject) UIKit.UIResponder.Delete(Foundation.NSObject) UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector, Foundation.NSObject) UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject) UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject) UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype, UIKit.UIEvent) UIKit.UIResponder.Paste(Foundation.NSObject) UIKit.UIResponder.Paste(Foundation.NSItemProvider[]) UIKit.UIResponder.PressesBegan(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesCancelled(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesChanged(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.PressesEnded(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent) UIKit.UIResponder.ReloadInputViews() UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent) UIKit.UIResponder.ResignFirstResponder() UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity) UIKit.UIResponder.Select(Foundation.NSObject) UIKit.UIResponder.SelectAll(Foundation.NSObject) UIKit.UIResponder.ToggleBoldface(Foundation.NSObject) UIKit.UIResponder.ToggleItalics(Foundation.NSObject) UIKit.UIResponder.ToggleUnderline(Foundation.NSObject) UIKit.UIResponder.TouchesCancelled(Foundation.NSSet, UIKit.UIEvent) UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet) UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler) UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity) UIKit.UIResponder.ValidateCommand(UIKit.UICommand) UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers UIKit.UIResponder.AccessibilityCustomActions UIKit.UIResponder.AccessibilityDragSourceDescriptors UIKit.UIResponder.AccessibilityDropPointDescriptors UIKit.UIResponder.ActivityItemsConfiguration UIKit.UIResponder.CanBecomeFirstResponder UIKit.UIResponder.CanResignFirstResponder UIKit.UIResponder.EditingInteractionConfiguration UIKit.UIResponder.InputAccessoryView UIKit.UIResponder.InputAccessoryViewController UIKit.UIResponder.InputAssistantItem UIKit.UIResponder.InputView UIKit.UIResponder.InputViewController UIKit.UIResponder.IsFirstResponder UIKit.UIResponder.KeyCommands UIKit.UIResponder.NextResponder UIKit.UIResponder.PasteConfiguration UIKit.UIResponder.TextInputContextIdentifier UIKit.UIResponder.TextInputMode UIKit.UIResponder.UndoManager UIKit.UIResponder.UserActivity Foundation.NSObject.PlatformAssembly Foundation.NSObject.MonoTouchAssembly Foundation.NSObject.IsNewRefcountEnabled() Foundation.NSObject.MarkDirty() Foundation.NSObject.ConformsToProtocol(System.IntPtr) Foundation.NSObject.DangerousRelease() Foundation.NSObject.DangerousRetain() Foundation.NSObject.DangerousAutorelease() Foundation.NSObject.GetNativeField(System.String) Foundation.NSObject.SetNativeField(System.String, Foundation.NSObject) Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.BeginInvokeOnMainThread(System.Action) Foundation.NSObject.InvokeOnMainThread(System.Action) Foundation.NSObject.FromObject(System.Object) Foundation.NSObject.SetValueForKeyPath(System.IntPtr, Foundation.NSString) Foundation.NSObject.GetHashCode() Foundation.NSObject.Equals(System.Object) Foundation.NSObject.Equals(Foundation.NSObject) Foundation.NSObject.ToString() Foundation.NSObject.Invoke(System.Action, System.Double) Foundation.NSObject.Invoke(System.Action, System.TimeSpan) Foundation.NSObject.AddObserver(System.String, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>) Foundation.NSObject.AddObserver(Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>) Foundation.NSObject.Alloc(ObjCRuntime.Class) Foundation.NSObject.Init() Foundation.NSObject.InvokeInBackground(System.Action) Foundation.NSObject.AddObserver(Foundation.NSObject, Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.IntPtr) Foundation.NSObject.AddObserver(Foundation.NSObject, System.String, Foundation.NSKeyValueObservingOptions, System.IntPtr) Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String) Foundation.NSObject.AwakeFromNib() Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject) Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject, ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.Copy() Foundation.NSObject.DidChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString) Foundation.NSObject.DidChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet) Foundation.NSObject.DidChangeValue(System.String) Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector) Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[]) Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString) Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector) Foundation.NSObject.GetNativeHash() Foundation.NSObject.IsEqual(Foundation.NSObject) Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class) Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class) Foundation.NSObject.MutableCopy() Foundation.NSObject.ObserveValue(Foundation.NSString, Foundation.NSObject, Foundation.NSDictionary, System.IntPtr) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, System.Double, Foundation.NSString[]) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, System.Double) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, System.Boolean) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, System.Boolean, Foundation.NSString[]) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject) Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, Foundation.NSObject) Foundation.NSObject.PrepareForInterfaceBuilder() Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString, System.IntPtr) Foundation.NSObject.RemoveObserver(Foundation.NSObject, System.String, System.IntPtr) Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.RemoveObserver(Foundation.NSObject, System.String) Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector) Foundation.NSObject.SetNilValueForKey(Foundation.NSString) Foundation.NSObject.SetValueForKey(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject, Foundation.NSString) Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary) Foundation.NSObject.ValueForKey(Foundation.NSString) Foundation.NSObject.ValueForKeyPath(Foundation.NSString) Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString) Foundation.NSObject.WillChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString) Foundation.NSObject.WillChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet) Foundation.NSObject.WillChangeValue(System.String) Foundation.NSObject.IsDirectBinding Foundation.NSObject.SuperHandle Foundation.NSObject.Handle Foundation.NSObject.Class Foundation.NSObject.DebugDescription Foundation.NSObject.Description Foundation.NSObject.IsProxy Foundation.NSObject.RetainCount Foundation.NSObject.Self Foundation.NSObject.Superclass Foundation.NSObject.Zone Foundation.NSObject.ChangeIndexesKey Foundation.NSObject.ChangeKindKey Foundation.NSObject.ChangeNewKey Foundation.NSObject.ChangeNotificationIsPriorKey Foundation.NSObject.ChangeOldKey System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.iOS Assembly : Mapsui.UI.iOS.dll Syntax [Register(\"MapControl\")] public class MapControl : UIView, IEquatable<NSObject>, INSObjectProtocol, IUIPasteConfigurationSupporting, IUIUserActivityRestoring, IEnumerable, INSCoding, IUIAccessibilityIdentification, IUIAppearance, IUIAppearanceContainer, IUICoordinateSpace, IUIDynamicItem, IUIFocusItem, IUIFocusEnvironment, IUIFocusItemContainer, IUILargeContentViewerItem, IUITraitEnvironment, ICALayerDelegate, INativeObject, IDisposable, IMapControl, INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CoreGraphics.CGRect frame | Improve this Doc View Source MapControl(IntPtr) Declaration [Preserve] public MapControl(IntPtr handle) Parameters Type Name Description System.IntPtr handle Properties | Improve this Doc View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CoreGraphics.CGRect Overrides UIKit.UIView.Frame | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides UIKit.UIView.Dispose(System.Boolean) | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() Overrides UIKit.UIView.LayoutMarginsDidChange() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source TouchesBegan(NSSet, UIEvent) Declaration public override void TouchesBegan(NSSet touches, UIEvent evt) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent evt Overrides UIKit.UIResponder.TouchesBegan(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source TouchesEnded(NSSet, UIEvent) Declaration public override void TouchesEnded(NSSet touches, UIEvent e) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent e Overrides UIKit.UIResponder.TouchesEnded(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source TouchesMoved(NSSet, UIEvent) Declaration public override void TouchesMoved(NSSet touches, UIEvent evt) Parameters Type Name Description Foundation.NSSet touches UIKit.UIEvent evt Overrides UIKit.UIResponder.TouchesMoved(Foundation.NSSet, UIKit.UIEvent) | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler Implements System.IEquatable<T> Foundation.INSObjectProtocol UIKit.IUIPasteConfigurationSupporting UIKit.IUIUserActivityRestoring System.Collections.IEnumerable Foundation.INSCoding UIKit.IUIAccessibilityIdentification UIKit.IUIAppearance UIKit.IUIAppearanceContainer UIKit.IUICoordinateSpace UIKit.IUIDynamicItem UIKit.IUIFocusItem UIKit.IUIFocusEnvironment UIKit.IUIFocusItemContainer UIKit.IUILargeContentViewerItem UIKit.IUITraitEnvironment CoreAnimation.ICALayerDelegate ObjCRuntime.INativeObject System.IDisposable IMapControl System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.UI.HoveredEventArgs.html": {
    "href": "api/Mapsui.UI.HoveredEventArgs.html",
    "title": "Class HoveredEventArgs",
    "keywords": "Class HoveredEventArgs Inheritance System.Object HoveredEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class HoveredEventArgs : EventArgs Constructors | Improve this Doc View Source HoveredEventArgs(Geometries.Point) Declaration public HoveredEventArgs(Geometries.Point screenPosition) Parameters Type Name Description Geometries.Point screenPosition Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.Forms.Utils.PolylineConverter.html": {
    "href": "api/Mapsui.UI.Forms.Utils.PolylineConverter.html",
    "title": "Class PolylineConverter",
    "keywords": "Class PolylineConverter Polyline helper class Inheritance System.Object PolylineConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Utils Assembly : Mapsui.UI.Forms.dll Syntax public static class PolylineConverter Methods | Improve this Doc View Source DecodePolyline(String) Decode Declaration public static List<Position> DecodePolyline(string encodedPolyline) Parameters Type Name Description System.String encodedPolyline Returns Type Description System.Collections.Generic.List < Position >"
  },
  "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance System.Object System.EventArgs SelectedPinChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Improve this Doc View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin"
  },
  "api/Mapsui.UI.Forms.Circle.html": {
    "href": "api/Mapsui.UI.Forms.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance System.Object Xamarin.Forms.BindableObject Drawable Circle Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Circle : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Circle() Declaration public Circle() Fields | Improve this Doc View Source CenterProperty Declaration public static readonly BindableProperty CenterProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source QualityProperty Declaration public static readonly BindableProperty QualityProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RadiusProperty Declaration public static readonly BindableProperty RadiusProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Improve this Doc View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.Callout.html": {
    "href": "api/Mapsui.UI.Forms.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance System.Object Xamarin.Forms.BindableObject Callout Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Callout : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IFeatureProvider Constructors | Improve this Doc View Source Callout(Pin) Declaration public Callout(Pin pin) Parameters Type Name Description Pin pin Fields | Improve this Doc View Source AnchorProperty Bindable property for the Anchor property Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowAlignmentProperty Bindable property for the ArrowAlignment property Declaration public static readonly BindableProperty ArrowAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowHeightProperty Bindable property for the ArrowHeight property Declaration public static readonly BindableProperty ArrowHeightProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowPositionProperty Bindable property for the ArrowPosition property Declaration public static readonly BindableProperty ArrowPositionProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ArrowWidthProperty Bindable property for the ArrowWidth property Declaration public static readonly BindableProperty ArrowWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source BackgroundColorProperty Bindable property for the BackgroundColor property Declaration public static readonly BindableProperty BackgroundColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ColorProperty Bindable property for the Color property Declaration public static readonly BindableProperty ColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ContentProperty Bindable property for the Content property Declaration public static readonly BindableProperty ContentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source DefaultSubtitleFontAttributes Declaration public static FontAttributes DefaultSubtitleFontAttributes Field Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source DefaultSubtitleFontColor Declaration public static Color DefaultSubtitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultSubtitleFontName Declaration public static string DefaultSubtitleFontName Field Value Type Description System.String | Improve this Doc View Source DefaultSubtitleFontSize Declaration public static double DefaultSubtitleFontSize Field Value Type Description System.Double | Improve this Doc View Source DefaultSubtitleTextAlignment Declaration public static TextAlignment DefaultSubtitleTextAlignment Field Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source DefaultTitleFontAttributes Declaration public static FontAttributes DefaultTitleFontAttributes Field Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source DefaultTitleFontColor Declaration public static Color DefaultTitleFontColor Field Value Type Description Xamarin.Forms.Color | Improve this Doc View Source DefaultTitleFontName Declaration public static string DefaultTitleFontName Field Value Type Description System.String | Improve this Doc View Source DefaultTitleFontSize Declaration public static double DefaultTitleFontSize Field Value Type Description System.Double | Improve this Doc View Source DefaultTitleTextAlignment Declaration public static TextAlignment DefaultTitleTextAlignment Field Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source IsClosableByClickProperty Bindable property for the IsClosableByClick property Declaration public static readonly BindableProperty IsClosableByClickProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxWidthProperty Bindable property for the MaxWidth property Declaration public static readonly BindableProperty MaxWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PaddingProperty Bindable property for the Padding property Declaration public static readonly BindableProperty PaddingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RectRadiusProperty Bindable property for the RectRadius property Declaration public static readonly BindableProperty RectRadiusProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotateWithMapProperty Bindable property for the RotateWithMap property Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationProperty Bindable property for the Rotation property Declaration public static readonly BindableProperty RotationProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ShadowWidthProperty Bindable property for the ShadowWidth property Declaration public static readonly BindableProperty ShadowWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SpacingProperty Bindable property for the Spacing property Declaration public static readonly BindableProperty SpacingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeWidthProperty Bindable property for the StrokeWidth property Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontAttributesProperty Bindable property for the SubtitleFontAttributes property Declaration public static readonly BindableProperty SubtitleFontAttributesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontColorProperty Bindable property for the SubtitleFontColor property Declaration public static readonly BindableProperty SubtitleFontColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontNameProperty Bindable property for the SubtitleFontName property Declaration public static readonly BindableProperty SubtitleFontNameProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleFontSizeProperty Bindable property for the SubtitleFontSize property Declaration public static readonly BindableProperty SubtitleFontSizeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleProperty Bindable property for the Subtitle property Declaration public static readonly BindableProperty SubtitleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SubtitleTextAlignmentProperty Bindable property for the SubtitleTextAlignment property Declaration public static readonly BindableProperty SubtitleTextAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontAttributesProperty Bindable property for the TitleFontAttributes property Declaration public static readonly BindableProperty TitleFontAttributesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontColorProperty Bindable property for the TitleFontColor property Declaration public static readonly BindableProperty TitleFontColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontNameProperty Bindable property for the TitleFontName property Declaration public static readonly BindableProperty TitleFontNameProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleFontSizeProperty Bindable property for the TitleFontSize property Declaration public static readonly BindableProperty TitleFontSizeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleProperty Bindable property for the Title property Declaration public static readonly BindableProperty TitleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TitleTextAlignmentProperty Bindable property for the TitleTextAlignment property Declaration public static readonly BindableProperty TitleTextAlignmentProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TypeProperty Bindable property for the Type property Declaration public static readonly BindableProperty TypeProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Anchor Anchor position of Callout Declaration public Point Anchor { get; set; } Property Value Type Description Xamarin.Forms.Point | Improve this Doc View Source ArrowAlignment Arrow alignment of Callout Declaration public ArrowAlignment ArrowAlignment { get; set; } Property Value Type Description ArrowAlignment | Improve this Doc View Source ArrowHeight Height from arrow of Callout Declaration public double ArrowHeight { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ArrowPosition Declaration public double ArrowPosition { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ArrowWidth Width from arrow of Callout Declaration public double ArrowWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Content Content of Callout Declaration public int Content { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Feature Feature, which belongs to callout. Should be the same as for the pin to which this callout belongs. Declaration public Feature Feature { get; } Property Value Type Description Feature | Improve this Doc View Source IsClosableByClick Is Callout closable by a click on the callout Declaration public bool IsClosableByClick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxWidth MaxWidth for Title and Subtitel of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Xamarin.Forms.Thickness | Improve this Doc View Source Pin Pin to which this callout belongs Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source RectRadius Radius of rounded corners of Callout Declaration public double RectRadius { get; set; } Property Value Type Description System.Double | Improve this Doc View Source RotateWithMap Rotate Callout with map Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Rotation Rotation of Callout around the anchor Declaration public double Rotation { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ShadowWidth Shadow width around Callout Declaration public double ShadowWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Spacing Space between Title and Subtitel of Callout Declaration public double Spacing { get; set; } Property Value Type Description System.Double | Improve this Doc View Source StrokeWidth Stroke width of frame around Callout Declaration public double StrokeWidth { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Subtitle Content of Callout detail label Declaration public string Subtitle { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleFontAttributes Font attributes to render subtitle Declaration public FontAttributes SubtitleFontAttributes { get; set; } Property Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source SubtitleFontColor Font color to render subtitle Declaration public Color SubtitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source SubtitleFontName Font name to use rendering subtitle Declaration public string SubtitleFontName { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubtitleFontSize Font size to rendering subtitle Declaration public double SubtitleFontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source SubtitleTextAlignment Text alignment of title Declaration public TextAlignment SubtitleTextAlignment { get; set; } Property Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source Title Content of Callout title label Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleFontAttributes Font attributes to render title Declaration public FontAttributes TitleFontAttributes { get; set; } Property Value Type Description Xamarin.Forms.FontAttributes | Improve this Doc View Source TitleFontColor Font color to render title Declaration public Color TitleFontColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source TitleFontName Font name to use rendering title Declaration public string TitleFontName { get; set; } Property Value Type Description System.String | Improve this Doc View Source TitleFontSize Font size to rendering title Declaration public double TitleFontSize { get; set; } Property Value Type Description System.Double | Improve this Doc View Source TitleTextAlignment Text alignment of title Declaration public TextAlignment TitleTextAlignment { get; set; } Property Value Type Description Xamarin.Forms.TextAlignment | Improve this Doc View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be single, detail or custom. The last is a bitmap id for an owner drawn image. Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) Events | Improve this Doc View Source CalloutClicked Declaration public event EventHandler<CalloutClickedEventArgs> CalloutClicked Event Type Type Description System.EventHandler < CalloutClickedEventArgs > | Improve this Doc View Source CalloutClosed Declaration public event EventHandler<EventArgs> CalloutClosed Event Type Type Description System.EventHandler < System.EventArgs > Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Android.html": {
    "href": "api/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl PointExtensions Resource Resource.Attribute Resource.String Resource.Styleable Enums SkiaRenderMode"
  },
  "api/Mapsui.UI.Android.Resource.html": {
    "href": "api/Mapsui.UI.Android.Resource.html",
    "title": "Class Resource",
    "keywords": "Class Resource Inheritance System.Object Resource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class Resource"
  },
  "api/Mapsui.UI.Android.MapControl.html": {
    "href": "api/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object Java.Lang.Object Android.Views.View Android.Views.ViewGroup MapControl Implements Android.Graphics.Drawables.Drawable.ICallback Android.Views.Accessibility.IAccessibilityEventSource Android.Views.KeyEvent.ICallback Android.Views.IViewManager Android.Views.IViewParent Android.Runtime.IJavaObject Java.Interop.IJavaPeerable System.IDisposable IMapControl System.ComponentModel.INotifyPropertyChanged Inherited Members Android.Views.ViewGroup.ClipToPaddingMask Android.Views.ViewGroup.LayoutModeClipBounds Android.Views.ViewGroup.LayoutModeOpticalBounds Android.Views.ViewGroup.AddStatesFromChildren() Android.Views.ViewGroup.AddView(Android.Views.View) Android.Views.ViewGroup.AddView(Android.Views.View, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddView(Android.Views.View, System.Int32, System.Int32) Android.Views.ViewGroup.AddViewInLayout(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AddViewInLayout(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams, System.Boolean) Android.Views.ViewGroup.AttachLayoutAnimationParameters(Android.Views.View, Android.Views.ViewGroup.LayoutParams, System.Int32, System.Int32) Android.Views.ViewGroup.AttachViewToParent(Android.Views.View, System.Int32, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.BringChildToFront(Android.Views.View) Android.Views.ViewGroup.CanAnimate() Android.Views.ViewGroup.CheckLayoutParams(Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.ChildDrawableStateChanged(Android.Views.View) Android.Views.ViewGroup.ChildHasTransientStateChanged(Android.Views.View, System.Boolean) Android.Views.ViewGroup.CleanupLayoutState(Android.Views.View) Android.Views.ViewGroup.ClearChildFocus(Android.Views.View) Android.Views.ViewGroup.ClearDisappearingChildren() Android.Views.ViewGroup.Debug(System.Int32) Android.Views.ViewGroup.DetachAllViewsFromParent() Android.Views.ViewGroup.DetachViewFromParent(Android.Views.View) Android.Views.ViewGroup.DetachViewFromParent(System.Int32) Android.Views.ViewGroup.DetachViewsFromParent(System.Int32, System.Int32) Android.Views.ViewGroup.DispatchFreezeSelfOnly(Android.Util.SparseArray) Android.Views.ViewGroup.DispatchSetActivated(System.Boolean) Android.Views.ViewGroup.DispatchSetSelected(System.Boolean) Android.Views.ViewGroup.DispatchThawSelfOnly(Android.Util.SparseArray) Android.Views.ViewGroup.DrawChild(Android.Graphics.Canvas, Android.Views.View, System.Int64) Android.Views.ViewGroup.EndViewTransition(Android.Views.View) Android.Views.ViewGroup.FocusableViewAvailable(Android.Views.View) Android.Views.ViewGroup.FocusSearch(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.ViewGroup.GatherTransparentRegion(Android.Graphics.Region) Android.Views.ViewGroup.GenerateDefaultLayoutParams() Android.Views.ViewGroup.GenerateLayoutParams(Android.Util.IAttributeSet) Android.Views.ViewGroup.GenerateLayoutParams(Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.GetChildAt(System.Int32) Android.Views.ViewGroup.GetChildDrawingOrder(System.Int32, System.Int32) Android.Views.ViewGroup.GetChildMeasureSpec(System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.GetChildStaticTransformation(Android.Views.View, Android.Views.Animations.Transformation) Android.Views.ViewGroup.GetChildVisibleRect(Android.Views.View, Android.Graphics.Rect, Android.Graphics.Point) Android.Views.ViewGroup.IndexOfChild(Android.Views.View) Android.Views.ViewGroup.InvalidateChild(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.InvalidateChildInParent(System.Int32[], Android.Graphics.Rect) Android.Views.ViewGroup.Layout(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChild(Android.Views.View, System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChildren(System.Int32, System.Int32) Android.Views.ViewGroup.MeasureChildWithMargins(Android.Views.View, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.NotifySubtreeAccessibilityStateChanged(Android.Views.View, Android.Views.View, Android.Views.Accessibility.ContentChangeTypes) Android.Views.ViewGroup.OffsetDescendantRectToMyCoords(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.OffsetRectIntoDescendantCoords(Android.Views.View, Android.Graphics.Rect) Android.Views.ViewGroup.OnDescendantInvalidated(Android.Views.View, Android.Views.View) Android.Views.ViewGroup.OnInterceptHoverEvent(Android.Views.MotionEvent) Android.Views.ViewGroup.OnInterceptTouchEvent(Android.Views.MotionEvent) Android.Views.ViewGroup.OnNestedFling(Android.Views.View, System.Single, System.Single, System.Boolean) Android.Views.ViewGroup.OnNestedPreFling(Android.Views.View, System.Single, System.Single) Android.Views.ViewGroup.OnNestedPrePerformAccessibilityAction(Android.Views.View, Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.ViewGroup.OnNestedPreScroll(Android.Views.View, System.Int32, System.Int32, System.Int32[]) Android.Views.ViewGroup.OnNestedScroll(Android.Views.View, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.ViewGroup.OnNestedScrollAccepted(Android.Views.View, Android.Views.View, Android.Views.ScrollAxis) Android.Views.ViewGroup.OnRequestFocusInDescendants(System.Int32, Android.Graphics.Rect) Android.Views.ViewGroup.OnRequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent) Android.Views.ViewGroup.OnStartNestedScroll(Android.Views.View, Android.Views.View, Android.Views.ScrollAxis) Android.Views.ViewGroup.OnStopNestedScroll(Android.Views.View) Android.Views.ViewGroup.OnViewAdded(Android.Views.View) Android.Views.ViewGroup.OnViewRemoved(Android.Views.View) Android.Views.ViewGroup.RecomputeViewAttributes(Android.Views.View) Android.Views.ViewGroup.RemoveAllViews() Android.Views.ViewGroup.RemoveAllViewsInLayout() Android.Views.ViewGroup.RemoveDetachedView(Android.Views.View, System.Boolean) Android.Views.ViewGroup.RemoveView(Android.Views.View) Android.Views.ViewGroup.RemoveViewAt(System.Int32) Android.Views.ViewGroup.RemoveViewInLayout(Android.Views.View) Android.Views.ViewGroup.RemoveViews(System.Int32, System.Int32) Android.Views.ViewGroup.RemoveViewsInLayout(System.Int32, System.Int32) Android.Views.ViewGroup.RequestChildFocus(Android.Views.View, Android.Views.View) Android.Views.ViewGroup.RequestChildRectangleOnScreen(Android.Views.View, Android.Graphics.Rect, System.Boolean) Android.Views.ViewGroup.RequestDisallowInterceptTouchEvent(System.Boolean) Android.Views.ViewGroup.RequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent) Android.Views.ViewGroup.RequestTransparentRegion(Android.Views.View) Android.Views.ViewGroup.ResetResolvedLayoutDirection() Android.Views.ViewGroup.ResetResolvedTextDirection() Android.Views.ViewGroup.ScheduleLayoutAnimation() Android.Views.ViewGroup.SetAddStatesFromChildren(System.Boolean) Android.Views.ViewGroup.SetChildrenDrawingCacheEnabled(System.Boolean) Android.Views.ViewGroup.SetClipChildren(System.Boolean) Android.Views.ViewGroup.SetClipToPadding(System.Boolean) Android.Views.ViewGroup.SetOnHierarchyChangeListener(Android.Views.ViewGroup.IOnHierarchyChangeListener) Android.Views.ViewGroup.SetStaticTransformationsEnabled(System.Boolean) Android.Views.ViewGroup.ShouldDelayChildPressedState() Android.Views.ViewGroup.ShowContextMenuForChild(Android.Views.View) Android.Views.ViewGroup.ShowContextMenuForChild(Android.Views.View, System.Single, System.Single) Android.Views.ViewGroup.StartActionModeForChild(Android.Views.View, Android.Views.ActionMode.ICallback) Android.Views.ViewGroup.StartActionModeForChild(Android.Views.View, Android.Views.ActionMode.ICallback, Android.Views.ActionModeType) Android.Views.ViewGroup.StartLayoutAnimation() Android.Views.ViewGroup.StartViewTransition(Android.Views.View) Android.Views.ViewGroup.UpdateViewLayout(Android.Views.View, Android.Views.ViewGroup.LayoutParams) Android.Views.ViewGroup.AlwaysDrawnWithCacheEnabled Android.Views.ViewGroup.AnimationCacheEnabled Android.Views.ViewGroup.ChildCount Android.Views.ViewGroup.ChildrenDrawingOrderEnabled Android.Views.ViewGroup.ChildrenDrawnWithCacheEnabled Android.Views.ViewGroup.ClipChildren Android.Views.ViewGroup.ClipToPadding Android.Views.ViewGroup.DescendantFocusability Android.Views.ViewGroup.FocusedChild Android.Views.ViewGroup.LayoutAnimation Android.Views.ViewGroup.LayoutAnimationListener Android.Views.ViewGroup.LayoutMode Android.Views.ViewGroup.LayoutTransition Android.Views.ViewGroup.MotionEventSplittingEnabled Android.Views.ViewGroup.NestedScrollAxes Android.Views.ViewGroup.PersistentDrawingCache Android.Views.ViewGroup.TouchscreenBlocksFocus Android.Views.ViewGroup.TransitionGroup Android.Views.ViewGroup.ChildViewAdded Android.Views.ViewGroup.ChildViewRemoved Android.Views.ViewGroup.AnimationEnd Android.Views.ViewGroup.AnimationRepeat Android.Views.ViewGroup.AnimationStart Android.Views.View.AccessibilityLiveRegionAssertive Android.Views.View.AccessibilityLiveRegionNone Android.Views.View.AccessibilityLiveRegionPolite Android.Views.View.AutofillFlagIncludeNotImportantViews Android.Views.View.AutofillHintCreditCardExpirationDate Android.Views.View.AutofillHintCreditCardExpirationDay Android.Views.View.AutofillHintCreditCardExpirationMonth Android.Views.View.AutofillHintCreditCardExpirationYear Android.Views.View.AutofillHintCreditCardNumber Android.Views.View.AutofillHintCreditCardSecurityCode Android.Views.View.AutofillHintEmailAddress Android.Views.View.AutofillHintName Android.Views.View.AutofillHintPassword Android.Views.View.AutofillHintPhone Android.Views.View.AutofillHintPostalAddress Android.Views.View.AutofillHintPostalCode Android.Views.View.AutofillHintUsername Android.Views.View.AutofillTypeDate Android.Views.View.AutofillTypeList Android.Views.View.AutofillTypeNone Android.Views.View.AutofillTypeText Android.Views.View.AutofillTypeToggle Android.Views.View.DragFlagGlobal Android.Views.View.DragFlagGlobalPersistableUriPermission Android.Views.View.DragFlagGlobalPrefixUriPermission Android.Views.View.DragFlagGlobalUriRead Android.Views.View.DragFlagGlobalUriWrite Android.Views.View.DragFlagOpaque Android.Views.View.FindViewsWithContentDescription Android.Views.View.FocusableAuto Android.Views.View.ImportantForAccessibilityAuto Android.Views.View.ImportantForAccessibilityNo Android.Views.View.ImportantForAccessibilityNoHideDescendants Android.Views.View.ImportantForAccessibilityYes Android.Views.View.ImportantForAutofillAuto Android.Views.View.ImportantForAutofillNo Android.Views.View.ImportantForAutofillNoExcludeDescendants Android.Views.View.ImportantForAutofillYes Android.Views.View.ImportantForAutofillYesExcludeDescendants Android.Views.View.LayoutDirectionInherit Android.Views.View.LayoutDirectionLocale Android.Views.View.LayoutDirectionLtr Android.Views.View.LayoutDirectionRtl Android.Views.View.MeasuredHeightStateShift Android.Views.View.MeasuredSizeMask Android.Views.View.MeasuredStateMask Android.Views.View.MeasuredStateTooSmall Android.Views.View.NoId Android.Views.View.NotFocusable Android.Views.View.OverScrollAlways Android.Views.View.OverScrollIfContentScrolls Android.Views.View.OverScrollNever Android.Views.View.ScreenStateOff Android.Views.View.ScreenStateOn Android.Views.View.ScrollAxisHorizontal Android.Views.View.ScrollAxisNone Android.Views.View.ScrollAxisVertical Android.Views.View.SystemUiFlagFullscreen Android.Views.View.SystemUiFlagHideNavigation Android.Views.View.SystemUiFlagImmersive Android.Views.View.SystemUiFlagImmersiveSticky Android.Views.View.SystemUiFlagLayoutFullscreen Android.Views.View.SystemUiFlagLayoutHideNavigation Android.Views.View.SystemUiFlagLayoutStable Android.Views.View.SystemUiFlagLightNavigationBar Android.Views.View.SystemUiFlagLightStatusBar Android.Views.View.SystemUiFlagLowProfile Android.Views.View.SystemUiFlagVisible Android.Views.View.SystemUiLayoutFlags Android.Views.View.TextAlignmentCenter Android.Views.View.TextAlignmentGravity Android.Views.View.TextAlignmentInherit Android.Views.View.TextAlignmentResolvedDefault Android.Views.View.TextAlignmentTextEnd Android.Views.View.TextAlignmentTextStart Android.Views.View.TextAlignmentViewEnd Android.Views.View.TextAlignmentViewStart Android.Views.View.TextDirectionAnyRtl Android.Views.View.TextDirectionFirstStrong Android.Views.View.TextDirectionFirstStrongLtr Android.Views.View.TextDirectionFirstStrongRtl Android.Views.View.TextDirectionInherit Android.Views.View.TextDirectionLocale Android.Views.View.TextDirectionLtr Android.Views.View.TextDirectionRtl Android.Views.View.ViewLogTag Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle) Android.Views.View.FindViewById<T>(System.Int32) Android.Views.View.Post(System.Action) Android.Views.View.PostDelayed(System.Action, System.Int64) Android.Views.View.RemoveCallbacks(System.Action) Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable, System.Action, System.Int64) Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable, System.Action) Android.Views.View.DispatchSystemUiVisibilityChanged(System.Int32) Android.Views.View.AddChildrenForAccessibility(System.Collections.Generic.IList<Android.Views.View>) Android.Views.View.AddExtraDataToAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo, System.String, Android.OS.Bundle) Android.Views.View.AddFocusables(System.Collections.Generic.IList<Android.Views.View>, Android.Views.FocusSearchDirection) Android.Views.View.AddFocusables(System.Collections.Generic.IList<Android.Views.View>, Android.Views.FocusSearchDirection, Android.Views.FocusablesFlags) Android.Views.View.AddKeyboardNavigationClusters(System.Collections.Generic.ICollection<Android.Views.View>, Android.Views.FocusSearchDirection) Android.Views.View.AddOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener) Android.Views.View.AddOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener) Android.Views.View.AddTouchables(System.Collections.Generic.IList<Android.Views.View>) Android.Views.View.Animate() Android.Views.View.AnnounceForAccessibility(Java.Lang.ICharSequence) Android.Views.View.AnnounceForAccessibility(System.String) Android.Views.View.Autofill(Android.Util.SparseArray) Android.Views.View.Autofill(Android.Views.Autofill.AutofillValue) Android.Views.View.AwakenScrollBars() Android.Views.View.AwakenScrollBars(System.Int32) Android.Views.View.AwakenScrollBars(System.Int32, System.Boolean) Android.Views.View.BringToFront() Android.Views.View.BuildDrawingCache() Android.Views.View.BuildDrawingCache(System.Boolean) Android.Views.View.BuildLayer() Android.Views.View.CallOnClick() Android.Views.View.CancelDragAndDrop() Android.Views.View.CancelLongPress() Android.Views.View.CancelPendingInputEvents() Android.Views.View.CanResolveLayoutDirection() Android.Views.View.CanResolveTextAlignment() Android.Views.View.CanResolveTextDirection() Android.Views.View.CanScrollHorizontally(System.Int32) Android.Views.View.CanScrollVertically(System.Int32) Android.Views.View.CheckInputConnectionProxy(Android.Views.View) Android.Views.View.ClearAnimation() Android.Views.View.ClearFocus() Android.Views.View.CombineMeasuredStates(System.Int32, System.Int32) Android.Views.View.ComputeHorizontalScrollExtent() Android.Views.View.ComputeHorizontalScrollOffset() Android.Views.View.ComputeHorizontalScrollRange() Android.Views.View.ComputeScroll() Android.Views.View.ComputeSystemWindowInsets(Android.Views.WindowInsets, Android.Graphics.Rect) Android.Views.View.ComputeVerticalScrollExtent() Android.Views.View.ComputeVerticalScrollOffset() Android.Views.View.ComputeVerticalScrollRange() Android.Views.View.CreateAccessibilityNodeInfo() Android.Views.View.CreateContextMenu(Android.Views.IContextMenu) Android.Views.View.DestroyDrawingCache() Android.Views.View.DispatchApplyWindowInsets(Android.Views.WindowInsets) Android.Views.View.DispatchCapturedPointerEvent(Android.Views.MotionEvent) Android.Views.View.DispatchConfigurationChanged(Android.Content.Res.Configuration) Android.Views.View.DispatchDisplayHint(Android.Views.ViewStates) Android.Views.View.DispatchDragEvent(Android.Views.DragEvent) Android.Views.View.DispatchDraw(Android.Graphics.Canvas) Android.Views.View.DispatchDrawableHotspotChanged(System.Single, System.Single) Android.Views.View.DispatchFinishTemporaryDetach() Android.Views.View.DispatchGenericFocusedEvent(Android.Views.MotionEvent) Android.Views.View.DispatchGenericMotionEvent(Android.Views.MotionEvent) Android.Views.View.DispatchGenericPointerEvent(Android.Views.MotionEvent) Android.Views.View.DispatchHoverEvent(Android.Views.MotionEvent) Android.Views.View.DispatchKeyEvent(Android.Views.KeyEvent) Android.Views.View.DispatchKeyEventPreIme(Android.Views.KeyEvent) Android.Views.View.DispatchKeyShortcutEvent(Android.Views.KeyEvent) Android.Views.View.DispatchNestedFling(System.Single, System.Single, System.Boolean) Android.Views.View.DispatchNestedPreFling(System.Single, System.Single) Android.Views.View.DispatchNestedPrePerformAccessibilityAction(Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32[], System.Int32[]) Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32[]) Android.Views.View.DispatchPointerCaptureChanged(System.Boolean) Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.DispatchProvideAutofillStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.DispatchProvideStructure(Android.Views.ViewStructure) Android.Views.View.DispatchRestoreInstanceState(Android.Util.SparseArray) Android.Views.View.DispatchSaveInstanceState(Android.Util.SparseArray) Android.Views.View.DispatchSetPressed(System.Boolean) Android.Views.View.DispatchStartTemporaryDetach() Android.Views.View.DispatchSystemUiVisibilityChanged(Android.Views.SystemUiFlags) Android.Views.View.DispatchTouchEvent(Android.Views.MotionEvent) Android.Views.View.DispatchTrackballEvent(Android.Views.MotionEvent) Android.Views.View.DispatchUnhandledMove(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.View.DispatchVisibilityChanged(Android.Views.View, Android.Views.ViewStates) Android.Views.View.DispatchWindowFocusChanged(System.Boolean) Android.Views.View.DispatchWindowSystemUiVisiblityChanged(Android.Views.SystemUiFlags) Android.Views.View.DispatchWindowVisibilityChanged(Android.Views.ViewStates) Android.Views.View.Draw(Android.Graphics.Canvas) Android.Views.View.DrawableHotspotChanged(System.Single, System.Single) Android.Views.View.DrawableStateChanged() Android.Views.View.FindFocus() Android.Views.View.FindViewById(System.Int32) Android.Views.View.FindViewsWithText(System.Collections.Generic.IList<Android.Views.View>, Java.Lang.ICharSequence, Android.Views.FindViewsWith) Android.Views.View.FindViewsWithText(System.Collections.Generic.IList<Android.Views.View>, System.String, Android.Views.FindViewsWith) Android.Views.View.FindViewWithTag(Java.Lang.Object) Android.Views.View.InvokeFitsSystemWindows() Android.Views.View.FitSystemWindows(Android.Graphics.Rect) Android.Views.View.FocusSearch(Android.Views.FocusSearchDirection) Android.Views.View.ForceHasOverlappingRendering(System.Boolean) Android.Views.View.ForceLayout() Android.Views.View.GenerateViewId() Android.Views.View.GetAutofillHints() Android.Views.View.GetClipBounds(Android.Graphics.Rect) Android.Views.View.GetDefaultSize(System.Int32, System.Int32) Android.Views.View.GetDrawableState() Android.Views.View.GetDrawingCache(System.Boolean) Android.Views.View.GetDrawingRect(Android.Graphics.Rect) Android.Views.View.GetFocusable() Android.Views.View.GetFocusables(Android.Views.FocusSearchDirection) Android.Views.View.GetFocusedRect(Android.Graphics.Rect) Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect) Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect, Android.Graphics.Point) Android.Views.View.GetHitRect(Android.Graphics.Rect) Android.Views.View.GetLocalVisibleRect(Android.Graphics.Rect) Android.Views.View.GetLocationInWindow(System.Int32[]) Android.Views.View.GetLocationOnScreen(System.Int32[]) Android.Views.View.GetTag(System.Int32) Android.Views.View.GetWindowVisibleDisplayFrame(Android.Graphics.Rect) Android.Views.View.GetX() Android.Views.View.GetY() Android.Views.View.GetZ() Android.Views.View.GetHasOverlappingRendering() Android.Views.View.Inflate(Android.Content.Context, System.Int32, Android.Views.ViewGroup) Android.Views.View.InitializeFadingEdge(Android.Content.Res.TypedArray) Android.Views.View.InitializeScrollbars(Android.Content.Res.TypedArray) Android.Views.View.Invalidate() Android.Views.View.Invalidate(Android.Graphics.Rect) Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.InvalidateDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.InvalidateOutline() Android.Views.View.JumpDrawablesToCurrentState() Android.Views.View.KeyboardNavigationClusterSearch(Android.Views.View, Android.Views.FocusSearchDirection) Android.Views.View.Measure(System.Int32, System.Int32) Android.Views.View.MergeDrawableStates(System.Int32[], System.Int32[]) Android.Views.View.OffsetLeftAndRight(System.Int32) Android.Views.View.OffsetTopAndBottom(System.Int32) Android.Views.View.OnAnimationEnd() Android.Views.View.OnAnimationStart() Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets) Android.Views.View.OnAttachedToWindow() Android.Views.View.OnCancelPendingInputEvents() Android.Views.View.OnCapturedPointerEvent(Android.Views.MotionEvent) Android.Views.View.OnCheckIsTextEditor() Android.Views.View.OnConfigurationChanged(Android.Content.Res.Configuration) Android.Views.View.OnCreateContextMenu(Android.Views.IContextMenu) Android.Views.View.OnCreateDrawableState(System.Int32) Android.Views.View.OnCreateInputConnection(Android.Views.InputMethods.EditorInfo) Android.Views.View.OnDetachedFromWindow() Android.Views.View.OnDisplayHint(System.Int32) Android.Views.View.OnDragEvent(Android.Views.DragEvent) Android.Views.View.OnDraw(Android.Graphics.Canvas) Android.Views.View.OnDrawForeground(Android.Graphics.Canvas) Android.Views.View.OnDrawScrollBars(Android.Graphics.Canvas) Android.Views.View.OnFilterTouchEventForSecurity(Android.Views.MotionEvent) Android.Views.View.OnFinishInflate() Android.Views.View.OnFinishTemporaryDetach() Android.Views.View.OnFocusChanged(System.Boolean, Android.Views.FocusSearchDirection, Android.Graphics.Rect) Android.Views.View.OnGenericMotionEvent(Android.Views.MotionEvent) Android.Views.View.OnHoverChanged(System.Boolean) Android.Views.View.OnHoverEvent(Android.Views.MotionEvent) Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.OnInitializeAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo) Android.Views.View.OnKeyDown(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyLongPress(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyMultiple(Android.Views.Keycode, System.Int32, Android.Views.KeyEvent) Android.Views.View.OnKeyPreIme(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyShortcut(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnKeyUp(Android.Views.Keycode, Android.Views.KeyEvent) Android.Views.View.OnMeasure(System.Int32, System.Int32) Android.Views.View.OnOverScrolled(System.Int32, System.Int32, System.Boolean, System.Boolean) Android.Views.View.OnPointerCaptureChange(System.Boolean) Android.Views.View.OnPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.OnProvideAutofillStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.OnProvideAutofillVirtualStructure(Android.Views.ViewStructure, Android.Views.AutofillFlags) Android.Views.View.OnProvideStructure(Android.Views.ViewStructure) Android.Views.View.OnProvideVirtualStructure(Android.Views.ViewStructure) Android.Views.View.OnResolvePointerIcon(Android.Views.MotionEvent, System.Int32) Android.Views.View.OnRestoreInstanceState(Android.OS.IParcelable) Android.Views.View.OnRtlPropertiesChanged(Android.Views.LayoutDirection) Android.Views.View.OnSaveInstanceState() Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState) Android.Views.View.OnScrollChanged(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.OnSetAlpha(System.Int32) Android.Views.View.OnStartTemporaryDetach() Android.Views.View.OnTouchEvent(Android.Views.MotionEvent) Android.Views.View.OnTrackballEvent(Android.Views.MotionEvent) Android.Views.View.OnVisibilityAggregated(System.Boolean) Android.Views.View.OnVisibilityChanged(Android.Views.View, Android.Views.ViewStates) Android.Views.View.OnWindowFocusChanged(System.Boolean) Android.Views.View.OnWindowSystemUiVisibilityChanged(Android.Views.SystemUiFlags) Android.Views.View.OnWindowVisibilityChanged(Android.Views.ViewStates) Android.Views.View.OverScrollBy(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean) Android.Views.View.PerformAccessibilityAction(Android.Views.Accessibility.Action, Android.OS.Bundle) Android.Views.View.PerformClick() Android.Views.View.PerformContextClick() Android.Views.View.PerformContextClick(System.Single, System.Single) Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants) Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants, Android.Views.FeedbackFlags) Android.Views.View.PerformLongClick() Android.Views.View.PerformLongClick(System.Single, System.Single) Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects) Android.Views.View.Post(Java.Lang.IRunnable) Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64) Android.Views.View.PostInvalidate() Android.Views.View.PostInvalidate(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostInvalidateDelayed(System.Int64) Android.Views.View.PostInvalidateDelayed(System.Int64, System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostInvalidateOnAnimation() Android.Views.View.PostInvalidateOnAnimation(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.PostOnAnimation(Java.Lang.IRunnable) Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64) Android.Views.View.RefreshDrawableState() Android.Views.View.ReleasePointerCapture() Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable) Android.Views.View.RemoveOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener) Android.Views.View.RemoveOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener) Android.Views.View.RequestApplyInsets() Android.Views.View.RequestFitSystemWindows() Android.Views.View.RequestFocus() Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection) Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection, Android.Graphics.Rect) Android.Views.View.RequestFocusFromTouch() Android.Views.View.RequestLayout() Android.Views.View.RequestPointerCapture() Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect) Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect, System.Boolean) Android.Views.View.RequestUnbufferedDispatch(Android.Views.MotionEvent) Android.Views.View.ResolveSize(System.Int32, System.Int32) Android.Views.View.ResolveSizeAndState(System.Int32, System.Int32, System.Int32) Android.Views.View.RestoreDefaultFocus() Android.Views.View.RestoreHierarchyState(Android.Util.SparseArray) Android.Views.View.SaveHierarchyState(Android.Util.SparseArray) Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable, Java.Lang.IRunnable, System.Int64) Android.Views.View.ScrollBy(System.Int32, System.Int32) Android.Views.View.ScrollTo(System.Int32, System.Int32) Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes) Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent) Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate) Android.Views.View.SetAutofillHints(System.String[]) Android.Views.View.SetBackgroundColor(Android.Graphics.Color) Android.Views.View.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.SetBackgroundResource(System.Int32) Android.Views.View.SetCameraDistance(System.Single) Android.Views.View.SetFadingEdgeLength(System.Int32) Android.Views.View.SetFitsSystemWindows(System.Boolean) Android.Views.View.SetFocusable(Android.Views.ViewFocusability) Android.Views.View.SetForegroundGravity(Android.Views.GravityFlags) Android.Views.View.SetLayerPaint(Android.Graphics.Paint) Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint) Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32) Android.Views.View.SetMinimumHeight(System.Int32) Android.Views.View.SetMinimumWidth(System.Int32) Android.Views.View.SetOnApplyWindowInsetsListener(Android.Views.View.IOnApplyWindowInsetsListener) Android.Views.View.SetOnCapturedPointerListener(Android.Views.View.IOnCapturedPointerListener) Android.Views.View.SetOnClickListener(Android.Views.View.IOnClickListener) Android.Views.View.SetOnContextClickListener(Android.Views.View.IOnContextClickListener) Android.Views.View.SetOnCreateContextMenuListener(Android.Views.View.IOnCreateContextMenuListener) Android.Views.View.SetOnDragListener(Android.Views.View.IOnDragListener) Android.Views.View.SetOnGenericMotionListener(Android.Views.View.IOnGenericMotionListener) Android.Views.View.SetOnHoverListener(Android.Views.View.IOnHoverListener) Android.Views.View.SetOnKeyListener(Android.Views.View.IOnKeyListener) Android.Views.View.SetOnLongClickListener(Android.Views.View.IOnLongClickListener) Android.Views.View.SetOnScrollChangeListener(Android.Views.View.IOnScrollChangeListener) Android.Views.View.SetOnSystemUiVisibilityChangeListener(Android.Views.View.IOnSystemUiVisibilityChangeListener) Android.Views.View.SetOnTouchListener(Android.Views.View.IOnTouchListener) Android.Views.View.SetPadding(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.SetPaddingRelative(System.Int32, System.Int32, System.Int32, System.Int32) Android.Views.View.SetScrollContainer(System.Boolean) Android.Views.View.SetScrollIndicators(System.Int32) Android.Views.View.SetScrollIndicators(System.Int32, System.Int32) Android.Views.View.SetTag(System.Int32, Java.Lang.Object) Android.Views.View.SetWillNotCacheDrawing(System.Boolean) Android.Views.View.SetWillNotDraw(System.Boolean) Android.Views.View.SetX(System.Single) Android.Views.View.SetY(System.Single) Android.Views.View.SetZ(System.Single) Android.Views.View.ShowContextMenu() Android.Views.View.ShowContextMenu(System.Single, System.Single) Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback) Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback, Android.Views.ActionModeType) Android.Views.View.StartAnimation(Android.Views.Animations.Animation) Android.Views.View.StartDrag(Android.Content.ClipData, Android.Views.View.DragShadowBuilder, Java.Lang.Object, System.Int32) Android.Views.View.StartDragAndDrop(Android.Content.ClipData, Android.Views.View.DragShadowBuilder, Java.Lang.Object, System.Int32) Android.Views.View.StartNestedScroll(Android.Views.ScrollAxis) Android.Views.View.StopNestedScroll() Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable, Java.Lang.IRunnable) Android.Views.View.UpdateDragShadow(Android.Views.View.DragShadowBuilder) Android.Views.View.VerifyDrawable(Android.Graphics.Drawables.Drawable) Android.Views.View.WillNotCacheDrawing() Android.Views.View.WillNotDraw() Android.Views.View.EmptyStateSet Android.Views.View.EnabledFocusedSelectedStateSet Android.Views.View.EnabledFocusedSelectedWindowFocusedStateSet Android.Views.View.EnabledFocusedStateSet Android.Views.View.EnabledFocusedWindowFocusedStateSet Android.Views.View.EnabledSelectedStateSet Android.Views.View.EnabledSelectedWindowFocusedStateSet Android.Views.View.EnabledStateSet Android.Views.View.EnabledWindowFocusedStateSet Android.Views.View.FocusedSelectedStateSet Android.Views.View.FocusedSelectedWindowFocusedStateSet Android.Views.View.FocusedStateSet Android.Views.View.FocusedWindowFocusedStateSet Android.Views.View.PressedEnabledFocusedSelectedStateSet Android.Views.View.PressedEnabledFocusedSelectedWindowFocusedStateSet Android.Views.View.PressedEnabledFocusedStateSet Android.Views.View.PressedEnabledFocusedWindowFocusedStateSet Android.Views.View.PressedEnabledSelectedStateSet Android.Views.View.PressedEnabledSelectedWindowFocusedStateSet Android.Views.View.PressedEnabledStateSet Android.Views.View.PressedEnabledWindowFocusedStateSet Android.Views.View.PressedFocusedSelectedStateSet Android.Views.View.PressedFocusedSelectedWindowFocusedStateSet Android.Views.View.PressedFocusedStateSet Android.Views.View.PressedFocusedWindowFocusedStateSet Android.Views.View.PressedSelectedStateSet Android.Views.View.PressedSelectedWindowFocusedStateSet Android.Views.View.PressedStateSet Android.Views.View.PressedWindowFocusedStateSet Android.Views.View.ScaleXs Android.Views.View.ScaleYs Android.Views.View.SelectedStateSet Android.Views.View.SelectedWindowFocusedStateSet Android.Views.View.WindowFocusedStateSet Android.Views.View.X Android.Views.View.Y Android.Views.View.Z Android.Views.View.AccessibilityClassNameFormatted Android.Views.View.AccessibilityClassName Android.Views.View.AccessibilityLiveRegion Android.Views.View.AccessibilityNodeProvider Android.Views.View.AccessibilityTraversalAfter Android.Views.View.AccessibilityTraversalBefore Android.Views.View.Activated Android.Views.View.Alpha Android.Views.View.Animation Android.Views.View.ApplicationWindowToken Android.Views.View.AutofillId Android.Views.View.AutofillType Android.Views.View.AutofillValue Android.Views.View.Background Android.Views.View.BackgroundTintList Android.Views.View.BackgroundTintMode Android.Views.View.Baseline Android.Views.View.Bottom Android.Views.View.BottomFadingEdgeStrength Android.Views.View.BottomPaddingOffset Android.Views.View.CameraDistance Android.Views.View.Clickable Android.Views.View.ClipBounds Android.Views.View.ClipToOutline Android.Views.View.ContentDescriptionFormatted Android.Views.View.ContentDescription Android.Views.View.Context Android.Views.View.ContextClickable Android.Views.View.ContextMenuInfo Android.Views.View.DefaultFocusHighlightEnabled Android.Views.View.Display Android.Views.View.DrawingCache Android.Views.View.DrawingCacheBackgroundColor Android.Views.View.DrawingCacheEnabled Android.Views.View.DrawingCacheQuality Android.Views.View.DrawingTime Android.Views.View.DuplicateParentStateEnabled Android.Views.View.Elevation Android.Views.View.Enabled Android.Views.View.FilterTouchesWhenObscured Android.Views.View.FitsSystemWindows Android.Views.View.Focusable Android.Views.View.FocusableInTouchMode Android.Views.View.FocusedByDefault Android.Views.View.Foreground Android.Views.View.ForegroundGravity Android.Views.View.ForegroundTintList Android.Views.View.ForegroundTintMode Android.Views.View.Handler Android.Views.View.HapticFeedbackEnabled Android.Views.View.HasExplicitFocusable Android.Views.View.HasFocus Android.Views.View.HasFocusable Android.Views.View.HasNestedScrollingParent Android.Views.View.HasOnClickListeners Android.Views.View.HasOverlappingRendering Android.Views.View.HasPointerCapture Android.Views.View.HasTransientState Android.Views.View.HasWindowFocus Android.Views.View.Height Android.Views.View.HorizontalFadingEdgeEnabled Android.Views.View.HorizontalFadingEdgeLength Android.Views.View.HorizontalScrollBarEnabled Android.Views.View.HorizontalScrollbarHeight Android.Views.View.Hovered Android.Views.View.Id Android.Views.View.ImportantForAccessibility Android.Views.View.ImportantForAutofill Android.Views.View.IsAccessibilityFocused Android.Views.View.IsAttachedToWindow Android.Views.View.IsDirty Android.Views.View.IsFocused Android.Views.View.IsHardwareAccelerated Android.Views.View.IsImportantForAccessibility Android.Views.View.IsImportantForAutofill Android.Views.View.IsInEditMode Android.Views.View.IsInLayout Android.Views.View.IsInTouchMode Android.Views.View.IsLaidOut Android.Views.View.IsLayoutDirectionResolved Android.Views.View.IsLayoutRequested Android.Views.View.IsOpaque Android.Views.View.IsPaddingOffsetRequired Android.Views.View.IsPaddingRelative Android.Views.View.IsScrollContainer Android.Views.View.IsShown Android.Views.View.IsTemporarilyDetached Android.Views.View.IsTextAlignmentResolved Android.Views.View.IsTextDirectionResolved Android.Views.View.KeepScreenOn Android.Views.View.KeyDispatcherState Android.Views.View.KeyboardNavigationCluster Android.Views.View.LabelFor Android.Views.View.LayerType Android.Views.View.LayoutDirection Android.Views.View.LayoutParameters Android.Views.View.Left Android.Views.View.LeftFadingEdgeStrength Android.Views.View.LeftPaddingOffset Android.Views.View.LongClickable Android.Views.View.Matrix Android.Views.View.MeasuredHeight Android.Views.View.MeasuredHeightAndState Android.Views.View.MeasuredState Android.Views.View.MeasuredWidth Android.Views.View.MeasuredWidthAndState Android.Views.View.MinimumHeight Android.Views.View.MinimumWidth Android.Views.View.NestedScrollingEnabled Android.Views.View.NextClusterForwardId Android.Views.View.NextFocusDownId Android.Views.View.NextFocusForwardId Android.Views.View.NextFocusLeftId Android.Views.View.NextFocusRightId Android.Views.View.NextFocusUpId Android.Views.View.OnFocusChangeListener Android.Views.View.OutlineProvider Android.Views.View.OverScrollMode Android.Views.View.Overlay Android.Views.View.PaddingBottom Android.Views.View.PaddingEnd Android.Views.View.PaddingLeft Android.Views.View.PaddingRight Android.Views.View.PaddingStart Android.Views.View.PaddingTop Android.Views.View.Parent Android.Views.View.ParentForAccessibility Android.Views.View.PivotX Android.Views.View.PivotY Android.Views.View.PointerIcon Android.Views.View.Pressed Android.Views.View.Resources Android.Views.View.RevealOnFocusHint Android.Views.View.Right Android.Views.View.RightFadingEdgeStrength Android.Views.View.RightPaddingOffset Android.Views.View.RootView Android.Views.View.RootWindowInsets Android.Views.View.Rotation Android.Views.View.RotationX Android.Views.View.RotationY Android.Views.View.SaveEnabled Android.Views.View.SaveFromParentEnabled Android.Views.View.ScaleX Android.Views.View.ScaleY Android.Views.View.ScrollBarDefaultDelayBeforeFade Android.Views.View.ScrollBarFadeDuration Android.Views.View.ScrollBarSize Android.Views.View.ScrollBarStyle Android.Views.View.ScrollIndicators Android.Views.View.ScrollX Android.Views.View.ScrollY Android.Views.View.ScrollbarFadingEnabled Android.Views.View.Selected Android.Views.View.SolidColor Android.Views.View.SoundEffectsEnabled Android.Views.View.StateListAnimator Android.Views.View.SuggestedMinimumHeight Android.Views.View.SuggestedMinimumWidth Android.Views.View.SystemUiVisibility Android.Views.View.Tag Android.Views.View.TextAlignment Android.Views.View.TextDirection Android.Views.View.TooltipTextFormatted Android.Views.View.TooltipText Android.Views.View.Top Android.Views.View.TopFadingEdgeStrength Android.Views.View.TopPaddingOffset Android.Views.View.TouchDelegate Android.Views.View.Touchables Android.Views.View.TransitionName Android.Views.View.TranslationX Android.Views.View.TranslationY Android.Views.View.TranslationZ Android.Views.View.VerticalFadingEdgeEnabled Android.Views.View.VerticalFadingEdgeLength Android.Views.View.VerticalScrollBarEnabled Android.Views.View.VerticalScrollbarPosition Android.Views.View.VerticalScrollbarWidth Android.Views.View.ViewTreeObserver Android.Views.View.Visibility Android.Views.View.Width Android.Views.View.WindowAttachCount Android.Views.View.WindowId Android.Views.View.WindowSystemUiVisibility Android.Views.View.WindowToken Android.Views.View.WindowVisibility Android.Views.View.ApplyWindowInsets Android.Views.View.ViewAttachedToWindow Android.Views.View.ViewDetachedFromWindow Android.Views.View.LayoutChange Android.Views.View.CapturedPointer Android.Views.View.Click Android.Views.View.ContextClick Android.Views.View.ContextMenuCreated Android.Views.View.Drag Android.Views.View.GenericMotion Android.Views.View.Hover Android.Views.View.KeyPress Android.Views.View.LongClick Android.Views.View.ScrollChange Android.Views.View.SystemUiVisibilityChange Android.Views.View.Touch Android.Views.View.FocusChange Java.Lang.Object.Java.Interop.IJavaPeerable.DisposeUnlessReferenced() Java.Lang.Object.Java.Interop.IJavaPeerable.Disposed() Java.Lang.Object.Java.Interop.IJavaPeerable.Finalized() Java.Lang.Object.Java.Interop.IJavaPeerable.SetJniIdentityHashCode(System.Int32) Java.Lang.Object.Java.Interop.IJavaPeerable.SetJniManagedPeerState(Java.Interop.JniManagedPeerStates) Java.Lang.Object.Java.Interop.IJavaPeerable.SetPeerReference(Java.Interop.JniObjectReference) Java.Lang.Object.GetObject<T>(System.IntPtr, System.IntPtr, Android.Runtime.JniHandleOwnership) Java.Lang.Object.GetObject<T>(System.IntPtr, Android.Runtime.JniHandleOwnership) Java.Lang.Object.FromArray<T>(T[]) Java.Lang.Object.Clone() Java.Lang.Object.Equals(Java.Lang.Object) Java.Lang.Object.JavaFinalize() Java.Lang.Object.GetHashCode() Java.Lang.Object.Notify() Java.Lang.Object.NotifyAll() Java.Lang.Object.ToString() Java.Lang.Object.Wait() Java.Lang.Object.Wait(System.Int64) Java.Lang.Object.Wait(System.Int64, System.Int32) Java.Lang.Object.Java.Interop.IJavaPeerable.JniManagedPeerState Java.Lang.Object.Class System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class MapControl : ViewGroup, IJavaObjectEx, Drawable.ICallback, IAccessibilityEventSource, KeyEvent.ICallback, IViewManager, IViewParent, IJavaObject, IJavaPeerable, IDisposable, IMapControl, INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Android.Content.Context context Android.Util.IAttributeSet attrs | Improve this Doc View Source MapControl(Context, IAttributeSet, Int32) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Android.Content.Context context Android.Util.IAttributeSet attrs System.Int32 defStyle Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source RenderMode Declaration public SkiaRenderMode RenderMode { get; set; } Property Value Type Description SkiaRenderMode | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Java.Lang.Object.Dispose(System.Boolean) | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source MapView_Touch(Object, View.TouchEventArgs) Declaration public void MapView_Touch(object sender, View.TouchEventArgs args) Parameters Type Name Description System.Object sender Android.Views.View.TouchEventArgs args | Improve this Doc View Source OnFling(Object, GestureDetector.FlingEventArgs) Declaration public void OnFling(object sender, GestureDetector.FlingEventArgs args) Parameters Type Name Description System.Object sender Android.Views.GestureDetector.FlingEventArgs args | Improve this Doc View Source OnLayout(Boolean, Int32, Int32, Int32, Int32) Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description System.Boolean changed System.Int32 l System.Int32 t System.Int32 r System.Int32 b Overrides Android.Views.ViewGroup.OnLayout(System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32) | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnSizeChanged(Int32, Int32, Int32, Int32) Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description System.Int32 width System.Int32 height System.Int32 oldWidth System.Int32 oldHeight Overrides Android.Views.View.OnSizeChanged(System.Int32, System.Int32, System.Int32, System.Int32) | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler Implements Android.Graphics.Drawables.Drawable.ICallback Android.Views.Accessibility.IAccessibilityEventSource Android.Views.KeyEvent.ICallback Android.Views.IViewManager Android.Views.IViewParent Android.Runtime.IJavaObject Java.Interop.IJavaPeerable System.IDisposable IMapControl System.ComponentModel.INotifyPropertyChanged"
  },
  "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html": {
    "href": "api/System.Collections.ObjectModel.ObservableRangeCollection-1.html",
    "title": "Class ObservableRangeCollection<T>",
    "keywords": "Class ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed. Inheritance System.Object System.Collections.ObjectModel.Collection <T> System.Collections.ObjectModel.ObservableCollection <T> ObservableRangeCollection<T> Implements System.Collections.Generic.IList <T> System.Collections.Generic.ICollection <T> System.Collections.Generic.IReadOnlyList <T> System.Collections.Generic.IReadOnlyCollection <T> System.Collections.Generic.IEnumerable <T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged System.ComponentModel.INotifyPropertyChanged Inherited Members System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy() System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy() System.Collections.ObjectModel.ObservableCollection<T>.InsertItem(System.Int32, T) System.Collections.ObjectModel.ObservableCollection<T>.Move(System.Int32, System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.MoveItem(System.Int32, System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs) System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem(System.Int32) System.Collections.ObjectModel.ObservableCollection<T>.CollectionChanged System.Collections.ObjectModel.ObservableCollection<T>.PropertyChanged System.Collections.ObjectModel.ObservableCollection<T>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<T>.Add(T) System.Collections.ObjectModel.Collection<T>.Clear() System.Collections.ObjectModel.Collection<T>.Contains(T) System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32) System.Collections.ObjectModel.Collection<T>.GetEnumerator() System.Collections.ObjectModel.Collection<T>.IndexOf(T) System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T) System.Collections.ObjectModel.Collection<T>.Remove(T) System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<T>.Count System.Collections.ObjectModel.Collection<T>.Item[System.Int32] System.Collections.ObjectModel.Collection<T>.Items System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.Collections.ObjectModel Assembly : Mapsui.UI.Forms.dll Syntax public class ObservableRangeCollection<T> : ObservableCollection<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableRangeCollection() Initializes a new instance of ObservableCollection that is empty and has default initial capacity. Declaration public ObservableRangeCollection() | Improve this Doc View Source ObservableRangeCollection(IEnumerable<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied. Declaration public ObservableRangeCollection(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The collection whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the collection. Exceptions Type Condition System.ArgumentNullException collection is a null reference | Improve this Doc View Source ObservableRangeCollection(List<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list Declaration public ObservableRangeCollection(List<T> list) Parameters Type Name Description System.Collections.Generic.List <T> list The list whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the list. Exceptions Type Condition System.ArgumentNullException list is a null reference Methods | Improve this Doc View Source AddRange(IEnumerable<T>) Adds the elements of the specified collection to the end of the System.Collections.ObjectModel.ObservableCollection<T> . Declaration public void AddRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The collection whose elements should be added to the end of the System.Collections.ObjectModel.ObservableCollection<T> . The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source ClearItems() Called by base class Collection<T> when the list is being cleared; raises a CollectionChanged event to any listeners. Declaration protected override void ClearItems() Overrides System.Collections.ObjectModel.ObservableCollection<T>.ClearItems() | Improve this Doc View Source DeferEvents() Declaration protected virtual IDisposable DeferEvents() Returns Type Description System.IDisposable | Improve this Doc View Source InsertRange(Int32, IEnumerable<T>) Declaration public void InsertRange(int index, IEnumerable<T> collection) Parameters Type Name Description System.Int32 index System.Collections.Generic.IEnumerable <T> collection | Improve this Doc View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Raise CollectionChanged event to any listeners. Properties/methods modifying this ObservableCollection will raise a collection changed event through this virtual method. Declaration protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e) Parameters Type Name Description System.Collections.Specialized.NotifyCollectionChangedEventArgs e Overrides System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs) Remarks When overriding this method, either call its base implementation or call to guard against reentrant collection changes. | Improve this Doc View Source RemoveAll(Int32, Int32, Predicate<T>) Iterates over the specified range within the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(int index, int count, Predicate<T> match) Parameters Type Name Description System.Int32 index The index of where to start performing the search. System.Int32 count The number of items to iterate on. System.Predicate <T> match Returns Type Description System.Int32 Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException match is null. | Improve this Doc View Source RemoveAll(Predicate<T>) Iterates over the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(Predicate<T> match) Parameters Type Name Description System.Predicate <T> match Returns Type Description System.Int32 Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition System.ArgumentNullException match is null. | Improve this Doc View Source RemoveRange(IEnumerable<T>) Removes the first occurence of each item in the specified collection from the System.Collections.ObjectModel.ObservableCollection<T> . Declaration public void RemoveRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to remove. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source RemoveRange(Int32, Int32) Removes a range of elements from the System.Collections.ObjectModel.ObservableCollection<T> >. Declaration public void RemoveRange(int index, int count) Parameters Type Name Description System.Int32 index The zero-based starting index of the range of elements to remove. System.Int32 count The number of elements to remove. Exceptions Type Condition System.ArgumentOutOfRangeException The specified range is exceeding the collection. | Improve this Doc View Source ReplaceRange(IEnumerable<T>) Clears the current collection and replaces it with the specified collection, using the default System.Collections.Generic.EqualityComparer`1 . Declaration public void ReplaceRange(IEnumerable<T> collection) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to fill the collection with, after clearing it. Exceptions Type Condition System.ArgumentNullException collection is null. | Improve this Doc View Source ReplaceRange(IEnumerable<T>, IEqualityComparer<T>) Clears the current collection and replaces it with the specified collection, using the specified comparer to skip equal items. Declaration public void ReplaceRange(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> collection The items to fill the collection with, after clearing it. System.Collections.Generic.IEqualityComparer <T> comparer An System.Collections.Generic.IEqualityComparer<T> to be used to check whether an item in the same location already existed before, which in case it would not be added to the collection, and no event will be raised for it. Exceptions Type Condition System.ArgumentNullException collection is null. System.ArgumentNullException comparer is null. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>) Removes the specified range and inserts the specified collection, ignoring equal items (using System.Collections.Generic.EqualityComparer`1.Default ). Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection) Parameters Type Name Description System.Int32 index The index of where to start the replacement. System.Int32 count The number of items to be replaced. System.Collections.Generic.IEnumerable <T> collection The collection to insert in that location. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException collection is null. | Improve this Doc View Source ReplaceRange(Int32, Int32, IEnumerable<T>, IEqualityComparer<T>) Removes the specified range and inserts the specified collection in its position, leaving equal items in equal positions intact. Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description System.Int32 index The index of where to start the replacement. System.Int32 count The number of items to be replaced. System.Collections.Generic.IEnumerable <T> collection The collection to insert in that location. System.Collections.Generic.IEqualityComparer <T> comparer The comparer to use when checking for equal items. Exceptions Type Condition System.ArgumentOutOfRangeException index is out of range. System.ArgumentOutOfRangeException count is out of range. System.ArgumentNullException collection is null. System.ArgumentNullException comparer is null. | Improve this Doc View Source SetItem(Int32, T) Called by base class Collection<T> when an item is set in list; raises a CollectionChanged event to any listeners. Declaration protected override void SetItem(int index, T item) Parameters Type Name Description System.Int32 index T item Overrides System.Collections.ObjectModel.ObservableCollection<T>.SetItem(System.Int32, T) Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.Collections.Specialized.INotifyCollectionChanged System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.UI.ZoomedEventArgs.html": {
    "href": "api/Mapsui.UI.ZoomedEventArgs.html",
    "title": "Class ZoomedEventArgs",
    "keywords": "Class ZoomedEventArgs Inheritance System.Object ZoomedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class ZoomedEventArgs : EventArgs Constructors | Improve this Doc View Source ZoomedEventArgs(Geometries.Point, ZoomDirection) Declaration public ZoomedEventArgs(Geometries.Point screenPosition, ZoomDirection direction) Parameters Type Name Description Geometries.Point screenPosition ZoomDirection direction Properties | Improve this Doc View Source Direction Declaration public ZoomDirection Direction { get; } Property Value Type Description ZoomDirection | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance System.Object ColorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ColorExtensions Methods | Improve this Doc View Source ToForms(Styles.Color) Convert Mapsui.Styles.Color to Xamarin.Forms.Color Declaration public static Color ToForms(this Styles.Color color) Parameters Type Name Description Styles.Color color Color in Mapsui format Returns Type Description Xamarin.Forms.Color Color in Xamarin.Forms.Maps format | Improve this Doc View Source ToMapsui(Color) Convert Xamarin.Forms.Color to Mapsui.Style.Color Declaration public static Styles.Color ToMapsui(this Color color) Parameters Type Name Description Xamarin.Forms.Color color Color in Xamarin.Forms.Color format Returns Type Description Styles.Color Color in Mapsui.Styles.Color format"
  },
  "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance System.Object System.EventArgs DrawableClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Improve this Doc View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Xamarin.Forms.Point"
  },
  "api/Mapsui.UI.Android.Resource.String.html": {
    "href": "api/Mapsui.UI.Android.Resource.String.html",
    "title": "Class Resource.String",
    "keywords": "Class Resource.String Inheritance System.Object Resource.String Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public class String Fields | Improve this Doc View Source ApplicationName Declaration public static int ApplicationName Field Value Type Description System.Int32 | Improve this Doc View Source Hello Declaration public static int Hello Field Value Type Description System.Int32"
  },
  "api/Mapsui.UI.Android.PointExtensions.html": {
    "href": "api/Mapsui.UI.Android.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Android Assembly : Mapsui.UI.Android.dll Syntax public static class PointExtensions Methods | Improve this Doc View Source ToDeviceIndependentUnits(Point, Single) Declaration public static Point ToDeviceIndependentUnits(this Point point, float pixelDensity) Parameters Type Name Description Point point System.Single pixelDensity Returns Type Description Point"
  },
  "api/System.Collections.ObjectModel.html": {
    "href": "api/System.Collections.ObjectModel.html",
    "title": "Namespace System.Collections.ObjectModel",
    "keywords": "Namespace System.Collections.ObjectModel Classes ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed."
  },
  "api/Mapsui.UI.Wpf.html": {
    "href": "api/Mapsui.UI.Wpf.html",
    "title": "Namespace Mapsui.UI.Wpf",
    "keywords": "Namespace Mapsui.UI.Wpf Classes MapControl MouseButtonEventArgsExtensions PointExtensions WindowsPointExtensions Enums RenderMode"
  },
  "documentation/skia-scale.html": {
    "href": "documentation/skia-scale.html",
    "title": "Skia Scale",
    "keywords": "Skia Scale We have a separate page about this topic because skia scale has caused some confusion in the past and bugs as a consequence. Some context: Device Independent Units Modern devices have a very high resolution. If something is drawn onto the canvas using raw pixels as coordinates the fonts would become tiny and unreadable and lines would become very thin. To correct for this a scale factor is used. Those scaled-up coordinates are called device independent units. Most of the time you deal with the device independent units. Coordinates in SkiaSharp Most (all?) views in SkiaSharp use pixels as coordinates by default but for our purposes we need to use device independent units, so we need to correct for this. We do this by setting the scale of the SKCanvas. This needs to be done in the render loop because it is the only place where we have access. Also the size of the map needs to be adjusted otherwise we would draw outsize the screen."
  },
  "documentation/samples.html": {
    "href": "documentation/samples.html",
    "title": "Samples",
    "keywords": "Samples The best way to get started with mapsui is to go through the samples. The code samples There are sample apps for each platform. They share a number of Map samples that can be found in this folder in our git repository Samples\\Mapsui\\Mapsui.Samples.Common\\Maps. For 2.0 look here For 1.4 look here Run the samples See the samples in action by running the WPF sample app ( Mapsui.Samples.Wpf ) in the samples folder. On the left side it has a list with all samples."
  },
  "documentation/roadmap.html": {
    "href": "documentation/roadmap.html",
    "title": "Roadmap",
    "keywords": "Roadmap Updated May 2020 Replace Mapsui.Geometries with NTS Add vector tiles Improve performance World wrap Improvements around Mapsui: Improve the documentation. Adding 'getting started' tutorials for all platforms. Improve the samples. Add comments, make them smaller (single purpose) and make them look better. Later Change license to MIT Not 3D support"
  },
  "documentation/rendering-tests.html": {
    "href": "documentation/rendering-tests.html",
    "title": "Unit Tests for Rendering",
    "keywords": "Unit Tests for Rendering Testing the renderers in done in two ways. Unit tests that compare the current output to previous output. Visual inspection. Unit tests are useful during refactoring when you expect no changes. Visual tests are useful when you are working on a change in the rendering output. 1. Unit tests The generated images are written to: {test project folder}\\bin\\Debug\\Resources\\Images\\Generated\\ Those will be compared to the original images in: {test project folder}\\bin\\Debug\\Resources\\Images\\Original\\ If after code changes there are expected changes in the generated files they should be committed to git so they need to be copied to: {test project folder}\\Resources\\Images\\Original\\ 2. Visual inspection In the WPF sample there is an option to select the list of unit tests. Both WPF and Skia renderers can be selected. We assume the skia renderer on other platforms are identical."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Mapsui API",
    "keywords": "Mapsui API This is the API description of Mapsui"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mapsui documentation.",
    "keywords": "Mapsui documentation. This is the documentation of the Mapsui open source map component. The general documentation found here . The api documentation found here . The github repository, which also contains the samples, can be found here . Sponsors We are delightly with our first gold sponsor Sebastian Kruze, who has also contributed to Mapsui with informed test reports and expert advice. Sebastian Kruse Projects that use Mapsui Breath Companion Squadra @mapsui-users Please send info on other apps using Mapsui to add them here Support If you are interested in more support for Mapsui please mail pauldendulk@gmail.com ."
  },
  "documentation/v2.0-upgrade-guide.html": {
    "href": "documentation/v2.0-upgrade-guide.html",
    "title": "v2.0 upgrade guide",
    "keywords": "v2.0 upgrade guide This is the incomplete upgrade guide from v1.4 to v2.0. The most apparent changes will be mentioned here. If you notice important things missing then please post an issue. Moved from PCL to .NET Standard 2.0 Look up compatible frameworks in this table . Viewport moved from Map to MapControl and is readonly Use MapControl.Navigator instead. Moved MapControl.NavigateTo methods to MapControl.Navigator All user map manipulation should go the the Navigator. Introduced Map.Home to initialze the map viewport There is now a Home delegate on the Map object that should be used to set the initial state of the map. MapControl.Map.Home = n => n.NavigateTo(myCenter, myResolution); Reason: This is because in some cases the Navigate methods depend on the envelope and resolutions of the layers and in some cases it takes time for these layers to load their data. Added Map.PanLock, Map.ZoomLock and Map.RotationLock The lock fields can be used on all platforms to lock the user from a certain kind of map manipulation. Added Map.Limiter to limit the extent to which the user can navigate The Limter is an implementation of IViewportLimiter. There are currently three limiters part of Mapsui: ViewportLimiter (default) ViewportLimiterKeepWithin ViewportLimiterWithoutLimits It is also possible to implement your own IViewportLimiter. Added RefreshGraphics, RefreshData and Refresh Use RefreshGraphics if you know the data in the layer has changed and the graphics needs refreshing. Use RefreshData if you know there is new data available in the source. Use Refresh if you need to do both. These methods should only be needed if you manipulate data somehow in your own code. Renamed BoundingBox GetCentroid to Centroid and GetBoundingBox to BoundingBox Turned these methods into proper properties making user code a bit more compact. The Info event was moved from Map to MapControl The MapControl contains most other events as well Removed the InfoLayer list and add an InfoLayer boolean on ILayer To indicate that a layer is a info layer you now need to set it's InfoLayer property. In v1.4 it had to be added to the list of InfoLayers. Removed the HoverLayer method. This is because hover could not be implemented crossplatform and could harm performance. It it is still possible to implement hover yourself using a direct call to MapControl.GetMapInfo. Invert label alignment bottom/top. This was incorrect in v1.4. This will not cause a compile error so don't forget to do a search-replace to fix it. Removed ZoomIn/ZoomOut from WPF MapControl Use the ZoomIn/ZoomOut methode on the navigator. Some other changes Move Info event from Map to MapControl Do not derive ILayer from IAsyncDataFetcher. Remove WPFs MapControl.ErrorMessage Rename PanMode.None and ZoomMode.None. Remove the InfoLayer list and add an InfoLayer boolean on ILayer Remove the HoverLayer method. It is not crossplatform and can affect performance. Wrap Viewport in LimitingViewport which limits it to user settings, or access through Navigator. PanLock and ZoomLock working on all platforms. Rework ViewportLimiter"
  },
  "documentation/tutorials.html": {
    "href": "documentation/tutorials.html",
    "title": "Tutorials",
    "keywords": "Tutorials Cross-Platform MVVMCross Xamarin.Forms Application MvvmCross is a cross-platform MVVM framework that enables developers to create powerful cross platform apps. It supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, Xamarin.Forms, Universal Windows Platform (UWP) and Windows Presentation Framework (WPF). The high level features that MvvmCross provides you with are: MVVM architecture pattern Navigation system Data Binding Platform specifics support Inversion of Control container and Dependency Injection engine Lots of plugins for common functionalities Unit test helpers Complete flexibility - your app is King! There is a Sample functional app demonstrating how to use Mapsui in MVVMCross Xamarin Forms application at: Mapsui in MVVMCross Xamarin Forms App"
  },
  "documentation/renderers.html": {
    "href": "documentation/renderers.html",
    "title": "Renderers",
    "keywords": "Renderers Mapsui has two renderers: Xaml in the Mapsui.Rendering.Xaml assembly. Used only in the WPF MapControl. Older and stable. Skia in the Mapsui.Rendering.Skia assembly. Used in all supported platforms. Newer. Differences Between Xaml and Skia Skia is nearly equivalent to Xaml but there are still some differences (This list has grown shorter over last year): There is a difference in the way halo symbolization is implemented. We will match Xaml to Skia (not the other way around). We already use the correct technique for Xaml halos for labels styles. Skia does not have the option to displayed symbols in world units. The means the icon will grow bigger if you zoom in. This is unlike regular icon but like regular polgons. This is an exotic feature, you will probably not need this. There are probably some more differences I missed. Xaml and Skia side by side in Mapsui.Samples.Wpf The project Mapsui.Samples.Wpf has a dropdown on the top left to select between Skia and Wpf rendering. This is allows you to compare them. Renderer abstraction layer There is the question how much of the renderer should be abstracted away. An abstraction layer add extra complexity. Since it looks more and more like skiasharp will be the only renderer for as far as we can see we could just add that dependency to all our code and work directly with SkiaSharp classes, that may simplify some things. However, in the past we had to switch many times to different renderers, so I am not so sure if this won't happen again. So let's not settle for one renderer just yet. For context, these are the renderers Mapsui had in the past: System.Drawing System.Drawing for PocketPC Silverlight XAML WPF XAML UWP XAML (could later be merged with WPF XAML) iOS native rendering Android native rendering (this is actually internally using skia) OpenTK (this was not mature enough at that point) SkiaSharp"
  },
  "documentation/projections.html": {
    "href": "documentation/projections.html",
    "title": "Projections",
    "keywords": "Projections Projections is a complicated topic. Users of Mapsui have a wide variety of backgrounds. Some are experienced GIS users that just need to know how this specific map component works. Many others are app developers that just happen to need a map for their current app. This makes it hard to explain things clear for everyone. Below are some basic concepts. I like this video introduction to map projections. The most common scenario Much point data is in a coordinates system called WGS84, or lat/long coordinates, or EPSG:4326 . Most maps are in some another coordinate system which is better suited for display. The projection used in most online maps these days is SphericalMercator, or WebMercator, PseudoMercator or EPSG:3857 . The OpenStreetMap tile layer that is used in many samples of Mapsui is also in SphericalMercator. If you use this map your coordinates also need to be in SphericalMercator. By default there is no automatic projection in Mapsui. The Mapsui helper methods for this transformation are SphericalMerator.FromLonLat/ToLonLat. Parts of Mapsui involved in projections Map : There is one Map. It is inevitably in some kind of projection. Layers : There are several layers that provider data. This data should be in the same projection as the Map. If not, different projections will be drawn on top of each other and things go wrong. Providers : Some Layers have a DataSource (Provider). This DataSource could contain data in another projection. This data can be converted to the Map projection but a few things need to be set. Configure Mapsui for automatic projections Currently only the Layer layer type can be set up to do automatic projetions from DataSource to Map. Three things need to be configured for this: The CRS on the Map to know what to project to. The CRS on the DataSource to know what to project from. The Transformation on the Map to calculate the projection from DataSource CRS to the Map CRS. Support for projections The out of the box Mapsui support for projections is limited. The MinimalProjection class only projects between SphericalMercator (EPSG:3857) and WGS84 (EPSG:4326). It is however possible to create your own Transformation. You need to implement the ITransformation interface. Within this implementation you need to use some other projection library. A recommended one is ProjNet4GeoAPI . The most common scenario Most likely you will be fine if you use the same projection as Google and OpenStreetMap. This projection is called SphericalMercator. The official code from the OGC for this projection is EPSG:3857. If you use the OpenStreetMap background layer you use EPSG:3857. Often you have GPS locations or points of interests (POIs) in WGS84 or EPGS:4326. These points need to be transformed to EPSG:3857. There are two ways: Follow the configuration for projections mentioned above and in the ProjectionSample.cs. Use SphericalMercator.FromLonLat to do the transformation manually. Remarks A Layer has a CRS field. This field is used by Mapsui to set it to the Map projection. It should not be set by the user. This is could be confusing. Mapsui is not capable of transforming images. So no transformation of tiles as rasters. No attempt will be made to transform and the CRS fields will be ignored."
  },
  "documentation/nuget-of-latest-build.html": {
    "href": "documentation/nuget-of-latest-build.html",
    "title": "NuGet of Latest Build",
    "keywords": "NuGet of Latest Build On every commit the build server is triggered which publishes a NuGet package of that build. It's version number is the current version of the master branch followed by a dot and the build number. The package is not published to nuget.org but to a AppVeyor feed. You need to add this feed to be able to install the package to your project. There are three ways to add this feed to your environment. Package Manager Console nuget install-package mapsui -source https://ci.appveyor.com/nuget/mapsui -pre Add the feed in Visual Studio Add the feed in tools | options | nuget | package sources https://ci.appveyor.com/nuget/mapsui And under 'manage nuget packages' select this as source on the top right. Add a .nuget\\NuGet.Config xml In you sln folder add a .nuget folder and in it a NuGet.Config file with content: <?xml version=\"1.0\" encoding=\"utf-8\"?> <configuration> <solution> <add key=\"disableSourceControlIntegration\" value=\"true\" /> </solution> <packageSources> <add key=\"AppVeyor\" value=\"https://ci.appveyor.com/nuget/mapsui \" /> <add key=\"nuget.org\" value=\"https://www.nuget.org/api/v2/\" /> </packageSources> </configuration> This way you application knows where to find the package and when other developers clone your project it works for them too right away. This is the best option. Build your own nuget package It is also possible to build you own nuget package locally by running scripts\\buildpack.bat 3.0.0-custom.1 from the sln folder. You can set the file location as a Package Source in visual studio."
  },
  "documentation/mapsui-forms.html": {
    "href": "documentation/mapsui-forms.html",
    "title": "Mapsui.Forms",
    "keywords": "Mapsui.Forms Mapsui can be used on Xamarin.Forms with the Mapsui.Forms nuget package. Mapsui.Forms is a 'native' Xamarin.Forms implementation, meaning it does not use Xamarin.Forms Renderers around platform specific components but implements a Xamarin.Forms implementation instead. Mapsui.Forms uses SkiaSharp.Views.Forms to display the map on the device. This works for iOS, Android, UWP and Mac OS. On WPF there still is an issue with placing controls over the Map. To get started see getting started with Xamarin.Forms ."
  },
  "documentation/mapsui-components.html": {
    "href": "documentation/mapsui-components.html",
    "title": "Mapsui Components",
    "keywords": "Mapsui Components If you install the NuGet package into your app these assemblies are added: Mapsui.UI.{platform} - Platform specific UI. Contains the MapControl Mapsui.Rendering.Skia Mapsui Mapsui.Geometries On Windows desktop Mapsui.Rendering.Xaml is added. A number of nuget dependencies Mapsui Parts There are three important classes that you will deal with MapControl This is the UI component that you add to you project. Map Holds all information about the map like layers and widgets. Viewport Holds all information about the part of the map that is visible on the screen like center, extent, rotation, resolution and so on. It is created automatically when Map is created. You can access it with MapControl.Map.Viewport."
  },
  "documentation/how-to-work-with-mapsui.html": {
    "href": "documentation/how-to-work-with-mapsui.html",
    "title": "How to Work with Mapsui",
    "keywords": "How to Work with Mapsui Logging Sooner or later there comes a time where you are struggling with a bug. You can save yourself some time by writing the Mapsui log events to your own log from the start of your project. In Mapsui errors and warnings are logged to a static class which has an event handler you can listen to. Mapsui.Logging.Logger.LogDelegate += (level, message, ex) => // todo: Write to your own logger; Extension of Mapsui If you need more functionality from the MapControl you could create your own version of the MapControl by making a copy. You can customize these for your own needs. While it is also possible to extend functionality by adding your own ILayer or IProvider implementation. If you encounter breaking changes please take a look at the release notes . You can check the related commits by clicking the 'x commits to masters since this release' of the previous release (a bit odd but that is how github works)."
  },
  "documentation/home.html": {
    "href": "documentation/home.html",
    "title": "Introduction",
    "keywords": "Introduction Mapsui is a .NET component to show a map in your app. Supported platforms WPF UWP Xamarin.Android Xamarin.iOS Xamarin.Forms Supported data Mapsui uses the BruTile library to display tile layers such as: OpenStreetMap tiles Open standards for tiles WMTS TMS WMS called tilewise Custom data providers MBTiles. An offline format to store tile data in sqlite file. Mapsui renders and can style vector data (polygons, lines, points)"
  },
  "documentation/getting-started-xamarin-forms.html": {
    "href": "documentation/getting-started-xamarin-forms.html",
    "title": "Mapsui for Xamarin.Forms getting started",
    "keywords": "Mapsui for Xamarin.Forms getting started Step 1 Create a normal Xamarin.Forms project Step 2 Add Mapsui.Forms from NuGet to the packages Step 3 Add the line xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" to the Xaml file Step 4 Add the Mapsui.Forms view with <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> to the Xaml part file. Nest the MapView element inside a container, this child element needs to be placed inside a parent Layout for the view to be correctly setup and attached to the code behind, for instance, <?xml version=\"1.0\" encoding=\"utf-8\" ?> <ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:mapsui=\"clr-namespace:Mapsui.UI.Forms;assembly=Mapsui.UI.Forms\" mc:Ignorable=\"d\"> <StackLayout> <mapsui:MapView x:Name=\"mapView\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"Fill\" BackgroundColor=\"Gray\" /> </StackLayout> </ContentPage> the Xaml file should look similar to this after this step. Step 5 Add in the code behind the following var map = new Map { CRS = \"EPSG:3857\", Transformation = new MinimalTransformation() }; var tileLayer = OpenStreetMap.CreateTileLayer(); map.Layers.Add(tileLayer); map.Widgets.Add(new Widgets.ScaleBar.ScaleBarWidget(map) { TextAlignment = Widgets.Alignment.Center, HorizontalAlignment = Widgets.HorizontalAlignment.Left, VerticalAlignment = Widgets.VerticalAlignment.Bottom }); mapView.Map = map; Step 6 Run!"
  },
  "documentation/getting-started-wpf.html": {
    "href": "documentation/getting-started-wpf.html",
    "title": "Mapsui WPF getting started",
    "keywords": "Mapsui WPF getting started Step 1 Start a new WPF application in Visual Studio. Step 2 In the package manager console type: PM> Install-Package Mapsui.Native Step 3 In WpfApplication1.MainWindow.xaml add this in the Grid element: <mapsui:MapControl Name=\"MyMapControl\"></mapsui:MapControl> And add the namespace: xmlns:mapsui=\"clr-namespace:Mapsui.UI.Wpf;assembly=Mapsui.UI.Wpf\" Step 4 In WpfApplication1.MainWindow.xaml.cs add in the constructor after InitializeComponent(): MyMapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); And add the namespaces: using Mapsui.Utilities; using Mapsui.Layers; Step 5 Run!"
  },
  "documentation/getting-started-uwp.html": {
    "href": "documentation/getting-started-uwp.html",
    "title": "Mapsui UWP Getting Started",
    "keywords": "Mapsui UWP Getting Started Step 1 Create new 'Blank App (Universal Windows)' in Visual Studio Step 2 Add package 'Mapsui.Native' to the project (don't forget to enable check at 'Include prereleases') Step 3 Open MainPage.xaml add namespace: xmlns:uwp=\"using:Mapsui.UI.Uwp\" Add MapControl to the Grid: <Grid> <uwp:MapControl x:Name=\"MapControl\" VerticalAlignment=\"Stretch\" HorizontalAlignment=\"Stretch\" /> </Grid> In MainPage.xaml.cs, add namespace: using Mapsui.Utilities; Add code to the constructor: public MainPage() { this.InitializeComponent(); MapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); } Step 4 Run!"
  },
  "documentation/getting-started-ios.html": {
    "href": "documentation/getting-started-ios.html",
    "title": "Mapsui iOS Getting Started",
    "keywords": "Mapsui iOS Getting Started Step 1 Create new 'Single View App' in Visual Studio Step 2 Add package 'Mapsui.Native' to the project (don't forget to enable check at 'Include prereleases') Step 3 Open ViewController.cs add namespaces: using Mapsui; using Mapsui.UI.iOS; using Mapsui.Utilities; add code to ViewDidLoad() method: public override void ViewDidLoad() { base.ViewDidLoad(); var mapControl = new MapControl(View.Bounds); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); mapControl.Map = map; View = mapControl; } Step 4 Run!"
  },
  "documentation/getting-started-android.html": {
    "href": "documentation/getting-started-android.html",
    "title": "Mapsui Android getting started",
    "keywords": "Mapsui Android getting started Step 1 Create 'Blank App (Android)' in Visual Studio Step 2 $ Install-Package Mapsui.Native Step 3 In Resources/layout/Main.axml add Mapsui.UI.Android.MapControl: <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <Mapsui.UI.Android.MapControl android:id=\"@+id/mapcontrol\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> </LinearLayout> Step 4 In MainActivity.cs add MapControl after SetContentView(Resource.Layout.Main): protected override void OnCreate(Bundle savedInstanceState) { base.OnCreate(savedInstanceState); // Set our view from the \"main\" layout resource SetContentView(Resource.Layout.Main); var mapControl = FindViewById<MapControl>(Resource.Id.mapcontrol); var map = new Map(); map.Layers.Add(OpenStreetMap.CreateTileLayer()); mapControl.Map = map; } Add the following using statements: using Mapsui; using Mapsui.Utilities; using Mapsui.UI.Android; Step 5: Run!"
  },
  "documentation/faq.html": {
    "href": "documentation/faq.html",
    "title": "Frequently Asked Questions",
    "keywords": "Frequently Asked Questions The openstreetmap layer does not show The most common reason is that the default user-agent used by the osm layer is blocked. The default user-agent gets blocked by osm at some point because there is always someone somewhere abusing the api. Within your app you need to use a user-agent that is specific to your app. We change the user agent from time to time so that the samples work but it will probably get blocked again at some point. Better not to wait until that happens and create you own user-agent right away. MapControl.Map.Layers.Add(OpenStreetMap.CreateTileLayer(\"your-user-agent\")); Why is all my data in a small area near the west coast of Africa? This is because the background data is in SphericalMercator (it is in the SphericalMercator coordinate system) and the foreground data is in WGS84 (latlon). Use SphericalMercator.FromLonLat to transform it. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. Why does NavigateTo zoom into an area near the west coast of Africa? This is because the coordinates you pass to NavigateTo are in WGS84 whereas the background data is in SphericalMercator. Use SphericalMercator.FromLonLat to transform the NavigateTo arguments to SphericalMercator. Note: There can be many other forms of mixing up coordinate systems, but this is the most common. How can I get rid of the white dots or black lines? In Mapsui v1 and v2 a layer is created with a default style ( Layer.Style ). This style applies to all features in the layer. You need to set the Style field to null if you do not want to use it ( Layer.Style = null ). The default style shows as a white dot on Point geometries and a black line on LineStrings and Polygons. Since most users work with styles on the feature they are not aware of the style on the layer , this make the default style confusing and it should be removed in v3."
  },
  "documentation/documentation.html": {
    "href": "documentation/documentation.html",
    "title": "Documentation",
    "keywords": "Documentation Documentation setup We use docfx to generate the documentation. There is a /docfx folder with a docfx project called Mapsui. This projects documenation folder contains all the md files used to generate the 'documentation' tab in the site. This is the source of those files, they should be edited there. In the docfx folder there is a script (build-site.cmd) that generates the documentation site (in /docfx/mapsui/_site) and copies it to the /docs folder. The Mapsui project on github is configured to automatically publish this docs folder to https://mapsui.github.io/mapsui A commit of an md file should trigger the build server. This should run the build-site.cmd. This should commit the generated site to the repo. It will when then show up on the website. We should have two separate build configurations one for the docs which ignores the project and one for the project which ignores the docs. Documentation guidelines All md files should be in lower case. All md files should be directly in the root of /docfx. Hierachy is created by indenting page references in the toc.md in the documenation folder. By keeping the files itself in the root it is easier to change the hierarchy later one - you do not need to move the files as well - and easier to get contributers to follow the guidelines. All md files should start with a header one (#) and should have no other header one in that file. All the headers in the toc should be equal to the header one in the file it points to. Mapsui is cased as Mapsui not MapsUI. We should iteratively improve the documentation. If questions are asked in the issues we should search for the answer in the documentation. Update the documentation when it is missing and answer the issue with a url to the documentation. Writing documentation is not only useful to inform the user but also as a sanity check for the developer. If what you have to tell becomes complicated and hard to grasp this could mean the software is not well designed. Writing documentation early should be used as a part of the software development process."
  },
  "documentation/development-constraints.html": {
    "href": "documentation/development-constraints.html",
    "title": "Development constraints",
    "keywords": "Development constraints When developing for Mapsui we take into account the following constraints. Not limited to certain coordinate system Mapsui's Map can be in any coordinate system. If you do not specify a coordinate system in the Map and Layers it assumes they are in the same coordinate system (whatever they are). In this case it only transforms these unspecified 'world-coordinates' to 'screen-coordinates' and nothing more. It is also possible to setup a coordinate transformation system using Map.CRS, DataSource.CRS and Map.Transformation. See projections . Full implementation of the feature matrix These are some of the feature dimensions: Renderers: WPF and Skia Geometries: Point, LineString, Polygon etc. Operations on Geometries: Distance, Contains. Coordinate projection support Style: fill color, line color, line cap, symbol opacity, symbol scale If we choose to support a feature each 'cell' of the multi dimensional matrix should be supported. No surprises for the user. Currently there are holes in the matrix on some point (like differences between WPF and Skia). The current focus is to fill these holes. If this support does not seem attainable (is that proper English?) but does seem very useful we should look for ways to make Mapsui extendable Write clear, simple and little code Maintenance is enemy that can bring a project like this to a halt. We should look for ways to implement the functionality with the simplest possible code."
  },
  "documentation/custom-style-renders.html": {
    "href": "documentation/custom-style-renders.html",
    "title": "Custom Style Renderers",
    "keywords": "Custom Style Renderers Summary Mapsui 2.0 supports custom style renderers . This means a user can create a custom style and associate this with a custom style renderer to allow full freedom in rendering a feature the way the user would like. How it works Create a custom style by deriving a class from IStyle. Assign that style to an ILayer.Style or IFeature.Styles. Create a custom renderer by deriving a class from ISkiaStyleRenderer and implement the Draw method. Register the association of the custom style to the custom style renderer as in the line below. The consequence will be that if the Mapsui renderer detects this style it will call the Draw method on the style renderer. This is how you register the association of a custom style to a custom style renderer mapControl.Renderer.StyleRenderers.Add(typeof(CustomStyle), new SkiaCustomStyleRenderer()); This is the ISkiaStyleRenderer interface that you need to implement: public interface ISkiaStyleRenderer : IStyleRenderer { bool Draw(SKCanvas canvas, IReadOnlyViewport viewport, ILayer layer, IFeature feature, IStyle style, ISymbolCache symbolCache); } The IFeature has a Geometry field. The renderer is responsible to cast the IFeature.Geometry to the type it intends to render. The IStyle is the custom style the user defined. It could contain extra style information not present in the default style classes. The user will need to cast that IStyle to the custom style to use this extra information. Code sample Look in the Mapsui source code for CustomStyleSample.cs. This is the most relevant code. In this sample the custom style contains no extra information, it is just an indication to use the associated custom renderer. It would be possible to add extra field like EarColor and NoseSize to the custom style which could be used in the renderer. Remarks Note, that the renderer depends on the technology we use for the rendering implementation, in this case SkiaSharp. Currently we still support XAML as renderer but this may be removed in the future. We expect to support SkiaSharp for a long time but it may be replaced at some point. There are no such plans just yet."
  },
  "documentation/async-fetching.html": {
    "href": "documentation/async-fetching.html",
    "title": "Asynchronous Data Fetching",
    "keywords": "Asynchronous Data Fetching Some background To get smooth performance while panning and zooming data needs to be fetched on a background thread. Even if it is fetched on a background thread it will use resources which could be noticible in the responsiveness of the map. The asyncronous data fetching of Mapsui tries to take this into account to optimize the user experience. ChangeType (ChangeType was introduced in V3, in V2 the majorType boolean has this purpose) When calling the RefreshData method on the layers we pass in a ChangeType parameter which could be: Continous - During dragging, pinching zoom, or animations. Discrete - On zoom in/out button press, on touch up, or at the end of an animation. The layers itself decides how to respond to the refresh call. For different data types different strategies are used. TileLayer data fetching The diagram below shows how the TileLayers data fetcher works. The data fetcher runs on a background thread. The UI and Fetcher communicate through non blocking messages. Whenever the user pans or zooms a View Changed message is sent to the Fetcher. This will trigger the fetcher to start fetching data. Whenever new data arrives a Data Changed message is sent to the UI so that it knows it should redraw the map. The fetcher dumps incoming data into a cache. The UI renderer retrieves whatever is needed from that cache when rendering, not taking into account what the data fetcher is doing. This loose coupling keeps things simple and flexible and the renderer never has to wait for the fetcher which results in a smooth (perceived) performance. Read/Write cache For rendering the cache is only read. For data fetching the cache is primarily written but it is also needs to read the cache in order to know which data is already available and does not need to be fetched. Strategies Both the fetcher and the renderer can use some smart tricks to optimize the experience, for example: The fetcher can pre‐fetch tiles that are not directly needed but could be in the future. The renderer could search for alternative tiles (higher or lower levels) when the optimal tiles are not available. The implementation of these strategies can be overridden by the user by implementing interfaces that can be passed into the TileLayer constructor. The IDataFetchStrategy (IFetchStrategy in V2) determines which tiles are fetched from the data source to be stored in the cache. There is a DataFetchStrategy default implementation and a MinimalDataFetchStrategy which only fetches the tiles directly needed. The IRenderFetchStrategy (IRenderGetStrategy in V2) determines which tiles are fetched from the cache to use for rendering. There is a RenderFetchStrategy default implementation and a MinimalRenderFetchStrategy which only fetches the tiles directly needed. Those strategies should be tuned to support each other. For instance, in the current implementation the renderer uses higher level tiles when the optimal tiles are not available, and the fetcher pre‐fetches higher level tiles to assist the renderer. The way they play together is not specified in the interface so developers should take this into account. Data fetching in other layers Other layers like the Layer and ImageLayer have their own implementation. They use a delay mechanism in fetching new data and ignore ChangeType.Continuous."
  },
  "documentation/contributors-guidelines.html": {
    "href": "documentation/contributors-guidelines.html",
    "title": "Mapsui Contributor Guidelines",
    "keywords": "Mapsui Contributor Guidelines Issue first Submit an issue before a pull request co we can discuss the possible solutions to the problem. Sign the Contributor License Agreement (CLA) To contribute you need to sign our CLA Complexity Complexity is the biggest problem in software development. The primary effort should be to keep the complexity low. Complexity can be caused by clueless spaghetti code but also by astronaut architectures . Keeping things simple is not easy but hard work. It involves thinking up several solutions to your problem weighing the pros and cons and moving it around and upside down to look for even better (simpler) solutions. Continuous Refactoring Mapsui has some older code in it. Don't despair. We continuously improve or replace older code. It is a gradual process. We do it step by step. We have made major changes in the past; From WinForms to WPF, From GDI+ to SL rendering. From .NET Framework to PCL. From PCL to .NET Standard. From WPF rendering to SkiaSharp. Add support for Xamarin.Forms. Future changes will include moving to NTS geometries, improving the Layers list. Taking these steps will cause breaking changes. We are aware of this and clearly communicate it with the user. We use semver so breaking changes go in to major version upgrades. All checks should be green all the time At all times: All projects should compile The unit tests should succeed All samples should run properly Use ReSharper Mapsui uses the resharper team settings by committing the DotSettings to git, so that all developers can use the same settings. We should have zero warnings. Suggestions should be treated as actual suggestions, use them only when you think it improves the code. Keep dependencies in the csproj and nuspec in sync If we upgrade a nuget package in the solution we should also upgrade the lower bound of the nuget package in the nuspec because this is what nuget installs. We want the user to get the same version as the one that we are working and testing with. example csproj <PackageReference Include=\"SkiaSharp\" Version=\"2.80.2\" /> exmple nuspec <dependency id=\"SkiaSharp\" version=\"[2.80.2,3.0.0)\"/> Keep our direct and indirect dependencies in sync When we have direct and indirect dependecies on a nuget package those should all refer to the same version. For instance we have a direct dependency on SkiaSharp, but we also use SvgSkia and RichTextKit and those have a dependency on SkiaSharp too. It would be optimal if all referred to the same version of SkiaSharp. This might not always be possible."
  },
  "api/Mapsui.UI.Wpf.WindowsPointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.WindowsPointExtensions.html",
    "title": "Class WindowsPointExtensions",
    "keywords": "Class WindowsPointExtensions Inheritance System.Object WindowsPointExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class WindowsPointExtensions : object Methods | Improve this Doc View Source ToMapsui(Point) Declaration public static Geometries.Point ToMapsui(this Point point) Parameters Type Name Description Point point Returns Type Description Geometries.Point"
  },
  "api/Mapsui.UI.Wpf.RenderMode.html": {
    "href": "api/Mapsui.UI.Wpf.RenderMode.html",
    "title": "Enum RenderMode",
    "keywords": "Enum RenderMode Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public enum RenderMode : int Fields Name Description Skia Wpf"
  },
  "api/Mapsui.UI.Wpf.PointExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source ApplyScale(Point, Double) Declaration public static Point ApplyScale(this Point point, double scale) Parameters Type Name Description Point point System.Double scale Returns Type Description Point"
  },
  "api/Mapsui.UI.TouchMode.html": {
    "href": "api/Mapsui.UI.TouchMode.html",
    "title": "Enum TouchMode",
    "keywords": "Enum TouchMode Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public enum TouchMode : int Fields Name Description Dragging None Zooming"
  },
  "api/Mapsui.UI.TouchedEventArgs.html": {
    "href": "api/Mapsui.UI.TouchedEventArgs.html",
    "title": "Class TouchedEventArgs",
    "keywords": "Class TouchedEventArgs Inheritance System.Object TouchedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class TouchedEventArgs : EventArgs Constructors | Improve this Doc View Source TouchedEventArgs(List<Geometries.Point>) Declaration public TouchedEventArgs(List<Geometries.Point> screenPoints) Parameters Type Name Description List < Geometries.Point > screenPoints Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenPoints Declaration public List<Geometries.Point> ScreenPoints { get; } Property Value Type Description List < Geometries.Point >"
  },
  "api/Mapsui.UI.Objects.html": {
    "href": "api/Mapsui.UI.Objects.html",
    "title": "Namespace Mapsui.UI.Objects",
    "keywords": "Namespace Mapsui.UI.Objects Classes Drawable Base class for all drawables like polyline, polygon and circle MyLocationLayer A layer to display a symbol for own location ObservableCollectionProvider<T> Interfaces IFeatureProvider"
  },
  "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html": {
    "href": "api/Mapsui.UI.Objects.ObservableCollectionProvider-1.html",
    "title": "Class ObservableCollectionProvider<T>",
    "keywords": "Class ObservableCollectionProvider<T> Inheritance System.Object ObservableCollectionProvider<T> Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class ObservableCollectionProvider<T> : IProvider where T : IFeatureProvider Type Parameters Name Description T Constructors | Improve this Doc View Source ObservableCollectionProvider(ObservableCollection<T>) Declaration public ObservableCollectionProvider(ObservableCollection<T> collection) Parameters Type Name Description System.Collections.ObjectModel.ObservableCollection <T> collection Properties | Improve this Doc View Source Collection Declaration public ObservableCollection<T> Collection { get; } Property Value Type Description System.Collections.ObjectModel.ObservableCollection <T> | Improve this Doc View Source CRS Declaration public string CRS { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetExtents() Declaration public BoundingBox GetExtents() Returns Type Description BoundingBox | Improve this Doc View Source GetFeaturesInView(BoundingBox, Double) Declaration public IEnumerable<IFeature> GetFeaturesInView(BoundingBox box, double resolution) Parameters Type Name Description BoundingBox box System.Double resolution Returns Type Description System.Collections.Generic.IEnumerable < IFeature >"
  },
  "api/Mapsui.UI.Objects.Drawable.html": {
    "href": "api/Mapsui.UI.Objects.Drawable.html",
    "title": "Class Drawable",
    "keywords": "Class Drawable Base class for all drawables like polyline, polygon and circle Inheritance System.Object Xamarin.Forms.BindableObject Drawable Circle Polygon Polyline Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class Drawable : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Fields | Improve this Doc View Source IsClickableProperty Declaration public static readonly BindableProperty IsClickableProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeColorProperty Declaration public static readonly BindableProperty StrokeColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source StrokeWidthProperty Declaration public static readonly BindableProperty StrokeWidthProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ZIndexProperty Declaration public static readonly BindableProperty ZIndexProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Feature Mapsui Feature belonging to this drawable Declaration public Feature Feature { get; set; } Property Value Type Description Feature | Improve this Doc View Source IsClickable Is this drawable clickable Declaration public bool IsClickable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of drawable Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxVisible MaxVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible MinVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source StrokeColor StrokeColor for drawable Declaration public Color StrokeColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source StrokeWidth StrokeWidth of drawable in pixel Declaration public float StrokeWidth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Tag Object for free use Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ZIndex ZIndex of this drawable Declaration public int ZIndex { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) Events | Improve this Doc View Source Clicked Event called, if this drawable is clicked an IsClickable is true Declaration public event EventHandler<DrawableClickedEventArgs> Clicked Event Type Type Description System.EventHandler < DrawableClickedEventArgs > Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.iOS.html": {
    "href": "api/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "api/Mapsui.UI.Forms.html": {
    "href": "api/Mapsui.UI.Forms.html",
    "title": "Namespace Mapsui.UI.Forms",
    "keywords": "Namespace Mapsui.UI.Forms Classes Callout CalloutClickedEventArgs Circle DrawableClickedEventArgs MapClickedEventArgs MapControl Class, that uses the API of all other Mapsui MapControls MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "api/Mapsui.UI.Forms.Utils.html": {
    "href": "api/Mapsui.UI.Forms.Utils.html",
    "title": "Namespace Mapsui.UI.Forms.Utils",
    "keywords": "Namespace Mapsui.UI.Forms.Utils Classes PolylineConverter Polyline helper class"
  },
  "api/Mapsui.UI.Forms.Position.html": {
    "href": "api/Mapsui.UI.Forms.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Position Constructors | Improve this Doc View Source Position(Position) Initializes a new instance of the Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Improve this Doc View Source Position(Double, Double) Initializes a new instance of the Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description System.Double latitude Latitude of position System.Double longitude Longitude of position Fields | Improve this Doc View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = \"P DD.ddd°|P DDD.ddd°|N|S|E|W\" Field Value Type Description System.String | Improve this Doc View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = \"P DD° MM.MMM'|P DDD° MM.MMM'|N|S|E|W\" Field Value Type Description System.String | Improve this Doc View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = \"P DD° MM' SS.sss\\\"|P DDD° MM' SS.sss\\\"|N|S|E|W\" Field Value Type Description System.String Properties | Improve this Doc View Source Latitude Latitude of position Declaration public double Latitude { get; } Property Value Type Description System.Double | Improve this Doc View Source Longitude Longitude of position Declaration public double Longitude { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public Geometries.Point ToMapsui() Returns Type Description Mapsui.Geometries.Point Position in Mapsui format | Improve this Doc View Source ToString() Returns a System.String that represents the current Position Declaration public override string ToString() Returns Type Description System.String A System.String that represents the current Position Overrides System.ValueType.ToString() | Improve this Doc View Source ToString(String) Returns a System.String that represents the current Position in a given format Declaration public string ToString(string format) Parameters Type Name Description System.String format Format string Returns Type Description System.String Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Improve this Doc View Source Equality(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.Polyline.html": {
    "href": "api/Mapsui.UI.Forms.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance System.Object Xamarin.Forms.BindableObject Drawable Polyline Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polyline : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polyline() Initializes a new instance of the Polyline class. Declaration public Polyline() | Improve this Doc View Source Polyline(String) Initializes a new instance of the Polyline class from encoded string as described here https://developers.google.com/maps/documentation/utilities/polylinealgorithm Declaration public Polyline(string encodedPolyline) Parameters Type Name Description System.String encodedPolyline Encoded polyline Properties | Improve this Doc View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description System.Collections.Generic.IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.PinClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance System.Object System.EventArgs PinClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.Pin.html": {
    "href": "api/Mapsui.UI.Forms.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance System.Object Xamarin.Forms.BindableObject Pin Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Pin : BindableObject, INotifyPropertyChanged, IDynamicResourceHandler, IFeatureProvider Constructors | Improve this Doc View Source Pin() Initializes a new instance of the Pin class Declaration public Pin() | Improve this Doc View Source Pin(MapView) Initializes a new instance of the Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Fields | Improve this Doc View Source AddressProperty Declaration public static readonly BindableProperty AddressProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source AnchorProperty Declaration public static readonly BindableProperty AnchorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ColorProperty Declaration public static readonly BindableProperty ColorProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source HeightProperty Declaration public static readonly BindableProperty HeightProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IconProperty Declaration public static readonly BindableProperty IconProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsVisibleProperty Declaration public static readonly BindableProperty IsVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source LabelProperty Declaration public static readonly BindableProperty LabelProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MaxVisibleProperty Declaration public static readonly BindableProperty MaxVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MinVisibleProperty Declaration public static readonly BindableProperty MinVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PositionProperty Declaration public static readonly BindableProperty PositionProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotateWithMapProperty Declaration public static readonly BindableProperty RotateWithMapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationProperty Declaration public static readonly BindableProperty RotationProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ScaleProperty Declaration public static readonly BindableProperty ScaleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SvgProperty Declaration public static readonly BindableProperty SvgProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TransparencyProperty Declaration public static readonly BindableProperty TransparencyProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source TypeProperty Declaration public static readonly BindableProperty TypeProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source WidthProperty Declaration public static readonly BindableProperty WidthProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Address Adress (like street) of pin Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Xamarin.Forms.Point | Improve this Doc View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Improve this Doc View Source Color Color of pin Declaration public Color Color { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Feature Mapsui feature for this pin Declaration public Feature Feature { get; } Property Value Type Description Feature Mapsui feature | Improve this Doc View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; } Property Value Type Description System.Double | Improve this Doc View Source Icon Byte[] holding the bitmap informations Declaration public byte[] Icon { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Label Label of pin Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxVisible MaxVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinVisible MinVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Improve this Doc View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Svg String holding the Svg image informations Declaration public string Svg { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tag Tag holding free data Declaration public object Tag { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Improve this Doc View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to the current Pin . Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with the current Pin . Returns Type Description System.Boolean true if the specified System.Object is equal to the current Pin ; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source HideCallout() Hide corresponding callout Declaration public void HideCallout() | Improve this Doc View Source IsCalloutVisible() Check visibility for corresponding callout Declaration public bool IsCalloutVisible() Returns Type Description System.Boolean True, if callout is visible on map | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.BindableObject.OnPropertyChanged(System.String) | Improve this Doc View Source ShowCallout() Show corresponding callout Declaration public void ShowCallout() Operators | Improve this Doc View Source Equality(Pin, Pin) Declaration public static bool operator ==(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Pin, Pin) Declaration public static bool operator !=(Pin left, Pin right) Parameters Type Name Description Pin left Pin right Returns Type Description System.Boolean Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance System.Object System.EventArgs MapLongClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.MapControl.html": {
    "href": "api/Mapsui.UI.Forms.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Class, that uses the API of all other Mapsui MapControls Inheritance System.Object Xamarin.Forms.BindableObject Xamarin.Forms.Element Xamarin.Forms.NavigableElement Xamarin.Forms.VisualElement Xamarin.Forms.View Xamarin.Forms.Layout Xamarin.Forms.TemplatedView Xamarin.Forms.ContentView MapControl Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged Inherited Members Xamarin.Forms.ContentView.ContentProperty Xamarin.Forms.ContentView.OnBindingContextChanged() Xamarin.Forms.ContentView.Content Xamarin.Forms.TemplatedView.ControlTemplateProperty Xamarin.Forms.TemplatedView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Xamarin.Forms.TemplatedView.OnApplyTemplate() Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element) Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element, System.Int32) Xamarin.Forms.TemplatedView.GetTemplateChild(System.String) Xamarin.Forms.TemplatedView.ResolveControlTemplate() Xamarin.Forms.TemplatedView.ControlTemplate Xamarin.Forms.Layout.IsClippedToBoundsProperty Xamarin.Forms.Layout.CascadeInputTransparentProperty Xamarin.Forms.Layout.PaddingProperty Xamarin.Forms.Layout.ForceLayout() Xamarin.Forms.Layout.LayoutChildIntoBoundingRegion(Xamarin.Forms.VisualElement, Xamarin.Forms.Rectangle) Xamarin.Forms.Layout.LowerChild(Xamarin.Forms.View) Xamarin.Forms.Layout.RaiseChild(Xamarin.Forms.View) Xamarin.Forms.Layout.InvalidateLayout() Xamarin.Forms.Layout.OnChildMeasureInvalidated(System.Object, System.EventArgs) Xamarin.Forms.Layout.OnChildMeasureInvalidated() Xamarin.Forms.Layout.OnSizeAllocated(System.Double, System.Double) Xamarin.Forms.Layout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View) Xamarin.Forms.Layout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View) Xamarin.Forms.Layout.UpdateChildrenLayout() Xamarin.Forms.Layout.ResolveLayoutChanges() Xamarin.Forms.Layout.IsClippedToBounds Xamarin.Forms.Layout.Padding Xamarin.Forms.Layout.CascadeInputTransparent Xamarin.Forms.Layout.LayoutChanged Xamarin.Forms.View.VerticalOptionsProperty Xamarin.Forms.View.HorizontalOptionsProperty Xamarin.Forms.View.MarginProperty Xamarin.Forms.View.GetChildElements(Xamarin.Forms.Point) Xamarin.Forms.View.GestureController Xamarin.Forms.View.GestureRecognizers Xamarin.Forms.View.Xamarin.Forms.Internals.IGestureController.CompositeGestureRecognizers Xamarin.Forms.View.HorizontalOptions Xamarin.Forms.View.Margin Xamarin.Forms.View.VerticalOptions Xamarin.Forms.VisualElement.NavigationProperty Xamarin.Forms.VisualElement.StyleProperty Xamarin.Forms.VisualElement.InputTransparentProperty Xamarin.Forms.VisualElement.IsEnabledProperty Xamarin.Forms.VisualElement.XProperty Xamarin.Forms.VisualElement.YProperty Xamarin.Forms.VisualElement.AnchorXProperty Xamarin.Forms.VisualElement.AnchorYProperty Xamarin.Forms.VisualElement.TranslationXProperty Xamarin.Forms.VisualElement.TranslationYProperty Xamarin.Forms.VisualElement.WidthProperty Xamarin.Forms.VisualElement.HeightProperty Xamarin.Forms.VisualElement.RotationProperty Xamarin.Forms.VisualElement.RotationXProperty Xamarin.Forms.VisualElement.RotationYProperty Xamarin.Forms.VisualElement.ScaleProperty Xamarin.Forms.VisualElement.ScaleXProperty Xamarin.Forms.VisualElement.ScaleYProperty Xamarin.Forms.VisualElement.ClipProperty Xamarin.Forms.VisualElement.VisualProperty Xamarin.Forms.VisualElement.IsVisibleProperty Xamarin.Forms.VisualElement.OpacityProperty Xamarin.Forms.VisualElement.BackgroundColorProperty Xamarin.Forms.VisualElement.BackgroundProperty Xamarin.Forms.VisualElement.BehaviorsProperty Xamarin.Forms.VisualElement.TriggersProperty Xamarin.Forms.VisualElement.WidthRequestProperty Xamarin.Forms.VisualElement.HeightRequestProperty Xamarin.Forms.VisualElement.MinimumWidthRequestProperty Xamarin.Forms.VisualElement.MinimumHeightRequestProperty Xamarin.Forms.VisualElement.IsFocusedProperty Xamarin.Forms.VisualElement.FlowDirectionProperty Xamarin.Forms.VisualElement.TabIndexProperty Xamarin.Forms.VisualElement.IsTabStopProperty Xamarin.Forms.VisualElement.OnTabIndexPropertyChanged(System.Int32, System.Int32) Xamarin.Forms.VisualElement.TabIndexDefaultValueCreator() Xamarin.Forms.VisualElement.OnTabStopPropertyChanged(System.Boolean, System.Boolean) Xamarin.Forms.VisualElement.TabStopDefaultValueCreator() Xamarin.Forms.VisualElement.BatchBegin() Xamarin.Forms.VisualElement.BatchCommit() Xamarin.Forms.VisualElement.Focus() Xamarin.Forms.VisualElement.Layout(Xamarin.Forms.Rectangle) Xamarin.Forms.VisualElement.Measure(System.Double, System.Double, Xamarin.Forms.MeasureFlags) Xamarin.Forms.VisualElement.Unfocus() Xamarin.Forms.VisualElement.InvalidateMeasure() Xamarin.Forms.VisualElement.OnChildAdded(Xamarin.Forms.Element) Xamarin.Forms.VisualElement.OnChildrenReordered() Xamarin.Forms.VisualElement.OnMeasure(System.Double, System.Double) Xamarin.Forms.VisualElement.SizeAllocated(System.Double, System.Double) Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.InvalidateMeasure(Xamarin.Forms.Internals.InvalidationTrigger) Xamarin.Forms.VisualElement.ChangeVisualState() Xamarin.Forms.VisualElement.Visual Xamarin.Forms.VisualElement.FlowDirection Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.EffectiveFlowDirection Xamarin.Forms.VisualElement.AnchorX Xamarin.Forms.VisualElement.AnchorY Xamarin.Forms.VisualElement.BackgroundColor Xamarin.Forms.VisualElement.Background Xamarin.Forms.VisualElement.Behaviors Xamarin.Forms.VisualElement.Bounds Xamarin.Forms.VisualElement.Height Xamarin.Forms.VisualElement.HeightRequest Xamarin.Forms.VisualElement.InputTransparent Xamarin.Forms.VisualElement.IsEnabled Xamarin.Forms.VisualElement.IsFocused Xamarin.Forms.VisualElement.IsVisible Xamarin.Forms.VisualElement.MinimumHeightRequest Xamarin.Forms.VisualElement.MinimumWidthRequest Xamarin.Forms.VisualElement.Opacity Xamarin.Forms.VisualElement.Rotation Xamarin.Forms.VisualElement.RotationX Xamarin.Forms.VisualElement.RotationY Xamarin.Forms.VisualElement.Scale Xamarin.Forms.VisualElement.ScaleX Xamarin.Forms.VisualElement.ScaleY Xamarin.Forms.VisualElement.TabIndex Xamarin.Forms.VisualElement.IsTabStop Xamarin.Forms.VisualElement.TranslationX Xamarin.Forms.VisualElement.TranslationY Xamarin.Forms.VisualElement.Triggers Xamarin.Forms.VisualElement.Width Xamarin.Forms.VisualElement.WidthRequest Xamarin.Forms.VisualElement.X Xamarin.Forms.VisualElement.Y Xamarin.Forms.VisualElement.Clip Xamarin.Forms.VisualElement.Resources Xamarin.Forms.VisualElement.ChildrenReordered Xamarin.Forms.VisualElement.Focused Xamarin.Forms.VisualElement.MeasureInvalidated Xamarin.Forms.VisualElement.SizeChanged Xamarin.Forms.VisualElement.Unfocused Xamarin.Forms.NavigableElement.OnParentSet() Xamarin.Forms.NavigableElement.Navigation Xamarin.Forms.NavigableElement.Style Xamarin.Forms.NavigableElement.StyleClass Xamarin.Forms.NavigableElement.class Xamarin.Forms.Element.MenuProperty Xamarin.Forms.Element.AutomationIdProperty Xamarin.Forms.Element.ClassIdProperty Xamarin.Forms.Element.GetMenu(Xamarin.Forms.BindableObject) Xamarin.Forms.Element.SetMenu(Xamarin.Forms.BindableObject, Xamarin.Forms.Menu) Xamarin.Forms.Element.Xamarin.Forms.IElementController.SetValueFromRenderer(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.Element.FindByName(System.String) Xamarin.Forms.Element.RemoveDynamicResource(Xamarin.Forms.BindableProperty) Xamarin.Forms.Element.SetDynamicResource(Xamarin.Forms.BindableProperty, System.String) Xamarin.Forms.Element.AutomationId Xamarin.Forms.Element.ClassId Xamarin.Forms.Element.Effects Xamarin.Forms.Element.Id Xamarin.Forms.Element.StyleId Xamarin.Forms.Element.Parent Xamarin.Forms.Element.ChildAdded Xamarin.Forms.Element.ChildRemoved Xamarin.Forms.Element.DescendantAdded Xamarin.Forms.Element.DescendantRemoved Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapControl : ContentView, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Fields | Improve this Doc View Source UseDoubleTap Declaration public bool UseDoubleTap Field Value Type Description System.Boolean | Improve this Doc View Source UseFling Declaration public bool UseFling Field Value Type Description System.Boolean | Improve this Doc View Source UseGPU Declaration public static bool UseGPU Field Value Type Description System.Boolean Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ScreenHeight Declaration public float ScreenHeight { get; } Property Value Type Description System.Single | Improve this Doc View Source ScreenWidth Declaration public float ScreenWidth { get; } Property Value Type Description System.Single | Improve this Doc View Source SymbolCache Declaration public ISymbolCache SymbolCache { get; } Property Value Type Description ISymbolCache | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.Element.OnPropertyChanged(System.String) | Improve this Doc View Source OpenBrowser(String) Public functions Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Improve this Doc View Source DoubleTap DoubleTap is called, when user clicks with a mouse button or tap with a finger two or more times on map Declaration public event EventHandler<TappedEventArgs> DoubleTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs> Fling Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source Hovered Hover is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs> Hovered Event Type Type Description System.EventHandler < HoveredEventArgs > | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source LongTap LongTap is called, when user clicks with a mouse button or tap with a finger on map for 500 ms Declaration public event EventHandler<TappedEventArgs> LongTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler | Improve this Doc View Source SingleTap SingleTap is called, when user clicks with a mouse button or tap with a finger on map Declaration public event EventHandler<TappedEventArgs> SingleTap Event Type Type Description System.EventHandler < TappedEventArgs > | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs> Swipe Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source TouchAction TouchAction is called, when user provoques a touch event Declaration public event EventHandler<SKTouchEventArgs> TouchAction Event Type Type Description System.EventHandler < SkiaSharp.Views.Forms.SKTouchEventArgs > | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs> TouchEnded Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchEntered TouchEntered is called, when user moves an active touch onto the view Declaration public event EventHandler<TouchedEventArgs> TouchEntered Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchExited TouchExited is called, when user moves an active touch off the view Declaration public event EventHandler<TouchedEventArgs> TouchExited Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs> TouchMove Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchStarted Event handlers Declaration public event EventHandler<TouchedEventArgs> TouchStarted Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs> Zoomed Event Type Type Description System.EventHandler < ZoomedEventArgs > Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.IDisposable System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Mapsui.UI.Forms.Extensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.html",
    "title": "Namespace Mapsui.UI.Forms.Extensions",
    "keywords": "Namespace Mapsui.UI.Forms.Extensions Classes ColorExtensions PositionExtensions TextAlignmentExtensions ZoomLevelExtensions"
  },
  "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.TextAlignmentExtensions.html",
    "title": "Class TextAlignmentExtensions",
    "keywords": "Class TextAlignmentExtensions Inheritance System.Object TextAlignmentExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class TextAlignmentExtensions Methods | Improve this Doc View Source ToMapsui(TextAlignment) Convert Xamarin.Forms.TextAlignment to Mapsui/RichTextKit.Styles.Color Declaration public static Alignment ToMapsui(this TextAlignment textAlignment) Parameters Type Name Description Xamarin.Forms.TextAlignment textAlignment TextAlignment in Xamarin.Forms format Returns Type Description Alignment TextAlignment in Mapsui/RichTextKit format"
  },
  "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance System.Object PositionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class PositionExtensions Methods | Improve this Doc View Source ToForms(Geometries.Point) Convert Mapsui.Geometries.Point to Xamarin.Forms.Maps.Position Declaration public static Position ToForms(this Geometries.Point point) Parameters Type Name Description Geometries.Point point Point in Mapsui format Returns Type Description Position Position in Xamarin.Forms.Maps format"
  },
  "api/Mapsui.UI.Forms.Distance.html": {
    "href": "api/Mapsui.UI.Forms.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public struct Distance Constructors | Improve this Doc View Source Distance(Double) Constructor for Distance object. Declaration public Distance(double meters) Parameters Type Name Description System.Double meters Meters. Properties | Improve this Doc View Source Kilometers Distance in kilometers Declaration public double Kilometers { get; } Property Value Type Description System.Double Distance in kilometers | Improve this Doc View Source Meters Distance in meters Declaration public double Meters { get; } Property Value Type Description System.Double Distance in meters | Improve this Doc View Source Miles Distance in miles Declaration public double Miles { get; } Property Value Type Description System.Double Distance im miles | Improve this Doc View Source NauticalMiles Distance in nautic miles Declaration public double NauticalMiles { get; } Property Value Type Description System.Double Distance in nautical miles Methods | Improve this Doc View Source Equals(Distance) Determines whether the specified Distance is equal to the current Distance . Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Distance Returns Type Description System.Boolean True if the specified Distance is equal to the current Distance ; otherwise, false . | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source FromKilometers(Double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description System.Double kilometers Distance in kilometers Returns Type Description Distance Distance object | Improve this Doc View Source FromMeters(Double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description System.Double meters Distance in meters Returns Type Description Distance Distance object | Improve this Doc View Source FromMiles(Double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description System.Double miles Distance in miles Returns Type Description Distance Distance object | Improve this Doc View Source FromNauticalMiles(Double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description System.Double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.ZoomDirection.html": {
    "href": "api/Mapsui.UI.ZoomDirection.html",
    "title": "Enum ZoomDirection",
    "keywords": "Enum ZoomDirection Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public enum ZoomDirection : int Fields Name Description ZoomIn ZoomOut"
  },
  "api/Mapsui.UI.html": {
    "href": "api/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes HoveredEventArgs SwipedEventArgs TappedEventArgs TouchedEventArgs ZoomedEventArgs Enums TouchMode ZoomDirection"
  },
  "api/Mapsui.UI.Wpf.MouseButtonEventArgsExtensions.html": {
    "href": "api/Mapsui.UI.Wpf.MouseButtonEventArgsExtensions.html",
    "title": "Class MouseButtonEventArgsExtensions",
    "keywords": "Class MouseButtonEventArgsExtensions Inheritance System.Object MouseButtonEventArgsExtensions Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public static class MouseButtonEventArgsExtensions : object Methods | Improve this Doc View Source GetMapInfo(MouseButtonEventArgs, MapControl) Declaration public static MapInfo GetMapInfo(this MouseButtonEventArgs e, MapControl mapControl) Parameters Type Name Description MouseButtonEventArgs e MapControl mapControl Returns Type Description MapInfo"
  },
  "api/Mapsui.UI.Wpf.MapControl.html": {
    "href": "api/Mapsui.UI.Wpf.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance System.Object MapControl Implements IMapControl Grid Namespace : Mapsui.UI.Wpf Assembly : Mapsui.UI.Wpf.dll Syntax public class MapControl : INotifyPropertyChanged, IMapControl, Grid Constructors | Improve this Doc View Source MapControl() Declaration public MapControl() Properties | Improve this Doc View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Improve this Doc View Source Navigator Handles all manipulations of the map viewport Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PixelDensity Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Renderer that is used from this MapControl Declaration public IRenderer Renderer { get; set; } Property Value Type Description IRenderer | Improve this Doc View Source RenderMode Declaration public RenderMode RenderMode { get; set; } Property Value Type Description RenderMode | Improve this Doc View Source ReSnapRotationDegrees With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UnSnapRotationDegrees After how many degrees start rotation to take place Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Interval between two redraws of the MapControl in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Viewport Viewport holding information about visible part of the map. Viewport can never be null. Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source WpfCanvas Declaration public Canvas WpfCanvas { get; } Property Value Type Description Canvas Methods | Improve this Doc View Source CallHomeIfNeeded() Declaration public void CallHomeIfNeeded() | Improve this Doc View Source Clear() Clear cache and repaint map Declaration public void Clear() | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetMapInfo(Point, Int32) Declaration public MapInfo GetMapInfo(Point screenPosition, int margin = 0) Parameters Type Name Description Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source OnPropertyChanged(String) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName | Improve this Doc View Source OnRender(DrawingContext) Declaration protected override void OnRender(DrawingContext dc) Parameters Type Name Description DrawingContext dc | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(Point) Declaration public Point ToDeviceIndependentUnits(Point coordinateInPixels) Parameters Type Name Description Point coordinateInPixels Returns Type Description Point | Improve this Doc View Source ToPixels(Point) Declaration public Point ToPixels(Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Point coordinateInDeviceIndependentUnits Returns Type Description Point | Improve this Doc View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() | Improve this Doc View Source ZoomToBox(Geometries.Point, Geometries.Point) Declaration public void ZoomToBox(Geometries.Point beginPoint, Geometries.Point endPoint) Parameters Type Name Description Geometries.Point beginPoint Geometries.Point endPoint Events | Improve this Doc View Source FeatureInfo Declaration public event EventHandler<FeatureInfoEventArgs> FeatureInfo Event Type Type Description EventHandler < FeatureInfoEventArgs > | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs> Fling Event Type Type Description EventHandler < SwipedEventArgs > | Improve this Doc View Source Info Called whenever a feature in one of the layers in InfoLayers is hitten by a click Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler < MapInfoEventArgs > | Improve this Doc View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler | Improve this Doc View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler ViewportInitialized Event Type Type Description EventHandler Implements IMapControl Grid"
  },
  "api/Mapsui.UI.Utils.html": {
    "href": "api/Mapsui.UI.Utils.html",
    "title": "Namespace Mapsui.UI.Utils",
    "keywords": "Namespace Mapsui.UI.Utils Classes FlingTracker"
  },
  "api/Mapsui.UI.Utils.FlingTracker.html": {
    "href": "api/Mapsui.UI.Utils.FlingTracker.html",
    "title": "Class FlingTracker",
    "keywords": "Class FlingTracker Inheritance System.Object FlingTracker Namespace : Mapsui.UI.Utils Assembly : Mapsui.UI.Wpf.dll Syntax public class FlingTracker : object Constructors | Improve this Doc View Source FlingTracker() Declaration public FlingTracker() Methods | Improve this Doc View Source AddEvent(Int64, Geometries.Point, Int64) Declaration public void AddEvent(long id, Geometries.Point location, long ticks) Parameters Type Name Description System.Int64 id Geometries.Point location System.Int64 ticks | Improve this Doc View Source CalcVelocity(Int64, Int64) Declaration public (double vx, double vy) CalcVelocity(long id, long now) Parameters Type Name Description System.Int64 id System.Int64 now Returns Type Description System.ValueTuple < System.Double , System.Double > | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source RemoveId(Int64) Declaration public void RemoveId(long id) Parameters Type Name Description System.Int64 id"
  },
  "api/Mapsui.UI.TappedEventArgs.html": {
    "href": "api/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance System.Object TappedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class TappedEventArgs : EventArgs Constructors | Improve this Doc View Source TappedEventArgs(Geometries.Point, Int32) Declaration public TappedEventArgs(Geometries.Point screenPosition, int numOfTaps) Parameters Type Name Description Geometries.Point screenPosition System.Int32 numOfTaps Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NumOfTaps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ScreenPosition Declaration public Geometries.Point ScreenPosition { get; } Property Value Type Description Geometries.Point"
  },
  "api/Mapsui.UI.SwipedEventArgs.html": {
    "href": "api/Mapsui.UI.SwipedEventArgs.html",
    "title": "Class SwipedEventArgs",
    "keywords": "Class SwipedEventArgs Inheritance System.Object SwipedEventArgs Namespace : Mapsui.UI Assembly : Mapsui.UI.Wpf.dll Syntax public class SwipedEventArgs : EventArgs Constructors | Improve this Doc View Source SwipedEventArgs(Double, Double) Declaration public SwipedEventArgs(double velocityX, double velocityY) Parameters Type Name Description System.Double velocityX System.Double velocityY Properties | Improve this Doc View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VelocityX Declaration public double VelocityX { get; } Property Value Type Description System.Double | Improve this Doc View Source VelocityY Declaration public double VelocityY { get; } Property Value Type Description System.Double"
  },
  "api/Mapsui.UI.Objects.MyLocationLayer.html": {
    "href": "api/Mapsui.UI.Objects.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance System.Object MyLocationLayer Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public class MyLocationLayer : MemoryLayer Remarks There are two different symbols for own loaction: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Improve this Doc View Source MyLocationLayer(MapView) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(MapView view) Parameters Type Name Description MapView view MapView, to which this layer belongs | Improve this Doc View Source MyLocationLayer(MapView, Position) Initializes a new instance of the MyLocationLayer class with a starting location. Declaration public MyLocationLayer(MapView view, Position position) Parameters Type Name Description MapView view MapView, to which this layer belongs Position position Position, where to start Properties | Improve this Doc View Source Direction Movement direction of device at location Declaration public double Direction { get; } Property Value Type Description System.Double Direction at location | Improve this Doc View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocation Position of location, that is displayed Declaration public Position MyLocation { get; } Property Value Type Description Position Position of location | Improve this Doc View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description System.Double Scale of symbol | Improve this Doc View Source ViewingDirection Viewing direction of device (in degrees wrt. north direction) Declaration public double ViewingDirection { get; } Property Value Type Description System.Double Direction at location Methods | Improve this Doc View Source UpdateMyDirection(Double, Double, Boolean) Updates my movement direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation, bool animated = true) Parameters Type Name Description System.Double newDirection New direction System.Double newViewportRotation New viewport rotation System.Boolean animated | Improve this Doc View Source UpdateMyLocation(Position, Boolean) Updates my location Declaration public void UpdateMyLocation(Position newLocation, bool animated = true) Parameters Type Name Description Position newLocation New location System.Boolean animated | Improve this Doc View Source UpdateMySpeed(Double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description System.Double newSpeed New speed | Improve this Doc View Source UpdateMyViewDirection(Double, Double, Boolean) Updates my view direction Declaration public void UpdateMyViewDirection(double newDirection, double newViewportRotation, bool animated = true) Parameters Type Name Description System.Double newDirection New direction System.Double newViewportRotation New viewport rotation System.Boolean animated"
  },
  "api/Mapsui.UI.Objects.IFeatureProvider.html": {
    "href": "api/Mapsui.UI.Objects.IFeatureProvider.html",
    "title": "Interface IFeatureProvider",
    "keywords": "Interface IFeatureProvider Namespace : Mapsui.UI.Objects Assembly : Mapsui.UI.Forms.dll Syntax public interface IFeatureProvider Properties | Improve this Doc View Source Feature Declaration Feature Feature { get; } Property Value Type Description Feature"
  },
  "api/Mapsui.UI.Forms.Polygon.html": {
    "href": "api/Mapsui.UI.Forms.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance System.Object Xamarin.Forms.BindableObject Drawable Polygon Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider Inherited Members Drawable.LabelProperty Drawable.StrokeWidthProperty Drawable.StrokeColorProperty Drawable.MinVisibleProperty Drawable.MaxVisibleProperty Drawable.ZIndexProperty Drawable.IsClickableProperty Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnBindingContextChanged() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class Polygon : Drawable, INotifyPropertyChanged, IDynamicResourceHandler, IClickable, IFeatureProvider Constructors | Improve this Doc View Source Polygon() Initializes a new instance of the Polygon class. Declaration public Polygon() Fields | Improve this Doc View Source FillColorProperty Declaration public static readonly BindableProperty FillColorProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Xamarin.Forms.Color | Improve this Doc View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description System.Collections.Generic.IList < Position []> | Improve this Doc View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description System.Collections.Generic.IList < Position > Methods | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = null) Parameters Type Name Description System.String propertyName Overrides Drawable.OnPropertyChanged(String) Implements System.ComponentModel.INotifyPropertyChanged IFeatureProvider"
  },
  "api/Mapsui.UI.Forms.PinType.html": {
    "href": "api/Mapsui.UI.Forms.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public enum PinType Fields Name Description Icon Pin as icon image Pin Pin with image, which could change color Svg Pin as Svg image"
  },
  "api/Mapsui.UI.Forms.MapView.html": {
    "href": "api/Mapsui.UI.Forms.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance System.Object Xamarin.Forms.BindableObject Xamarin.Forms.Element Xamarin.Forms.NavigableElement Xamarin.Forms.VisualElement Xamarin.Forms.View Xamarin.Forms.Layout Xamarin.Forms.TemplatedView Xamarin.Forms.ContentView MapView Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.ComponentModel.INotifyPropertyChanged System.Collections.Generic.IEnumerable < Pin > System.Collections.IEnumerable Inherited Members Xamarin.Forms.ContentView.ContentProperty Xamarin.Forms.ContentView.OnBindingContextChanged() Xamarin.Forms.ContentView.Content Xamarin.Forms.TemplatedView.ControlTemplateProperty Xamarin.Forms.TemplatedView.LayoutChildren(System.Double, System.Double, System.Double, System.Double) Xamarin.Forms.TemplatedView.OnApplyTemplate() Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element) Xamarin.Forms.TemplatedView.OnChildRemoved(Xamarin.Forms.Element, System.Int32) Xamarin.Forms.TemplatedView.GetTemplateChild(System.String) Xamarin.Forms.TemplatedView.ResolveControlTemplate() Xamarin.Forms.TemplatedView.ControlTemplate Xamarin.Forms.Layout.IsClippedToBoundsProperty Xamarin.Forms.Layout.CascadeInputTransparentProperty Xamarin.Forms.Layout.PaddingProperty Xamarin.Forms.Layout.ForceLayout() Xamarin.Forms.Layout.LayoutChildIntoBoundingRegion(Xamarin.Forms.VisualElement, Xamarin.Forms.Rectangle) Xamarin.Forms.Layout.LowerChild(Xamarin.Forms.View) Xamarin.Forms.Layout.RaiseChild(Xamarin.Forms.View) Xamarin.Forms.Layout.InvalidateLayout() Xamarin.Forms.Layout.OnChildMeasureInvalidated(System.Object, System.EventArgs) Xamarin.Forms.Layout.OnChildMeasureInvalidated() Xamarin.Forms.Layout.OnSizeAllocated(System.Double, System.Double) Xamarin.Forms.Layout.ShouldInvalidateOnChildAdded(Xamarin.Forms.View) Xamarin.Forms.Layout.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View) Xamarin.Forms.Layout.UpdateChildrenLayout() Xamarin.Forms.Layout.ResolveLayoutChanges() Xamarin.Forms.Layout.IsClippedToBounds Xamarin.Forms.Layout.Padding Xamarin.Forms.Layout.CascadeInputTransparent Xamarin.Forms.Layout.LayoutChanged Xamarin.Forms.View.VerticalOptionsProperty Xamarin.Forms.View.HorizontalOptionsProperty Xamarin.Forms.View.MarginProperty Xamarin.Forms.View.GetChildElements(Xamarin.Forms.Point) Xamarin.Forms.View.GestureController Xamarin.Forms.View.GestureRecognizers Xamarin.Forms.View.Xamarin.Forms.Internals.IGestureController.CompositeGestureRecognizers Xamarin.Forms.View.HorizontalOptions Xamarin.Forms.View.Margin Xamarin.Forms.View.VerticalOptions Xamarin.Forms.VisualElement.NavigationProperty Xamarin.Forms.VisualElement.StyleProperty Xamarin.Forms.VisualElement.InputTransparentProperty Xamarin.Forms.VisualElement.IsEnabledProperty Xamarin.Forms.VisualElement.XProperty Xamarin.Forms.VisualElement.YProperty Xamarin.Forms.VisualElement.AnchorXProperty Xamarin.Forms.VisualElement.AnchorYProperty Xamarin.Forms.VisualElement.TranslationXProperty Xamarin.Forms.VisualElement.TranslationYProperty Xamarin.Forms.VisualElement.WidthProperty Xamarin.Forms.VisualElement.HeightProperty Xamarin.Forms.VisualElement.RotationProperty Xamarin.Forms.VisualElement.RotationXProperty Xamarin.Forms.VisualElement.RotationYProperty Xamarin.Forms.VisualElement.ScaleProperty Xamarin.Forms.VisualElement.ScaleXProperty Xamarin.Forms.VisualElement.ScaleYProperty Xamarin.Forms.VisualElement.ClipProperty Xamarin.Forms.VisualElement.VisualProperty Xamarin.Forms.VisualElement.IsVisibleProperty Xamarin.Forms.VisualElement.OpacityProperty Xamarin.Forms.VisualElement.BackgroundColorProperty Xamarin.Forms.VisualElement.BackgroundProperty Xamarin.Forms.VisualElement.BehaviorsProperty Xamarin.Forms.VisualElement.TriggersProperty Xamarin.Forms.VisualElement.WidthRequestProperty Xamarin.Forms.VisualElement.HeightRequestProperty Xamarin.Forms.VisualElement.MinimumWidthRequestProperty Xamarin.Forms.VisualElement.MinimumHeightRequestProperty Xamarin.Forms.VisualElement.IsFocusedProperty Xamarin.Forms.VisualElement.FlowDirectionProperty Xamarin.Forms.VisualElement.TabIndexProperty Xamarin.Forms.VisualElement.IsTabStopProperty Xamarin.Forms.VisualElement.OnTabIndexPropertyChanged(System.Int32, System.Int32) Xamarin.Forms.VisualElement.TabIndexDefaultValueCreator() Xamarin.Forms.VisualElement.OnTabStopPropertyChanged(System.Boolean, System.Boolean) Xamarin.Forms.VisualElement.TabStopDefaultValueCreator() Xamarin.Forms.VisualElement.BatchBegin() Xamarin.Forms.VisualElement.BatchCommit() Xamarin.Forms.VisualElement.Focus() Xamarin.Forms.VisualElement.Layout(Xamarin.Forms.Rectangle) Xamarin.Forms.VisualElement.Measure(System.Double, System.Double, Xamarin.Forms.MeasureFlags) Xamarin.Forms.VisualElement.Unfocus() Xamarin.Forms.VisualElement.InvalidateMeasure() Xamarin.Forms.VisualElement.OnChildAdded(Xamarin.Forms.Element) Xamarin.Forms.VisualElement.OnChildrenReordered() Xamarin.Forms.VisualElement.OnMeasure(System.Double, System.Double) Xamarin.Forms.VisualElement.SizeAllocated(System.Double, System.Double) Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.InvalidateMeasure(Xamarin.Forms.Internals.InvalidationTrigger) Xamarin.Forms.VisualElement.ChangeVisualState() Xamarin.Forms.VisualElement.Visual Xamarin.Forms.VisualElement.FlowDirection Xamarin.Forms.VisualElement.Xamarin.Forms.IVisualElementController.EffectiveFlowDirection Xamarin.Forms.VisualElement.AnchorX Xamarin.Forms.VisualElement.AnchorY Xamarin.Forms.VisualElement.BackgroundColor Xamarin.Forms.VisualElement.Background Xamarin.Forms.VisualElement.Behaviors Xamarin.Forms.VisualElement.Bounds Xamarin.Forms.VisualElement.Height Xamarin.Forms.VisualElement.HeightRequest Xamarin.Forms.VisualElement.InputTransparent Xamarin.Forms.VisualElement.IsEnabled Xamarin.Forms.VisualElement.IsFocused Xamarin.Forms.VisualElement.IsVisible Xamarin.Forms.VisualElement.MinimumHeightRequest Xamarin.Forms.VisualElement.MinimumWidthRequest Xamarin.Forms.VisualElement.Opacity Xamarin.Forms.VisualElement.Rotation Xamarin.Forms.VisualElement.RotationX Xamarin.Forms.VisualElement.RotationY Xamarin.Forms.VisualElement.Scale Xamarin.Forms.VisualElement.ScaleX Xamarin.Forms.VisualElement.ScaleY Xamarin.Forms.VisualElement.TabIndex Xamarin.Forms.VisualElement.IsTabStop Xamarin.Forms.VisualElement.TranslationX Xamarin.Forms.VisualElement.TranslationY Xamarin.Forms.VisualElement.Triggers Xamarin.Forms.VisualElement.Width Xamarin.Forms.VisualElement.WidthRequest Xamarin.Forms.VisualElement.X Xamarin.Forms.VisualElement.Y Xamarin.Forms.VisualElement.Clip Xamarin.Forms.VisualElement.Resources Xamarin.Forms.VisualElement.ChildrenReordered Xamarin.Forms.VisualElement.Focused Xamarin.Forms.VisualElement.MeasureInvalidated Xamarin.Forms.VisualElement.SizeChanged Xamarin.Forms.VisualElement.Unfocused Xamarin.Forms.NavigableElement.OnParentSet() Xamarin.Forms.NavigableElement.Navigation Xamarin.Forms.NavigableElement.Style Xamarin.Forms.NavigableElement.StyleClass Xamarin.Forms.NavigableElement.class Xamarin.Forms.Element.MenuProperty Xamarin.Forms.Element.AutomationIdProperty Xamarin.Forms.Element.ClassIdProperty Xamarin.Forms.Element.GetMenu(Xamarin.Forms.BindableObject) Xamarin.Forms.Element.SetMenu(Xamarin.Forms.BindableObject, Xamarin.Forms.Menu) Xamarin.Forms.Element.Xamarin.Forms.IElementController.SetValueFromRenderer(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.Element.FindByName(System.String) Xamarin.Forms.Element.RemoveDynamicResource(Xamarin.Forms.BindableProperty) Xamarin.Forms.Element.SetDynamicResource(Xamarin.Forms.BindableProperty, System.String) Xamarin.Forms.Element.AutomationId Xamarin.Forms.Element.ClassId Xamarin.Forms.Element.Effects Xamarin.Forms.Element.Id Xamarin.Forms.Element.StyleId Xamarin.Forms.Element.Parent Xamarin.Forms.Element.ChildAdded Xamarin.Forms.Element.ChildRemoved Xamarin.Forms.Element.DescendantAdded Xamarin.Forms.Element.DescendantRemoved Xamarin.Forms.BindableObject.BindingContextProperty Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.ClearValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.GetValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.IsSet(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.RemoveBinding(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty, Xamarin.Forms.BindingBase) Xamarin.Forms.BindableObject.ApplyBindings() Xamarin.Forms.BindableObject.OnPropertyChanging(System.String) Xamarin.Forms.BindableObject.UnapplyBindings() Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindableProperty, System.Object) Xamarin.Forms.BindableObject.SetValue(Xamarin.Forms.BindablePropertyKey, System.Object) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindableProperty) Xamarin.Forms.BindableObject.CoerceValue(Xamarin.Forms.BindablePropertyKey) Xamarin.Forms.BindableObject.Dispatcher Xamarin.Forms.BindableObject.BindingContext Xamarin.Forms.BindableObject.PropertyChanged Xamarin.Forms.BindableObject.PropertyChanging Xamarin.Forms.BindableObject.BindingContextChanged System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapView : ContentView, IDynamicResourceHandler, IElement, INameScope, INavigationProxy, IStyleSelectable, IAnimatable, IResourcesProvider, IStyleElement, IFlowDirectionController, IPropertyPropagationController, IVisualController, ITabStopElement, IStylable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, ILayout, ILayoutController, IPaddingElement, IControlTemplated, IMapControl, INotifyPropertyChanged, IEnumerable<Pin>, IEnumerable Constructors | Improve this Doc View Source MapView() Initializes a new instance of the MapView class. Declaration public MapView() Fields | Improve this Doc View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UniqueCalloutProperty Declaration public static readonly BindableProperty UniqueCalloutProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source UseFlingProperty Declaration public static readonly BindableProperty UseFlingProperty Field Value Type Description Xamarin.Forms.BindableProperty | Improve this Doc View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description Xamarin.Forms.BindableProperty Properties | Improve this Doc View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description System.Collections.Generic.IList < Drawable > | Improve this Doc View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Map Native Mapsui Map object Declaration public Map Map { get; set; } Property Value Type Description Map | Improve this Doc View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description System.Boolean Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Improve this Doc View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Improve this Doc View Source Navigator Navigator of MapControl Declaration public INavigator Navigator { get; set; } Property Value Type Description INavigator | Improve this Doc View Source PanLock Enable paning Declaration public bool PanLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description System.Collections.Generic.IList < Pin > | Improve this Doc View Source PixelDensity IMapControl Declaration public float PixelDensity { get; } Property Value Type Description System.Single | Improve this Doc View Source Renderer Declaration public IRenderer Renderer { get; } Property Value Type Description IRenderer | Improve this Doc View Source ReSnapRotationDegrees Number of degrees, when map shows to north Declaration public double ReSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectedPin Selected pin Declaration public Pin SelectedPin { get; set; } Property Value Type Description Pin | Improve this Doc View Source UniqueCallout Single or multiple callouts possible Declaration public bool UniqueCallout { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UnSnapRotationDegrees Number of degrees, before the rotation starts Declaration public double UnSnapRotationDegrees { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UpdateInterval Update interval for invalidation timer in ms Declaration public int UpdateInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UseDoubleTap Enable checks for double tapping. But be careful, this will add some extra time, before a single tap is returned. Declaration public bool UseDoubleTap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UseFling Enable fling of the map. If touch is lifted during dragging the map the map will slide a bit more in the same direction. Declaration public bool UseFling { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Viewport Viewport of MapControl Declaration public IReadOnlyViewport Viewport { get; } Property Value Type Description IReadOnlyViewport | Improve this Doc View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < Pin > | Improve this Doc View Source GetMapInfo(Geometries.Point, Int32) Declaration public MapInfo GetMapInfo(Geometries.Point screenPosition, int margin = 0) Parameters Type Name Description Geometries.Point screenPosition System.Int32 margin Returns Type Description MapInfo | Improve this Doc View Source GetSnapshot(IEnumerable<ILayer>) Declaration public byte[] GetSnapshot(IEnumerable<ILayer> layers = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < ILayer > layers Returns Type Description System.Byte [] | Improve this Doc View Source HideCallouts() Hide all visible callouts Declaration public void HideCallouts() | Improve this Doc View Source OnPropertyChanged(String) Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName Overrides Xamarin.Forms.Element.OnPropertyChanged(System.String) | Improve this Doc View Source OpenBrowser(String) Declaration public void OpenBrowser(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshData(ChangeType) Declaration public void RefreshData(ChangeType changeType = null) Parameters Type Name Description ChangeType changeType | Improve this Doc View Source RefreshGraphics() Declaration public void RefreshGraphics() | Improve this Doc View Source StartUpdates(Boolean) Start updates for control Declaration public void StartUpdates(bool refresh = true) Parameters Type Name Description System.Boolean refresh Remarks When this function is called, the control is redrawn if needed | Improve this Doc View Source StopUpdates() Stop updates for control Declaration public void StopUpdates() Remarks When this function is called, the control stops to redraw itself, even if it is needed | Improve this Doc View Source ToDeviceIndependentUnits(Geometries.Point) Declaration public Geometries.Point ToDeviceIndependentUnits(Geometries.Point coordinateInPixels) Parameters Type Name Description Geometries.Point coordinateInPixels Returns Type Description Geometries.Point | Improve this Doc View Source ToPixels(Geometries.Point) Declaration public Geometries.Point ToPixels(Geometries.Point coordinateInDeviceIndependentUnits) Parameters Type Name Description Geometries.Point coordinateInDeviceIndependentUnits Returns Type Description Geometries.Point | Improve this Doc View Source Unsubscribe() Declaration public void Unsubscribe() Events | Improve this Doc View Source Fling Fling is called, when user release mouse button or lift finger while moving with a certain speed, higher than speed of swipe Declaration public event EventHandler<SwipedEventArgs> Fling Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source Hovered Hovered is called, when user move mouse over map without pressing mouse button Declaration public event EventHandler<HoveredEventArgs> Hovered Event Type Type Description System.EventHandler < HoveredEventArgs > | Improve this Doc View Source Info Declaration public event EventHandler<MapInfoEventArgs> Info Event Type Type Description System.EventHandler < MapInfoEventArgs > | Improve this Doc View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs> MapClicked Event Type Type Description System.EventHandler < MapClickedEventArgs > | Improve this Doc View Source MapLongClicked Occurs when map long clicked Declaration public event EventHandler<MapLongClickedEventArgs> MapLongClicked Event Type Type Description System.EventHandler < MapLongClickedEventArgs > | Improve this Doc View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs> PinClicked Event Type Type Description System.EventHandler < PinClickedEventArgs > | Improve this Doc View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs> SelectedPinChanged Event Type Type Description System.EventHandler < SelectedPinChangedEventArgs > | Improve this Doc View Source Swipe Swipe is called, when user release mouse button or lift finger while moving with a certain speed Declaration public event EventHandler<SwipedEventArgs> Swipe Event Type Type Description System.EventHandler < SwipedEventArgs > | Improve this Doc View Source TouchAction TouchAction is called, when user provoques a touch event Declaration public event EventHandler<SKTouchEventArgs> TouchAction Event Type Type Description System.EventHandler < SkiaSharp.Views.Forms.SKTouchEventArgs > | Improve this Doc View Source TouchEnded TouchEnd is called, when user release a mouse button or doesn't touch display anymore Declaration public event EventHandler<TouchedEventArgs> TouchEnded Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchEntered TouchEntered is called, when user moves an active touch onto the view Declaration public event EventHandler<TouchedEventArgs> TouchEntered Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchExited TouchExited is called, when user moves an active touch off the view Declaration public event EventHandler<TouchedEventArgs> TouchExited Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchMove TouchMove is called, when user move mouse over map (independent from mouse button state) or move finger on display Declaration public event EventHandler<TouchedEventArgs> TouchMove Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source TouchStarted TouchStart is called, when user press a mouse button or touch the display Declaration public event EventHandler<TouchedEventArgs> TouchStarted Event Type Type Description System.EventHandler < TouchedEventArgs > | Improve this Doc View Source ViewportInitialized Declaration public event EventHandler ViewportInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source Zoomed Zoom is called, when map should be zoomed Declaration public event EventHandler<ZoomedEventArgs> Zoomed Event Type Type Description System.EventHandler < ZoomedEventArgs > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements Xamarin.Forms.IAnimatable Xamarin.Forms.ITabStopElement Xamarin.Forms.IViewController Xamarin.Forms.IVisualElementController Xamarin.Forms.IElementController Xamarin.Forms.Internals.IGestureController Xamarin.Forms.IGestureRecognizers Xamarin.Forms.ILayout Xamarin.Forms.ILayoutController IMapControl System.ComponentModel.INotifyPropertyChanged System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/Mapsui.UI.Forms.MapSpan.html": {
    "href": "api/Mapsui.UI.Forms.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance System.Object MapSpan Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public class MapSpan Constructors | Improve this Doc View Source MapSpan(Position, Double, Double) Initializes a new instance of the MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan System.Double latitudeDegrees Extend of MapSpan in latitude direction in degrees System.Double longitudeDegrees Extend of MapSpan in longitude direction in degrees Properties | Improve this Doc View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Improve this Doc View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description System.Double Extend in latitude degrees | Improve this Doc View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description System.Double Extend in longitude degrees | Improve this Doc View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Improve this Doc View Source ClampLatitude(Double, Double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description System.Double north Maximal latitude degrees for north System.Double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to the current MapSpan Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The System.Object to compare with current MapSpan Returns Type Description System.Boolean true if the specified System.Object is equal to the current MapSpan ; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source FromPositions(IEnumerable<Position>) Create a new MapSpan from multiple positions Declaration public static MapSpan FromPositions(IEnumerable<Position> positions) Parameters Type Name Description System.Collections.Generic.IEnumerable < Position > positions List of positions to get the new MapSpan Returns Type Description MapSpan New MapSpan | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source WithZoom(Double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description System.Double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Improve this Doc View Source Equality(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description System.Boolean"
  },
  "api/Mapsui.UI.Forms.MapClickedEventArgs.html": {
    "href": "api/Mapsui.UI.Forms.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance System.Object System.EventArgs MapClickedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms Assembly : Mapsui.UI.Forms.dll Syntax public sealed class MapClickedEventArgs : EventArgs Properties | Improve this Doc View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description System.Boolean true if handled; otherwise, false . | Improve this Doc View Source NumOfTaps Number of taps Declaration public int NumOfTaps { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position"
  },
  "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html": {
    "href": "api/Mapsui.UI.Forms.Extensions.ZoomLevelExtensions.html",
    "title": "Class ZoomLevelExtensions",
    "keywords": "Class ZoomLevelExtensions Inheritance System.Object ZoomLevelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Mapsui.UI.Forms.Extensions Assembly : Mapsui.UI.Forms.dll Syntax public static class ZoomLevelExtensions Methods | Improve this Doc View Source ToMapsuiResolution(Double) Convert zoom level (as discribed at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this double zoomLevel) Parameters Type Name Description System.Double zoomLevel Zoom level Returns Type Description System.Double Resolution in Mapsui format | Improve this Doc View Source ToMapsuiResolution(Int32) Convert zoom level (as discribed at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this int zoomLevel) Parameters Type Name Description System.Int32 zoomLevel Zoom level Returns Type Description System.Double Resolution in Mapsui format | Improve this Doc View Source ToMapsuiResolution(Single) Convert zoom level (as discribed at https://wiki.openstreetmap.org/wiki/Zoom_levels ) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this float zoomLevel) Parameters Type Name Description System.Single zoomLevel Zoom level Returns Type Description System.Double Resolution in Mapsui format | Improve this Doc View Source ToZoomLevel(Double) Convert Mapsui resolution to zoom level (as discribed at https://wiki.openstreetmap.org/wiki/Zoom_levels ) Declaration public static double ToZoomLevel(this double resolution) Parameters Type Name Description System.Double resolution Resolution in Mpsui format Returns Type Description System.Double Zoom level"
  }
}