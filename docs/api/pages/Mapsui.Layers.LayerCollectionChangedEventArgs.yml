### YamlMime:ManagedReference
items:
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs
  commentId: T:Mapsui.Layers.LayerCollectionChangedEventArgs
  id: LayerCollectionChangedEventArgs
  parent: Mapsui.Layers
  children:
  - Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  - Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
  - Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
  - Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
  langs:
  - csharp
  - vb
  name: LayerCollectionChangedEventArgs
  nameWithType: LayerCollectionChangedEventArgs
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs
  type: Class
  source:
    remote:
      path: Mapsui/Layers/LayerCollectionChangedEventArgs.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LayerCollectionChangedEventArgs
    path: ../../Mapsui/Layers/LayerCollectionChangedEventArgs.cs
    startLine: 5
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: 'public class LayerCollectionChangedEventArgs : EventArgs'
    content.vb: Public Class LayerCollectionChangedEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
  commentId: P:Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
  id: AddedLayers
  parent: Mapsui.Layers.LayerCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: AddedLayers
  nameWithType: LayerCollectionChangedEventArgs.AddedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
  type: Property
  source:
    remote:
      path: Mapsui/Layers/LayerCollectionChangedEventArgs.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: AddedLayers
    path: ../../Mapsui/Layers/LayerCollectionChangedEventArgs.cs
    startLine: 7
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: public IEnumerable<ILayer>? AddedLayers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    content.vb: Public ReadOnly Property AddedLayers As IEnumerable(Of ILayer)
  overload: Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers*
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
  commentId: P:Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
  id: RemovedLayers
  parent: Mapsui.Layers.LayerCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: RemovedLayers
  nameWithType: LayerCollectionChangedEventArgs.RemovedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
  type: Property
  source:
    remote:
      path: Mapsui/Layers/LayerCollectionChangedEventArgs.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RemovedLayers
    path: ../../Mapsui/Layers/LayerCollectionChangedEventArgs.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: public IEnumerable<ILayer>? RemovedLayers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    content.vb: Public ReadOnly Property RemovedLayers As IEnumerable(Of ILayer)
  overload: Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers*
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
  commentId: P:Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
  id: MovedLayers
  parent: Mapsui.Layers.LayerCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: MovedLayers
  nameWithType: LayerCollectionChangedEventArgs.MovedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
  type: Property
  source:
    remote:
      path: Mapsui/Layers/LayerCollectionChangedEventArgs.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MovedLayers
    path: ../../Mapsui/Layers/LayerCollectionChangedEventArgs.cs
    startLine: 9
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: public IEnumerable<ILayer>? MovedLayers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    content.vb: Public ReadOnly Property MovedLayers As IEnumerable(Of ILayer)
  overload: Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers*
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  commentId: M:Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  id: '#ctor(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer},System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})'
  parent: Mapsui.Layers.LayerCollectionChangedEventArgs
  langs:
  - csharp
  - vb
  name: LayerCollectionChangedEventArgs(IEnumerable<ILayer>?, IEnumerable<ILayer>?, IEnumerable<ILayer>?)
  nameWithType: LayerCollectionChangedEventArgs.LayerCollectionChangedEventArgs(IEnumerable<ILayer>?, IEnumerable<ILayer>?, IEnumerable<ILayer>?)
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.LayerCollectionChangedEventArgs(System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>?, System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>?, System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>?)
  type: Constructor
  source:
    remote:
      path: Mapsui/Layers/LayerCollectionChangedEventArgs.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Layers/LayerCollectionChangedEventArgs.cs
    startLine: 11
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: public LayerCollectionChangedEventArgs(IEnumerable<ILayer>? added = null, IEnumerable<ILayer>? removed = null, IEnumerable<ILayer>? moved = null)
    parameters:
    - id: added
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    - id: removed
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    - id: moved
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
    content.vb: Public Sub New(added As IEnumerable(Of ILayer) = Nothing, removed As IEnumerable(Of ILayer) = Nothing, moved As IEnumerable(Of ILayer) = Nothing)
  overload: Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor*
  nameWithType.vb: LayerCollectionChangedEventArgs.New(IEnumerable(Of ILayer), IEnumerable(Of ILayer), IEnumerable(Of ILayer))
  fullName.vb: Mapsui.Layers.LayerCollectionChangedEventArgs.New(System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer), System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer), System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer))
  name.vb: New(IEnumerable(Of ILayer), IEnumerable(Of ILayer), IEnumerable(Of ILayer))
references:
- uid: Mapsui.Layers
  commentId: N:Mapsui.Layers
  href: Mapsui.html
  name: Mapsui.Layers
  nameWithType: Mapsui.Layers
  fullName: Mapsui.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers*
  commentId: Overload:Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
  href: Mapsui.Layers.LayerCollectionChangedEventArgs.html#Mapsui_Layers_LayerCollectionChangedEventArgs_AddedLayers
  name: AddedLayers
  nameWithType: LayerCollectionChangedEventArgs.AddedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.AddedLayers
- uid: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ILayer>
  nameWithType: IEnumerable<ILayer>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>
  nameWithType.vb: IEnumerable(Of ILayer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer)
  name.vb: IEnumerable(Of ILayer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers*
  commentId: Overload:Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
  href: Mapsui.Layers.LayerCollectionChangedEventArgs.html#Mapsui_Layers_LayerCollectionChangedEventArgs_RemovedLayers
  name: RemovedLayers
  nameWithType: LayerCollectionChangedEventArgs.RemovedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.RemovedLayers
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers*
  commentId: Overload:Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
  href: Mapsui.Layers.LayerCollectionChangedEventArgs.html#Mapsui_Layers_LayerCollectionChangedEventArgs_MovedLayers
  name: MovedLayers
  nameWithType: LayerCollectionChangedEventArgs.MovedLayers
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.MovedLayers
- uid: Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor*
  commentId: Overload:Mapsui.Layers.LayerCollectionChangedEventArgs.#ctor
  href: Mapsui.Layers.LayerCollectionChangedEventArgs.html#Mapsui_Layers_LayerCollectionChangedEventArgs__ctor_System_Collections_Generic_IEnumerable_Mapsui_Layers_ILayer__System_Collections_Generic_IEnumerable_Mapsui_Layers_ILayer__System_Collections_Generic_IEnumerable_Mapsui_Layers_ILayer__
  name: LayerCollectionChangedEventArgs
  nameWithType: LayerCollectionChangedEventArgs.LayerCollectionChangedEventArgs
  fullName: Mapsui.Layers.LayerCollectionChangedEventArgs.LayerCollectionChangedEventArgs
  nameWithType.vb: LayerCollectionChangedEventArgs.New
  fullName.vb: Mapsui.Layers.LayerCollectionChangedEventArgs.New
  name.vb: New
