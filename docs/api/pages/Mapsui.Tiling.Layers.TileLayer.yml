### YamlMime:ManagedReference
items:
- uid: Mapsui.Tiling.Layers.TileLayer
  commentId: T:Mapsui.Tiling.Layers.TileLayer
  id: TileLayer
  parent: Mapsui.Tiling.Layers
  children:
  - Mapsui.Tiling.Layers.TileLayer.#ctor(BruTile.ITileSource,System.Int32,System.Int32,Mapsui.Tiling.Fetcher.IDataFetchStrategy,Mapsui.Tiling.Rendering.IRenderFetchStrategy,System.Int32,System.Int32,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}})
  - Mapsui.Tiling.Layers.TileLayer.AbortFetch
  - Mapsui.Tiling.Layers.TileLayer.ClearCache
  - Mapsui.Tiling.Layers.TileLayer.Dispose(System.Boolean)
  - Mapsui.Tiling.Layers.TileLayer.Extent
  - Mapsui.Tiling.Layers.TileLayer.GetFeatures(Mapsui.MRect,System.Double)
  - Mapsui.Tiling.Layers.TileLayer.RefreshData(Mapsui.Layers.FetchInfo)
  - Mapsui.Tiling.Layers.TileLayer.Resolutions
  - Mapsui.Tiling.Layers.TileLayer.TileSource
  langs:
  - csharp
  - vb
  name: TileLayer
  nameWithType: TileLayer
  fullName: Mapsui.Tiling.Layers.TileLayer
  type: Class
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TileLayer
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 25
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Layer, which displays a map consisting of individual tiles
  example: []
  syntax:
    content: 'public class TileLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IAsyncDataFetcher, IDisposable'
    content.vb: Public Class TileLayer Inherits BaseLayer Implements ILayer, IAnimatable, INotifyPropertyChanged, IAsyncDataFetcher, IDisposable
  inheritance:
  - System.Object
  - Mapsui.Layers.BaseLayer
  derivedClasses:
  - Mapsui.Tiling.Layers.RasterizingTileLayer
  implements:
  - Mapsui.Layers.ILayer
  - Mapsui.Animations.IAnimatable
  - System.ComponentModel.INotifyPropertyChanged
  - Mapsui.Fetcher.IAsyncDataFetcher
  - System.IDisposable
  inheritedMembers:
  - Mapsui.Layers.BaseLayer.PropertyChanged
  - Mapsui.Layers.BaseLayer.DataChanged
  - Mapsui.Layers.BaseLayer.Id
  - Mapsui.Layers.BaseLayer.Tag
  - Mapsui.Layers.BaseLayer.MinVisible
  - Mapsui.Layers.BaseLayer.MaxVisible
  - Mapsui.Layers.BaseLayer.Enabled
  - Mapsui.Layers.BaseLayer.Name
  - Mapsui.Layers.BaseLayer.Opacity
  - Mapsui.Layers.BaseLayer.Busy
  - Mapsui.Layers.BaseLayer.Style
  - Mapsui.Layers.BaseLayer.Attribution
  - Mapsui.Layers.BaseLayer.IsMapInfoLayer
  - Mapsui.Layers.BaseLayer.SortFeatures
  - Mapsui.Layers.BaseLayer.DataHasChanged
  - Mapsui.Layers.BaseLayer.ToString
  - Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  - Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  - Mapsui.Layers.BaseLayer.Dispose
  - Mapsui.Layers.BaseLayer.UpdateAnimations
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Mapsui.Layers.ILayer.Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Tiling.Layers.TileLayer.#ctor(BruTile.ITileSource,System.Int32,System.Int32,Mapsui.Tiling.Fetcher.IDataFetchStrategy,Mapsui.Tiling.Rendering.IRenderFetchStrategy,System.Int32,System.Int32,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}})
  commentId: M:Mapsui.Tiling.Layers.TileLayer.#ctor(BruTile.ITileSource,System.Int32,System.Int32,Mapsui.Tiling.Fetcher.IDataFetchStrategy,Mapsui.Tiling.Rendering.IRenderFetchStrategy,System.Int32,System.Int32,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}})
  id: '#ctor(BruTile.ITileSource,System.Int32,System.Int32,Mapsui.Tiling.Fetcher.IDataFetchStrategy,Mapsui.Tiling.Rendering.IRenderFetchStrategy,System.Int32,System.Int32,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}})'
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: TileLayer(ITileSource, int, int, IDataFetchStrategy?, IRenderFetchStrategy?, int, int, Func<TileInfo, Task<IFeature?>>?)
  nameWithType: TileLayer.TileLayer(ITileSource, int, int, IDataFetchStrategy?, IRenderFetchStrategy?, int, int, Func<TileInfo, Task<IFeature?>>?)
  fullName: Mapsui.Tiling.Layers.TileLayer.TileLayer(BruTile.ITileSource, int, int, Mapsui.Tiling.Fetcher.IDataFetchStrategy?, Mapsui.Tiling.Rendering.IRenderFetchStrategy?, int, int, System.Func<BruTile.TileInfo, System.Threading.Tasks.Task<Mapsui.IFeature?>>?)
  type: Constructor
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 47
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Create tile layer for given tile source
  example: []
  syntax:
    content: public TileLayer(ITileSource tileSource, int minTiles = 200, int maxTiles = 300, IDataFetchStrategy? dataFetchStrategy = null, IRenderFetchStrategy? renderFetchStrategy = null, int minExtraTiles = -1, int maxExtraTiles = -1, Func<TileInfo, Task<IFeature?>>? fetchTileAsFeature = null)
    parameters:
    - id: tileSource
      type: BruTile.ITileSource
      description: Tile source to use for this layer
    - id: minTiles
      type: System.Int32
      description: Minimum number of tiles to cache
    - id: maxTiles
      type: System.Int32
      description: Maximum number of tiles to cache
    - id: dataFetchStrategy
      type: Mapsui.Tiling.Fetcher.IDataFetchStrategy
      description: Strategy to get list of tiles for given extent
    - id: renderFetchStrategy
      type: Mapsui.Tiling.Rendering.IRenderFetchStrategy
      description: ''
    - id: minExtraTiles
      type: System.Int32
      description: Number of minimum extra tiles for memory cache
    - id: maxExtraTiles
      type: System.Int32
      description: Number of maximum extra tiles for memory cache
    - id: fetchTileAsFeature
      type: System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
      description: Fetch tile as feature
    content.vb: Public Sub New(tileSource As ITileSource, minTiles As Integer = 200, maxTiles As Integer = 300, dataFetchStrategy As IDataFetchStrategy = Nothing, renderFetchStrategy As IRenderFetchStrategy = Nothing, minExtraTiles As Integer = -1, maxExtraTiles As Integer = -1, fetchTileAsFeature As Func(Of TileInfo, Task(Of IFeature)) = Nothing)
  overload: Mapsui.Tiling.Layers.TileLayer.#ctor*
  nameWithType.vb: TileLayer.New(ITileSource, Integer, Integer, IDataFetchStrategy, IRenderFetchStrategy, Integer, Integer, Func(Of TileInfo, Task(Of IFeature)))
  fullName.vb: Mapsui.Tiling.Layers.TileLayer.New(BruTile.ITileSource, Integer, Integer, Mapsui.Tiling.Fetcher.IDataFetchStrategy, Mapsui.Tiling.Rendering.IRenderFetchStrategy, Integer, Integer, System.Func(Of BruTile.TileInfo, System.Threading.Tasks.Task(Of Mapsui.IFeature)))
  name.vb: New(ITileSource, Integer, Integer, IDataFetchStrategy, IRenderFetchStrategy, Integer, Integer, Func(Of TileInfo, Task(Of IFeature)))
- uid: Mapsui.Tiling.Layers.TileLayer.TileSource
  commentId: P:Mapsui.Tiling.Layers.TileLayer.TileSource
  id: TileSource
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: TileSource
  nameWithType: TileLayer.TileSource
  fullName: Mapsui.Tiling.Layers.TileLayer.TileSource
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TileSource
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 68
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: TileSource
  example: []
  syntax:
    content: public ITileSource TileSource { get; }
    parameters: []
    return:
      type: BruTile.ITileSource
    content.vb: Public ReadOnly Property TileSource As ITileSource
  overload: Mapsui.Tiling.Layers.TileLayer.TileSource*
- uid: Mapsui.Tiling.Layers.TileLayer.Resolutions
  commentId: P:Mapsui.Tiling.Layers.TileLayer.Resolutions
  id: Resolutions
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: Resolutions
  nameWithType: TileLayer.Resolutions
  fullName: Mapsui.Tiling.Layers.TileLayer.Resolutions
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Resolutions
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 76
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: List of native resolutions
  example: []
  syntax:
    content: public override IReadOnlyList<double> Resolutions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Double}
    content.vb: Public Overrides ReadOnly Property Resolutions As IReadOnlyList(Of Double)
  overridden: Mapsui.Layers.BaseLayer.Resolutions
  overload: Mapsui.Tiling.Layers.TileLayer.Resolutions*
- uid: Mapsui.Tiling.Layers.TileLayer.Extent
  commentId: P:Mapsui.Tiling.Layers.TileLayer.Extent
  id: Extent
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: Extent
  nameWithType: TileLayer.Extent
  fullName: Mapsui.Tiling.Layers.TileLayer.Extent
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Extent
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 79
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Returns the envelope of all available data in the layer
  example: []
  syntax:
    content: public override MRect? Extent { get; }
    parameters: []
    return:
      type: Mapsui.MRect
    content.vb: Public Overrides Property Extent As MRect
  overridden: Mapsui.Layers.BaseLayer.Extent
  overload: Mapsui.Tiling.Layers.TileLayer.Extent*
- uid: Mapsui.Tiling.Layers.TileLayer.GetFeatures(Mapsui.MRect,System.Double)
  commentId: M:Mapsui.Tiling.Layers.TileLayer.GetFeatures(Mapsui.MRect,System.Double)
  id: GetFeatures(Mapsui.MRect,System.Double)
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: GetFeatures(MRect, double)
  nameWithType: TileLayer.GetFeatures(MRect, double)
  fullName: Mapsui.Tiling.Layers.TileLayer.GetFeatures(Mapsui.MRect, double)
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetFeatures
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 82
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Get all features in a given MRect for a given resolution
  example: []
  syntax:
    content: public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution)
    parameters:
    - id: extent
      type: Mapsui.MRect
      description: Bounding box
    - id: resolution
      type: System.Double
      description: Resolution of viewport
    return:
      type: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
      description: ''
    content.vb: Public Overrides Function GetFeatures(extent As MRect, resolution As Double) As IEnumerable(Of IFeature)
  overridden: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  overload: Mapsui.Tiling.Layers.TileLayer.GetFeatures*
  nameWithType.vb: TileLayer.GetFeatures(MRect, Double)
  fullName.vb: Mapsui.Tiling.Layers.TileLayer.GetFeatures(Mapsui.MRect, Double)
  name.vb: GetFeatures(MRect, Double)
- uid: Mapsui.Tiling.Layers.TileLayer.AbortFetch
  commentId: M:Mapsui.Tiling.Layers.TileLayer.AbortFetch
  id: AbortFetch
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: AbortFetch()
  nameWithType: TileLayer.AbortFetch()
  fullName: Mapsui.Tiling.Layers.TileLayer.AbortFetch()
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: AbortFetch
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 90
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: >-
    Aborts the tile fetches that are in progress. If this method is not called

    the threads will terminate naturally. It will just take a little longer.
  example: []
  syntax:
    content: public void AbortFetch()
    content.vb: Public Sub AbortFetch()
  overload: Mapsui.Tiling.Layers.TileLayer.AbortFetch*
  implements:
  - Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch
- uid: Mapsui.Tiling.Layers.TileLayer.ClearCache
  commentId: M:Mapsui.Tiling.Layers.TileLayer.ClearCache
  id: ClearCache
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: ClearCache()
  nameWithType: TileLayer.ClearCache()
  fullName: Mapsui.Tiling.Layers.TileLayer.ClearCache()
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ClearCache
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 96
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Clear cache of layer
  example: []
  syntax:
    content: public void ClearCache()
    content.vb: Public Sub ClearCache()
  overload: Mapsui.Tiling.Layers.TileLayer.ClearCache*
  implements:
  - Mapsui.Fetcher.IAsyncDataFetcher.ClearCache
- uid: Mapsui.Tiling.Layers.TileLayer.RefreshData(Mapsui.Layers.FetchInfo)
  commentId: M:Mapsui.Tiling.Layers.TileLayer.RefreshData(Mapsui.Layers.FetchInfo)
  id: RefreshData(Mapsui.Layers.FetchInfo)
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: RefreshData(FetchInfo)
  nameWithType: TileLayer.RefreshData(FetchInfo)
  fullName: Mapsui.Tiling.Layers.TileLayer.RefreshData(Mapsui.Layers.FetchInfo)
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RefreshData
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 102
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  summary: Indicates that there has been a change in the view of the map
  example: []
  syntax:
    content: public void RefreshData(FetchInfo fetchInfo)
    parameters:
    - id: fetchInfo
      type: Mapsui.Layers.FetchInfo
      description: FetchInfo
    content.vb: Public Sub RefreshData(fetchInfo As FetchInfo)
  overload: Mapsui.Tiling.Layers.TileLayer.RefreshData*
  implements:
  - Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
- uid: Mapsui.Tiling.Layers.TileLayer.Dispose(System.Boolean)
  commentId: M:Mapsui.Tiling.Layers.TileLayer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Mapsui.Tiling.Layers.TileLayer
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: TileLayer.Dispose(bool)
  fullName: Mapsui.Tiling.Layers.TileLayer.Dispose(bool)
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Layers/TileLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Dispose
    path: ../../Mapsui.Tiling/Layers/TileLayer.cs
    startLine: 114
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Layers
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  overload: Mapsui.Tiling.Layers.TileLayer.Dispose*
  nameWithType.vb: TileLayer.Dispose(Boolean)
  fullName.vb: Mapsui.Tiling.Layers.TileLayer.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: Mapsui.Tiling.Layers
  commentId: N:Mapsui.Tiling.Layers
  href: Mapsui.html
  name: Mapsui.Tiling.Layers
  nameWithType: Mapsui.Tiling.Layers
  fullName: Mapsui.Tiling.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Layers
    name: Layers
    href: Mapsui.Tiling.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Layers
    name: Layers
    href: Mapsui.Tiling.Layers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mapsui.Layers.BaseLayer
  commentId: T:Mapsui.Layers.BaseLayer
  parent: Mapsui.Layers
  href: Mapsui.Layers.BaseLayer.html
  name: BaseLayer
  nameWithType: BaseLayer
  fullName: Mapsui.Layers.BaseLayer
- uid: Mapsui.Layers.ILayer
  commentId: T:Mapsui.Layers.ILayer
  parent: Mapsui.Layers
  href: Mapsui.Layers.ILayer.html
  name: ILayer
  nameWithType: ILayer
  fullName: Mapsui.Layers.ILayer
- uid: Mapsui.Animations.IAnimatable
  commentId: T:Mapsui.Animations.IAnimatable
  parent: Mapsui.Animations
  href: Mapsui.Animations.IAnimatable.html
  name: IAnimatable
  nameWithType: IAnimatable
  fullName: Mapsui.Animations.IAnimatable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Mapsui.Fetcher.IAsyncDataFetcher
  commentId: T:Mapsui.Fetcher.IAsyncDataFetcher
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.IAsyncDataFetcher.html
  name: IAsyncDataFetcher
  nameWithType: IAsyncDataFetcher
  fullName: Mapsui.Fetcher.IAsyncDataFetcher
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Mapsui.Layers.BaseLayer.PropertyChanged
  commentId: E:Mapsui.Layers.BaseLayer.PropertyChanged
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_PropertyChanged
  name: PropertyChanged
  nameWithType: BaseLayer.PropertyChanged
  fullName: Mapsui.Layers.BaseLayer.PropertyChanged
- uid: Mapsui.Layers.BaseLayer.DataChanged
  commentId: E:Mapsui.Layers.BaseLayer.DataChanged
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_DataChanged
  name: DataChanged
  nameWithType: BaseLayer.DataChanged
  fullName: Mapsui.Layers.BaseLayer.DataChanged
- uid: Mapsui.Layers.BaseLayer.Id
  commentId: P:Mapsui.Layers.BaseLayer.Id
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Id
  name: Id
  nameWithType: BaseLayer.Id
  fullName: Mapsui.Layers.BaseLayer.Id
- uid: Mapsui.Layers.BaseLayer.Tag
  commentId: P:Mapsui.Layers.BaseLayer.Tag
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Tag
  name: Tag
  nameWithType: BaseLayer.Tag
  fullName: Mapsui.Layers.BaseLayer.Tag
- uid: Mapsui.Layers.BaseLayer.MinVisible
  commentId: P:Mapsui.Layers.BaseLayer.MinVisible
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_MinVisible
  name: MinVisible
  nameWithType: BaseLayer.MinVisible
  fullName: Mapsui.Layers.BaseLayer.MinVisible
- uid: Mapsui.Layers.BaseLayer.MaxVisible
  commentId: P:Mapsui.Layers.BaseLayer.MaxVisible
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_MaxVisible
  name: MaxVisible
  nameWithType: BaseLayer.MaxVisible
  fullName: Mapsui.Layers.BaseLayer.MaxVisible
- uid: Mapsui.Layers.BaseLayer.Enabled
  commentId: P:Mapsui.Layers.BaseLayer.Enabled
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Enabled
  name: Enabled
  nameWithType: BaseLayer.Enabled
  fullName: Mapsui.Layers.BaseLayer.Enabled
- uid: Mapsui.Layers.BaseLayer.Name
  commentId: P:Mapsui.Layers.BaseLayer.Name
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Name
  name: Name
  nameWithType: BaseLayer.Name
  fullName: Mapsui.Layers.BaseLayer.Name
- uid: Mapsui.Layers.BaseLayer.Opacity
  commentId: P:Mapsui.Layers.BaseLayer.Opacity
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Opacity
  name: Opacity
  nameWithType: BaseLayer.Opacity
  fullName: Mapsui.Layers.BaseLayer.Opacity
- uid: Mapsui.Layers.BaseLayer.Busy
  commentId: P:Mapsui.Layers.BaseLayer.Busy
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Busy
  name: Busy
  nameWithType: BaseLayer.Busy
  fullName: Mapsui.Layers.BaseLayer.Busy
- uid: Mapsui.Layers.BaseLayer.Style
  commentId: P:Mapsui.Layers.BaseLayer.Style
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Style
  name: Style
  nameWithType: BaseLayer.Style
  fullName: Mapsui.Layers.BaseLayer.Style
- uid: Mapsui.Layers.BaseLayer.Attribution
  commentId: P:Mapsui.Layers.BaseLayer.Attribution
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Attribution
  name: Attribution
  nameWithType: BaseLayer.Attribution
  fullName: Mapsui.Layers.BaseLayer.Attribution
- uid: Mapsui.Layers.BaseLayer.IsMapInfoLayer
  commentId: P:Mapsui.Layers.BaseLayer.IsMapInfoLayer
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_IsMapInfoLayer
  name: IsMapInfoLayer
  nameWithType: BaseLayer.IsMapInfoLayer
  fullName: Mapsui.Layers.BaseLayer.IsMapInfoLayer
- uid: Mapsui.Layers.BaseLayer.SortFeatures
  commentId: P:Mapsui.Layers.BaseLayer.SortFeatures
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_SortFeatures
  name: SortFeatures
  nameWithType: BaseLayer.SortFeatures
  fullName: Mapsui.Layers.BaseLayer.SortFeatures
- uid: Mapsui.Layers.BaseLayer.DataHasChanged
  commentId: M:Mapsui.Layers.BaseLayer.DataHasChanged
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_DataHasChanged
  name: DataHasChanged()
  nameWithType: BaseLayer.DataHasChanged()
  fullName: Mapsui.Layers.BaseLayer.DataHasChanged()
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.DataHasChanged
    name: DataHasChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_DataHasChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.DataHasChanged
    name: DataHasChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_DataHasChanged
  - name: (
  - name: )
- uid: Mapsui.Layers.BaseLayer.ToString
  commentId: M:Mapsui.Layers.BaseLayer.ToString
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_ToString
  name: ToString()
  nameWithType: BaseLayer.ToString()
  fullName: Mapsui.Layers.BaseLayer.ToString()
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.ToString
    name: ToString
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.ToString
    name: ToString
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_ToString
  - name: (
  - name: )
- uid: Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  commentId: M:Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  parent: Mapsui.Layers.BaseLayer
  isExternal: true
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnPropertyChanged_System_String_
  name: OnPropertyChanged(string)
  nameWithType: BaseLayer.OnPropertyChanged(string)
  fullName: Mapsui.Layers.BaseLayer.OnPropertyChanged(string)
  nameWithType.vb: BaseLayer.OnPropertyChanged(String)
  fullName.vb: Mapsui.Layers.BaseLayer.OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnPropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnPropertyChanged_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  commentId: M:Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnDataChanged_Mapsui_Fetcher_DataChangedEventArgs_
  name: OnDataChanged(DataChangedEventArgs)
  nameWithType: BaseLayer.OnDataChanged(DataChangedEventArgs)
  fullName: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
    name: OnDataChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnDataChanged_Mapsui_Fetcher_DataChangedEventArgs_
  - name: (
  - uid: Mapsui.Fetcher.DataChangedEventArgs
    name: DataChangedEventArgs
    href: Mapsui.Fetcher.DataChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
    name: OnDataChanged
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnDataChanged_Mapsui_Fetcher_DataChangedEventArgs_
  - name: (
  - uid: Mapsui.Fetcher.DataChangedEventArgs
    name: DataChangedEventArgs
    href: Mapsui.Fetcher.DataChangedEventArgs.html
  - name: )
- uid: Mapsui.Layers.BaseLayer.Dispose
  commentId: M:Mapsui.Layers.BaseLayer.Dispose
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose
  name: Dispose()
  nameWithType: BaseLayer.Dispose()
  fullName: Mapsui.Layers.BaseLayer.Dispose()
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.Dispose
    name: Dispose
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.Dispose
    name: Dispose
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose
  - name: (
  - name: )
- uid: Mapsui.Layers.BaseLayer.UpdateAnimations
  commentId: M:Mapsui.Layers.BaseLayer.UpdateAnimations
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_UpdateAnimations
  name: UpdateAnimations()
  nameWithType: BaseLayer.UpdateAnimations()
  fullName: Mapsui.Layers.BaseLayer.UpdateAnimations()
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.UpdateAnimations
    name: UpdateAnimations
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_UpdateAnimations
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.UpdateAnimations
    name: UpdateAnimations
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_UpdateAnimations
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Layers.ILayer.Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync
  commentId: M:Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  parent: Mapsui.Extensions.LayerExtensions
  definition: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  name: WaitForLoadingAsync(ILayer)
  nameWithType: LayerExtensions.WaitForLoadingAsync(ILayer)
  fullName: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  spec.csharp:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Layers
  commentId: N:Mapsui.Layers
  href: Mapsui.html
  name: Mapsui.Layers
  nameWithType: Mapsui.Layers
  fullName: Mapsui.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
- uid: Mapsui.Animations
  commentId: N:Mapsui.Animations
  href: Mapsui.html
  name: Mapsui.Animations
  nameWithType: Mapsui.Animations
  fullName: Mapsui.Animations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Mapsui.Fetcher
  commentId: N:Mapsui.Fetcher
  href: Mapsui.html
  name: Mapsui.Fetcher
  nameWithType: Mapsui.Fetcher
  fullName: Mapsui.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
- uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  commentId: M:Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  name: WaitForLoadingAsync(ILayer)
  nameWithType: LayerExtensions.WaitForLoadingAsync(ILayer)
  fullName: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  spec.csharp:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: Mapsui.Extensions.LayerExtensions
  commentId: T:Mapsui.Extensions.LayerExtensions
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.LayerExtensions.html
  name: LayerExtensions
  nameWithType: LayerExtensions
  fullName: Mapsui.Extensions.LayerExtensions
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Tiling.Layers.TileLayer.#ctor*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.#ctor
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer__ctor_BruTile_ITileSource_System_Int32_System_Int32_Mapsui_Tiling_Fetcher_IDataFetchStrategy_Mapsui_Tiling_Rendering_IRenderFetchStrategy_System_Int32_System_Int32_System_Func_BruTile_TileInfo_System_Threading_Tasks_Task_Mapsui_IFeature___
  name: TileLayer
  nameWithType: TileLayer.TileLayer
  fullName: Mapsui.Tiling.Layers.TileLayer.TileLayer
  nameWithType.vb: TileLayer.New
  fullName.vb: Mapsui.Tiling.Layers.TileLayer.New
  name.vb: New
- uid: BruTile.ITileSource
  commentId: T:BruTile.ITileSource
  parent: BruTile
  isExternal: true
  name: ITileSource
  nameWithType: ITileSource
  fullName: BruTile.ITileSource
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Tiling.Fetcher.IDataFetchStrategy
  commentId: T:Mapsui.Tiling.Fetcher.IDataFetchStrategy
  parent: Mapsui.Tiling.Fetcher
  href: Mapsui.Tiling.Fetcher.IDataFetchStrategy.html
  name: IDataFetchStrategy
  nameWithType: IDataFetchStrategy
  fullName: Mapsui.Tiling.Fetcher.IDataFetchStrategy
- uid: Mapsui.Tiling.Rendering.IRenderFetchStrategy
  commentId: T:Mapsui.Tiling.Rendering.IRenderFetchStrategy
  parent: Mapsui.Tiling.Rendering
  href: Mapsui.Tiling.Rendering.IRenderFetchStrategy.html
  name: IRenderFetchStrategy
  nameWithType: IRenderFetchStrategy
  fullName: Mapsui.Tiling.Rendering.IRenderFetchStrategy
- uid: System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
  commentId: T:System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TileInfo, Task<IFeature>>
  nameWithType: Func<TileInfo, Task<IFeature>>
  fullName: System.Func<BruTile.TileInfo, System.Threading.Tasks.Task<Mapsui.IFeature>>
  nameWithType.vb: Func(Of TileInfo, Task(Of IFeature))
  fullName.vb: System.Func(Of BruTile.TileInfo, System.Threading.Tasks.Task(Of Mapsui.IFeature))
  name.vb: Func(Of TileInfo, Task(Of IFeature))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: BruTile.TileInfo
    name: TileInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: BruTile.TileInfo
    name: TileInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
  - name: )
- uid: BruTile
  commentId: N:BruTile
  isExternal: true
  name: BruTile
  nameWithType: BruTile
  fullName: BruTile
- uid: Mapsui.Tiling.Fetcher
  commentId: N:Mapsui.Tiling.Fetcher
  href: Mapsui.html
  name: Mapsui.Tiling.Fetcher
  nameWithType: Mapsui.Tiling.Fetcher
  fullName: Mapsui.Tiling.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Fetcher
    name: Fetcher
    href: Mapsui.Tiling.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Fetcher
    name: Fetcher
    href: Mapsui.Tiling.Fetcher.html
- uid: Mapsui.Tiling.Rendering
  commentId: N:Mapsui.Tiling.Rendering
  href: Mapsui.html
  name: Mapsui.Tiling.Rendering
  nameWithType: Mapsui.Tiling.Rendering
  fullName: Mapsui.Tiling.Rendering
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Rendering
    name: Rendering
    href: Mapsui.Tiling.Rendering.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Rendering
    name: Rendering
    href: Mapsui.Tiling.Rendering.html
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.TileSource*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.TileSource
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_TileSource
  name: TileSource
  nameWithType: TileLayer.TileSource
  fullName: Mapsui.Tiling.Layers.TileLayer.TileSource
- uid: Mapsui.Layers.BaseLayer.Resolutions
  commentId: P:Mapsui.Layers.BaseLayer.Resolutions
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Resolutions
  name: Resolutions
  nameWithType: BaseLayer.Resolutions
  fullName: Mapsui.Layers.BaseLayer.Resolutions
- uid: Mapsui.Tiling.Layers.TileLayer.Resolutions*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.Resolutions
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_Resolutions
  name: Resolutions
  nameWithType: TileLayer.Resolutions
  fullName: Mapsui.Tiling.Layers.TileLayer.Resolutions
- uid: System.Collections.Generic.IReadOnlyList{System.Double}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<double>
  nameWithType: IReadOnlyList<double>
  fullName: System.Collections.Generic.IReadOnlyList<double>
  nameWithType.vb: IReadOnlyList(Of Double)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Double)
  name.vb: IReadOnlyList(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mapsui.Layers.BaseLayer.Extent
  commentId: P:Mapsui.Layers.BaseLayer.Extent
  parent: Mapsui.Layers.BaseLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Extent
  name: Extent
  nameWithType: BaseLayer.Extent
  fullName: Mapsui.Layers.BaseLayer.Extent
- uid: Mapsui.Tiling.Layers.TileLayer.Extent*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.Extent
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_Extent
  name: Extent
  nameWithType: TileLayer.Extent
  fullName: Mapsui.Tiling.Layers.TileLayer.Extent
- uid: Mapsui.MRect
  commentId: T:Mapsui.MRect
  parent: Mapsui
  href: Mapsui.MRect.html
  name: MRect
  nameWithType: MRect
  fullName: Mapsui.MRect
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  commentId: M:Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  parent: Mapsui.Layers.BaseLayer
  isExternal: true
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_GetFeatures_Mapsui_MRect_System_Double_
  name: GetFeatures(MRect, double)
  nameWithType: BaseLayer.GetFeatures(MRect, double)
  fullName: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect, double)
  nameWithType.vb: BaseLayer.GetFeatures(MRect, Double)
  fullName.vb: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect, Double)
  name.vb: GetFeatures(MRect, Double)
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
    name: GetFeatures
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_GetFeatures_Mapsui_MRect_System_Double_
  - name: (
  - uid: Mapsui.MRect
    name: MRect
    href: Mapsui.MRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
    name: GetFeatures
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_GetFeatures_Mapsui_MRect_System_Double_
  - name: (
  - uid: Mapsui.MRect
    name: MRect
    href: Mapsui.MRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.GetFeatures*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.GetFeatures
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_GetFeatures_Mapsui_MRect_System_Double_
  name: GetFeatures
  nameWithType: TileLayer.GetFeatures
  fullName: Mapsui.Tiling.Layers.TileLayer.GetFeatures
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFeature>
  nameWithType: IEnumerable<IFeature>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.IFeature>
  nameWithType.vb: IEnumerable(Of IFeature)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.IFeature)
  name.vb: IEnumerable(Of IFeature)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.AbortFetch*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.AbortFetch
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_AbortFetch
  name: AbortFetch
  nameWithType: TileLayer.AbortFetch
  fullName: Mapsui.Tiling.Layers.TileLayer.AbortFetch
- uid: Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch
  commentId: M:Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch
  parent: Mapsui.Fetcher.IAsyncDataFetcher
  href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_AbortFetch
  name: AbortFetch()
  nameWithType: IAsyncDataFetcher.AbortFetch()
  fullName: Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch()
  spec.csharp:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch
    name: AbortFetch
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_AbortFetch
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.AbortFetch
    name: AbortFetch
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_AbortFetch
  - name: (
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.ClearCache*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.ClearCache
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_ClearCache
  name: ClearCache
  nameWithType: TileLayer.ClearCache
  fullName: Mapsui.Tiling.Layers.TileLayer.ClearCache
- uid: Mapsui.Fetcher.IAsyncDataFetcher.ClearCache
  commentId: M:Mapsui.Fetcher.IAsyncDataFetcher.ClearCache
  parent: Mapsui.Fetcher.IAsyncDataFetcher
  href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_ClearCache
  name: ClearCache()
  nameWithType: IAsyncDataFetcher.ClearCache()
  fullName: Mapsui.Fetcher.IAsyncDataFetcher.ClearCache()
  spec.csharp:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.ClearCache
    name: ClearCache
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_ClearCache
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.ClearCache
    name: ClearCache
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_ClearCache
  - name: (
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.RefreshData*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.RefreshData
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_RefreshData_Mapsui_Layers_FetchInfo_
  name: RefreshData
  nameWithType: TileLayer.RefreshData
  fullName: Mapsui.Tiling.Layers.TileLayer.RefreshData
- uid: Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
  commentId: M:Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
  parent: Mapsui.Fetcher.IAsyncDataFetcher
  href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_RefreshData_Mapsui_Layers_FetchInfo_
  name: RefreshData(FetchInfo)
  nameWithType: IAsyncDataFetcher.RefreshData(FetchInfo)
  fullName: Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
  spec.csharp:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
    name: RefreshData
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_RefreshData_Mapsui_Layers_FetchInfo_
  - name: (
  - uid: Mapsui.Layers.FetchInfo
    name: FetchInfo
    href: Mapsui.Layers.FetchInfo.html
  - name: )
  spec.vb:
  - uid: Mapsui.Fetcher.IAsyncDataFetcher.RefreshData(Mapsui.Layers.FetchInfo)
    name: RefreshData
    href: Mapsui.Fetcher.IAsyncDataFetcher.html#Mapsui_Fetcher_IAsyncDataFetcher_RefreshData_Mapsui_Layers_FetchInfo_
  - name: (
  - uid: Mapsui.Layers.FetchInfo
    name: FetchInfo
    href: Mapsui.Layers.FetchInfo.html
  - name: )
- uid: Mapsui.Layers.FetchInfo
  commentId: T:Mapsui.Layers.FetchInfo
  parent: Mapsui.Layers
  href: Mapsui.Layers.FetchInfo.html
  name: FetchInfo
  nameWithType: FetchInfo
  fullName: Mapsui.Layers.FetchInfo
- uid: Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  commentId: M:Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  parent: Mapsui.Layers.BaseLayer
  isExternal: true
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: BaseLayer.Dispose(bool)
  fullName: Mapsui.Layers.BaseLayer.Dispose(bool)
  nameWithType.vb: BaseLayer.Dispose(Boolean)
  fullName.vb: Mapsui.Layers.BaseLayer.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
    name: Dispose
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
    name: Dispose
    href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mapsui.Tiling.Layers.TileLayer.Dispose*
  commentId: Overload:Mapsui.Tiling.Layers.TileLayer.Dispose
  href: Mapsui.Tiling.Layers.TileLayer.html#Mapsui_Tiling_Layers_TileLayer_Dispose_System_Boolean_
  name: Dispose
  nameWithType: TileLayer.Dispose
  fullName: Mapsui.Tiling.Layers.TileLayer.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
