### YamlMime:ManagedReference
items:
- uid: Mapsui.Widgets.BaseWidget
  commentId: T:Mapsui.Widgets.BaseWidget
  id: BaseWidget
  parent: Mapsui.Widgets
  children:
  - Mapsui.Widgets.BaseWidget.Enabled
  - Mapsui.Widgets.BaseWidget.Envelope
  - Mapsui.Widgets.BaseWidget.Height
  - Mapsui.Widgets.BaseWidget.HorizontalAlignment
  - Mapsui.Widgets.BaseWidget.InputAreaType
  - Mapsui.Widgets.BaseWidget.InputTransparent
  - Mapsui.Widgets.BaseWidget.Invalidate(System.String)
  - Mapsui.Widgets.BaseWidget.Margin
  - Mapsui.Widgets.BaseWidget.NeedsRedraw
  - Mapsui.Widgets.BaseWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  - Mapsui.Widgets.BaseWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  - Mapsui.Widgets.BaseWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  - Mapsui.Widgets.BaseWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  - Mapsui.Widgets.BaseWidget.Position
  - Mapsui.Widgets.BaseWidget.UpdateEnvelope(System.Double,System.Double,System.Double,System.Double)
  - Mapsui.Widgets.BaseWidget.VerticalAlignment
  - Mapsui.Widgets.BaseWidget.Width
  langs:
  - csharp
  - vb
  name: BaseWidget
  nameWithType: BaseWidget
  fullName: Mapsui.Widgets.BaseWidget
  type: Class
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: BaseWidget
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 5
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  syntax:
    content: 'public abstract class BaseWidget : IWidget'
    content.vb: Public MustInherit Class BaseWidget Implements IWidget
  inheritance:
  - System.Object
  derivedClasses:
  - Mapsui.Widgets.BoxWidgets.BoxWidget
  - Mapsui.Widgets.ButtonWidgets.ZoomInOutWidget
  - Mapsui.Widgets.InputOnlyWidget
  - Mapsui.Widgets.ScaleBar.ScaleBarWidget
  implements:
  - Mapsui.Widgets.IWidget
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Widgets.BaseWidget.InputAreaType
  commentId: P:Mapsui.Widgets.BaseWidget.InputAreaType
  id: InputAreaType
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: InputAreaType
  nameWithType: BaseWidget.InputAreaType
  fullName: Mapsui.Widgets.BaseWidget.InputAreaType
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: InputAreaType
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 13
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: >-
    Type of area to use for touch events. The default is WidgetArea. This needs to be set to 

    'Map' in the constructor if widget want to receive manipulation events from all over the map.
  example: []
  syntax:
    content: public InputAreaType InputAreaType { get; init; }
    parameters: []
    return:
      type: Mapsui.Widgets.InputAreaType
    content.vb: Public Property InputAreaType As InputAreaType
  overload: Mapsui.Widgets.BaseWidget.InputAreaType*
  implements:
  - Mapsui.Widgets.IWidget.InputAreaType
- uid: Mapsui.Widgets.BaseWidget.HorizontalAlignment
  commentId: P:Mapsui.Widgets.BaseWidget.HorizontalAlignment
  id: HorizontalAlignment
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: HorizontalAlignment
  nameWithType: BaseWidget.HorizontalAlignment
  fullName: Mapsui.Widgets.BaseWidget.HorizontalAlignment
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: HorizontalAlignment
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 18
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Horizontal alignment of Widget
  example: []
  syntax:
    content: public HorizontalAlignment HorizontalAlignment { get; set; }
    parameters: []
    return:
      type: Mapsui.Widgets.HorizontalAlignment
    content.vb: Public Property HorizontalAlignment As HorizontalAlignment
  overload: Mapsui.Widgets.BaseWidget.HorizontalAlignment*
  implements:
  - Mapsui.Widgets.IWidget.HorizontalAlignment
- uid: Mapsui.Widgets.BaseWidget.VerticalAlignment
  commentId: P:Mapsui.Widgets.BaseWidget.VerticalAlignment
  id: VerticalAlignment
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: VerticalAlignment
  nameWithType: BaseWidget.VerticalAlignment
  fullName: Mapsui.Widgets.BaseWidget.VerticalAlignment
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: VerticalAlignment
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 35
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Vertical alignment of Widget
  example: []
  syntax:
    content: public VerticalAlignment VerticalAlignment { get; set; }
    parameters: []
    return:
      type: Mapsui.Widgets.VerticalAlignment
    content.vb: Public Property VerticalAlignment As VerticalAlignment
  overload: Mapsui.Widgets.BaseWidget.VerticalAlignment*
  implements:
  - Mapsui.Widgets.IWidget.VerticalAlignment
- uid: Mapsui.Widgets.BaseWidget.Margin
  commentId: P:Mapsui.Widgets.BaseWidget.Margin
  id: Margin
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Margin
  nameWithType: BaseWidget.Margin
  fullName: Mapsui.Widgets.BaseWidget.Margin
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Margin
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 52
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Margin outside of the widget
  example: []
  syntax:
    content: public MRect Margin { get; set; }
    parameters: []
    return:
      type: Mapsui.MRect
    content.vb: Public Property Margin As MRect
  overload: Mapsui.Widgets.BaseWidget.Margin*
  implements:
  - Mapsui.Widgets.IWidget.Margin
- uid: Mapsui.Widgets.BaseWidget.Position
  commentId: P:Mapsui.Widgets.BaseWidget.Position
  id: Position
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: BaseWidget.Position
  fullName: Mapsui.Widgets.BaseWidget.Position
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Position
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 69
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Position for absolute alignment
  example: []
  syntax:
    content: public MPoint Position { get; set; }
    parameters: []
    return:
      type: Mapsui.MPoint
    content.vb: Public Property Position As MPoint
  overload: Mapsui.Widgets.BaseWidget.Position*
  implements:
  - Mapsui.Widgets.IWidget.Position
- uid: Mapsui.Widgets.BaseWidget.Width
  commentId: P:Mapsui.Widgets.BaseWidget.Width
  id: Width
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: BaseWidget.Width
  fullName: Mapsui.Widgets.BaseWidget.Width
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Width
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 86
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Width of Widget
  example: []
  syntax:
    content: public double Width { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Width As Double
  overload: Mapsui.Widgets.BaseWidget.Width*
  implements:
  - Mapsui.Widgets.IWidget.Width
- uid: Mapsui.Widgets.BaseWidget.Height
  commentId: P:Mapsui.Widgets.BaseWidget.Height
  id: Height
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: BaseWidget.Height
  fullName: Mapsui.Widgets.BaseWidget.Height
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Height
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 103
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Height of Widget
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: Mapsui.Widgets.BaseWidget.Height*
  implements:
  - Mapsui.Widgets.IWidget.Height
- uid: Mapsui.Widgets.BaseWidget.Envelope
  commentId: P:Mapsui.Widgets.BaseWidget.Envelope
  id: Envelope
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Envelope
  nameWithType: BaseWidget.Envelope
  fullName: Mapsui.Widgets.BaseWidget.Envelope
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Envelope
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 120
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Envelope of Widget
  example: []
  syntax:
    content: public MRect? Envelope { get; set; }
    parameters: []
    return:
      type: Mapsui.MRect
    content.vb: Public Property Envelope As MRect
  overload: Mapsui.Widgets.BaseWidget.Envelope*
  implements:
  - Mapsui.Widgets.IWidget.Envelope
- uid: Mapsui.Widgets.BaseWidget.Enabled
  commentId: P:Mapsui.Widgets.BaseWidget.Enabled
  id: Enabled
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: BaseWidget.Enabled
  fullName: Mapsui.Widgets.BaseWidget.Enabled
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Enabled
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 137
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Is Widget visible on screen
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Mapsui.Widgets.BaseWidget.Enabled*
  implements:
  - Mapsui.Widgets.IWidget.Enabled
- uid: Mapsui.Widgets.BaseWidget.NeedsRedraw
  commentId: P:Mapsui.Widgets.BaseWidget.NeedsRedraw
  id: NeedsRedraw
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: NeedsRedraw
  nameWithType: BaseWidget.NeedsRedraw
  fullName: Mapsui.Widgets.BaseWidget.NeedsRedraw
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: NeedsRedraw
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 152
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Flag for redrawing widget in the next drawing cycle
  example: []
  syntax:
    content: public bool NeedsRedraw { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NeedsRedraw As Boolean
  overload: Mapsui.Widgets.BaseWidget.NeedsRedraw*
  implements:
  - Mapsui.Widgets.IWidget.NeedsRedraw
- uid: Mapsui.Widgets.BaseWidget.InputTransparent
  commentId: P:Mapsui.Widgets.BaseWidget.InputTransparent
  id: InputTransparent
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: InputTransparent
  nameWithType: BaseWidget.InputTransparent
  fullName: Mapsui.Widgets.BaseWidget.InputTransparent
  type: Property
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: InputTransparent
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 154
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  example: []
  syntax:
    content: public bool InputTransparent { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property InputTransparent As Boolean
  overload: Mapsui.Widgets.BaseWidget.InputTransparent*
  implements:
  - Mapsui.Widgets.IWidget.InputTransparent
- uid: Mapsui.Widgets.BaseWidget.UpdateEnvelope(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Mapsui.Widgets.BaseWidget.UpdateEnvelope(System.Double,System.Double,System.Double,System.Double)
  id: UpdateEnvelope(System.Double,System.Double,System.Double,System.Double)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: UpdateEnvelope(double, double, double, double)
  nameWithType: BaseWidget.UpdateEnvelope(double, double, double, double)
  fullName: Mapsui.Widgets.BaseWidget.UpdateEnvelope(double, double, double, double)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UpdateEnvelope
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 156
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  syntax:
    content: public void UpdateEnvelope(double maxWidth, double maxHeight, double screenWidth, double screenHeight)
    parameters:
    - id: maxWidth
      type: System.Double
    - id: maxHeight
      type: System.Double
    - id: screenWidth
      type: System.Double
    - id: screenHeight
      type: System.Double
    content.vb: Public Sub UpdateEnvelope(maxWidth As Double, maxHeight As Double, screenWidth As Double, screenHeight As Double)
  overload: Mapsui.Widgets.BaseWidget.UpdateEnvelope*
  nameWithType.vb: BaseWidget.UpdateEnvelope(Double, Double, Double, Double)
  fullName.vb: Mapsui.Widgets.BaseWidget.UpdateEnvelope(Double, Double, Double, Double)
  name.vb: UpdateEnvelope(Double, Double, Double, Double)
- uid: Mapsui.Widgets.BaseWidget.Invalidate(System.String)
  commentId: M:Mapsui.Widgets.BaseWidget.Invalidate(System.String)
  id: Invalidate(System.String)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: Invalidate(string)
  nameWithType: BaseWidget.Invalidate(string)
  fullName: Mapsui.Widgets.BaseWidget.Invalidate(string)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Invalidate
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 166
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  syntax:
    content: public virtual void Invalidate(string name = "")
    parameters:
    - id: name
      type: System.String
    content.vb: Public Overridable Sub Invalidate(name As String = "")
  overload: Mapsui.Widgets.BaseWidget.Invalidate*
  nameWithType.vb: BaseWidget.Invalidate(String)
  fullName.vb: Mapsui.Widgets.BaseWidget.Invalidate(String)
  name.vb: Invalidate(String)
- uid: Mapsui.Widgets.BaseWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.BaseWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  id: OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: OnTapped(Navigator, WidgetEventArgs)
  nameWithType: BaseWidget.OnTapped(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.BaseWidget.OnTapped(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnTapped
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 172
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Function, which handles the widget tapped event
  example: []
  syntax:
    content: public virtual bool OnTapped(Navigator navigator, WidgetEventArgs e)
    parameters:
    - id: navigator
      type: Mapsui.Navigator
      description: Navigator of MapControl
    - id: e
      type: Mapsui.Widgets.WidgetEventArgs
      description: Arguments for this widget touch
    return:
      type: System.Boolean
      description: True, if the Widget had handled the touch event
    content.vb: Public Overridable Function OnTapped(navigator As Navigator, e As WidgetEventArgs) As Boolean
  overload: Mapsui.Widgets.BaseWidget.OnTapped*
  implements:
  - Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
- uid: Mapsui.Widgets.BaseWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.BaseWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  id: OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: OnPointerPressed(Navigator, WidgetEventArgs)
  nameWithType: BaseWidget.OnPointerPressed(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.BaseWidget.OnPointerPressed(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnPointerPressed
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 178
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Function, which handles the widget pointer pressed event
  example: []
  syntax:
    content: public virtual bool OnPointerPressed(Navigator navigator, WidgetEventArgs e)
    parameters:
    - id: navigator
      type: Mapsui.Navigator
      description: Navigator of MapControl
    - id: e
      type: Mapsui.Widgets.WidgetEventArgs
      description: Arguments for this widget touch
    return:
      type: System.Boolean
      description: True, if the Widget had handled the touch event
    content.vb: Public Overridable Function OnPointerPressed(navigator As Navigator, e As WidgetEventArgs) As Boolean
  overload: Mapsui.Widgets.BaseWidget.OnPointerPressed*
  implements:
  - Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
- uid: Mapsui.Widgets.BaseWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.BaseWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  id: OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: OnPointerMoved(Navigator, WidgetEventArgs)
  nameWithType: BaseWidget.OnPointerMoved(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.BaseWidget.OnPointerMoved(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnPointerMoved
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 184
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Function, which handles the widget pointer moved event
  example: []
  syntax:
    content: public virtual bool OnPointerMoved(Navigator navigator, WidgetEventArgs e)
    parameters:
    - id: navigator
      type: Mapsui.Navigator
      description: Navigator of MapControl
    - id: e
      type: Mapsui.Widgets.WidgetEventArgs
      description: Arguments for this widget touch
    return:
      type: System.Boolean
      description: True, if the Widget had handled the touch event
    content.vb: Public Overridable Function OnPointerMoved(navigator As Navigator, e As WidgetEventArgs) As Boolean
  overload: Mapsui.Widgets.BaseWidget.OnPointerMoved*
  implements:
  - Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
- uid: Mapsui.Widgets.BaseWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.BaseWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  id: OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.BaseWidget
  langs:
  - csharp
  - vb
  name: OnPointerReleased(Navigator, WidgetEventArgs)
  nameWithType: BaseWidget.OnPointerReleased(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.BaseWidget.OnPointerReleased(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui/Widgets/BaseWidget.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnPointerReleased
    path: ../../Mapsui/Widgets/BaseWidget.cs
    startLine: 190
  assemblies:
  - Mapsui
  namespace: Mapsui.Widgets
  summary: Function, which handles the widget pointer released event
  example: []
  syntax:
    content: public virtual bool OnPointerReleased(Navigator navigator, WidgetEventArgs e)
    parameters:
    - id: navigator
      type: Mapsui.Navigator
      description: Navigator of MapControl
    - id: e
      type: Mapsui.Widgets.WidgetEventArgs
      description: Arguments for this widget touch
    return:
      type: System.Boolean
      description: True, if the Widget had handled the touch event
    content.vb: Public Overridable Function OnPointerReleased(navigator As Navigator, e As WidgetEventArgs) As Boolean
  overload: Mapsui.Widgets.BaseWidget.OnPointerReleased*
  implements:
  - Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
references:
- uid: Mapsui.Widgets
  commentId: N:Mapsui.Widgets
  href: Mapsui.html
  name: Mapsui.Widgets
  nameWithType: Mapsui.Widgets
  fullName: Mapsui.Widgets
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Widgets
    name: Widgets
    href: Mapsui.Widgets.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Widgets
    name: Widgets
    href: Mapsui.Widgets.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mapsui.Widgets.IWidget
  commentId: T:Mapsui.Widgets.IWidget
  parent: Mapsui.Widgets
  href: Mapsui.Widgets.IWidget.html
  name: IWidget
  nameWithType: IWidget
  fullName: Mapsui.Widgets.IWidget
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Widgets.BaseWidget.InputAreaType*
  commentId: Overload:Mapsui.Widgets.BaseWidget.InputAreaType
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_InputAreaType
  name: InputAreaType
  nameWithType: BaseWidget.InputAreaType
  fullName: Mapsui.Widgets.BaseWidget.InputAreaType
- uid: Mapsui.Widgets.IWidget.InputAreaType
  commentId: P:Mapsui.Widgets.IWidget.InputAreaType
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_InputAreaType
  name: InputAreaType
  nameWithType: IWidget.InputAreaType
  fullName: Mapsui.Widgets.IWidget.InputAreaType
- uid: Mapsui.Widgets.InputAreaType
  commentId: T:Mapsui.Widgets.InputAreaType
  parent: Mapsui.Widgets
  href: Mapsui.Widgets.InputAreaType.html
  name: InputAreaType
  nameWithType: InputAreaType
  fullName: Mapsui.Widgets.InputAreaType
- uid: Mapsui.Widgets.BaseWidget.HorizontalAlignment*
  commentId: Overload:Mapsui.Widgets.BaseWidget.HorizontalAlignment
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_HorizontalAlignment
  name: HorizontalAlignment
  nameWithType: BaseWidget.HorizontalAlignment
  fullName: Mapsui.Widgets.BaseWidget.HorizontalAlignment
- uid: Mapsui.Widgets.IWidget.HorizontalAlignment
  commentId: P:Mapsui.Widgets.IWidget.HorizontalAlignment
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_HorizontalAlignment
  name: HorizontalAlignment
  nameWithType: IWidget.HorizontalAlignment
  fullName: Mapsui.Widgets.IWidget.HorizontalAlignment
- uid: Mapsui.Widgets.HorizontalAlignment
  commentId: T:Mapsui.Widgets.HorizontalAlignment
  parent: Mapsui.Widgets
  href: Mapsui.Widgets.HorizontalAlignment.html
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: Mapsui.Widgets.HorizontalAlignment
- uid: Mapsui.Widgets.BaseWidget.VerticalAlignment*
  commentId: Overload:Mapsui.Widgets.BaseWidget.VerticalAlignment
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_VerticalAlignment
  name: VerticalAlignment
  nameWithType: BaseWidget.VerticalAlignment
  fullName: Mapsui.Widgets.BaseWidget.VerticalAlignment
- uid: Mapsui.Widgets.IWidget.VerticalAlignment
  commentId: P:Mapsui.Widgets.IWidget.VerticalAlignment
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_VerticalAlignment
  name: VerticalAlignment
  nameWithType: IWidget.VerticalAlignment
  fullName: Mapsui.Widgets.IWidget.VerticalAlignment
- uid: Mapsui.Widgets.VerticalAlignment
  commentId: T:Mapsui.Widgets.VerticalAlignment
  parent: Mapsui.Widgets
  href: Mapsui.Widgets.VerticalAlignment.html
  name: VerticalAlignment
  nameWithType: VerticalAlignment
  fullName: Mapsui.Widgets.VerticalAlignment
- uid: Mapsui.Widgets.BaseWidget.Margin*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Margin
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Margin
  name: Margin
  nameWithType: BaseWidget.Margin
  fullName: Mapsui.Widgets.BaseWidget.Margin
- uid: Mapsui.Widgets.IWidget.Margin
  commentId: P:Mapsui.Widgets.IWidget.Margin
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Margin
  name: Margin
  nameWithType: IWidget.Margin
  fullName: Mapsui.Widgets.IWidget.Margin
- uid: Mapsui.MRect
  commentId: T:Mapsui.MRect
  parent: Mapsui
  href: Mapsui.MRect.html
  name: MRect
  nameWithType: MRect
  fullName: Mapsui.MRect
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.Widgets.BaseWidget.Position*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Position
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Position
  name: Position
  nameWithType: BaseWidget.Position
  fullName: Mapsui.Widgets.BaseWidget.Position
- uid: Mapsui.Widgets.IWidget.Position
  commentId: P:Mapsui.Widgets.IWidget.Position
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Position
  name: Position
  nameWithType: IWidget.Position
  fullName: Mapsui.Widgets.IWidget.Position
- uid: Mapsui.MPoint
  commentId: T:Mapsui.MPoint
  parent: Mapsui
  href: Mapsui.MPoint.html
  name: MPoint
  nameWithType: MPoint
  fullName: Mapsui.MPoint
- uid: Mapsui.Widgets.BaseWidget.Width*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Width
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Width
  name: Width
  nameWithType: BaseWidget.Width
  fullName: Mapsui.Widgets.BaseWidget.Width
- uid: Mapsui.Widgets.IWidget.Width
  commentId: P:Mapsui.Widgets.IWidget.Width
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Width
  name: Width
  nameWithType: IWidget.Width
  fullName: Mapsui.Widgets.IWidget.Width
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mapsui.Widgets.BaseWidget.Height*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Height
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Height
  name: Height
  nameWithType: BaseWidget.Height
  fullName: Mapsui.Widgets.BaseWidget.Height
- uid: Mapsui.Widgets.IWidget.Height
  commentId: P:Mapsui.Widgets.IWidget.Height
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Height
  name: Height
  nameWithType: IWidget.Height
  fullName: Mapsui.Widgets.IWidget.Height
- uid: Mapsui.Widgets.BaseWidget.Envelope*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Envelope
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Envelope
  name: Envelope
  nameWithType: BaseWidget.Envelope
  fullName: Mapsui.Widgets.BaseWidget.Envelope
- uid: Mapsui.Widgets.IWidget.Envelope
  commentId: P:Mapsui.Widgets.IWidget.Envelope
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Envelope
  name: Envelope
  nameWithType: IWidget.Envelope
  fullName: Mapsui.Widgets.IWidget.Envelope
- uid: Mapsui.Widgets.BaseWidget.Enabled*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Enabled
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Enabled
  name: Enabled
  nameWithType: BaseWidget.Enabled
  fullName: Mapsui.Widgets.BaseWidget.Enabled
- uid: Mapsui.Widgets.IWidget.Enabled
  commentId: P:Mapsui.Widgets.IWidget.Enabled
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_Enabled
  name: Enabled
  nameWithType: IWidget.Enabled
  fullName: Mapsui.Widgets.IWidget.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Widgets.BaseWidget.NeedsRedraw*
  commentId: Overload:Mapsui.Widgets.BaseWidget.NeedsRedraw
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_NeedsRedraw
  name: NeedsRedraw
  nameWithType: BaseWidget.NeedsRedraw
  fullName: Mapsui.Widgets.BaseWidget.NeedsRedraw
- uid: Mapsui.Widgets.IWidget.NeedsRedraw
  commentId: P:Mapsui.Widgets.IWidget.NeedsRedraw
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_NeedsRedraw
  name: NeedsRedraw
  nameWithType: IWidget.NeedsRedraw
  fullName: Mapsui.Widgets.IWidget.NeedsRedraw
- uid: Mapsui.Widgets.BaseWidget.InputTransparent*
  commentId: Overload:Mapsui.Widgets.BaseWidget.InputTransparent
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_InputTransparent
  name: InputTransparent
  nameWithType: BaseWidget.InputTransparent
  fullName: Mapsui.Widgets.BaseWidget.InputTransparent
- uid: Mapsui.Widgets.IWidget.InputTransparent
  commentId: P:Mapsui.Widgets.IWidget.InputTransparent
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_InputTransparent
  name: InputTransparent
  nameWithType: IWidget.InputTransparent
  fullName: Mapsui.Widgets.IWidget.InputTransparent
- uid: Mapsui.Widgets.BaseWidget.UpdateEnvelope*
  commentId: Overload:Mapsui.Widgets.BaseWidget.UpdateEnvelope
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_UpdateEnvelope_System_Double_System_Double_System_Double_System_Double_
  name: UpdateEnvelope
  nameWithType: BaseWidget.UpdateEnvelope
  fullName: Mapsui.Widgets.BaseWidget.UpdateEnvelope
- uid: Mapsui.Widgets.BaseWidget.Invalidate*
  commentId: Overload:Mapsui.Widgets.BaseWidget.Invalidate
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_Invalidate_System_String_
  name: Invalidate
  nameWithType: BaseWidget.Invalidate
  fullName: Mapsui.Widgets.BaseWidget.Invalidate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mapsui.Widgets.BaseWidget.OnTapped*
  commentId: Overload:Mapsui.Widgets.BaseWidget.OnTapped
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_OnTapped_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnTapped
  nameWithType: BaseWidget.OnTapped
  fullName: Mapsui.Widgets.BaseWidget.OnTapped
- uid: Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnTapped_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnTapped(Navigator, WidgetEventArgs)
  nameWithType: IWidget.OnTapped(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  spec.csharp:
  - uid: Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnTapped
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnTapped_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
  spec.vb:
  - uid: Mapsui.Widgets.IWidget.OnTapped(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnTapped
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnTapped_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
- uid: Mapsui.Navigator
  commentId: T:Mapsui.Navigator
  parent: Mapsui
  href: Mapsui.Navigator.html
  name: Navigator
  nameWithType: Navigator
  fullName: Mapsui.Navigator
- uid: Mapsui.Widgets.WidgetEventArgs
  commentId: T:Mapsui.Widgets.WidgetEventArgs
  parent: Mapsui.Widgets
  href: Mapsui.Widgets.WidgetEventArgs.html
  name: WidgetEventArgs
  nameWithType: WidgetEventArgs
  fullName: Mapsui.Widgets.WidgetEventArgs
- uid: Mapsui.Widgets.BaseWidget.OnPointerPressed*
  commentId: Overload:Mapsui.Widgets.BaseWidget.OnPointerPressed
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_OnPointerPressed_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerPressed
  nameWithType: BaseWidget.OnPointerPressed
  fullName: Mapsui.Widgets.BaseWidget.OnPointerPressed
- uid: Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerPressed_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerPressed(Navigator, WidgetEventArgs)
  nameWithType: IWidget.OnPointerPressed(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  spec.csharp:
  - uid: Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerPressed
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerPressed_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
  spec.vb:
  - uid: Mapsui.Widgets.IWidget.OnPointerPressed(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerPressed
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerPressed_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
- uid: Mapsui.Widgets.BaseWidget.OnPointerMoved*
  commentId: Overload:Mapsui.Widgets.BaseWidget.OnPointerMoved
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_OnPointerMoved_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerMoved
  nameWithType: BaseWidget.OnPointerMoved
  fullName: Mapsui.Widgets.BaseWidget.OnPointerMoved
- uid: Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerMoved_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerMoved(Navigator, WidgetEventArgs)
  nameWithType: IWidget.OnPointerMoved(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  spec.csharp:
  - uid: Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerMoved
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerMoved_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
  spec.vb:
  - uid: Mapsui.Widgets.IWidget.OnPointerMoved(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerMoved
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerMoved_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
- uid: Mapsui.Widgets.BaseWidget.OnPointerReleased*
  commentId: Overload:Mapsui.Widgets.BaseWidget.OnPointerReleased
  href: Mapsui.Widgets.BaseWidget.html#Mapsui_Widgets_BaseWidget_OnPointerReleased_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerReleased
  nameWithType: BaseWidget.OnPointerReleased
  fullName: Mapsui.Widgets.BaseWidget.OnPointerReleased
- uid: Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  commentId: M:Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
  parent: Mapsui.Widgets.IWidget
  href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerReleased_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  name: OnPointerReleased(Navigator, WidgetEventArgs)
  nameWithType: IWidget.OnPointerReleased(Navigator, WidgetEventArgs)
  fullName: Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator, Mapsui.Widgets.WidgetEventArgs)
  spec.csharp:
  - uid: Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerReleased
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerReleased_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
  spec.vb:
  - uid: Mapsui.Widgets.IWidget.OnPointerReleased(Mapsui.Navigator,Mapsui.Widgets.WidgetEventArgs)
    name: OnPointerReleased
    href: Mapsui.Widgets.IWidget.html#Mapsui_Widgets_IWidget_OnPointerReleased_Mapsui_Navigator_Mapsui_Widgets_WidgetEventArgs_
  - name: (
  - uid: Mapsui.Navigator
    name: Navigator
    href: Mapsui.Navigator.html
  - name: ','
  - name: " "
  - uid: Mapsui.Widgets.WidgetEventArgs
    name: WidgetEventArgs
    href: Mapsui.Widgets.WidgetEventArgs.html
  - name: )
