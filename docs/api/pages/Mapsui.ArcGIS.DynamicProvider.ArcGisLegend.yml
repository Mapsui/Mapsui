### YamlMime:ManagedReference
items:
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  commentId: T:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  id: ArcGisLegend
  parent: Mapsui.ArcGIS.DynamicProvider
  children:
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor(Mapsui.Cache.IUrlPersistentCache)
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync(System.String,System.Net.ICredentials)
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest(System.String,System.Net.ICredentials)
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendFailed
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendReceived
  - Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
  langs:
  - csharp
  - vb
  name: ArcGisLegend
  nameWithType: ArcGisLegend
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  type: Class
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ArcGisLegend
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 19
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  summary: >-
    ArcGislegend for getting the layer legends for ArcGIS layers only supports

    ArcGISserver 10.0 and up
  example: []
  syntax:
    content: public class ArcGisLegend
    content.vb: Public Class ArcGisLegend
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendReceived
  commentId: E:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendReceived
  id: LegendReceived
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: LegendReceived
  nameWithType: ArcGisLegend.LegendReceived
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendReceived
  type: Event
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LegendReceived
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 25
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  syntax:
    content: public event ArcGISLegendEventHandler? LegendReceived
    return:
      type: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler
    content.vb: Public Event LegendReceived As ArcGISLegendEventHandler
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendFailed
  commentId: E:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendFailed
  id: LegendFailed
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: LegendFailed
  nameWithType: ArcGisLegend.LegendFailed
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.LegendFailed
  type: Event
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LegendFailed
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 26
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  syntax:
    content: public event ArcGISLegendEventHandler? LegendFailed
    return:
      type: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler
    content.vb: Public Event LegendFailed As ArcGISLegendEventHandler
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor(Mapsui.Cache.IUrlPersistentCache)
  commentId: M:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor(Mapsui.Cache.IUrlPersistentCache)
  id: '#ctor(Mapsui.Cache.IUrlPersistentCache)'
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: ArcGisLegend(IUrlPersistentCache?)
  nameWithType: ArcGisLegend.ArcGisLegend(IUrlPersistentCache?)
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.ArcGisLegend(Mapsui.Cache.IUrlPersistentCache?)
  type: Constructor
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 28
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  syntax:
    content: public ArcGisLegend(IUrlPersistentCache? urlPersistentCache = null)
    parameters:
    - id: urlPersistentCache
      type: Mapsui.Cache.IUrlPersistentCache
    content.vb: Public Sub New(urlPersistentCache As IUrlPersistentCache = Nothing)
  overload: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor*
  nameWithType.vb: ArcGisLegend.New(IUrlPersistentCache)
  fullName.vb: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.New(Mapsui.Cache.IUrlPersistentCache)
  name.vb: New(IUrlPersistentCache)
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
  commentId: P:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
  id: TimeOut
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: TimeOut
  nameWithType: ArcGisLegend.TimeOut
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
  type: Property
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TimeOut
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 37
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  summary: Timeout of webrequest in milliseconds. Default is 5 seconds
  example: []
  syntax:
    content: public int TimeOut { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TimeOut As Integer
  overload: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut*
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest(System.String,System.Net.ICredentials)
  commentId: M:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest(System.String,System.Net.ICredentials)
  id: GetLegendInfoRequest(System.String,System.Net.ICredentials)
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: GetLegendInfoRequest(string, ICredentials?)
  nameWithType: ArcGisLegend.GetLegendInfoRequest(string, ICredentials?)
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest(string, System.Net.ICredentials?)
  type: Method
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetLegendInfoRequest
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 48
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  summary: Get the legend for the given mapserver
  example: []
  syntax:
    content: public void GetLegendInfoRequest(string serviceUrl, ICredentials? credentials = null)
    parameters:
    - id: serviceUrl
      type: System.String
      description: Url to the mapserver
    - id: credentials
      type: System.Net.ICredentials
      description: Credentials
    content.vb: Public Sub GetLegendInfoRequest(serviceUrl As String, credentials As ICredentials = Nothing)
  overload: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest*
  nameWithType.vb: ArcGisLegend.GetLegendInfoRequest(String, ICredentials)
  fullName.vb: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest(String, System.Net.ICredentials)
  name.vb: GetLegendInfoRequest(String, ICredentials)
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync(System.String,System.Net.ICredentials)
  commentId: M:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync(System.String,System.Net.ICredentials)
  id: GetLegendInfoAsync(System.String,System.Net.ICredentials)
  parent: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend
  langs:
  - csharp
  - vb
  name: GetLegendInfoAsync(string, ICredentials?)
  nameWithType: ArcGisLegend.GetLegendInfoAsync(string, ICredentials?)
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync(string, System.Net.ICredentials?)
  type: Method
  source:
    remote:
      path: Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetLegendInfoAsync
    path: ../../Mapsui.ArcGIS/DynamicProvider/ArcGISLegend.cs
    startLine: 70
  assemblies:
  - Mapsui.ArcGIS
  namespace: Mapsui.ArcGIS.DynamicProvider
  syntax:
    content: public Task<ArcGISLegendResponse?> GetLegendInfoAsync(string serviceUrl, ICredentials? credentials = null)
    parameters:
    - id: serviceUrl
      type: System.String
    - id: credentials
      type: System.Net.ICredentials
    return:
      type: System.Threading.Tasks.Task{Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse}
    content.vb: Public Function GetLegendInfoAsync(serviceUrl As String, credentials As ICredentials = Nothing) As Task(Of ArcGISLegendResponse)
  overload: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync*
  nameWithType.vb: ArcGisLegend.GetLegendInfoAsync(String, ICredentials)
  fullName.vb: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync(String, System.Net.ICredentials)
  name.vb: GetLegendInfoAsync(String, ICredentials)
references:
- uid: Mapsui.ArcGIS.DynamicProvider
  commentId: N:Mapsui.ArcGIS.DynamicProvider
  href: Mapsui.html
  name: Mapsui.ArcGIS.DynamicProvider
  nameWithType: Mapsui.ArcGIS.DynamicProvider
  fullName: Mapsui.ArcGIS.DynamicProvider
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.ArcGIS
    name: ArcGIS
    href: Mapsui.ArcGIS.html
  - name: .
  - uid: Mapsui.ArcGIS.DynamicProvider
    name: DynamicProvider
    href: Mapsui.ArcGIS.DynamicProvider.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.ArcGIS
    name: ArcGIS
    href: Mapsui.ArcGIS.html
  - name: .
  - uid: Mapsui.ArcGIS.DynamicProvider
    name: DynamicProvider
    href: Mapsui.ArcGIS.DynamicProvider.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler
  commentId: T:Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler
  parent: Mapsui.ArcGIS.DynamicProvider
  href: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler.html
  name: ArcGISLegendEventHandler
  nameWithType: ArcGISLegendEventHandler
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor*
  commentId: Overload:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.#ctor
  href: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html#Mapsui_ArcGIS_DynamicProvider_ArcGisLegend__ctor_Mapsui_Cache_IUrlPersistentCache_
  name: ArcGisLegend
  nameWithType: ArcGisLegend.ArcGisLegend
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.ArcGisLegend
  nameWithType.vb: ArcGisLegend.New
  fullName.vb: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.New
  name.vb: New
- uid: Mapsui.Cache.IUrlPersistentCache
  commentId: T:Mapsui.Cache.IUrlPersistentCache
  parent: Mapsui.Cache
  href: Mapsui.Cache.IUrlPersistentCache.html
  name: IUrlPersistentCache
  nameWithType: IUrlPersistentCache
  fullName: Mapsui.Cache.IUrlPersistentCache
- uid: Mapsui.Cache
  commentId: N:Mapsui.Cache
  href: Mapsui.html
  name: Mapsui.Cache
  nameWithType: Mapsui.Cache
  fullName: Mapsui.Cache
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Cache
    name: Cache
    href: Mapsui.Cache.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Cache
    name: Cache
    href: Mapsui.Cache.html
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut*
  commentId: Overload:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
  href: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html#Mapsui_ArcGIS_DynamicProvider_ArcGisLegend_TimeOut
  name: TimeOut
  nameWithType: ArcGisLegend.TimeOut
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.TimeOut
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest*
  commentId: Overload:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest
  href: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html#Mapsui_ArcGIS_DynamicProvider_ArcGisLegend_GetLegendInfoRequest_System_String_System_Net_ICredentials_
  name: GetLegendInfoRequest
  nameWithType: ArcGisLegend.GetLegendInfoRequest
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.icredentials
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync*
  commentId: Overload:Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync
  href: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html#Mapsui_ArcGIS_DynamicProvider_ArcGisLegend_GetLegendInfoAsync_System_String_System_Net_ICredentials_
  name: GetLegendInfoAsync
  nameWithType: ArcGisLegend.GetLegendInfoAsync
  fullName: Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.GetLegendInfoAsync
- uid: System.Threading.Tasks.Task{Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse}
  commentId: T:System.Threading.Tasks.Task{Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ArcGISLegendResponse>
  nameWithType: Task<ArcGISLegendResponse>
  fullName: System.Threading.Tasks.Task<Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse>
  nameWithType.vb: Task(Of ArcGISLegendResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse)
  name.vb: Task(Of ArcGISLegendResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse
    name: ArcGISLegendResponse
    href: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse
    name: ArcGISLegendResponse
    href: Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
