### YamlMime:ManagedReference
items:
- uid: Mapsui.Manipulations.TapGestureTracker
  commentId: T:Mapsui.Manipulations.TapGestureTracker
  id: TapGestureTracker
  parent: Mapsui.Manipulations
  children:
  - Mapsui.Manipulations.TapGestureTracker.Restart(Mapsui.Manipulations.ScreenPosition)
  - Mapsui.Manipulations.TapGestureTracker.TapIfNeeded(System.Nullable{Mapsui.Manipulations.ScreenPosition},System.Double,System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean})
  langs:
  - csharp
  - vb
  name: TapGestureTracker
  nameWithType: TapGestureTracker
  fullName: Mapsui.Manipulations.TapGestureTracker
  type: Class
  source:
    remote:
      path: Mapsui/Manipulations/TapGestureTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TapGestureTracker
    path: ../../Mapsui/Manipulations/TapGestureTracker.cs
    startLine: 12
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  syntax:
    content: public class TapGestureTracker
    content.vb: Public Class TapGestureTracker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded(System.Nullable{Mapsui.Manipulations.ScreenPosition},System.Double,System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean})
  commentId: M:Mapsui.Manipulations.TapGestureTracker.TapIfNeeded(System.Nullable{Mapsui.Manipulations.ScreenPosition},System.Double,System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean})
  id: TapIfNeeded(System.Nullable{Mapsui.Manipulations.ScreenPosition},System.Double,System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean})
  parent: Mapsui.Manipulations.TapGestureTracker
  langs:
  - csharp
  - vb
  name: TapIfNeeded(ScreenPosition?, double, Func<ScreenPosition, TapType, bool>)
  nameWithType: TapGestureTracker.TapIfNeeded(ScreenPosition?, double, Func<ScreenPosition, TapType, bool>)
  fullName: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded(Mapsui.Manipulations.ScreenPosition?, double, System.Func<Mapsui.Manipulations.ScreenPosition, Mapsui.Manipulations.TapType, bool>)
  type: Method
  source:
    remote:
      path: Mapsui/Manipulations/TapGestureTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TapIfNeeded
    path: ../../Mapsui/Manipulations/TapGestureTracker.cs
    startLine: 25
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  example: []
  syntax:
    content: public bool TapIfNeeded(ScreenPosition? tapEndPosition, double maxTapDistance, Func<ScreenPosition, TapType, bool> onTap)
    parameters:
    - id: tapEndPosition
      type: System.Nullable{Mapsui.Manipulations.ScreenPosition}
    - id: maxTapDistance
      type: System.Double
    - id: onTap
      type: System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean}
    return:
      type: System.Boolean
      description: >-
        Indicates if the event was handled. If it is handled the caller should not do any further
            handling. The implementation of the tap event determines if the event is handled.
    content.vb: Public Function TapIfNeeded(tapEndPosition As ScreenPosition?, maxTapDistance As Double, onTap As Func(Of ScreenPosition, TapType, Boolean)) As Boolean
  overload: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded*
  nameWithType.vb: TapGestureTracker.TapIfNeeded(ScreenPosition?, Double, Func(Of ScreenPosition, TapType, Boolean))
  fullName.vb: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded(Mapsui.Manipulations.ScreenPosition?, Double, System.Func(Of Mapsui.Manipulations.ScreenPosition, Mapsui.Manipulations.TapType, Boolean))
  name.vb: TapIfNeeded(ScreenPosition?, Double, Func(Of ScreenPosition, TapType, Boolean))
- uid: Mapsui.Manipulations.TapGestureTracker.Restart(Mapsui.Manipulations.ScreenPosition)
  commentId: M:Mapsui.Manipulations.TapGestureTracker.Restart(Mapsui.Manipulations.ScreenPosition)
  id: Restart(Mapsui.Manipulations.ScreenPosition)
  parent: Mapsui.Manipulations.TapGestureTracker
  langs:
  - csharp
  - vb
  name: Restart(ScreenPosition)
  nameWithType: TapGestureTracker.Restart(ScreenPosition)
  fullName: Mapsui.Manipulations.TapGestureTracker.Restart(Mapsui.Manipulations.ScreenPosition)
  type: Method
  source:
    remote:
      path: Mapsui/Manipulations/TapGestureTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Restart
    path: ../../Mapsui/Manipulations/TapGestureTracker.cs
    startLine: 75
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  syntax:
    content: public void Restart(ScreenPosition position)
    parameters:
    - id: position
      type: Mapsui.Manipulations.ScreenPosition
    content.vb: Public Sub Restart(position As ScreenPosition)
  overload: Mapsui.Manipulations.TapGestureTracker.Restart*
references:
- uid: Mapsui.Manipulations
  commentId: N:Mapsui.Manipulations
  href: Mapsui.html
  name: Mapsui.Manipulations
  nameWithType: Mapsui.Manipulations
  fullName: Mapsui.Manipulations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded*
  commentId: Overload:Mapsui.Manipulations.TapGestureTracker.TapIfNeeded
  href: Mapsui.Manipulations.TapGestureTracker.html#Mapsui_Manipulations_TapGestureTracker_TapIfNeeded_System_Nullable_Mapsui_Manipulations_ScreenPosition__System_Double_System_Func_Mapsui_Manipulations_ScreenPosition_Mapsui_Manipulations_TapType_System_Boolean__
  name: TapIfNeeded
  nameWithType: TapGestureTracker.TapIfNeeded
  fullName: Mapsui.Manipulations.TapGestureTracker.TapIfNeeded
- uid: System.Nullable{Mapsui.Manipulations.ScreenPosition}
  commentId: T:System.Nullable{Mapsui.Manipulations.ScreenPosition}
  parent: System
  definition: System.Nullable`1
  href: Mapsui.Manipulations.ScreenPosition.html
  name: ScreenPosition?
  nameWithType: ScreenPosition?
  fullName: Mapsui.Manipulations.ScreenPosition?
  spec.csharp:
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: '?'
  spec.vb:
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: '?'
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean}
  commentId: T:System.Func{Mapsui.Manipulations.ScreenPosition,Mapsui.Manipulations.TapType,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<ScreenPosition, TapType, bool>
  nameWithType: Func<ScreenPosition, TapType, bool>
  fullName: System.Func<Mapsui.Manipulations.ScreenPosition, Mapsui.Manipulations.TapType, bool>
  nameWithType.vb: Func(Of ScreenPosition, TapType, Boolean)
  fullName.vb: System.Func(Of Mapsui.Manipulations.ScreenPosition, Mapsui.Manipulations.TapType, Boolean)
  name.vb: Func(Of ScreenPosition, TapType, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: ','
  - name: " "
  - uid: Mapsui.Manipulations.TapType
    name: TapType
    href: Mapsui.Manipulations.TapType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: ','
  - name: " "
  - uid: Mapsui.Manipulations.TapType
    name: TapType
    href: Mapsui.Manipulations.TapType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Mapsui.Manipulations.TapGestureTracker.Restart*
  commentId: Overload:Mapsui.Manipulations.TapGestureTracker.Restart
  href: Mapsui.Manipulations.TapGestureTracker.html#Mapsui_Manipulations_TapGestureTracker_Restart_Mapsui_Manipulations_ScreenPosition_
  name: Restart
  nameWithType: TapGestureTracker.Restart
  fullName: Mapsui.Manipulations.TapGestureTracker.Restart
- uid: Mapsui.Manipulations.ScreenPosition
  commentId: T:Mapsui.Manipulations.ScreenPosition
  parent: Mapsui.Manipulations
  href: Mapsui.Manipulations.ScreenPosition.html
  name: ScreenPosition
  nameWithType: ScreenPosition
  fullName: Mapsui.Manipulations.ScreenPosition
