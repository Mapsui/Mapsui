### YamlMime:ManagedReference
items:
- uid: Mapsui.Styles.SymbolStyle
  commentId: T:Mapsui.Styles.SymbolStyle
  id: SymbolStyle
  parent: Mapsui.Styles
  children:
  - Mapsui.Styles.SymbolStyle.BitmapId
  - Mapsui.Styles.SymbolStyle.BlendModeColor
  - Mapsui.Styles.SymbolStyle.DefaultHeight
  - Mapsui.Styles.SymbolStyle.DefaultWidth
  - Mapsui.Styles.SymbolStyle.Equals(Mapsui.Styles.SymbolStyle)
  - Mapsui.Styles.SymbolStyle.Equals(System.Object)
  - Mapsui.Styles.SymbolStyle.GetHashCode
  - Mapsui.Styles.SymbolStyle.RotateWithMap
  - Mapsui.Styles.SymbolStyle.SymbolOffset
  - Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
  - Mapsui.Styles.SymbolStyle.SymbolRotation
  - Mapsui.Styles.SymbolStyle.SymbolScale
  - Mapsui.Styles.SymbolStyle.SymbolType
  - Mapsui.Styles.SymbolStyle.UnitType
  - Mapsui.Styles.SymbolStyle.op_Equality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  - Mapsui.Styles.SymbolStyle.op_Inequality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  langs:
  - csharp
  - vb
  name: SymbolStyle
  nameWithType: SymbolStyle
  fullName: Mapsui.Styles.SymbolStyle
  type: Class
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolStyle
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 20
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: 'public class SymbolStyle : VectorStyle, IStyle'
    content.vb: Public Class SymbolStyle Inherits VectorStyle Implements IStyle
  inheritance:
  - System.Object
  - Mapsui.Styles.Style
  - Mapsui.Styles.VectorStyle
  derivedClasses:
  - Mapsui.Styles.CalloutStyle
  implements:
  - Mapsui.Styles.IStyle
  inheritedMembers:
  - Mapsui.Styles.VectorStyle.Line
  - Mapsui.Styles.VectorStyle.Outline
  - Mapsui.Styles.VectorStyle.Fill
  - Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
  - Mapsui.Styles.Style.MinVisible
  - Mapsui.Styles.Style.MaxVisible
  - Mapsui.Styles.Style.Enabled
  - Mapsui.Styles.Style.Opacity
  - Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mapsui.Styles.IStyle.Mapsui.Extensions.StyleExtensions.GetStylesToApply(System.Double)
  - Mapsui.Styles.IStyle.Mapsui.Extensions.StyleExtensions.ShouldBeApplied(System.Double)
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Styles.SymbolStyle.DefaultWidth
  commentId: P:Mapsui.Styles.SymbolStyle.DefaultWidth
  id: DefaultWidth
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: DefaultWidth
  nameWithType: SymbolStyle.DefaultWidth
  fullName: Mapsui.Styles.SymbolStyle.DefaultWidth
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DefaultWidth
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 22
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public static double DefaultWidth { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Shared Property DefaultWidth As Double
  overload: Mapsui.Styles.SymbolStyle.DefaultWidth*
- uid: Mapsui.Styles.SymbolStyle.DefaultHeight
  commentId: P:Mapsui.Styles.SymbolStyle.DefaultHeight
  id: DefaultHeight
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: DefaultHeight
  nameWithType: SymbolStyle.DefaultHeight
  fullName: Mapsui.Styles.SymbolStyle.DefaultHeight
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DefaultHeight
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 23
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public static double DefaultHeight { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Shared Property DefaultHeight As Double
  overload: Mapsui.Styles.SymbolStyle.DefaultHeight*
- uid: Mapsui.Styles.SymbolStyle.SymbolType
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolType
  id: SymbolType
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: SymbolType
  nameWithType: SymbolStyle.SymbolType
  fullName: Mapsui.Styles.SymbolStyle.SymbolType
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolType
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 25
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public SymbolType SymbolType { get; set; }
    parameters: []
    return:
      type: Mapsui.Styles.SymbolType
    content.vb: Public Property SymbolType As SymbolType
  overload: Mapsui.Styles.SymbolStyle.SymbolType*
- uid: Mapsui.Styles.SymbolStyle.UnitType
  commentId: P:Mapsui.Styles.SymbolStyle.UnitType
  id: UnitType
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: UnitType
  nameWithType: SymbolStyle.UnitType
  fullName: Mapsui.Styles.SymbolStyle.UnitType
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UnitType
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 27
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public UnitType UnitType { get; set; }
    parameters: []
    return:
      type: Mapsui.Styles.UnitType
    content.vb: Public Property UnitType As UnitType
  overload: Mapsui.Styles.SymbolStyle.UnitType*
- uid: Mapsui.Styles.SymbolStyle.BitmapId
  commentId: P:Mapsui.Styles.SymbolStyle.BitmapId
  id: BitmapId
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: BitmapId
  nameWithType: SymbolStyle.BitmapId
  fullName: Mapsui.Styles.SymbolStyle.BitmapId
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: BitmapId
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 34
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Id of the image in the BitmapRegistry, if SymbolType is Image
  example: []
  syntax:
    content: public int BitmapId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BitmapId As Integer
  overload: Mapsui.Styles.SymbolStyle.BitmapId*
- uid: Mapsui.Styles.SymbolStyle.SymbolRotation
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolRotation
  id: SymbolRotation
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: SymbolRotation
  nameWithType: SymbolStyle.SymbolRotation
  fullName: Mapsui.Styles.SymbolStyle.SymbolRotation
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolRotation
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 48
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Gets or sets the rotation of the symbol in degrees (clockwise is positive)
  example: []
  syntax:
    content: public double SymbolRotation { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property SymbolRotation As Double
  overload: Mapsui.Styles.SymbolStyle.SymbolRotation*
- uid: Mapsui.Styles.SymbolStyle.RotateWithMap
  commentId: P:Mapsui.Styles.SymbolStyle.RotateWithMap
  id: RotateWithMap
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: RotateWithMap
  nameWithType: SymbolStyle.RotateWithMap
  fullName: Mapsui.Styles.SymbolStyle.RotateWithMap
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RotateWithMap
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 57
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: >-
    When true a symbol will rotate along with the rotation of the map.

    This is useful if you need to symbolize the direction in which a vehicle

    is moving. When the symbol is false it will retain it's position to the

    screen. This is useful for pins like symbols. The default is false.

    This mode is not supported in the WPF renderer.
  example: []
  syntax:
    content: public bool RotateWithMap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RotateWithMap As Boolean
  overload: Mapsui.Styles.SymbolStyle.RotateWithMap*
- uid: Mapsui.Styles.SymbolStyle.SymbolScale
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolScale
  id: SymbolScale
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: SymbolScale
  nameWithType: SymbolStyle.SymbolScale
  fullName: Mapsui.Styles.SymbolStyle.SymbolScale
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolScale
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 66
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Scale of the symbol (defaults to 1)
  remarks: >-
    Setting the SymbolScale to '2.0' doubles the size of the symbol. A SymbolScale of 0.5 makes the scale half the size.

    of the original image
  example: []
  syntax:
    content: public double SymbolScale { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property SymbolScale As Double
  overload: Mapsui.Styles.SymbolStyle.SymbolScale*
- uid: Mapsui.Styles.SymbolStyle.SymbolOffset
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolOffset
  id: SymbolOffset
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: SymbolOffset
  nameWithType: SymbolStyle.SymbolOffset
  fullName: Mapsui.Styles.SymbolStyle.SymbolOffset
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolOffset
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 75
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Gets or sets the offset in pixels of the symbol.
  remarks: >-
    The symbol offset is scaled with the <xref href="Mapsui.Styles.SymbolStyle.SymbolScale" data-throw-if-not-resolved="false"></xref> property and refers to the offset of

    <xref href="Mapsui.Styles.SymbolStyle.SymbolScale" data-throw-if-not-resolved="false"></xref>=1.0.
  example: []
  syntax:
    content: public Offset SymbolOffset { get; set; }
    parameters: []
    return:
      type: Mapsui.Styles.Offset
    content.vb: Public Property SymbolOffset As Offset
  overload: Mapsui.Styles.SymbolStyle.SymbolOffset*
- uid: Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
  id: SymbolOffsetRotatesWithMap
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: SymbolOffsetRotatesWithMap
  nameWithType: SymbolStyle.SymbolOffsetRotatesWithMap
  fullName: Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SymbolOffsetRotatesWithMap
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 80
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Should SymbolOffset position rotate with map
  example: []
  syntax:
    content: public bool SymbolOffsetRotatesWithMap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SymbolOffsetRotatesWithMap As Boolean
  overload: Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap*
- uid: Mapsui.Styles.SymbolStyle.BlendModeColor
  commentId: P:Mapsui.Styles.SymbolStyle.BlendModeColor
  id: BlendModeColor
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: BlendModeColor
  nameWithType: SymbolStyle.BlendModeColor
  fullName: Mapsui.Styles.SymbolStyle.BlendModeColor
  type: Property
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: BlendModeColor
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 86
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: >-
    When BlendModeColor is set a BitmapType.Picture (e.g. used for SVG) will be 

    drawn in the BlendModeColor ignoring the colors of the Picture itself.
  example: []
  syntax:
    content: public Color? BlendModeColor { get; set; }
    parameters: []
    return:
      type: Mapsui.Styles.Color
    content.vb: Public Property BlendModeColor As Color
  overload: Mapsui.Styles.SymbolStyle.BlendModeColor*
- uid: Mapsui.Styles.SymbolStyle.Equals(System.Object)
  commentId: M:Mapsui.Styles.SymbolStyle.Equals(System.Object)
  id: Equals(System.Object)
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: SymbolStyle.Equals(object?)
  fullName: Mapsui.Styles.SymbolStyle.Equals(object?)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Equals
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 88
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: Mapsui.Styles.VectorStyle.Equals(System.Object)
  overload: Mapsui.Styles.SymbolStyle.Equals*
  nameWithType.vb: SymbolStyle.Equals(Object)
  fullName.vb: Mapsui.Styles.SymbolStyle.Equals(Object)
  name.vb: Equals(Object)
- uid: Mapsui.Styles.SymbolStyle.Equals(Mapsui.Styles.SymbolStyle)
  commentId: M:Mapsui.Styles.SymbolStyle.Equals(Mapsui.Styles.SymbolStyle)
  id: Equals(Mapsui.Styles.SymbolStyle)
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: Equals(SymbolStyle?)
  nameWithType: SymbolStyle.Equals(SymbolStyle?)
  fullName: Mapsui.Styles.SymbolStyle.Equals(Mapsui.Styles.SymbolStyle?)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Equals
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 95
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public bool Equals(SymbolStyle? symbolStyle)
    parameters:
    - id: symbolStyle
      type: Mapsui.Styles.SymbolStyle
    return:
      type: System.Boolean
    content.vb: Public Function Equals(symbolStyle As SymbolStyle) As Boolean
  overload: Mapsui.Styles.SymbolStyle.Equals*
  nameWithType.vb: SymbolStyle.Equals(SymbolStyle)
  fullName.vb: Mapsui.Styles.SymbolStyle.Equals(Mapsui.Styles.SymbolStyle)
  name.vb: Equals(SymbolStyle)
- uid: Mapsui.Styles.SymbolStyle.GetHashCode
  commentId: M:Mapsui.Styles.SymbolStyle.GetHashCode
  id: GetHashCode
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SymbolStyle.GetHashCode()
  fullName: Mapsui.Styles.SymbolStyle.GetHashCode()
  type: Method
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetHashCode
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 130
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: Mapsui.Styles.VectorStyle.GetHashCode
  overload: Mapsui.Styles.SymbolStyle.GetHashCode*
- uid: Mapsui.Styles.SymbolStyle.op_Equality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  commentId: M:Mapsui.Styles.SymbolStyle.op_Equality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  id: op_Equality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: operator ==(SymbolStyle?, SymbolStyle?)
  nameWithType: SymbolStyle.operator ==(SymbolStyle?, SymbolStyle?)
  fullName: Mapsui.Styles.SymbolStyle.operator ==(Mapsui.Styles.SymbolStyle?, Mapsui.Styles.SymbolStyle?)
  type: Operator
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: op_Equality
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 143
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public static bool operator ==(SymbolStyle? symbolStyle1, SymbolStyle? symbolStyle2)
    parameters:
    - id: symbolStyle1
      type: Mapsui.Styles.SymbolStyle
    - id: symbolStyle2
      type: Mapsui.Styles.SymbolStyle
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(symbolStyle1 As SymbolStyle, symbolStyle2 As SymbolStyle) As Boolean
  overload: Mapsui.Styles.SymbolStyle.op_Equality*
  nameWithType.vb: SymbolStyle.=(SymbolStyle, SymbolStyle)
  fullName.vb: Mapsui.Styles.SymbolStyle.=(Mapsui.Styles.SymbolStyle, Mapsui.Styles.SymbolStyle)
  name.vb: =(SymbolStyle, SymbolStyle)
- uid: Mapsui.Styles.SymbolStyle.op_Inequality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  commentId: M:Mapsui.Styles.SymbolStyle.op_Inequality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  id: op_Inequality(Mapsui.Styles.SymbolStyle,Mapsui.Styles.SymbolStyle)
  parent: Mapsui.Styles.SymbolStyle
  langs:
  - csharp
  - vb
  name: operator !=(SymbolStyle?, SymbolStyle?)
  nameWithType: SymbolStyle.operator !=(SymbolStyle?, SymbolStyle?)
  fullName: Mapsui.Styles.SymbolStyle.operator !=(Mapsui.Styles.SymbolStyle?, Mapsui.Styles.SymbolStyle?)
  type: Operator
  source:
    remote:
      path: Mapsui/Styles/SymbolStyle.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: op_Inequality
    path: ../../Mapsui/Styles/SymbolStyle.cs
    startLine: 148
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  syntax:
    content: public static bool operator !=(SymbolStyle? symbolStyle1, SymbolStyle? symbolStyle2)
    parameters:
    - id: symbolStyle1
      type: Mapsui.Styles.SymbolStyle
    - id: symbolStyle2
      type: Mapsui.Styles.SymbolStyle
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(symbolStyle1 As SymbolStyle, symbolStyle2 As SymbolStyle) As Boolean
  overload: Mapsui.Styles.SymbolStyle.op_Inequality*
  nameWithType.vb: SymbolStyle.<>(SymbolStyle, SymbolStyle)
  fullName.vb: Mapsui.Styles.SymbolStyle.<>(Mapsui.Styles.SymbolStyle, Mapsui.Styles.SymbolStyle)
  name.vb: <>(SymbolStyle, SymbolStyle)
references:
- uid: Mapsui.Styles
  commentId: N:Mapsui.Styles
  href: Mapsui.html
  name: Mapsui.Styles
  nameWithType: Mapsui.Styles
  fullName: Mapsui.Styles
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mapsui.Styles.Style
  commentId: T:Mapsui.Styles.Style
  parent: Mapsui.Styles
  href: Mapsui.Styles.Style.html
  name: Style
  nameWithType: Style
  fullName: Mapsui.Styles.Style
- uid: Mapsui.Styles.VectorStyle
  commentId: T:Mapsui.Styles.VectorStyle
  parent: Mapsui.Styles
  href: Mapsui.Styles.VectorStyle.html
  name: VectorStyle
  nameWithType: VectorStyle
  fullName: Mapsui.Styles.VectorStyle
- uid: Mapsui.Styles.IStyle
  commentId: T:Mapsui.Styles.IStyle
  parent: Mapsui.Styles
  href: Mapsui.Styles.IStyle.html
  name: IStyle
  nameWithType: IStyle
  fullName: Mapsui.Styles.IStyle
- uid: Mapsui.Styles.VectorStyle.Line
  commentId: P:Mapsui.Styles.VectorStyle.Line
  parent: Mapsui.Styles.VectorStyle
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Line
  name: Line
  nameWithType: VectorStyle.Line
  fullName: Mapsui.Styles.VectorStyle.Line
- uid: Mapsui.Styles.VectorStyle.Outline
  commentId: P:Mapsui.Styles.VectorStyle.Outline
  parent: Mapsui.Styles.VectorStyle
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Outline
  name: Outline
  nameWithType: VectorStyle.Outline
  fullName: Mapsui.Styles.VectorStyle.Outline
- uid: Mapsui.Styles.VectorStyle.Fill
  commentId: P:Mapsui.Styles.VectorStyle.Fill
  parent: Mapsui.Styles.VectorStyle
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Fill
  name: Fill
  nameWithType: VectorStyle.Fill
  fullName: Mapsui.Styles.VectorStyle.Fill
- uid: Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
  commentId: M:Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
  parent: Mapsui.Styles.VectorStyle
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_Mapsui_Styles_VectorStyle_
  name: Equals(VectorStyle)
  nameWithType: VectorStyle.Equals(VectorStyle)
  fullName: Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
  spec.csharp:
  - uid: Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
    name: Equals
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_Mapsui_Styles_VectorStyle_
  - name: (
  - uid: Mapsui.Styles.VectorStyle
    name: VectorStyle
    href: Mapsui.Styles.VectorStyle.html
  - name: )
  spec.vb:
  - uid: Mapsui.Styles.VectorStyle.Equals(Mapsui.Styles.VectorStyle)
    name: Equals
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_Mapsui_Styles_VectorStyle_
  - name: (
  - uid: Mapsui.Styles.VectorStyle
    name: VectorStyle
    href: Mapsui.Styles.VectorStyle.html
  - name: )
- uid: Mapsui.Styles.Style.MinVisible
  commentId: P:Mapsui.Styles.Style.MinVisible
  parent: Mapsui.Styles.Style
  href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_MinVisible
  name: MinVisible
  nameWithType: Style.MinVisible
  fullName: Mapsui.Styles.Style.MinVisible
- uid: Mapsui.Styles.Style.MaxVisible
  commentId: P:Mapsui.Styles.Style.MaxVisible
  parent: Mapsui.Styles.Style
  href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_MaxVisible
  name: MaxVisible
  nameWithType: Style.MaxVisible
  fullName: Mapsui.Styles.Style.MaxVisible
- uid: Mapsui.Styles.Style.Enabled
  commentId: P:Mapsui.Styles.Style.Enabled
  parent: Mapsui.Styles.Style
  href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_Enabled
  name: Enabled
  nameWithType: Style.Enabled
  fullName: Mapsui.Styles.Style.Enabled
- uid: Mapsui.Styles.Style.Opacity
  commentId: P:Mapsui.Styles.Style.Opacity
  parent: Mapsui.Styles.Style
  href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_Opacity
  name: Opacity
  nameWithType: Style.Opacity
  fullName: Mapsui.Styles.Style.Opacity
- uid: Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
  commentId: M:Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
  parent: Mapsui.Styles.Style
  href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_Equals_Mapsui_Styles_Style_
  name: Equals(Style)
  nameWithType: Style.Equals(Style)
  fullName: Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
  spec.csharp:
  - uid: Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
    name: Equals
    href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_Equals_Mapsui_Styles_Style_
  - name: (
  - uid: Mapsui.Styles.Style
    name: Style
    href: Mapsui.Styles.Style.html
  - name: )
  spec.vb:
  - uid: Mapsui.Styles.Style.Equals(Mapsui.Styles.Style)
    name: Equals
    href: Mapsui.Styles.Style.html#Mapsui_Styles_Style_Equals_Mapsui_Styles_Style_
  - name: (
  - uid: Mapsui.Styles.Style
    name: Style
    href: Mapsui.Styles.Style.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mapsui.Styles.IStyle.Mapsui.Extensions.StyleExtensions.GetStylesToApply(System.Double)
  commentId: M:Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
  parent: Mapsui.Extensions.StyleExtensions
  definition: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
  href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  name: GetStylesToApply(IStyle, double)
  nameWithType: StyleExtensions.GetStylesToApply(IStyle, double)
  fullName: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle, double)
  nameWithType.vb: StyleExtensions.GetStylesToApply(IStyle, Double)
  fullName.vb: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle, Double)
  name.vb: GetStylesToApply(IStyle, Double)
  spec.csharp:
  - uid: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
    name: GetStylesToApply
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
    name: GetStylesToApply
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Mapsui.Styles.IStyle.Mapsui.Extensions.StyleExtensions.ShouldBeApplied(System.Double)
  commentId: M:Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
  parent: Mapsui.Extensions.StyleExtensions
  definition: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
  href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  name: ShouldBeApplied(IStyle, double)
  nameWithType: StyleExtensions.ShouldBeApplied(IStyle, double)
  fullName: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle, double)
  nameWithType.vb: StyleExtensions.ShouldBeApplied(IStyle, Double)
  fullName.vb: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle, Double)
  name.vb: ShouldBeApplied(IStyle, Double)
  spec.csharp:
  - uid: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
    name: ShouldBeApplied
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
    name: ShouldBeApplied
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
  commentId: M:Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
  isExternal: true
  href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  name: GetStylesToApply(IStyle, double)
  nameWithType: StyleExtensions.GetStylesToApply(IStyle, double)
  fullName: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle, double)
  nameWithType.vb: StyleExtensions.GetStylesToApply(IStyle, Double)
  fullName.vb: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle, Double)
  name.vb: GetStylesToApply(IStyle, Double)
  spec.csharp:
  - uid: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
    name: GetStylesToApply
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.StyleExtensions.GetStylesToApply(Mapsui.Styles.IStyle,System.Double)
    name: GetStylesToApply
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_GetStylesToApply_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Mapsui.Extensions.StyleExtensions
  commentId: T:Mapsui.Extensions.StyleExtensions
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.StyleExtensions.html
  name: StyleExtensions
  nameWithType: StyleExtensions
  fullName: Mapsui.Extensions.StyleExtensions
- uid: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
  commentId: M:Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
  isExternal: true
  href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  name: ShouldBeApplied(IStyle, double)
  nameWithType: StyleExtensions.ShouldBeApplied(IStyle, double)
  fullName: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle, double)
  nameWithType.vb: StyleExtensions.ShouldBeApplied(IStyle, Double)
  fullName.vb: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle, Double)
  name.vb: ShouldBeApplied(IStyle, Double)
  spec.csharp:
  - uid: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
    name: ShouldBeApplied
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.StyleExtensions.ShouldBeApplied(Mapsui.Styles.IStyle,System.Double)
    name: ShouldBeApplied
    href: Mapsui.Extensions.StyleExtensions.html#Mapsui_Extensions_StyleExtensions_ShouldBeApplied_Mapsui_Styles_IStyle_System_Double_
  - name: (
  - uid: Mapsui.Styles.IStyle
    name: IStyle
    href: Mapsui.Styles.IStyle.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Styles.SymbolStyle.DefaultWidth*
  commentId: Overload:Mapsui.Styles.SymbolStyle.DefaultWidth
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_DefaultWidth
  name: DefaultWidth
  nameWithType: SymbolStyle.DefaultWidth
  fullName: Mapsui.Styles.SymbolStyle.DefaultWidth
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mapsui.Styles.SymbolStyle.DefaultHeight*
  commentId: Overload:Mapsui.Styles.SymbolStyle.DefaultHeight
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_DefaultHeight
  name: DefaultHeight
  nameWithType: SymbolStyle.DefaultHeight
  fullName: Mapsui.Styles.SymbolStyle.DefaultHeight
- uid: Mapsui.Styles.SymbolStyle.SymbolType*
  commentId: Overload:Mapsui.Styles.SymbolStyle.SymbolType
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolType
  name: SymbolType
  nameWithType: SymbolStyle.SymbolType
  fullName: Mapsui.Styles.SymbolStyle.SymbolType
- uid: Mapsui.Styles.SymbolType
  commentId: T:Mapsui.Styles.SymbolType
  parent: Mapsui.Styles
  href: Mapsui.Styles.SymbolType.html
  name: SymbolType
  nameWithType: SymbolType
  fullName: Mapsui.Styles.SymbolType
- uid: Mapsui.Styles.SymbolStyle.UnitType*
  commentId: Overload:Mapsui.Styles.SymbolStyle.UnitType
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_UnitType
  name: UnitType
  nameWithType: SymbolStyle.UnitType
  fullName: Mapsui.Styles.SymbolStyle.UnitType
- uid: Mapsui.Styles.UnitType
  commentId: T:Mapsui.Styles.UnitType
  parent: Mapsui.Styles
  href: Mapsui.Styles.UnitType.html
  name: UnitType
  nameWithType: UnitType
  fullName: Mapsui.Styles.UnitType
- uid: Mapsui.Styles.SymbolStyle.BitmapId*
  commentId: Overload:Mapsui.Styles.SymbolStyle.BitmapId
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_BitmapId
  name: BitmapId
  nameWithType: SymbolStyle.BitmapId
  fullName: Mapsui.Styles.SymbolStyle.BitmapId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Styles.SymbolStyle.SymbolRotation*
  commentId: Overload:Mapsui.Styles.SymbolStyle.SymbolRotation
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolRotation
  name: SymbolRotation
  nameWithType: SymbolStyle.SymbolRotation
  fullName: Mapsui.Styles.SymbolStyle.SymbolRotation
- uid: Mapsui.Styles.SymbolStyle.RotateWithMap*
  commentId: Overload:Mapsui.Styles.SymbolStyle.RotateWithMap
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_RotateWithMap
  name: RotateWithMap
  nameWithType: SymbolStyle.RotateWithMap
  fullName: Mapsui.Styles.SymbolStyle.RotateWithMap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Styles.SymbolStyle.SymbolScale*
  commentId: Overload:Mapsui.Styles.SymbolStyle.SymbolScale
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolScale
  name: SymbolScale
  nameWithType: SymbolStyle.SymbolScale
  fullName: Mapsui.Styles.SymbolStyle.SymbolScale
- uid: Mapsui.Styles.SymbolStyle.SymbolScale
  commentId: P:Mapsui.Styles.SymbolStyle.SymbolScale
  parent: Mapsui.Styles.SymbolStyle
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolScale
  name: SymbolScale
  nameWithType: SymbolStyle.SymbolScale
  fullName: Mapsui.Styles.SymbolStyle.SymbolScale
- uid: Mapsui.Styles.SymbolStyle.SymbolOffset*
  commentId: Overload:Mapsui.Styles.SymbolStyle.SymbolOffset
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolOffset
  name: SymbolOffset
  nameWithType: SymbolStyle.SymbolOffset
  fullName: Mapsui.Styles.SymbolStyle.SymbolOffset
- uid: Mapsui.Styles.Offset
  commentId: T:Mapsui.Styles.Offset
  parent: Mapsui.Styles
  href: Mapsui.Styles.Offset.html
  name: Offset
  nameWithType: Offset
  fullName: Mapsui.Styles.Offset
- uid: Mapsui.Styles.SymbolStyle
  commentId: T:Mapsui.Styles.SymbolStyle
  parent: Mapsui.Styles
  href: Mapsui.Styles.SymbolStyle.html
  name: SymbolStyle
  nameWithType: SymbolStyle
  fullName: Mapsui.Styles.SymbolStyle
- uid: Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap*
  commentId: Overload:Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_SymbolOffsetRotatesWithMap
  name: SymbolOffsetRotatesWithMap
  nameWithType: SymbolStyle.SymbolOffsetRotatesWithMap
  fullName: Mapsui.Styles.SymbolStyle.SymbolOffsetRotatesWithMap
- uid: Mapsui.Styles.SymbolStyle.BlendModeColor*
  commentId: Overload:Mapsui.Styles.SymbolStyle.BlendModeColor
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_BlendModeColor
  name: BlendModeColor
  nameWithType: SymbolStyle.BlendModeColor
  fullName: Mapsui.Styles.SymbolStyle.BlendModeColor
- uid: Mapsui.Styles.Color
  commentId: T:Mapsui.Styles.Color
  parent: Mapsui.Styles
  href: Mapsui.Styles.Color.html
  name: Color
  nameWithType: Color
  fullName: Mapsui.Styles.Color
- uid: Mapsui.Styles.VectorStyle.Equals(System.Object)
  commentId: M:Mapsui.Styles.VectorStyle.Equals(System.Object)
  parent: Mapsui.Styles.VectorStyle
  isExternal: true
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_System_Object_
  name: Equals(object)
  nameWithType: VectorStyle.Equals(object)
  fullName: Mapsui.Styles.VectorStyle.Equals(object)
  nameWithType.vb: VectorStyle.Equals(Object)
  fullName.vb: Mapsui.Styles.VectorStyle.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Mapsui.Styles.VectorStyle.Equals(System.Object)
    name: Equals
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Styles.VectorStyle.Equals(System.Object)
    name: Equals
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Styles.SymbolStyle.Equals*
  commentId: Overload:Mapsui.Styles.SymbolStyle.Equals
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_Equals_System_Object_
  name: Equals
  nameWithType: SymbolStyle.Equals
  fullName: Mapsui.Styles.SymbolStyle.Equals
- uid: Mapsui.Styles.VectorStyle.GetHashCode
  commentId: M:Mapsui.Styles.VectorStyle.GetHashCode
  parent: Mapsui.Styles.VectorStyle
  href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_GetHashCode
  name: GetHashCode()
  nameWithType: VectorStyle.GetHashCode()
  fullName: Mapsui.Styles.VectorStyle.GetHashCode()
  spec.csharp:
  - uid: Mapsui.Styles.VectorStyle.GetHashCode
    name: GetHashCode
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Styles.VectorStyle.GetHashCode
    name: GetHashCode
    href: Mapsui.Styles.VectorStyle.html#Mapsui_Styles_VectorStyle_GetHashCode
  - name: (
  - name: )
- uid: Mapsui.Styles.SymbolStyle.GetHashCode*
  commentId: Overload:Mapsui.Styles.SymbolStyle.GetHashCode
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_GetHashCode
  name: GetHashCode
  nameWithType: SymbolStyle.GetHashCode
  fullName: Mapsui.Styles.SymbolStyle.GetHashCode
- uid: Mapsui.Styles.SymbolStyle.op_Equality*
  commentId: Overload:Mapsui.Styles.SymbolStyle.op_Equality
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_op_Equality_Mapsui_Styles_SymbolStyle_Mapsui_Styles_SymbolStyle_
  name: operator ==
  nameWithType: SymbolStyle.operator ==
  fullName: Mapsui.Styles.SymbolStyle.operator ==
  nameWithType.vb: SymbolStyle.=
  fullName.vb: Mapsui.Styles.SymbolStyle.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Mapsui.Styles.SymbolStyle.op_Equality*
    name: ==
    href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_op_Equality_Mapsui_Styles_SymbolStyle_Mapsui_Styles_SymbolStyle_
- uid: Mapsui.Styles.SymbolStyle.op_Inequality*
  commentId: Overload:Mapsui.Styles.SymbolStyle.op_Inequality
  href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_op_Inequality_Mapsui_Styles_SymbolStyle_Mapsui_Styles_SymbolStyle_
  name: operator !=
  nameWithType: SymbolStyle.operator !=
  fullName: Mapsui.Styles.SymbolStyle.operator !=
  nameWithType.vb: SymbolStyle.<>
  fullName.vb: Mapsui.Styles.SymbolStyle.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Mapsui.Styles.SymbolStyle.op_Inequality*
    name: '!='
    href: Mapsui.Styles.SymbolStyle.html#Mapsui_Styles_SymbolStyle_op_Inequality_Mapsui_Styles_SymbolStyle_Mapsui_Styles_SymbolStyle_
