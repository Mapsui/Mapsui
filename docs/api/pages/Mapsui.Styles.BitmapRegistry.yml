### YamlMime:ManagedReference
items:
- uid: Mapsui.Styles.BitmapRegistry
  commentId: T:Mapsui.Styles.BitmapRegistry
  id: BitmapRegistry
  parent: Mapsui.Styles
  children:
  - Mapsui.Styles.BitmapRegistry.Get(System.Int32)
  - Mapsui.Styles.BitmapRegistry.Instance
  - Mapsui.Styles.BitmapRegistry.Register(System.Object,System.String)
  - Mapsui.Styles.BitmapRegistry.Set(System.Int32,System.Object)
  - Mapsui.Styles.BitmapRegistry.TryGetBitmapId(System.String,System.Int32@)
  - Mapsui.Styles.BitmapRegistry.Unregister(System.Int32)
  langs:
  - csharp
  - vb
  name: BitmapRegistry
  nameWithType: BitmapRegistry
  fullName: Mapsui.Styles.BitmapRegistry
  type: Class
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: BitmapRegistry
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Class for managing all bitmaps, which are registered for Mapsui drawing
  example: []
  syntax:
    content: public class BitmapRegistry
    content.vb: Public Class BitmapRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Styles.BitmapRegistry.Instance
  commentId: P:Mapsui.Styles.BitmapRegistry.Instance
  id: Instance
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: BitmapRegistry.Instance
  fullName: Mapsui.Styles.BitmapRegistry.Instance
  type: Property
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Instance
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 19
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Singleton of BitmapRegistry class
  example: []
  syntax:
    content: public static BitmapRegistry Instance { get; }
    parameters: []
    return:
      type: Mapsui.Styles.BitmapRegistry
    content.vb: Public Shared ReadOnly Property Instance As BitmapRegistry
  overload: Mapsui.Styles.BitmapRegistry.Instance*
- uid: Mapsui.Styles.BitmapRegistry.Register(System.Object,System.String)
  commentId: M:Mapsui.Styles.BitmapRegistry.Register(System.Object,System.String)
  id: Register(System.Object,System.String)
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: Register(object, string?)
  nameWithType: BitmapRegistry.Register(object, string?)
  fullName: Mapsui.Styles.BitmapRegistry.Register(object, string?)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Register
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 27
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Register a new bitmap
  example: []
  syntax:
    content: public int Register(object bitmapData, string? key = null)
    parameters:
    - id: bitmapData
      type: System.Object
      description: Bitmap data to register
    - id: key
      type: System.String
      description: key for accessing bitmap
    return:
      type: System.Int32
      description: Id of registered bitmap data
    content.vb: Public Function Register(bitmapData As Object, key As String = Nothing) As Integer
  overload: Mapsui.Styles.BitmapRegistry.Register*
  nameWithType.vb: BitmapRegistry.Register(Object, String)
  fullName.vb: Mapsui.Styles.BitmapRegistry.Register(Object, String)
  name.vb: Register(Object, String)
- uid: Mapsui.Styles.BitmapRegistry.Unregister(System.Int32)
  commentId: M:Mapsui.Styles.BitmapRegistry.Unregister(System.Int32)
  id: Unregister(System.Int32)
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: Unregister(int)
  nameWithType: BitmapRegistry.Unregister(int)
  fullName: Mapsui.Styles.BitmapRegistry.Unregister(int)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Unregister
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 44
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Unregister an existing bitmap
  example: []
  syntax:
    content: public object? Unregister(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Id of registered bitmap data
    return:
      type: System.Object
      description: The unregistered object
    content.vb: Public Function Unregister(id As Integer) As Object
  overload: Mapsui.Styles.BitmapRegistry.Unregister*
  nameWithType.vb: BitmapRegistry.Unregister(Integer)
  fullName.vb: Mapsui.Styles.BitmapRegistry.Unregister(Integer)
  name.vb: Unregister(Integer)
- uid: Mapsui.Styles.BitmapRegistry.Get(System.Int32)
  commentId: M:Mapsui.Styles.BitmapRegistry.Get(System.Int32)
  id: Get(System.Int32)
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: Get(int)
  nameWithType: BitmapRegistry.Get(int)
  fullName: Mapsui.Styles.BitmapRegistry.Get(int)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Get
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 56
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Get bitmap data of registered bitmap
  example: []
  syntax:
    content: public object Get(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Id of existing bitmap data
    return:
      type: System.Object
      description: ''
    content.vb: Public Function [Get](id As Integer) As Object
  overload: Mapsui.Styles.BitmapRegistry.Get*
  nameWithType.vb: BitmapRegistry.Get(Integer)
  fullName.vb: Mapsui.Styles.BitmapRegistry.Get(Integer)
  name.vb: Get(Integer)
- uid: Mapsui.Styles.BitmapRegistry.Set(System.Int32,System.Object)
  commentId: M:Mapsui.Styles.BitmapRegistry.Set(System.Int32,System.Object)
  id: Set(System.Int32,System.Object)
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: Set(int, object)
  nameWithType: BitmapRegistry.Set(int, object)
  fullName: Mapsui.Styles.BitmapRegistry.Set(int, object)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Set
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 67
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Set new bitmap data for a already registered bitmap
  example: []
  syntax:
    content: public bool Set(int id, object bitmapData)
    parameters:
    - id: id
      type: System.Int32
      description: Id of existing bitmap data
    - id: bitmapData
      type: System.Object
      description: New bitmap data to replace
    return:
      type: System.Boolean
      description: True, if replacing worked correct
    content.vb: Public Function [Set](id As Integer, bitmapData As Object) As Boolean
  overload: Mapsui.Styles.BitmapRegistry.Set*
  nameWithType.vb: BitmapRegistry.Set(Integer, Object)
  fullName.vb: Mapsui.Styles.BitmapRegistry.Set(Integer, Object)
  name.vb: Set(Integer, Object)
- uid: Mapsui.Styles.BitmapRegistry.TryGetBitmapId(System.String,System.Int32@)
  commentId: M:Mapsui.Styles.BitmapRegistry.TryGetBitmapId(System.String,System.Int32@)
  id: TryGetBitmapId(System.String,System.Int32@)
  parent: Mapsui.Styles.BitmapRegistry
  langs:
  - csharp
  - vb
  name: TryGetBitmapId(string, out int)
  nameWithType: BitmapRegistry.TryGetBitmapId(string, out int)
  fullName: Mapsui.Styles.BitmapRegistry.TryGetBitmapId(string, out int)
  type: Method
  source:
    remote:
      path: Mapsui/Styles/BitmapRegistry.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TryGetBitmapId
    path: ../../Mapsui/Styles/BitmapRegistry.cs
    startLine: 101
  assemblies:
  - Mapsui
  namespace: Mapsui.Styles
  summary: Try Get Bitmap Id
  example: []
  syntax:
    content: public bool TryGetBitmapId(string key, out int bitmapId)
    parameters:
    - id: key
      type: System.String
      description: key
    - id: bitmapId
      type: System.Int32
      description: bitmap id
    return:
      type: System.Boolean
      description: true if found
    content.vb: Public Function TryGetBitmapId(key As String, bitmapId As Integer) As Boolean
  overload: Mapsui.Styles.BitmapRegistry.TryGetBitmapId*
  nameWithType.vb: BitmapRegistry.TryGetBitmapId(String, Integer)
  fullName.vb: Mapsui.Styles.BitmapRegistry.TryGetBitmapId(String, Integer)
  name.vb: TryGetBitmapId(String, Integer)
references:
- uid: Mapsui.Styles
  commentId: N:Mapsui.Styles
  href: Mapsui.html
  name: Mapsui.Styles
  nameWithType: Mapsui.Styles
  fullName: Mapsui.Styles
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Styles.BitmapRegistry.Instance*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.Instance
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_Instance
  name: Instance
  nameWithType: BitmapRegistry.Instance
  fullName: Mapsui.Styles.BitmapRegistry.Instance
- uid: Mapsui.Styles.BitmapRegistry
  commentId: T:Mapsui.Styles.BitmapRegistry
  parent: Mapsui.Styles
  href: Mapsui.Styles.BitmapRegistry.html
  name: BitmapRegistry
  nameWithType: BitmapRegistry
  fullName: Mapsui.Styles.BitmapRegistry
- uid: Mapsui.Styles.BitmapRegistry.Register*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.Register
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_Register_System_Object_System_String_
  name: Register
  nameWithType: BitmapRegistry.Register
  fullName: Mapsui.Styles.BitmapRegistry.Register
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Styles.BitmapRegistry.Unregister*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.Unregister
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_Unregister_System_Int32_
  name: Unregister
  nameWithType: BitmapRegistry.Unregister
  fullName: Mapsui.Styles.BitmapRegistry.Unregister
- uid: Mapsui.Styles.BitmapRegistry.Get*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.Get
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_Get_System_Int32_
  name: Get
  nameWithType: BitmapRegistry.Get
  fullName: Mapsui.Styles.BitmapRegistry.Get
- uid: Mapsui.Styles.BitmapRegistry.Set*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.Set
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_Set_System_Int32_System_Object_
  name: Set
  nameWithType: BitmapRegistry.Set
  fullName: Mapsui.Styles.BitmapRegistry.Set
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Styles.BitmapRegistry.TryGetBitmapId*
  commentId: Overload:Mapsui.Styles.BitmapRegistry.TryGetBitmapId
  href: Mapsui.Styles.BitmapRegistry.html#Mapsui_Styles_BitmapRegistry_TryGetBitmapId_System_String_System_Int32__
  name: TryGetBitmapId
  nameWithType: BitmapRegistry.TryGetBitmapId
  fullName: Mapsui.Styles.BitmapRegistry.TryGetBitmapId
