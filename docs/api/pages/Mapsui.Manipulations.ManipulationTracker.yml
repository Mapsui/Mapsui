### YamlMime:ManagedReference
items:
- uid: Mapsui.Manipulations.ManipulationTracker
  commentId: T:Mapsui.Manipulations.ManipulationTracker
  id: ManipulationTracker
  parent: Mapsui.Manipulations
  children:
  - Mapsui.Manipulations.ManipulationTracker.Manipulate(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition},System.Action{Mapsui.Manipulations.Manipulation})
  - Mapsui.Manipulations.ManipulationTracker.Restart(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition})
  langs:
  - csharp
  - vb
  name: ManipulationTracker
  nameWithType: ManipulationTracker
  fullName: Mapsui.Manipulations.ManipulationTracker
  type: Class
  source:
    remote:
      path: Mapsui/Manipulations/ManipulationTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ManipulationTracker
    path: ../../Mapsui/Manipulations/ManipulationTracker.cs
    startLine: 4
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  syntax:
    content: public class ManipulationTracker
    content.vb: Public Class ManipulationTracker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Manipulations.ManipulationTracker.Restart(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition})
  commentId: M:Mapsui.Manipulations.ManipulationTracker.Restart(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition})
  id: Restart(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition})
  parent: Mapsui.Manipulations.ManipulationTracker
  langs:
  - csharp
  - vb
  name: Restart(ReadOnlySpan<ScreenPosition>)
  nameWithType: ManipulationTracker.Restart(ReadOnlySpan<ScreenPosition>)
  fullName: Mapsui.Manipulations.ManipulationTracker.Restart(System.ReadOnlySpan<Mapsui.Manipulations.ScreenPosition>)
  type: Method
  source:
    remote:
      path: Mapsui/Manipulations/ManipulationTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Restart
    path: ../../Mapsui/Manipulations/ManipulationTracker.cs
    startLine: 14
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  summary: >-
    Call this method before the first Update call. The Update method tracks the start manipulation angle which is needed 

    to for rotation snapping and the previous manipulation state.
  example: []
  syntax:
    content: public void Restart(ReadOnlySpan<ScreenPosition> positions)
    parameters:
    - id: positions
      type: System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition}
    content.vb: Public Sub Restart(positions As ReadOnlySpan(Of ScreenPosition))
  overload: Mapsui.Manipulations.ManipulationTracker.Restart*
  nameWithType.vb: ManipulationTracker.Restart(ReadOnlySpan(Of ScreenPosition))
  fullName.vb: Mapsui.Manipulations.ManipulationTracker.Restart(System.ReadOnlySpan(Of Mapsui.Manipulations.ScreenPosition))
  name.vb: Restart(ReadOnlySpan(Of ScreenPosition))
- uid: Mapsui.Manipulations.ManipulationTracker.Manipulate(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition},System.Action{Mapsui.Manipulations.Manipulation})
  commentId: M:Mapsui.Manipulations.ManipulationTracker.Manipulate(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition},System.Action{Mapsui.Manipulations.Manipulation})
  id: Manipulate(System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition},System.Action{Mapsui.Manipulations.Manipulation})
  parent: Mapsui.Manipulations.ManipulationTracker
  langs:
  - csharp
  - vb
  name: Manipulate(ReadOnlySpan<ScreenPosition>, Action<Manipulation>)
  nameWithType: ManipulationTracker.Manipulate(ReadOnlySpan<ScreenPosition>, Action<Manipulation>)
  fullName: Mapsui.Manipulations.ManipulationTracker.Manipulate(System.ReadOnlySpan<Mapsui.Manipulations.ScreenPosition>, System.Action<Mapsui.Manipulations.Manipulation>)
  type: Method
  source:
    remote:
      path: Mapsui/Manipulations/ManipulationTracker.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Manipulate
    path: ../../Mapsui/Manipulations/ManipulationTracker.cs
    startLine: 16
  assemblies:
  - Mapsui
  namespace: Mapsui.Manipulations
  syntax:
    content: public void Manipulate(ReadOnlySpan<ScreenPosition> positions, Action<Manipulation> onManipulation)
    parameters:
    - id: positions
      type: System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition}
    - id: onManipulation
      type: System.Action{Mapsui.Manipulations.Manipulation}
    content.vb: Public Sub Manipulate(positions As ReadOnlySpan(Of ScreenPosition), onManipulation As Action(Of Manipulation))
  overload: Mapsui.Manipulations.ManipulationTracker.Manipulate*
  nameWithType.vb: ManipulationTracker.Manipulate(ReadOnlySpan(Of ScreenPosition), Action(Of Manipulation))
  fullName.vb: Mapsui.Manipulations.ManipulationTracker.Manipulate(System.ReadOnlySpan(Of Mapsui.Manipulations.ScreenPosition), System.Action(Of Mapsui.Manipulations.Manipulation))
  name.vb: Manipulate(ReadOnlySpan(Of ScreenPosition), Action(Of Manipulation))
references:
- uid: Mapsui.Manipulations
  commentId: N:Mapsui.Manipulations
  href: Mapsui.html
  name: Mapsui.Manipulations
  nameWithType: Mapsui.Manipulations
  fullName: Mapsui.Manipulations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Manipulations.ManipulationTracker.Restart*
  commentId: Overload:Mapsui.Manipulations.ManipulationTracker.Restart
  href: Mapsui.Manipulations.ManipulationTracker.html#Mapsui_Manipulations_ManipulationTracker_Restart_System_ReadOnlySpan_Mapsui_Manipulations_ScreenPosition__
  name: Restart
  nameWithType: ManipulationTracker.Restart
  fullName: Mapsui.Manipulations.ManipulationTracker.Restart
- uid: System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition}
  commentId: T:System.ReadOnlySpan{Mapsui.Manipulations.ScreenPosition}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<ScreenPosition>
  nameWithType: ReadOnlySpan<ScreenPosition>
  fullName: System.ReadOnlySpan<Mapsui.Manipulations.ScreenPosition>
  nameWithType.vb: ReadOnlySpan(Of ScreenPosition)
  fullName.vb: System.ReadOnlySpan(Of Mapsui.Manipulations.ScreenPosition)
  name.vb: ReadOnlySpan(Of ScreenPosition)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
    href: Mapsui.Manipulations.ScreenPosition.html
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mapsui.Manipulations.ManipulationTracker.Manipulate*
  commentId: Overload:Mapsui.Manipulations.ManipulationTracker.Manipulate
  href: Mapsui.Manipulations.ManipulationTracker.html#Mapsui_Manipulations_ManipulationTracker_Manipulate_System_ReadOnlySpan_Mapsui_Manipulations_ScreenPosition__System_Action_Mapsui_Manipulations_Manipulation__
  name: Manipulate
  nameWithType: ManipulationTracker.Manipulate
  fullName: Mapsui.Manipulations.ManipulationTracker.Manipulate
- uid: System.Action{Mapsui.Manipulations.Manipulation}
  commentId: T:System.Action{Mapsui.Manipulations.Manipulation}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Manipulation>
  nameWithType: Action<Manipulation>
  fullName: System.Action<Mapsui.Manipulations.Manipulation>
  nameWithType.vb: Action(Of Manipulation)
  fullName.vb: System.Action(Of Mapsui.Manipulations.Manipulation)
  name.vb: Action(Of Manipulation)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Mapsui.Manipulations.Manipulation
    name: Manipulation
    href: Mapsui.Manipulations.Manipulation.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Manipulations.Manipulation
    name: Manipulation
    href: Mapsui.Manipulations.Manipulation.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
