### YamlMime:ManagedReference
items:
- uid: Mapsui.Cache.LruCache`2
  commentId: T:Mapsui.Cache.LruCache`2
  id: LruCache`2
  parent: Mapsui.Cache
  children:
  - Mapsui.Cache.LruCache`2.#ctor(System.Int32)
  - Mapsui.Cache.LruCache`2.Clear
  - Mapsui.Cache.LruCache`2.Get(`0)
  - Mapsui.Cache.LruCache`2.GetOrCreateValue``2(``0,System.Func{``0,``1})
  - Mapsui.Cache.LruCache`2.Item(`0)
  - Mapsui.Cache.LruCache`2.Put(`0,`1)
  - Mapsui.Cache.LruCache`2.TryGetValue(`0,`1@)
  langs:
  - csharp
  - vb
  name: LruCache<TKey, TValue>
  nameWithType: LruCache<TKey, TValue>
  fullName: Mapsui.Cache.LruCache<TKey, TValue>
  type: Class
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LruCache
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  summary: /// LRU Cache with disposing of disposable values.
  example: []
  syntax:
    content: 'public class LruCache<TKey, TValue> where TKey : notnull'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class LruCache(Of TKey, TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  nameWithType.vb: LruCache(Of TKey, TValue)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue)
  name.vb: LruCache(Of TKey, TValue)
- uid: Mapsui.Cache.LruCache`2.#ctor(System.Int32)
  commentId: M:Mapsui.Cache.LruCache`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: LruCache(int)
  nameWithType: LruCache<TKey, TValue>.LruCache(int)
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.LruCache(int)
  type: Constructor
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  summary: /// LRU Cache with disposing of disposable values.
  example: []
  syntax:
    content: public LruCache(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: Mapsui.Cache.LruCache`2.#ctor*
  nameWithType.vb: LruCache(Of TKey, TValue).New(Integer)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).New(Integer)
  name.vb: New(Integer)
- uid: Mapsui.Cache.LruCache`2.Put(`0,`1)
  commentId: M:Mapsui.Cache.LruCache`2.Put(`0,`1)
  id: Put(`0,`1)
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: Put(TKey, TValue)
  nameWithType: LruCache<TKey, TValue>.Put(TKey, TValue)
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Put(TKey, TValue)
  type: Method
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Put
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 15
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: public void Put(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Put(key As TKey, value As TValue)
  overload: Mapsui.Cache.LruCache`2.Put*
  nameWithType.vb: LruCache(Of TKey, TValue).Put(TKey, TValue)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Put(TKey, TValue)
- uid: Mapsui.Cache.LruCache`2.Get(`0)
  commentId: M:Mapsui.Cache.LruCache`2.Get(`0)
  id: Get(`0)
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: Get(TKey)
  nameWithType: LruCache<TKey, TValue>.Get(TKey)
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Get(TKey)
  type: Method
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Get
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 62
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: public TValue? Get(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Public Function [Get](key As TKey) As TValue
  overload: Mapsui.Cache.LruCache`2.Get*
  nameWithType.vb: LruCache(Of TKey, TValue).Get(TKey)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Get(TKey)
- uid: Mapsui.Cache.LruCache`2.GetOrCreateValue``2(``0,System.Func{``0,``1})
  commentId: M:Mapsui.Cache.LruCache`2.GetOrCreateValue``2(``0,System.Func{``0,``1})
  id: GetOrCreateValue``2(``0,System.Func{``0,``1})
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: GetOrCreateValue<TParam, TResult>(TParam, Func<TParam, TResult>)
  nameWithType: LruCache<TKey, TValue>.GetOrCreateValue<TParam, TResult>(TParam, Func<TParam, TResult>)
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.GetOrCreateValue<TParam, TResult>(TParam, System.Func<TParam, TResult>)
  type: Method
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetOrCreateValue
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 78
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: 'public TResult? GetOrCreateValue<TParam, TResult>(TParam key, Func<TParam, TResult> func) where TParam : TKey where TResult : TValue'
    parameters:
    - id: key
      type: '{TParam}'
    - id: func
      type: System.Func{{TParam},{TResult}}
    typeParameters:
    - id: TParam
    - id: TResult
    return:
      type: '{TResult}'
    content.vb: Public Function GetOrCreateValue(Of TParam As TKey, TResult As TValue)(key As TParam, func As Func(Of TParam, TResult)) As TResult
  overload: Mapsui.Cache.LruCache`2.GetOrCreateValue*
  nameWithType.vb: LruCache(Of TKey, TValue).GetOrCreateValue(Of TParam, TResult)(TParam, Func(Of TParam, TResult))
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).GetOrCreateValue(Of TParam, TResult)(TParam, System.Func(Of TParam, TResult))
  name.vb: GetOrCreateValue(Of TParam, TResult)(TParam, Func(Of TParam, TResult))
- uid: Mapsui.Cache.LruCache`2.TryGetValue(`0,`1@)
  commentId: M:Mapsui.Cache.LruCache`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: LruCache<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TryGetValue
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 94
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As TKey, value As TValue) As Boolean
  overload: Mapsui.Cache.LruCache`2.TryGetValue*
  nameWithType.vb: LruCache(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: Mapsui.Cache.LruCache`2.Item(`0)
  commentId: P:Mapsui.Cache.LruCache`2.Item(`0)
  id: Item(`0)
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: LruCache<TKey, TValue>.this[TKey]
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.this[TKey]
  type: Property
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: this[]
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 117
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: public TValue this[TKey key] { get; set; }
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Public Default Property this[](key As TKey) As TValue
  overload: Mapsui.Cache.LruCache`2.Item*
  nameWithType.vb: LruCache(Of TKey, TValue).this[](TKey)
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: Mapsui.Cache.LruCache`2.Clear
  commentId: M:Mapsui.Cache.LruCache`2.Clear
  id: Clear
  parent: Mapsui.Cache.LruCache`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: LruCache<TKey, TValue>.Clear()
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Clear()
  type: Method
  source:
    remote:
      path: Mapsui/Cache/LRUCache.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Clear
    path: ../../Mapsui/Cache/LRUCache.cs
    startLine: 124
  assemblies:
  - Mapsui
  namespace: Mapsui.Cache
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Mapsui.Cache.LruCache`2.Clear*
  nameWithType.vb: LruCache(Of TKey, TValue).Clear()
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Clear()
references:
- uid: Mapsui.Cache
  commentId: N:Mapsui.Cache
  href: Mapsui.html
  name: Mapsui.Cache
  nameWithType: Mapsui.Cache
  fullName: Mapsui.Cache
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Cache
    name: Cache
    href: Mapsui.Cache.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Cache
    name: Cache
    href: Mapsui.Cache.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Cache.LruCache`2.#ctor*
  commentId: Overload:Mapsui.Cache.LruCache`2.#ctor
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2__ctor_System_Int32_
  name: LruCache
  nameWithType: LruCache<TKey, TValue>.LruCache
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.LruCache
  nameWithType.vb: LruCache(Of TKey, TValue).New
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Cache.LruCache`2.Put*
  commentId: Overload:Mapsui.Cache.LruCache`2.Put
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_Put__0__1_
  name: Put
  nameWithType: LruCache<TKey, TValue>.Put
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Put
  nameWithType.vb: LruCache(Of TKey, TValue).Put
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Put
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Mapsui.Cache.LruCache`2.Get*
  commentId: Overload:Mapsui.Cache.LruCache`2.Get
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_Get__0_
  name: Get
  nameWithType: LruCache<TKey, TValue>.Get
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Get
  nameWithType.vb: LruCache(Of TKey, TValue).Get
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Get
- uid: Mapsui.Cache.LruCache`2.GetOrCreateValue*
  commentId: Overload:Mapsui.Cache.LruCache`2.GetOrCreateValue
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_GetOrCreateValue__2___0_System_Func___0___1__
  name: GetOrCreateValue
  nameWithType: LruCache<TKey, TValue>.GetOrCreateValue
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.GetOrCreateValue
  nameWithType.vb: LruCache(Of TKey, TValue).GetOrCreateValue
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).GetOrCreateValue
- uid: '{TParam}'
  commentId: '!:TParam'
  definition: TParam
  name: TParam
  nameWithType: TParam
  fullName: TParam
- uid: System.Func{{TParam},{TResult}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TParam, TResult>
  nameWithType: Func<TParam, TResult>
  fullName: System.Func<TParam, TResult>
  nameWithType.vb: Func(Of TParam, TResult)
  fullName.vb: System.Func(Of TParam, TResult)
  name.vb: Func(Of TParam, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TParam
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TParam
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TParam
  name: TParam
  nameWithType: TParam
  fullName: TParam
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TResult
  commentId: '!:TResult'
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Mapsui.Cache.LruCache`2.TryGetValue*
  commentId: Overload:Mapsui.Cache.LruCache`2.TryGetValue
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: LruCache<TKey, TValue>.TryGetValue
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.TryGetValue
  nameWithType.vb: LruCache(Of TKey, TValue).TryGetValue
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).TryGetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Cache.LruCache`2.Item*
  commentId: Overload:Mapsui.Cache.LruCache`2.Item
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_Item__0_
  name: this
  nameWithType: LruCache<TKey, TValue>.this
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.this
  nameWithType.vb: LruCache(Of TKey, TValue).this[]
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).this[]
  name.vb: this[]
- uid: Mapsui.Cache.LruCache`2.Clear*
  commentId: Overload:Mapsui.Cache.LruCache`2.Clear
  href: Mapsui.Cache.LruCache-2.html#Mapsui_Cache_LruCache_2_Clear
  name: Clear
  nameWithType: LruCache<TKey, TValue>.Clear
  fullName: Mapsui.Cache.LruCache<TKey, TValue>.Clear
  nameWithType.vb: LruCache(Of TKey, TValue).Clear
  fullName.vb: Mapsui.Cache.LruCache(Of TKey, TValue).Clear
