### YamlMime:ManagedReference
items:
- uid: Mapsui.Fetcher.DataChangedEventArgs
  commentId: T:Mapsui.Fetcher.DataChangedEventArgs
  id: DataChangedEventArgs
  parent: Mapsui.Fetcher
  children:
  - Mapsui.Fetcher.DataChangedEventArgs.#ctor
  - Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  - Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object,System.String)
  - Mapsui.Fetcher.DataChangedEventArgs.Cancelled
  - Mapsui.Fetcher.DataChangedEventArgs.Error
  - Mapsui.Fetcher.DataChangedEventArgs.Info
  - Mapsui.Fetcher.DataChangedEventArgs.LayerName
  langs:
  - csharp
  - vb
  name: DataChangedEventArgs
  nameWithType: DataChangedEventArgs
  fullName: Mapsui.Fetcher.DataChangedEventArgs
  type: Class
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataChangedEventArgs
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 36
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: 'public class DataChangedEventArgs : EventArgs'
    content.vb: Public Class DataChangedEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Fetcher.DataChangedEventArgs.#ctor
  commentId: M:Mapsui.Fetcher.DataChangedEventArgs.#ctor
  id: '#ctor'
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: DataChangedEventArgs()
  nameWithType: DataChangedEventArgs.DataChangedEventArgs()
  fullName: Mapsui.Fetcher.DataChangedEventArgs.DataChangedEventArgs()
  type: Constructor
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 38
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public DataChangedEventArgs()
    content.vb: Public Sub New()
  overload: Mapsui.Fetcher.DataChangedEventArgs.#ctor*
  nameWithType.vb: DataChangedEventArgs.New()
  fullName.vb: Mapsui.Fetcher.DataChangedEventArgs.New()
  name.vb: New()
- uid: Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  commentId: M:Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Exception,System.Boolean,System.Object)'
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: DataChangedEventArgs(Exception?, bool, object?)
  nameWithType: DataChangedEventArgs.DataChangedEventArgs(Exception?, bool, object?)
  fullName: Mapsui.Fetcher.DataChangedEventArgs.DataChangedEventArgs(System.Exception?, bool, object?)
  type: Constructor
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 42
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public DataChangedEventArgs(Exception? error, bool cancelled, object? info)
    parameters:
    - id: error
      type: System.Exception
    - id: cancelled
      type: System.Boolean
    - id: info
      type: System.Object
    content.vb: Public Sub New([error] As Exception, cancelled As Boolean, info As Object)
  overload: Mapsui.Fetcher.DataChangedEventArgs.#ctor*
  nameWithType.vb: DataChangedEventArgs.New(Exception, Boolean, Object)
  fullName.vb: Mapsui.Fetcher.DataChangedEventArgs.New(System.Exception, Boolean, Object)
  name.vb: New(Exception, Boolean, Object)
- uid: Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object,System.String)
  commentId: M:Mapsui.Fetcher.DataChangedEventArgs.#ctor(System.Exception,System.Boolean,System.Object,System.String)
  id: '#ctor(System.Exception,System.Boolean,System.Object,System.String)'
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: DataChangedEventArgs(Exception?, bool, object?, string)
  nameWithType: DataChangedEventArgs.DataChangedEventArgs(Exception?, bool, object?, string)
  fullName: Mapsui.Fetcher.DataChangedEventArgs.DataChangedEventArgs(System.Exception?, bool, object?, string)
  type: Constructor
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 47
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public DataChangedEventArgs(Exception? error, bool cancelled, object? info, string layerName)
    parameters:
    - id: error
      type: System.Exception
    - id: cancelled
      type: System.Boolean
    - id: info
      type: System.Object
    - id: layerName
      type: System.String
    content.vb: Public Sub New([error] As Exception, cancelled As Boolean, info As Object, layerName As String)
  overload: Mapsui.Fetcher.DataChangedEventArgs.#ctor*
  nameWithType.vb: DataChangedEventArgs.New(Exception, Boolean, Object, String)
  fullName.vb: Mapsui.Fetcher.DataChangedEventArgs.New(System.Exception, Boolean, Object, String)
  name.vb: New(Exception, Boolean, Object, String)
- uid: Mapsui.Fetcher.DataChangedEventArgs.Error
  commentId: P:Mapsui.Fetcher.DataChangedEventArgs.Error
  id: Error
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: DataChangedEventArgs.Error
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Error
  type: Property
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Error
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 55
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public Exception? Error { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property [Error] As Exception
  overload: Mapsui.Fetcher.DataChangedEventArgs.Error*
- uid: Mapsui.Fetcher.DataChangedEventArgs.Cancelled
  commentId: P:Mapsui.Fetcher.DataChangedEventArgs.Cancelled
  id: Cancelled
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: DataChangedEventArgs.Cancelled
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Cancelled
  type: Property
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Cancelled
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 56
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public bool Cancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Cancelled As Boolean
  overload: Mapsui.Fetcher.DataChangedEventArgs.Cancelled*
- uid: Mapsui.Fetcher.DataChangedEventArgs.Info
  commentId: P:Mapsui.Fetcher.DataChangedEventArgs.Info
  id: Info
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: DataChangedEventArgs.Info
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Info
  type: Property
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Info
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 57
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public object? Info { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Info As Object
  overload: Mapsui.Fetcher.DataChangedEventArgs.Info*
- uid: Mapsui.Fetcher.DataChangedEventArgs.LayerName
  commentId: P:Mapsui.Fetcher.DataChangedEventArgs.LayerName
  id: LayerName
  parent: Mapsui.Fetcher.DataChangedEventArgs
  langs:
  - csharp
  - vb
  name: LayerName
  nameWithType: DataChangedEventArgs.LayerName
  fullName: Mapsui.Fetcher.DataChangedEventArgs.LayerName
  type: Property
  source:
    remote:
      path: Mapsui/Fetcher/IAsyncDataFetcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LayerName
    path: ../../Mapsui/Fetcher/IAsyncDataFetcher.cs
    startLine: 58
  assemblies:
  - Mapsui
  namespace: Mapsui.Fetcher
  syntax:
    content: public string LayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LayerName As String
  overload: Mapsui.Fetcher.DataChangedEventArgs.LayerName*
references:
- uid: Mapsui.Fetcher
  commentId: N:Mapsui.Fetcher
  href: Mapsui.html
  name: Mapsui.Fetcher
  nameWithType: Mapsui.Fetcher
  fullName: Mapsui.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Fetcher.DataChangedEventArgs.#ctor*
  commentId: Overload:Mapsui.Fetcher.DataChangedEventArgs.#ctor
  href: Mapsui.Fetcher.DataChangedEventArgs.html#Mapsui_Fetcher_DataChangedEventArgs__ctor
  name: DataChangedEventArgs
  nameWithType: DataChangedEventArgs.DataChangedEventArgs
  fullName: Mapsui.Fetcher.DataChangedEventArgs.DataChangedEventArgs
  nameWithType.vb: DataChangedEventArgs.New
  fullName.vb: Mapsui.Fetcher.DataChangedEventArgs.New
  name.vb: New
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mapsui.Fetcher.DataChangedEventArgs.Error*
  commentId: Overload:Mapsui.Fetcher.DataChangedEventArgs.Error
  href: Mapsui.Fetcher.DataChangedEventArgs.html#Mapsui_Fetcher_DataChangedEventArgs_Error
  name: Error
  nameWithType: DataChangedEventArgs.Error
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Error
- uid: Mapsui.Fetcher.DataChangedEventArgs.Cancelled*
  commentId: Overload:Mapsui.Fetcher.DataChangedEventArgs.Cancelled
  href: Mapsui.Fetcher.DataChangedEventArgs.html#Mapsui_Fetcher_DataChangedEventArgs_Cancelled
  name: Cancelled
  nameWithType: DataChangedEventArgs.Cancelled
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Cancelled
- uid: Mapsui.Fetcher.DataChangedEventArgs.Info*
  commentId: Overload:Mapsui.Fetcher.DataChangedEventArgs.Info
  href: Mapsui.Fetcher.DataChangedEventArgs.html#Mapsui_Fetcher_DataChangedEventArgs_Info
  name: Info
  nameWithType: DataChangedEventArgs.Info
  fullName: Mapsui.Fetcher.DataChangedEventArgs.Info
- uid: Mapsui.Fetcher.DataChangedEventArgs.LayerName*
  commentId: Overload:Mapsui.Fetcher.DataChangedEventArgs.LayerName
  href: Mapsui.Fetcher.DataChangedEventArgs.html#Mapsui_Fetcher_DataChangedEventArgs_LayerName
  name: LayerName
  nameWithType: DataChangedEventArgs.LayerName
  fullName: Mapsui.Fetcher.DataChangedEventArgs.LayerName
