### YamlMime:ManagedReference
items:
- uid: Mapsui.Animations.Animation
  commentId: T:Mapsui.Animations.Animation
  id: Animation
  parent: Mapsui.Animations
  children:
  - Mapsui.Animations.Animation.Start``1(Mapsui.Animations.AnimationEntry{``0},System.Int64)
  - Mapsui.Animations.Animation.Start``1(System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Int64)
  - Mapsui.Animations.Animation.Stop``1(``0,Mapsui.Animations.AnimationEntry{``0},System.Boolean)
  - Mapsui.Animations.Animation.Stop``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Boolean)
  - Mapsui.Animations.Animation.UpdateAnimations``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}})
  langs:
  - csharp
  - vb
  name: Animation
  nameWithType: Animation
  fullName: Mapsui.Animations.Animation
  type: Class
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Animation
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 6
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  syntax:
    content: public static class Animation
    content.vb: Public Module Animation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mapsui.Animations.Animation.Start``1(Mapsui.Animations.AnimationEntry{``0},System.Int64)
  commentId: M:Mapsui.Animations.Animation.Start``1(Mapsui.Animations.AnimationEntry{``0},System.Int64)
  id: Start``1(Mapsui.Animations.AnimationEntry{``0},System.Int64)
  parent: Mapsui.Animations.Animation
  langs:
  - csharp
  - vb
  name: Start<T>(AnimationEntry<T>, long)
  nameWithType: Animation.Start<T>(AnimationEntry<T>, long)
  fullName: Mapsui.Animations.Animation.Start<T>(Mapsui.Animations.AnimationEntry<T>, long)
  type: Method
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Start
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 20
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  summary: List of all active animations
  example: []
  syntax:
    content: public static void Start<T>(AnimationEntry<T> entry, long duration)
    parameters:
    - id: entry
      type: Mapsui.Animations.AnimationEntry{{T}}
      description: AnimationEntry to start
    - id: duration
      type: System.Int64
      description: Duration im ms for the given AnimationEntry
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Start(Of T)(entry As AnimationEntry(Of T), duration As Long)
  overload: Mapsui.Animations.Animation.Start*
  nameWithType.vb: Animation.Start(Of T)(AnimationEntry(Of T), Long)
  fullName.vb: Mapsui.Animations.Animation.Start(Of T)(Mapsui.Animations.AnimationEntry(Of T), Long)
  name.vb: Start(Of T)(AnimationEntry(Of T), Long)
- uid: Mapsui.Animations.Animation.Start``1(System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Int64)
  commentId: M:Mapsui.Animations.Animation.Start``1(System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Int64)
  id: Start``1(System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Int64)
  parent: Mapsui.Animations.Animation
  langs:
  - csharp
  - vb
  name: Start<T>(IEnumerable<AnimationEntry<T>>, long)
  nameWithType: Animation.Start<T>(IEnumerable<AnimationEntry<T>>, long)
  fullName: Mapsui.Animations.Animation.Start<T>(System.Collections.Generic.IEnumerable<Mapsui.Animations.AnimationEntry<T>>, long)
  type: Method
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Start
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 31
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  summary: Start a list of AnimationEntrys
  remarks: All AnimationEntries are started at the same time.
  example: []
  syntax:
    content: public static void Start<T>(IEnumerable<AnimationEntry<T>> entries, long duration)
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{{T}}}
      description: List of AnimationEntry to start
    - id: duration
      type: System.Int64
      description: Duration im ms for the given AnimationEntry
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Start(Of T)(entries As IEnumerable(Of AnimationEntry(Of T)), duration As Long)
  overload: Mapsui.Animations.Animation.Start*
  nameWithType.vb: Animation.Start(Of T)(IEnumerable(Of AnimationEntry(Of T)), Long)
  fullName.vb: Mapsui.Animations.Animation.Start(Of T)(System.Collections.Generic.IEnumerable(Of Mapsui.Animations.AnimationEntry(Of T)), Long)
  name.vb: Start(Of T)(IEnumerable(Of AnimationEntry(Of T)), Long)
- uid: Mapsui.Animations.Animation.Stop``1(``0,Mapsui.Animations.AnimationEntry{``0},System.Boolean)
  commentId: M:Mapsui.Animations.Animation.Stop``1(``0,Mapsui.Animations.AnimationEntry{``0},System.Boolean)
  id: Stop``1(``0,Mapsui.Animations.AnimationEntry{``0},System.Boolean)
  parent: Mapsui.Animations.Animation
  langs:
  - csharp
  - vb
  name: Stop<T>(T, AnimationEntry<T>, bool)
  nameWithType: Animation.Stop<T>(T, AnimationEntry<T>, bool)
  fullName: Mapsui.Animations.Animation.Stop<T>(T, Mapsui.Animations.AnimationEntry<T>, bool)
  type: Method
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Stop
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 62
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  summary: Stop a given AnimationEntry
  example: []
  syntax:
    content: public static AnimationResult<T> Stop<T>(T target, AnimationEntry<T> entry, bool callFinal = true)
    parameters:
    - id: target
      type: '{T}'
    - id: entry
      type: Mapsui.Animations.AnimationEntry{{T}}
      description: AnimationEntry to stop
    - id: callFinal
      type: System.Boolean
      description: Final function is called, if callFinal is true
    typeParameters:
    - id: T
    return:
      type: Mapsui.Animations.AnimationResult{{T}}
    content.vb: Public Shared Function [Stop](Of T)(target As T, entry As AnimationEntry(Of T), callFinal As Boolean = True) As AnimationResult(Of T)
  overload: Mapsui.Animations.Animation.Stop*
  nameWithType.vb: Animation.Stop(Of T)(T, AnimationEntry(Of T), Boolean)
  fullName.vb: Mapsui.Animations.Animation.Stop(Of T)(T, Mapsui.Animations.AnimationEntry(Of T), Boolean)
  name.vb: Stop(Of T)(T, AnimationEntry(Of T), Boolean)
- uid: Mapsui.Animations.Animation.Stop``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Boolean)
  commentId: M:Mapsui.Animations.Animation.Stop``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Boolean)
  id: Stop``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}},System.Boolean)
  parent: Mapsui.Animations.Animation
  langs:
  - csharp
  - vb
  name: Stop<T>(T, IEnumerable<AnimationEntry<T>>, bool)
  nameWithType: Animation.Stop<T>(T, IEnumerable<AnimationEntry<T>>, bool)
  fullName: Mapsui.Animations.Animation.Stop<T>(T, System.Collections.Generic.IEnumerable<Mapsui.Animations.AnimationEntry<T>>, bool)
  type: Method
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Stop
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 81
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  summary: Stop all AnimationEntries in a given list
  example: []
  syntax:
    content: public static void Stop<T>(T target, IEnumerable<AnimationEntry<T>> entries, bool callFinal = true)
    parameters:
    - id: target
      type: '{T}'
    - id: entries
      type: System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{{T}}}
      description: AnimationEntry to stop
    - id: callFinal
      type: System.Boolean
      description: Final function is called, if callFinal is true
    typeParameters:
    - id: T
    content.vb: Public Shared Sub [Stop](Of T)(target As T, entries As IEnumerable(Of AnimationEntry(Of T)), callFinal As Boolean = True)
  overload: Mapsui.Animations.Animation.Stop*
  nameWithType.vb: Animation.Stop(Of T)(T, IEnumerable(Of AnimationEntry(Of T)), Boolean)
  fullName.vb: Mapsui.Animations.Animation.Stop(Of T)(T, System.Collections.Generic.IEnumerable(Of Mapsui.Animations.AnimationEntry(Of T)), Boolean)
  name.vb: Stop(Of T)(T, IEnumerable(Of AnimationEntry(Of T)), Boolean)
- uid: Mapsui.Animations.Animation.UpdateAnimations``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}})
  commentId: M:Mapsui.Animations.Animation.UpdateAnimations``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}})
  id: UpdateAnimations``1(``0,System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}})
  parent: Mapsui.Animations.Animation
  langs:
  - csharp
  - vb
  name: UpdateAnimations<T>(T, IEnumerable<AnimationEntry<T>>)
  nameWithType: Animation.UpdateAnimations<T>(T, IEnumerable<AnimationEntry<T>>)
  fullName: Mapsui.Animations.Animation.UpdateAnimations<T>(T, System.Collections.Generic.IEnumerable<Mapsui.Animations.AnimationEntry<T>>)
  type: Method
  source:
    remote:
      path: Mapsui/Animations/Animation.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UpdateAnimations
    path: ../../Mapsui/Animations/Animation.cs
    startLine: 91
  assemblies:
  - Mapsui
  namespace: Mapsui.Animations
  summary: Update all AnimationEntrys and check, if a redraw is needed
  example: []
  syntax:
    content: public static AnimationResult<T> UpdateAnimations<T>(T target, IEnumerable<AnimationEntry<T>> entries)
    parameters:
    - id: target
      type: '{T}'
    - id: entries
      type: System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{{T}}}
    typeParameters:
    - id: T
    return:
      type: Mapsui.Animations.AnimationResult{{T}}
      description: True, if a redraw of the screen is needed
    content.vb: Public Shared Function UpdateAnimations(Of T)(target As T, entries As IEnumerable(Of AnimationEntry(Of T))) As AnimationResult(Of T)
  overload: Mapsui.Animations.Animation.UpdateAnimations*
  nameWithType.vb: Animation.UpdateAnimations(Of T)(T, IEnumerable(Of AnimationEntry(Of T)))
  fullName.vb: Mapsui.Animations.Animation.UpdateAnimations(Of T)(T, System.Collections.Generic.IEnumerable(Of Mapsui.Animations.AnimationEntry(Of T)))
  name.vb: UpdateAnimations(Of T)(T, IEnumerable(Of AnimationEntry(Of T)))
references:
- uid: Mapsui.Animations
  commentId: N:Mapsui.Animations
  href: Mapsui.html
  name: Mapsui.Animations
  nameWithType: Mapsui.Animations
  fullName: Mapsui.Animations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Animations.Animation.Start*
  commentId: Overload:Mapsui.Animations.Animation.Start
  href: Mapsui.Animations.Animation.html#Mapsui_Animations_Animation_Start__1_Mapsui_Animations_AnimationEntry___0__System_Int64_
  name: Start
  nameWithType: Animation.Start
  fullName: Mapsui.Animations.Animation.Start
- uid: Mapsui.Animations.AnimationEntry{{T}}
  commentId: T:Mapsui.Animations.AnimationEntry{``0}
  parent: Mapsui.Animations
  definition: Mapsui.Animations.AnimationEntry`1
  href: Mapsui.Animations.AnimationEntry-1.html
  name: AnimationEntry<T>
  nameWithType: AnimationEntry<T>
  fullName: Mapsui.Animations.AnimationEntry<T>
  nameWithType.vb: AnimationEntry(Of T)
  fullName.vb: Mapsui.Animations.AnimationEntry(Of T)
  name.vb: AnimationEntry(Of T)
  spec.csharp:
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Mapsui.Animations.AnimationEntry`1
  commentId: T:Mapsui.Animations.AnimationEntry`1
  href: Mapsui.Animations.AnimationEntry-1.html
  name: AnimationEntry<T>
  nameWithType: AnimationEntry<T>
  fullName: Mapsui.Animations.AnimationEntry<T>
  nameWithType.vb: AnimationEntry(Of T)
  fullName.vb: Mapsui.Animations.AnimationEntry(Of T)
  name.vb: AnimationEntry(Of T)
  spec.csharp:
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.Animations.AnimationEntry{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AnimationEntry<T>>
  nameWithType: IEnumerable<AnimationEntry<T>>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.Animations.AnimationEntry<T>>
  nameWithType.vb: IEnumerable(Of AnimationEntry(Of T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.Animations.AnimationEntry(Of T))
  name.vb: IEnumerable(Of AnimationEntry(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Animations.AnimationEntry`1
    name: AnimationEntry
    href: Mapsui.Animations.AnimationEntry-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mapsui.Animations.Animation.Stop*
  commentId: Overload:Mapsui.Animations.Animation.Stop
  href: Mapsui.Animations.Animation.html#Mapsui_Animations_Animation_Stop__1___0_Mapsui_Animations_AnimationEntry___0__System_Boolean_
  name: Stop
  nameWithType: Animation.Stop
  fullName: Mapsui.Animations.Animation.Stop
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Animations.AnimationResult{{T}}
  commentId: T:Mapsui.Animations.AnimationResult{``0}
  parent: Mapsui.Animations
  definition: Mapsui.Animations.AnimationResult`1
  href: Mapsui.Animations.AnimationResult-1.html
  name: AnimationResult<T>
  nameWithType: AnimationResult<T>
  fullName: Mapsui.Animations.AnimationResult<T>
  nameWithType.vb: AnimationResult(Of T)
  fullName.vb: Mapsui.Animations.AnimationResult(Of T)
  name.vb: AnimationResult(Of T)
  spec.csharp:
  - uid: Mapsui.Animations.AnimationResult`1
    name: AnimationResult
    href: Mapsui.Animations.AnimationResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mapsui.Animations.AnimationResult`1
    name: AnimationResult
    href: Mapsui.Animations.AnimationResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mapsui.Animations.AnimationResult`1
  commentId: T:Mapsui.Animations.AnimationResult`1
  href: Mapsui.Animations.AnimationResult-1.html
  name: AnimationResult<T>
  nameWithType: AnimationResult<T>
  fullName: Mapsui.Animations.AnimationResult<T>
  nameWithType.vb: AnimationResult(Of T)
  fullName.vb: Mapsui.Animations.AnimationResult(Of T)
  name.vb: AnimationResult(Of T)
  spec.csharp:
  - uid: Mapsui.Animations.AnimationResult`1
    name: AnimationResult
    href: Mapsui.Animations.AnimationResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mapsui.Animations.AnimationResult`1
    name: AnimationResult
    href: Mapsui.Animations.AnimationResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mapsui.Animations.Animation.UpdateAnimations*
  commentId: Overload:Mapsui.Animations.Animation.UpdateAnimations
  href: Mapsui.Animations.Animation.html#Mapsui_Animations_Animation_UpdateAnimations__1___0_System_Collections_Generic_IEnumerable_Mapsui_Animations_AnimationEntry___0___
  name: UpdateAnimations
  nameWithType: Animation.UpdateAnimations
  fullName: Mapsui.Animations.Animation.UpdateAnimations
