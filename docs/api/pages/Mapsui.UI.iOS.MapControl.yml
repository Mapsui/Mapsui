### YamlMime:ManagedReference
items:
- uid: Mapsui.UI.iOS.MapControl
  commentId: T:Mapsui.UI.iOS.MapControl
  id: MapControl
  parent: Mapsui.UI.iOS
  children:
  - Mapsui.UI.iOS.MapControl.#ctor(CoreGraphics.CGRect)
  - Mapsui.UI.iOS.MapControl.#ctor(System.IntPtr)
  - Mapsui.UI.iOS.MapControl.Dispose
  - Mapsui.UI.iOS.MapControl.Dispose(System.Boolean)
  - Mapsui.UI.iOS.MapControl.ForceUpdate
  - Mapsui.UI.iOS.MapControl.Frame
  - Mapsui.UI.iOS.MapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  - Mapsui.UI.iOS.MapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  - Mapsui.UI.iOS.MapControl.Info
  - Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange
  - Mapsui.UI.iOS.MapControl.Map
  - Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
  - Mapsui.UI.iOS.MapControl.OnMapInfo(Mapsui.MapInfoEventArgs)
  - Mapsui.UI.iOS.MapControl.OnPropertyChanged(System.String)
  - Mapsui.UI.iOS.MapControl.OpenInBrowser(System.String)
  - Mapsui.UI.iOS.MapControl.Performance
  - Mapsui.UI.iOS.MapControl.PixelDensity
  - Mapsui.UI.iOS.MapControl.PropertyChanged
  - Mapsui.UI.iOS.MapControl.Refresh(Mapsui.ChangeType)
  - Mapsui.UI.iOS.MapControl.RefreshData(Mapsui.ChangeType)
  - Mapsui.UI.iOS.MapControl.RefreshGraphics
  - Mapsui.UI.iOS.MapControl.Renderer
  - Mapsui.UI.iOS.MapControl.StartUpdates(System.Boolean)
  - Mapsui.UI.iOS.MapControl.StopUpdates
  - Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  - Mapsui.UI.iOS.MapControl.ToPixels(Mapsui.MPoint)
  - Mapsui.UI.iOS.MapControl.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  - Mapsui.UI.iOS.MapControl.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  - Mapsui.UI.iOS.MapControl.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  - Mapsui.UI.iOS.MapControl.Unsubscribe
  - Mapsui.UI.iOS.MapControl.UpdateInterval
  - Mapsui.UI.iOS.MapControl.UseFling
  - Mapsui.UI.iOS.MapControl.UseGPU
  langs:
  - csharp
  - vb
  name: MapControl
  nameWithType: MapControl
  fullName: Mapsui.UI.iOS.MapControl
  type: Class
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MapControl
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 46
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: >-
      [Register("MapControl")]

      public class MapControl : UIView, IEquatable<NSObject>, INSObjectProtocol, IUIActivityItemsConfigurationProviding, IUIPasteConfigurationSupporting, IUIResponderStandardEditActions, IUIUserActivityRestoring, IEnumerable, INSCoding, IUIAccessibilityIdentification, IUIAppearance, IUIAppearanceContainer, IUICoordinateSpace, IUIDynamicItem, IUIFocusItem, IUIFocusEnvironment, IUIFocusItemContainer, IUILargeContentViewerItem, IUIPopoverPresentationControllerSourceItem, IUITraitEnvironment, ICALayerDelegate, INativeObject, IMapControl, INotifyPropertyChanged, IDisposable
    content.vb: >-
      <Register("MapControl")>

      Public Class MapControl Inherits UIView Implements IEquatable(Of NSObject), INSObjectProtocol, IUIActivityItemsConfigurationProviding, IUIPasteConfigurationSupporting, IUIResponderStandardEditActions, IUIUserActivityRestoring, IEnumerable, INSCoding, IUIAccessibilityIdentification, IUIAppearance, IUIAppearanceContainer, IUICoordinateSpace, IUIDynamicItem, IUIFocusItem, IUIFocusEnvironment, IUIFocusItemContainer, IUILargeContentViewerItem, IUIPopoverPresentationControllerSourceItem, IUITraitEnvironment, ICALayerDelegate, INativeObject, IMapControl, INotifyPropertyChanged, IDisposable
  inheritance:
  - System.Object
  - Foundation.NSObject
  - UIKit.UIResponder
  - UIKit.UIView
  implements:
  - System.IEquatable{Foundation.NSObject}
  - Foundation.INSObjectProtocol
  - UIKit.IUIActivityItemsConfigurationProviding
  - UIKit.IUIPasteConfigurationSupporting
  - UIKit.IUIResponderStandardEditActions
  - UIKit.IUIUserActivityRestoring
  - System.Collections.IEnumerable
  - Foundation.INSCoding
  - UIKit.IUIAccessibilityIdentification
  - UIKit.IUIAppearance
  - UIKit.IUIAppearanceContainer
  - UIKit.IUICoordinateSpace
  - UIKit.IUIDynamicItem
  - UIKit.IUIFocusItem
  - UIKit.IUIFocusEnvironment
  - UIKit.IUIFocusItemContainer
  - UIKit.IUILargeContentViewerItem
  - UIKit.IUIPopoverPresentationControllerSourceItem
  - UIKit.IUITraitEnvironment
  - CoreAnimation.ICALayerDelegate
  - ObjCRuntime.INativeObject
  - Mapsui.UI.IMapControl
  - System.ComponentModel.INotifyPropertyChanged
  - System.IDisposable
  inheritedMembers:
  - UIKit.UIView.Add(UIKit.UIView)
  - UIKit.UIView.AddSubviews(UIKit.UIView[])
  - UIKit.UIView.GetEnumerator
  - UIKit.UIView.BeginAnimations(System.String)
  - UIKit.UIView.Animate(System.Double,System.Action,System.Action)
  - UIKit.UIView.Animate(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  - UIKit.UIView.Transition(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  - UIKit.UIView.Transition(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  - UIKit.UIView.AnimateAsync(System.Double,System.Action)
  - UIKit.UIView.Capture(System.Boolean)
  - UIKit.UIView.AccessibilityActivate
  - UIKit.UIView.ActionForLayer(CoreAnimation.CALayer,System.String)
  - UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
  - UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
  - UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
  - UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
  - UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double,System.Double,System.Action)
  - UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
  - UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
  - UIKit.UIView.AddSubview(UIKit.UIView)
  - UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
  - UIKit.UIView.Animate(System.Double,System.Action)
  - UIKit.UIView.AnimateKeyframes(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.AnimateKeyframesAsync(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action)
  - UIKit.UIView.AnimateNotify(System.Double,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.AnimateNotifyAsync(System.Double,System.Action)
  - UIKit.UIView.AnimateNotify(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  - UIKit.UIView.AnimateNotify(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action)
  - UIKit.UIView.BeginAnimations(System.String,System.IntPtr)
  - UIKit.UIView.BringSubviewToFront(UIKit.UIView)
  - UIKit.UIView.CommitAnimations
  - UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
  - UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
  - UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  - UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint,UIKit.UIView)
  - UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  - UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint,UIKit.UIView)
  - UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  - UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect,UIKit.UIView)
  - UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  - UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect,UIKit.UIView)
  - UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
  - UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
  - UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)
  - UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
  - UIKit.UIView.Draw(CoreGraphics.CGRect)
  - UIKit.UIView.DrawLayer(CoreAnimation.CALayer,CoreGraphics.CGContext)
  - UIKit.UIView.DrawRect(CoreGraphics.CGRect,UIKit.UIViewPrintFormatter)
  - UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect,System.Boolean)
  - UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
  - UIKit.UIView.EncodeTo(Foundation.NSCoder)
  - UIKit.UIView.ExchangeSubview(System.IntPtr,System.IntPtr)
  - UIKit.UIView.ExerciseAmbiguityInLayout
  - UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
  - UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
  - UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
  - UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
  - UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
  - UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute,UIKit.UIUserInterfaceLayoutDirection)
  - UIKit.UIView.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)
  - UIKit.UIView.InsertSubview(UIKit.UIView,System.IntPtr)
  - UIKit.UIView.InsertSubviewAbove(UIKit.UIView,UIKit.UIView)
  - UIKit.UIView.InsertSubviewBelow(UIKit.UIView,UIKit.UIView)
  - UIKit.UIView.InvalidateIntrinsicContentSize
  - UIKit.UIView.IsDescendantOfView(UIKit.UIView)
  - UIKit.UIView.LayoutIfNeeded
  - UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
  - UIKit.UIView.LayoutSubviews
  - UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat,System.Boolean,System.Action)
  - UIKit.UIView.MovedToSuperview
  - UIKit.UIView.MovedToWindow
  - UIKit.UIView.NeedsUpdateConstraints
  - UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action)
  - UIKit.UIView.PerformWithoutAnimation(System.Action)
  - UIKit.UIView.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)
  - UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
  - UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
  - UIKit.UIView.RemoveFromSuperview
  - UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
  - UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
  - UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
  - UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
  - UIKit.UIView.RequiresConstraintBasedLayout
  - UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect,System.Boolean,UIKit.UIEdgeInsets)
  - UIKit.UIView.SafeAreaInsetsDidChange
  - UIKit.UIView.SendSubviewToBack(UIKit.UIView)
  - UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean)
  - UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
  - UIKit.UIView.SetAnimationDelay(System.Double)
  - UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
  - UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
  - UIKit.UIView.SetAnimationDuration(System.Double)
  - UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean)
  - UIKit.UIView.SetAnimationRepeatCount(System.Single)
  - UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
  - UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition,UIKit.UIView,System.Boolean)
  - UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
  - UIKit.UIView.SetContentCompressionResistancePriority(System.Single,UIKit.UILayoutConstraintAxis)
  - UIKit.UIView.SetContentHuggingPriority(System.Single,UIKit.UILayoutConstraintAxis)
  - UIKit.UIView.SetNeedsDisplay
  - UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
  - UIKit.UIView.SetNeedsFocusUpdate
  - UIKit.UIView.SetNeedsLayout
  - UIKit.UIView.SetNeedsUpdateConstraints
  - UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
  - UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
  - UIKit.UIView.SizeToFit
  - UIKit.UIView.SnapshotView(System.Boolean)
  - UIKit.UIView.SubviewAdded(UIKit.UIView)
  - UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
  - UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize,System.Single,System.Single)
  - UIKit.UIView.TintColorDidChange
  - UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
  - UIKit.UIView.TransitionNotify(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,UIKit.UICompletionHandler)
  - UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions)
  - UIKit.UIView.TransitionNotify(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  - UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  - UIKit.UIView.UpdateConstraints
  - UIKit.UIView.UpdateConstraintsIfNeeded
  - UIKit.UIView.UpdateFocusIfNeeded
  - UIKit.UIView.ViewWithTag(System.IntPtr)
  - UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
  - UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
  - UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
  - UIKit.UIView.WillRemoveSubview(UIKit.UIView)
  - UIKit.UIView.GetAppearance``1
  - UIKit.UIView.AppearanceWhenContainedIn(System.Type[])
  - UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
  - UIKit.UIView.GetAppearance(UIKit.UITraitCollection,System.Type[])
  - UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection)
  - UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection,System.Type[])
  - UIKit.UIView.ClassHandle
  - UIKit.UIView.AccessibilityActivationPoint
  - UIKit.UIView.AccessibilityAttributedHint
  - UIKit.UIView.AccessibilityAttributedLabel
  - UIKit.UIView.AccessibilityAttributedUserInputLabels
  - UIKit.UIView.AccessibilityAttributedValue
  - UIKit.UIView.AccessibilityElementsHidden
  - UIKit.UIView.AccessibilityFrame
  - UIKit.UIView.AccessibilityHint
  - UIKit.UIView.AccessibilityIdentifier
  - UIKit.UIView.AccessibilityIgnoresInvertColors
  - UIKit.UIView.AccessibilityLabel
  - UIKit.UIView.AccessibilityLanguage
  - UIKit.UIView.AccessibilityNavigationStyle
  - UIKit.UIView.AccessibilityPath
  - UIKit.UIView.AccessibilityRespondsToUserInteraction
  - UIKit.UIView.AccessibilityTextualContext
  - UIKit.UIView.AccessibilityTraits
  - UIKit.UIView.AccessibilityUserInputLabels
  - UIKit.UIView.AccessibilityValue
  - UIKit.UIView.AccessibilityViewIsModal
  - UIKit.UIView.AlignmentRectInsets
  - UIKit.UIView.Alpha
  - UIKit.UIView.AnchorPoint
  - UIKit.UIView.AnimationsEnabled
  - UIKit.UIView.AppliedContentSizeCategoryLimitsDescription
  - UIKit.UIView.AutoresizingMask
  - UIKit.UIView.AutosizesSubviews
  - UIKit.UIView.BackgroundColor
  - UIKit.UIView.BottomAnchor
  - UIKit.UIView.Bounds
  - UIKit.UIView.CanBecomeFocused
  - UIKit.UIView.Center
  - UIKit.UIView.CenterXAnchor
  - UIKit.UIView.CenterYAnchor
  - UIKit.UIView.ClearsContextBeforeDrawing
  - UIKit.UIView.ClipsToBounds
  - UIKit.UIView.CollisionBoundingPath
  - UIKit.UIView.CollisionBoundsType
  - UIKit.UIView.Constraints
  - UIKit.UIView.ContentMode
  - UIKit.UIView.ContentScaleFactor
  - UIKit.UIView.ContentStretch
  - UIKit.UIView.CoordinateSpace
  - UIKit.UIView.DirectionalLayoutMargins
  - UIKit.UIView.EffectiveUserInterfaceLayoutDirection
  - UIKit.UIView.ExclusiveTouch
  - UIKit.UIView.FirstBaselineAnchor
  - UIKit.UIView.FocusEffect
  - UIKit.UIView.FocusGroupIdentifier
  - UIKit.UIView.FocusGroupPriority
  - UIKit.UIView.FocusItemContainer
  - UIKit.UIView.Focused
  - UIKit.UIView.GestureRecognizers
  - UIKit.UIView.HasAmbiguousLayout
  - UIKit.UIView.HeightAnchor
  - UIKit.UIView.Hidden
  - UIKit.UIView.InheritedAnimationDuration
  - UIKit.UIView.InsetsLayoutMarginsFromSafeArea
  - UIKit.UIView.Interactions
  - UIKit.UIView.IntrinsicContentSize
  - UIKit.UIView.IsAccessibilityElement
  - UIKit.UIView.IsTransparentFocusItem
  - UIKit.UIView.KeyboardLayoutGuide
  - UIKit.UIView.LargeContentImage
  - UIKit.UIView.LargeContentImageInsets
  - UIKit.UIView.LargeContentTitle
  - UIKit.UIView.LastBaselineAnchor
  - UIKit.UIView.Layer
  - UIKit.UIView.LayoutGuides
  - UIKit.UIView.LayoutMargins
  - UIKit.UIView.LayoutMarginsGuide
  - UIKit.UIView.LeadingAnchor
  - UIKit.UIView.LeftAnchor
  - UIKit.UIView.MaskView
  - UIKit.UIView.MaximumContentSizeCategory
  - UIKit.UIView.MinimumContentSizeCategory
  - UIKit.UIView.MotionEffects
  - UIKit.UIView.MultipleTouchEnabled
  - UIKit.UIView.Opaque
  - UIKit.UIView.OverrideUserInterfaceStyle
  - UIKit.UIView.ParentFocusEnvironment
  - UIKit.UIView.PreferredFocusEnvironments
  - UIKit.UIView.PreferredFocusedView
  - UIKit.UIView.PreservesSuperviewLayoutMargins
  - UIKit.UIView.ReadableContentGuide
  - UIKit.UIView.RestorationIdentifier
  - UIKit.UIView.RightAnchor
  - UIKit.UIView.SafeAreaInsets
  - UIKit.UIView.SafeAreaLayoutGuide
  - UIKit.UIView.ScalesLargeContentImage
  - UIKit.UIView.SemanticContentAttribute
  - UIKit.UIView.ShouldGroupAccessibilityChildren
  - UIKit.UIView.ShowsLargeContentViewer
  - UIKit.UIView.Subviews
  - UIKit.UIView.Superview
  - UIKit.UIView.Tag
  - UIKit.UIView.TintAdjustmentMode
  - UIKit.UIView.TintColor
  - UIKit.UIView.TopAnchor
  - UIKit.UIView.TrailingAnchor
  - UIKit.UIView.TraitCollection
  - UIKit.UIView.Transform
  - UIKit.UIView.Transform3D
  - UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints
  - UIKit.UIView.UserInteractionEnabled
  - UIKit.UIView.ViewForBaselineLayout
  - UIKit.UIView.ViewForFirstBaselineLayout
  - UIKit.UIView.ViewForLastBaselineLayout
  - UIKit.UIView.ViewPrintFormatter
  - UIKit.UIView.WidthAnchor
  - UIKit.UIView.Window
  - UIKit.UIView.AnnouncementDidFinishNotification
  - UIKit.UIView.AnnouncementNotification
  - UIKit.UIView.AssistiveTechnologyKey
  - UIKit.UIView.AssistiveTouchStatusDidChangeNotification
  - UIKit.UIView.BoldTextStatusDidChangeNotification
  - UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification
  - UIKit.UIView.ClosedCaptioningStatusDidChangeNotification
  - UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification
  - UIKit.UIView.ElementFocusedNotification
  - UIKit.UIView.FocusedElementKey
  - UIKit.UIView.GrayscaleStatusDidChangeNotification
  - UIKit.UIView.GuidedAccessStatusDidChangeNotification
  - UIKit.UIView.HearingDevicePairedEarDidChangeNotification
  - UIKit.UIView.InvertColorsStatusDidChangeNotification
  - UIKit.UIView.LayoutChangedNotification
  - UIKit.UIView.MonoAudioStatusDidChangeNotification
  - UIKit.UIView.NoIntrinsicMetric
  - UIKit.UIView.NotificationSwitchControlIdentifier
  - UIKit.UIView.NotificationVoiceOverIdentifier
  - UIKit.UIView.OnOffSwitchLabelsDidChangeNotification
  - UIKit.UIView.PageScrolledNotification
  - UIKit.UIView.PauseAssistiveTechnologyNotification
  - UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification
  - UIKit.UIView.ReduceMotionStatusDidChangeNotification
  - UIKit.UIView.ReduceTransparencyStatusDidChangeNotification
  - UIKit.UIView.ResumeAssistiveTechnologyNotification
  - UIKit.UIView.ScreenChangedNotification
  - UIKit.UIView.ShakeToUndoDidChangeNotification
  - UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification
  - UIKit.UIView.SpeakScreenStatusDidChangeNotification
  - UIKit.UIView.SpeakSelectionStatusDidChangeNotification
  - UIKit.UIView.SpeechAttributeIpaNotation
  - UIKit.UIView.SpeechAttributeLanguage
  - UIKit.UIView.SpeechAttributePitch
  - UIKit.UIView.SpeechAttributePunctuation
  - UIKit.UIView.SpeechAttributeQueueAnnouncement
  - UIKit.UIView.SpeechAttributeSpellOut
  - UIKit.UIView.SwitchControlStatusDidChangeNotification
  - UIKit.UIView.TextAttributeContext
  - UIKit.UIView.TextAttributeCustom
  - UIKit.UIView.TextAttributeHeadingLevel
  - UIKit.UIView.TraitAdjustable
  - UIKit.UIView.TraitAllowsDirectInteraction
  - UIKit.UIView.TraitButton
  - UIKit.UIView.TraitCausesPageTurn
  - UIKit.UIView.TraitHeader
  - UIKit.UIView.TraitImage
  - UIKit.UIView.TraitKeyboardKey
  - UIKit.UIView.TraitLink
  - UIKit.UIView.TraitNone
  - UIKit.UIView.TraitNotEnabled
  - UIKit.UIView.TraitPlaysSound
  - UIKit.UIView.TraitSearchField
  - UIKit.UIView.TraitSelected
  - UIKit.UIView.TraitStartsMediaSession
  - UIKit.UIView.TraitStaticText
  - UIKit.UIView.TraitSummaryElement
  - UIKit.UIView.TraitTabBar
  - UIKit.UIView.TraitUpdatesFrequently
  - UIKit.UIView.UILayoutFittingCompressedSize
  - UIKit.UIView.UILayoutFittingExpandedSize
  - UIKit.UIView.UnfocusedElementKey
  - UIKit.UIView.VideoAutoplayStatusDidChangeNotification
  - UIKit.UIView.VoiceOverStatusChanged
  - UIKit.UIView.VoiceOverStatusDidChangeNotification
  - UIKit.UIView.Appearance
  - UIKit.UIView.AnimationWillStart
  - UIKit.UIView.AnimationWillEnd
  - UIKit.UIResponder.AccessibilityDecrement
  - UIKit.UIResponder.AccessibilityElementDidBecomeFocused
  - UIKit.UIResponder.AccessibilityElementDidLoseFocus
  - UIKit.UIResponder.AccessibilityElementIsFocused
  - UIKit.UIResponder.AccessibilityIncrement
  - UIKit.UIResponder.AccessibilityPerformEscape
  - UIKit.UIResponder.AccessibilityPerformMagicTap
  - UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
  - UIKit.UIResponder.BecomeFirstResponder
  - UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
  - UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
  - UIKit.UIResponder.CanPerform(ObjCRuntime.Selector,Foundation.NSObject)
  - UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
  - UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
  - UIKit.UIResponder.Copy(Foundation.NSObject)
  - UIKit.UIResponder.Cut(Foundation.NSObject)
  - UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
  - UIKit.UIResponder.Delete(Foundation.NSObject)
  - UIKit.UIResponder.Duplicate(Foundation.NSObject)
  - UIKit.UIResponder.Export(Foundation.NSObject)
  - UIKit.UIResponder.Find(Foundation.NSObject)
  - UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
  - UIKit.UIResponder.FindNext(Foundation.NSObject)
  - UIKit.UIResponder.FindPrevious(Foundation.NSObject)
  - UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)
  - UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
  - UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
  - UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
  - UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype,UIKit.UIEvent)
  - UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype,UIKit.UIEvent)
  - UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype,UIKit.UIEvent)
  - UIKit.UIResponder.Move(Foundation.NSObject)
  - UIKit.UIResponder.Paste(Foundation.NSObject)
  - UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
  - UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
  - UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
  - UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
  - UIKit.UIResponder.PressesBegan(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  - UIKit.UIResponder.PressesCancelled(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  - UIKit.UIResponder.PressesChanged(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  - UIKit.UIResponder.PressesEnded(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  - UIKit.UIResponder.Print(Foundation.NSObject)
  - UIKit.UIResponder.ReloadInputViews
  - UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
  - UIKit.UIResponder.Rename(Foundation.NSObject)
  - UIKit.UIResponder.ResignFirstResponder
  - UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
  - UIKit.UIResponder.Select(Foundation.NSObject)
  - UIKit.UIResponder.SelectAll(Foundation.NSObject)
  - UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
  - UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
  - UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
  - UIKit.UIResponder.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)
  - UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
  - UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
  - UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
  - UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
  - UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
  - UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers
  - UIKit.UIResponder.AccessibilityCustomActions
  - UIKit.UIResponder.AccessibilityDragSourceDescriptors
  - UIKit.UIResponder.AccessibilityDropPointDescriptors
  - UIKit.UIResponder.ActivityItemsConfiguration
  - UIKit.UIResponder.CanBecomeFirstResponder
  - UIKit.UIResponder.CanResignFirstResponder
  - UIKit.UIResponder.EditingInteractionConfiguration
  - UIKit.UIResponder.InputAccessoryView
  - UIKit.UIResponder.InputAccessoryViewController
  - UIKit.UIResponder.InputAssistantItem
  - UIKit.UIResponder.InputView
  - UIKit.UIResponder.InputViewController
  - UIKit.UIResponder.IsFirstResponder
  - UIKit.UIResponder.KeyCommands
  - UIKit.UIResponder.NextResponder
  - UIKit.UIResponder.PasteConfiguration
  - UIKit.UIResponder.TextInputContextIdentifier
  - UIKit.UIResponder.TextInputMode
  - UIKit.UIResponder.UndoManager
  - UIKit.UIResponder.UserActivity
  - Foundation.NSObject.PlatformAssembly
  - Foundation.NSObject.MarkDirty
  - Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
  - Foundation.NSObject.DangerousRelease
  - Foundation.NSObject.DangerousRetain
  - Foundation.NSObject.DangerousAutorelease
  - Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  - Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  - Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
  - Foundation.NSObject.InvokeOnMainThread(System.Action)
  - Foundation.NSObject.FromObject(System.Object)
  - Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle,Foundation.NSString)
  - Foundation.NSObject.GetHashCode
  - Foundation.NSObject.Equals(System.Object)
  - Foundation.NSObject.Equals(Foundation.NSObject)
  - Foundation.NSObject.ToString
  - Foundation.NSObject.Invoke(System.Action,System.Double)
  - Foundation.NSObject.Invoke(System.Action,System.TimeSpan)
  - Foundation.NSObject.AddObserver(System.String,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  - Foundation.NSObject.AddObserver(Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  - Foundation.NSObject.Alloc(ObjCRuntime.Class)
  - Foundation.NSObject.Init
  - Foundation.NSObject.InvokeInBackground(System.Action)
  - Foundation.NSObject.AddObserver(Foundation.NSObject,Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  - Foundation.NSObject.AddObserver(Foundation.NSObject,System.String,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  - Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String)
  - Foundation.NSObject.AwakeFromNib
  - Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
  - Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)
  - Foundation.NSObject.Copy
  - Foundation.NSObject.DidChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  - Foundation.NSObject.DidChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  - Foundation.NSObject.DidChangeValue(System.String)
  - Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
  - Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
  - Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
  - Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
  - Foundation.NSObject.GetNativeHash
  - Foundation.NSObject.IsEqual(Foundation.NSObject)
  - Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
  - Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
  - Foundation.NSObject.MutableCopy
  - Foundation.NSObject.ObserveValue(Foundation.NSString,Foundation.NSObject,Foundation.NSDictionary,System.IntPtr)
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double,Foundation.NSString[])
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double)
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean)
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean,Foundation.NSString[])
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)
  - Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)
  - Foundation.NSObject.PrepareForInterfaceBuilder
  - Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString,System.IntPtr)
  - Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String,System.IntPtr)
  - Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString)
  - Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String)
  - Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
  - Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
  - Foundation.NSObject.SetValueForKey(Foundation.NSObject,Foundation.NSString)
  - Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject,Foundation.NSString)
  - Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject,Foundation.NSString)
  - Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
  - Foundation.NSObject.ValueForKey(Foundation.NSString)
  - Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
  - Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
  - Foundation.NSObject.WillChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  - Foundation.NSObject.WillChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  - Foundation.NSObject.WillChangeValue(System.String)
  - Foundation.NSObject.IsDirectBinding
  - Foundation.NSObject.SuperHandle
  - Foundation.NSObject.Handle
  - Foundation.NSObject.Class
  - Foundation.NSObject.DebugDescription
  - Foundation.NSObject.Description
  - Foundation.NSObject.IsProxy
  - Foundation.NSObject.RetainCount
  - Foundation.NSObject.Self
  - Foundation.NSObject.Superclass
  - Foundation.NSObject.Zone
  - Foundation.NSObject.ChangeIndexesKey
  - Foundation.NSObject.ChangeKindKey
  - Foundation.NSObject.ChangeNewKey
  - Foundation.NSObject.ChangeNotificationIsPriorKey
  - Foundation.NSObject.ChangeOldKey
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  attributes:
  - type: Foundation.RegisterAttribute
    ctor: Foundation.RegisterAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MapControl
- uid: Mapsui.UI.iOS.MapControl.#ctor(CoreGraphics.CGRect)
  commentId: M:Mapsui.UI.iOS.MapControl.#ctor(CoreGraphics.CGRect)
  id: '#ctor(CoreGraphics.CGRect)'
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: MapControl(CGRect)
  nameWithType: MapControl.MapControl(CGRect)
  fullName: Mapsui.UI.iOS.MapControl.MapControl(CoreGraphics.CGRect)
  type: Constructor
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 16
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: public MapControl(CGRect frame)
    parameters:
    - id: frame
      type: CoreGraphics.CGRect
    content.vb: Public Sub New(frame As CGRect)
  overload: Mapsui.UI.iOS.MapControl.#ctor*
  nameWithType.vb: MapControl.New(CGRect)
  fullName.vb: Mapsui.UI.iOS.MapControl.New(CoreGraphics.CGRect)
  name.vb: New(CGRect)
- uid: Mapsui.UI.iOS.MapControl.#ctor(System.IntPtr)
  commentId: M:Mapsui.UI.iOS.MapControl.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: MapControl(nint)
  nameWithType: MapControl.MapControl(nint)
  fullName: Mapsui.UI.iOS.MapControl.MapControl(nint)
  type: Constructor
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 23
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: >-
      [Preserve]

      public MapControl(nint handle)
    parameters:
    - id: handle
      type: System.IntPtr
    content.vb: >-
      <Preserve>

      Public Sub New(handle As IntPtr)
  overload: Mapsui.UI.iOS.MapControl.#ctor*
  attributes:
  - type: Foundation.PreserveAttribute
    ctor: Foundation.PreserveAttribute.#ctor
    arguments: []
  nameWithType.vb: MapControl.New(IntPtr)
  fullName.vb: Mapsui.UI.iOS.MapControl.New(System.IntPtr)
  name.vb: New(IntPtr)
- uid: Mapsui.UI.iOS.MapControl.UseGPU
  commentId: P:Mapsui.UI.iOS.MapControl.UseGPU
  id: UseGPU
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: UseGPU
  nameWithType: MapControl.UseGPU
  fullName: Mapsui.UI.iOS.MapControl.UseGPU
  type: Property
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UseGPU
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 30
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: public static bool UseGPU { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property UseGPU As Boolean
  overload: Mapsui.UI.iOS.MapControl.UseGPU*
- uid: Mapsui.UI.iOS.MapControl.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:Mapsui.UI.iOS.MapControl.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  id: TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: TouchesBegan(NSSet, UIEvent?)
  nameWithType: MapControl.TouchesBegan(NSSet, UIEvent?)
  fullName: Mapsui.UI.iOS.MapControl.TouchesBegan(Foundation.NSSet, UIKit.UIEvent?)
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TouchesBegan
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 132
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public override void TouchesBegan(NSSet touches, UIEvent? e)
    parameters:
    - id: touches
      type: Foundation.NSSet
    - id: e
      type: UIKit.UIEvent
    content.vb: Public Overrides Sub TouchesBegan(touches As NSSet, e As UIEvent)
  overridden: UIKit.UIResponder.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  overload: Mapsui.UI.iOS.MapControl.TouchesBegan*
  nameWithType.vb: MapControl.TouchesBegan(NSSet, UIEvent)
  fullName.vb: Mapsui.UI.iOS.MapControl.TouchesBegan(Foundation.NSSet, UIKit.UIEvent)
  name.vb: TouchesBegan(NSSet, UIEvent)
- uid: Mapsui.UI.iOS.MapControl.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:Mapsui.UI.iOS.MapControl.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  id: TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: TouchesMoved(NSSet, UIEvent?)
  nameWithType: MapControl.TouchesMoved(NSSet, UIEvent?)
  fullName: Mapsui.UI.iOS.MapControl.TouchesMoved(Foundation.NSSet, UIKit.UIEvent?)
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TouchesMoved
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 147
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public override void TouchesMoved(NSSet touches, UIEvent? e)
    parameters:
    - id: touches
      type: Foundation.NSSet
    - id: e
      type: UIKit.UIEvent
    content.vb: Public Overrides Sub TouchesMoved(touches As NSSet, e As UIEvent)
  overridden: UIKit.UIResponder.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  overload: Mapsui.UI.iOS.MapControl.TouchesMoved*
  nameWithType.vb: MapControl.TouchesMoved(NSSet, UIEvent)
  fullName.vb: Mapsui.UI.iOS.MapControl.TouchesMoved(Foundation.NSSet, UIKit.UIEvent)
  name.vb: TouchesMoved(NSSet, UIEvent)
- uid: Mapsui.UI.iOS.MapControl.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:Mapsui.UI.iOS.MapControl.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  id: TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: TouchesEnded(NSSet, UIEvent?)
  nameWithType: MapControl.TouchesEnded(NSSet, UIEvent?)
  fullName: Mapsui.UI.iOS.MapControl.TouchesEnded(Foundation.NSSet, UIKit.UIEvent?)
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TouchesEnded
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 161
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public override void TouchesEnded(NSSet touches, UIEvent? e)
    parameters:
    - id: touches
      type: Foundation.NSSet
    - id: e
      type: UIKit.UIEvent
    content.vb: Public Overrides Sub TouchesEnded(touches As NSSet, e As UIEvent)
  overridden: UIKit.UIResponder.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  overload: Mapsui.UI.iOS.MapControl.TouchesEnded*
  nameWithType.vb: MapControl.TouchesEnded(NSSet, UIEvent)
  fullName.vb: Mapsui.UI.iOS.MapControl.TouchesEnded(Foundation.NSSet, UIKit.UIEvent)
  name.vb: TouchesEnded(NSSet, UIEvent)
- uid: Mapsui.UI.iOS.MapControl.Frame
  commentId: P:Mapsui.UI.iOS.MapControl.Frame
  id: Frame
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Frame
  nameWithType: MapControl.Frame
  fullName: Mapsui.UI.iOS.MapControl.Frame
  type: Property
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Frame
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 193
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public override CGRect Frame { get; set; }
    parameters: []
    return:
      type: CoreGraphics.CGRect
    content.vb: Public Overrides Property Frame As CGRect
  overridden: UIKit.UIView.Frame
  overload: Mapsui.UI.iOS.MapControl.Frame*
- uid: Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange
  commentId: M:Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange
  id: LayoutMarginsDidChange
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: LayoutMarginsDidChange()
  nameWithType: MapControl.LayoutMarginsDidChange()
  fullName: Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange()
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: LayoutMarginsDidChange
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 214
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public override void LayoutMarginsDidChange()
    content.vb: Public Overrides Sub LayoutMarginsDidChange()
  overridden: UIKit.UIView.LayoutMarginsDidChange
  overload: Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange*
- uid: Mapsui.UI.iOS.MapControl.OpenInBrowser(System.String)
  commentId: M:Mapsui.UI.iOS.MapControl.OpenInBrowser(System.String)
  id: OpenInBrowser(System.String)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: OpenInBrowser(string)
  nameWithType: MapControl.OpenInBrowser(string)
  fullName: Mapsui.UI.iOS.MapControl.OpenInBrowser(string)
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OpenInBrowser
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 223
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public void OpenInBrowser(string url)
    parameters:
    - id: url
      type: System.String
    content.vb: Public Sub OpenInBrowser(url As String)
  overload: Mapsui.UI.iOS.MapControl.OpenInBrowser*
  implements:
  - Mapsui.UI.IMapControl.OpenInBrowser(System.String)
  nameWithType.vb: MapControl.OpenInBrowser(String)
  fullName.vb: Mapsui.UI.iOS.MapControl.OpenInBrowser(String)
  name.vb: OpenInBrowser(String)
- uid: Mapsui.UI.iOS.MapControl.Dispose
  commentId: M:Mapsui.UI.iOS.MapControl.Dispose
  id: Dispose
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MapControl.Dispose()
  fullName: Mapsui.UI.iOS.MapControl.Dispose()
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Dispose
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 232
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Mapsui.UI.iOS.MapControl.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Mapsui.UI.iOS.MapControl.Dispose(System.Boolean)
  commentId: M:Mapsui.UI.iOS.MapControl.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: MapControl.Dispose(bool)
  fullName: Mapsui.UI.iOS.MapControl.Dispose(bool)
  type: Method
  source:
    remote:
      path: Mapsui.UI.iOS/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Dispose
    path: ../../Mapsui.UI.iOS/MapControl.cs
    startLine: 238
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Mapsui.UI.iOS.MapControl.Dispose*
  nameWithType.vb: MapControl.Dispose(Boolean)
  fullName.vb: Mapsui.UI.iOS.MapControl.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
  commentId: P:Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
  id: MaxTapGestureMovement
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: MaxTapGestureMovement
  nameWithType: MapControl.MaxTapGestureMovement
  fullName: Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MaxTapGestureMovement
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 69
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: The movement allowed between a touch down and touch up in a touch gestures in device independent pixels.
  example: []
  syntax:
    content: public int MaxTapGestureMovement { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxTapGestureMovement As Integer
  overload: Mapsui.UI.iOS.MapControl.MaxTapGestureMovement*
- uid: Mapsui.UI.iOS.MapControl.UseFling
  commentId: P:Mapsui.UI.iOS.MapControl.UseFling
  id: UseFling
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: UseFling
  nameWithType: MapControl.UseFling
  fullName: Mapsui.UI.iOS.MapControl.UseFling
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UseFling
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 75
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: >-
    Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a 

    short time after the user has lifted the finger.
  example: []
  syntax:
    content: public bool UseFling { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseFling As Boolean
  overload: Mapsui.UI.iOS.MapControl.UseFling*
- uid: Mapsui.UI.iOS.MapControl.StartUpdates(System.Boolean)
  commentId: M:Mapsui.UI.iOS.MapControl.StartUpdates(System.Boolean)
  id: StartUpdates(System.Boolean)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: StartUpdates(bool)
  nameWithType: MapControl.StartUpdates(bool)
  fullName: Mapsui.UI.iOS.MapControl.StartUpdates(bool)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: StartUpdates
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 170
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Start updates for control
  remarks: When this function is called, the control is redrawn if needed
  example: []
  syntax:
    content: public void StartUpdates(bool refresh = true)
    parameters:
    - id: refresh
      type: System.Boolean
    content.vb: Public Sub StartUpdates(refresh As Boolean = True)
  overload: Mapsui.UI.iOS.MapControl.StartUpdates*
  nameWithType.vb: MapControl.StartUpdates(Boolean)
  fullName.vb: Mapsui.UI.iOS.MapControl.StartUpdates(Boolean)
  name.vb: StartUpdates(Boolean)
- uid: Mapsui.UI.iOS.MapControl.StopUpdates
  commentId: M:Mapsui.UI.iOS.MapControl.StopUpdates
  id: StopUpdates
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: StopUpdates()
  nameWithType: MapControl.StopUpdates()
  fullName: Mapsui.UI.iOS.MapControl.StopUpdates()
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: StopUpdates
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 183
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Stop updates for control
  remarks: >-
    When this function is called, the control stops to redraw itself, 

    even if it is needed
  example: []
  syntax:
    content: public void StopUpdates()
    content.vb: Public Sub StopUpdates()
  overload: Mapsui.UI.iOS.MapControl.StopUpdates*
- uid: Mapsui.UI.iOS.MapControl.ForceUpdate
  commentId: M:Mapsui.UI.iOS.MapControl.ForceUpdate
  id: ForceUpdate
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: ForceUpdate()
  nameWithType: MapControl.ForceUpdate()
  fullName: Mapsui.UI.iOS.MapControl.ForceUpdate()
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ForceUpdate
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 194
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Force a update of control
  remarks: When this function is called, the control draws itself once
  example: []
  syntax:
    content: public void ForceUpdate()
    content.vb: Public Sub ForceUpdate()
  overload: Mapsui.UI.iOS.MapControl.ForceUpdate*
- uid: Mapsui.UI.iOS.MapControl.UpdateInterval
  commentId: P:Mapsui.UI.iOS.MapControl.UpdateInterval
  id: UpdateInterval
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: UpdateInterval
  nameWithType: MapControl.UpdateInterval
  fullName: Mapsui.UI.iOS.MapControl.UpdateInterval
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UpdateInterval
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 203
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Interval between two redraws of the MapControl in ms
  example: []
  syntax:
    content: public int UpdateInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UpdateInterval As Integer
  overload: Mapsui.UI.iOS.MapControl.UpdateInterval*
- uid: Mapsui.UI.iOS.MapControl.Performance
  commentId: P:Mapsui.UI.iOS.MapControl.Performance
  id: Performance
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Performance
  nameWithType: MapControl.Performance
  fullName: Mapsui.UI.iOS.MapControl.Performance
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Performance
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 227
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Object to save performance information about the drawing of the map
  remarks: If this is null, no performance information is saved.
  example: []
  syntax:
    content: public Performance? Performance { get; set; }
    parameters: []
    return:
      type: Mapsui.Utilities.Performance
    content.vb: Public Property Performance As Performance
  overload: Mapsui.UI.iOS.MapControl.Performance*
  implements:
  - Mapsui.UI.IMapControl.Performance
- uid: Mapsui.UI.iOS.MapControl.PixelDensity
  commentId: P:Mapsui.UI.iOS.MapControl.PixelDensity
  id: PixelDensity
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: PixelDensity
  nameWithType: MapControl.PixelDensity
  fullName: Mapsui.UI.iOS.MapControl.PixelDensity
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: PixelDensity
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 240
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: The number of pixel per device independent unit
  example: []
  syntax:
    content: public float PixelDensity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property PixelDensity As Single
  overload: Mapsui.UI.iOS.MapControl.PixelDensity*
  implements:
  - Mapsui.UI.IMapControl.PixelDensity
- uid: Mapsui.UI.iOS.MapControl.Renderer
  commentId: P:Mapsui.UI.iOS.MapControl.Renderer
  id: Renderer
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Renderer
  nameWithType: MapControl.Renderer
  fullName: Mapsui.UI.iOS.MapControl.Renderer
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Renderer
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 245
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Renderer that is used from this MapControl
  example: []
  syntax:
    content: public IRenderer Renderer { get; }
    parameters: []
    return:
      type: Mapsui.Rendering.IRenderer
    content.vb: Public ReadOnly Property Renderer As IRenderer
  overload: Mapsui.UI.iOS.MapControl.Renderer*
  implements:
  - Mapsui.UI.IMapControl.Renderer
- uid: Mapsui.UI.iOS.MapControl.Info
  commentId: E:Mapsui.UI.iOS.MapControl.Info
  id: Info
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: MapControl.Info
  fullName: Mapsui.UI.iOS.MapControl.Info
  type: Event
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Info
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 251
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: >-
    Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in

    the layers that have IsMapInfoLayer set to true.
  example: []
  syntax:
    content: public event EventHandler<MapInfoEventArgs>? Info
    return:
      type: System.EventHandler{Mapsui.MapInfoEventArgs}
    content.vb: Public Event Info As EventHandler(Of MapInfoEventArgs)
  implements:
  - Mapsui.UI.IMapControl.Info
- uid: Mapsui.UI.iOS.MapControl.PropertyChanged
  commentId: E:Mapsui.UI.iOS.MapControl.PropertyChanged
  id: PropertyChanged
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: MapControl.PropertyChanged
  fullName: Mapsui.UI.iOS.MapControl.PropertyChanged
  type: Event
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: PropertyChanged
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 259
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Called whenever a property is changed
  example: []
  syntax:
    content: public event PropertyChangedEventHandler? PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: Mapsui.UI.iOS.MapControl.OnPropertyChanged(System.String)
  commentId: M:Mapsui.UI.iOS.MapControl.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string)
  nameWithType: MapControl.OnPropertyChanged(string)
  fullName: Mapsui.UI.iOS.MapControl.OnPropertyChanged(string)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnPropertyChanged
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 268
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: protected void OnPropertyChanged(string propertyName = "")
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Protected Sub OnPropertyChanged(propertyName As String = "")
  overload: Mapsui.UI.iOS.MapControl.OnPropertyChanged*
  nameWithType.vb: MapControl.OnPropertyChanged(String)
  fullName.vb: Mapsui.UI.iOS.MapControl.OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
- uid: Mapsui.UI.iOS.MapControl.Unsubscribe
  commentId: M:Mapsui.UI.iOS.MapControl.Unsubscribe
  id: Unsubscribe
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: MapControl.Unsubscribe()
  fullName: Mapsui.UI.iOS.MapControl.Unsubscribe()
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Unsubscribe
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 277
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Unsubscribe from map events
  example: []
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe()
  overload: Mapsui.UI.iOS.MapControl.Unsubscribe*
  implements:
  - Mapsui.UI.IMapControl.Unsubscribe
- uid: Mapsui.UI.iOS.MapControl.Refresh(Mapsui.ChangeType)
  commentId: M:Mapsui.UI.iOS.MapControl.Refresh(Mapsui.ChangeType)
  id: Refresh(Mapsui.ChangeType)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Refresh(ChangeType)
  nameWithType: MapControl.Refresh(ChangeType)
  fullName: Mapsui.UI.iOS.MapControl.Refresh(Mapsui.ChangeType)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Refresh
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 312
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public void Refresh(ChangeType changeType = ChangeType.Discrete)
    parameters:
    - id: changeType
      type: Mapsui.ChangeType
    content.vb: Public Sub Refresh(changeType As ChangeType = ChangeType.Discrete)
  overload: Mapsui.UI.iOS.MapControl.Refresh*
  implements:
  - Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
- uid: Mapsui.UI.iOS.MapControl.RefreshGraphics
  commentId: M:Mapsui.UI.iOS.MapControl.RefreshGraphics
  id: RefreshGraphics
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: RefreshGraphics()
  nameWithType: MapControl.RefreshGraphics()
  fullName: Mapsui.UI.iOS.MapControl.RefreshGraphics()
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RefreshGraphics
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 317
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  example: []
  syntax:
    content: public void RefreshGraphics()
    content.vb: Public Sub RefreshGraphics()
  overload: Mapsui.UI.iOS.MapControl.RefreshGraphics*
  implements:
  - Mapsui.UI.IMapControl.RefreshGraphics
- uid: Mapsui.UI.iOS.MapControl.Map
  commentId: P:Mapsui.UI.iOS.MapControl.Map
  id: Map
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: MapControl.Map
  fullName: Mapsui.UI.iOS.MapControl.Map
  type: Property
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Map
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 430
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Map holding data for which is shown in this MapControl
  example: []
  syntax:
    content: public Map Map { get; set; }
    parameters: []
    return:
      type: Mapsui.Map
    content.vb: Public Property Map As Map
  overload: Mapsui.UI.iOS.MapControl.Map*
  implements:
  - Mapsui.UI.IMapControl.Map
- uid: Mapsui.UI.iOS.MapControl.ToPixels(Mapsui.MPoint)
  commentId: M:Mapsui.UI.iOS.MapControl.ToPixels(Mapsui.MPoint)
  id: ToPixels(Mapsui.MPoint)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: ToPixels(MPoint)
  nameWithType: MapControl.ToPixels(MPoint)
  fullName: Mapsui.UI.iOS.MapControl.ToPixels(Mapsui.MPoint)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ToPixels
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 467
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Converts coordinates in device independent units (or DIP or DP) to pixels.
  example: []
  syntax:
    content: public MPoint ToPixels(MPoint coordinateInDeviceIndependentUnits)
    parameters:
    - id: coordinateInDeviceIndependentUnits
      type: Mapsui.MPoint
      description: Coordinate in device independent units (or DIP or DP)
    return:
      type: Mapsui.MPoint
      description: Coordinate in pixels
    content.vb: Public Function ToPixels(coordinateInDeviceIndependentUnits As MPoint) As MPoint
  overload: Mapsui.UI.iOS.MapControl.ToPixels*
  implements:
  - Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
- uid: Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  commentId: M:Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  id: ToDeviceIndependentUnits(Mapsui.MPoint)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: ToDeviceIndependentUnits(MPoint)
  nameWithType: MapControl.ToDeviceIndependentUnits(MPoint)
  fullName: Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ToDeviceIndependentUnits
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 475
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Converts coordinates in pixels to device independent units (or DIP or DP).
  example: []
  syntax:
    content: public MPoint ToDeviceIndependentUnits(MPoint coordinateInPixels)
    parameters:
    - id: coordinateInPixels
      type: Mapsui.MPoint
      description: Coordinate in pixels
    return:
      type: Mapsui.MPoint
      description: Coordinate in device independent units (or DIP or DP)
    content.vb: Public Function ToDeviceIndependentUnits(coordinateInPixels As MPoint) As MPoint
  overload: Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits*
  implements:
  - Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
- uid: Mapsui.UI.iOS.MapControl.RefreshData(Mapsui.ChangeType)
  commentId: M:Mapsui.UI.iOS.MapControl.RefreshData(Mapsui.ChangeType)
  id: RefreshData(Mapsui.ChangeType)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: RefreshData(ChangeType)
  nameWithType: MapControl.RefreshData(ChangeType)
  fullName: Mapsui.UI.iOS.MapControl.RefreshData(Mapsui.ChangeType)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RefreshData
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 483
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Refresh data of Map, but don't paint it
  example: []
  syntax:
    content: public void RefreshData(ChangeType changeType = ChangeType.Discrete)
    parameters:
    - id: changeType
      type: Mapsui.ChangeType
    content.vb: Public Sub RefreshData(changeType As ChangeType = ChangeType.Discrete)
  overload: Mapsui.UI.iOS.MapControl.RefreshData*
  implements:
  - Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
- uid: Mapsui.UI.iOS.MapControl.OnMapInfo(Mapsui.MapInfoEventArgs)
  commentId: M:Mapsui.UI.iOS.MapControl.OnMapInfo(Mapsui.MapInfoEventArgs)
  id: OnMapInfo(Mapsui.MapInfoEventArgs)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: OnMapInfo(MapInfoEventArgs)
  nameWithType: MapControl.OnMapInfo(MapInfoEventArgs)
  fullName: Mapsui.UI.iOS.MapControl.OnMapInfo(Mapsui.MapInfoEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnMapInfo
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 488
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  syntax:
    content: protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs)
    parameters:
    - id: mapInfoEventArgs
      type: Mapsui.MapInfoEventArgs
    content.vb: Protected Sub OnMapInfo(mapInfoEventArgs As MapInfoEventArgs)
  overload: Mapsui.UI.iOS.MapControl.OnMapInfo*
- uid: Mapsui.UI.iOS.MapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  commentId: M:Mapsui.UI.iOS.MapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  id: GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: GetMapInfo(ScreenPosition, int)
  nameWithType: MapControl.GetMapInfo(ScreenPosition, int)
  fullName: Mapsui.UI.iOS.MapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition, int)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetMapInfo
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 495
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Check, if a feature at a given screen position is hit
  example: []
  syntax:
    content: public MapInfo GetMapInfo(ScreenPosition screenPosition, int margin = 0)
    parameters:
    - id: screenPosition
      type: Mapsui.Manipulations.ScreenPosition
      description: Screen position to check for widgets and features
    - id: margin
      type: System.Int32
      description: An optional extra margin around the feature to enlarge the hit area.
    return:
      type: Mapsui.MapInfo
    content.vb: Public Function GetMapInfo(screenPosition As ScreenPosition, margin As Integer = 0) As MapInfo
  overload: Mapsui.UI.iOS.MapControl.GetMapInfo*
  implements:
  - Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  nameWithType.vb: MapControl.GetMapInfo(ScreenPosition, Integer)
  fullName.vb: Mapsui.UI.iOS.MapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition, Integer)
  name.vb: GetMapInfo(ScreenPosition, Integer)
- uid: Mapsui.UI.iOS.MapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  commentId: M:Mapsui.UI.iOS.MapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  id: GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  parent: Mapsui.UI.iOS.MapControl
  langs:
  - csharp
  - vb
  name: GetSnapshot(IEnumerable<ILayer>?)
  nameWithType: MapControl.GetSnapshot(IEnumerable<ILayer>?)
  fullName: Mapsui.UI.iOS.MapControl.GetSnapshot(System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>?)
  type: Method
  source:
    remote:
      path: Mapsui.UI.Shared/MapControl.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetSnapshot
    path: ../../Mapsui.UI.Shared/MapControl.cs
    startLine: 501
  assemblies:
  - Mapsui.UI.iOS
  namespace: Mapsui.UI.iOS
  summary: Create a snapshot form map as PNG image
  example: []
  syntax:
    content: public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null)
    parameters:
    - id: layers
      type: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
      description: Layers that should be included in snapshot
    return:
      type: System.Byte[]
      description: Byte array with snapshot in png format. If there are any problems than returns null.
    content.vb: Public Function GetSnapshot(layers As IEnumerable(Of ILayer) = Nothing) As Byte()
  overload: Mapsui.UI.iOS.MapControl.GetSnapshot*
  implements:
  - Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  nameWithType.vb: MapControl.GetSnapshot(IEnumerable(Of ILayer))
  fullName.vb: Mapsui.UI.iOS.MapControl.GetSnapshot(System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer))
  name.vb: GetSnapshot(IEnumerable(Of ILayer))
references:
- uid: Mapsui.UI.iOS
  commentId: N:Mapsui.UI.iOS
  href: Mapsui.html
  name: Mapsui.UI.iOS
  nameWithType: Mapsui.UI.iOS
  fullName: Mapsui.UI.iOS
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.UI
    name: UI
    href: Mapsui.UI.html
  - name: .
  - uid: Mapsui.UI.iOS
    name: iOS
    href: Mapsui.UI.iOS.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.UI
    name: UI
    href: Mapsui.UI.html
  - name: .
  - uid: Mapsui.UI.iOS
    name: iOS
    href: Mapsui.UI.iOS.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Foundation.NSObject
  commentId: T:Foundation.NSObject
  parent: Foundation
  isExternal: true
  name: NSObject
  nameWithType: NSObject
  fullName: Foundation.NSObject
- uid: UIKit.UIResponder
  commentId: T:UIKit.UIResponder
  parent: UIKit
  isExternal: true
  name: UIResponder
  nameWithType: UIResponder
  fullName: UIKit.UIResponder
- uid: UIKit.UIView
  commentId: T:UIKit.UIView
  parent: UIKit
  isExternal: true
  name: UIView
  nameWithType: UIView
  fullName: UIKit.UIView
- uid: System.IEquatable{Foundation.NSObject}
  commentId: T:System.IEquatable{Foundation.NSObject}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<NSObject>
  nameWithType: IEquatable<NSObject>
  fullName: System.IEquatable<Foundation.NSObject>
  nameWithType.vb: IEquatable(Of NSObject)
  fullName.vb: System.IEquatable(Of Foundation.NSObject)
  name.vb: IEquatable(Of NSObject)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.INSObjectProtocol
  commentId: T:Foundation.INSObjectProtocol
  parent: Foundation
  isExternal: true
  name: INSObjectProtocol
  nameWithType: INSObjectProtocol
  fullName: Foundation.INSObjectProtocol
- uid: UIKit.IUIActivityItemsConfigurationProviding
  commentId: T:UIKit.IUIActivityItemsConfigurationProviding
  parent: UIKit
  isExternal: true
  name: IUIActivityItemsConfigurationProviding
  nameWithType: IUIActivityItemsConfigurationProviding
  fullName: UIKit.IUIActivityItemsConfigurationProviding
- uid: UIKit.IUIPasteConfigurationSupporting
  commentId: T:UIKit.IUIPasteConfigurationSupporting
  parent: UIKit
  isExternal: true
  name: IUIPasteConfigurationSupporting
  nameWithType: IUIPasteConfigurationSupporting
  fullName: UIKit.IUIPasteConfigurationSupporting
- uid: UIKit.IUIResponderStandardEditActions
  commentId: T:UIKit.IUIResponderStandardEditActions
  parent: UIKit
  isExternal: true
  name: IUIResponderStandardEditActions
  nameWithType: IUIResponderStandardEditActions
  fullName: UIKit.IUIResponderStandardEditActions
- uid: UIKit.IUIUserActivityRestoring
  commentId: T:UIKit.IUIUserActivityRestoring
  parent: UIKit
  isExternal: true
  name: IUIUserActivityRestoring
  nameWithType: IUIUserActivityRestoring
  fullName: UIKit.IUIUserActivityRestoring
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Foundation.INSCoding
  commentId: T:Foundation.INSCoding
  parent: Foundation
  isExternal: true
  name: INSCoding
  nameWithType: INSCoding
  fullName: Foundation.INSCoding
- uid: UIKit.IUIAccessibilityIdentification
  commentId: T:UIKit.IUIAccessibilityIdentification
  parent: UIKit
  isExternal: true
  name: IUIAccessibilityIdentification
  nameWithType: IUIAccessibilityIdentification
  fullName: UIKit.IUIAccessibilityIdentification
- uid: UIKit.IUIAppearance
  commentId: T:UIKit.IUIAppearance
  parent: UIKit
  isExternal: true
  name: IUIAppearance
  nameWithType: IUIAppearance
  fullName: UIKit.IUIAppearance
- uid: UIKit.IUIAppearanceContainer
  commentId: T:UIKit.IUIAppearanceContainer
  parent: UIKit
  isExternal: true
  name: IUIAppearanceContainer
  nameWithType: IUIAppearanceContainer
  fullName: UIKit.IUIAppearanceContainer
- uid: UIKit.IUICoordinateSpace
  commentId: T:UIKit.IUICoordinateSpace
  parent: UIKit
  isExternal: true
  name: IUICoordinateSpace
  nameWithType: IUICoordinateSpace
  fullName: UIKit.IUICoordinateSpace
- uid: UIKit.IUIDynamicItem
  commentId: T:UIKit.IUIDynamicItem
  parent: UIKit
  isExternal: true
  name: IUIDynamicItem
  nameWithType: IUIDynamicItem
  fullName: UIKit.IUIDynamicItem
- uid: UIKit.IUIFocusItem
  commentId: T:UIKit.IUIFocusItem
  parent: UIKit
  isExternal: true
  name: IUIFocusItem
  nameWithType: IUIFocusItem
  fullName: UIKit.IUIFocusItem
- uid: UIKit.IUIFocusEnvironment
  commentId: T:UIKit.IUIFocusEnvironment
  parent: UIKit
  isExternal: true
  name: IUIFocusEnvironment
  nameWithType: IUIFocusEnvironment
  fullName: UIKit.IUIFocusEnvironment
- uid: UIKit.IUIFocusItemContainer
  commentId: T:UIKit.IUIFocusItemContainer
  parent: UIKit
  isExternal: true
  name: IUIFocusItemContainer
  nameWithType: IUIFocusItemContainer
  fullName: UIKit.IUIFocusItemContainer
- uid: UIKit.IUILargeContentViewerItem
  commentId: T:UIKit.IUILargeContentViewerItem
  parent: UIKit
  isExternal: true
  name: IUILargeContentViewerItem
  nameWithType: IUILargeContentViewerItem
  fullName: UIKit.IUILargeContentViewerItem
- uid: UIKit.IUIPopoverPresentationControllerSourceItem
  commentId: T:UIKit.IUIPopoverPresentationControllerSourceItem
  parent: UIKit
  isExternal: true
  name: IUIPopoverPresentationControllerSourceItem
  nameWithType: IUIPopoverPresentationControllerSourceItem
  fullName: UIKit.IUIPopoverPresentationControllerSourceItem
- uid: UIKit.IUITraitEnvironment
  commentId: T:UIKit.IUITraitEnvironment
  parent: UIKit
  isExternal: true
  name: IUITraitEnvironment
  nameWithType: IUITraitEnvironment
  fullName: UIKit.IUITraitEnvironment
- uid: CoreAnimation.ICALayerDelegate
  commentId: T:CoreAnimation.ICALayerDelegate
  parent: CoreAnimation
  isExternal: true
  name: ICALayerDelegate
  nameWithType: ICALayerDelegate
  fullName: CoreAnimation.ICALayerDelegate
- uid: ObjCRuntime.INativeObject
  commentId: T:ObjCRuntime.INativeObject
  parent: ObjCRuntime
  isExternal: true
  name: INativeObject
  nameWithType: INativeObject
  fullName: ObjCRuntime.INativeObject
- uid: Mapsui.UI.IMapControl
  commentId: T:Mapsui.UI.IMapControl
  parent: Mapsui.UI
  href: Mapsui.UI.IMapControl.html
  name: IMapControl
  nameWithType: IMapControl
  fullName: Mapsui.UI.IMapControl
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: UIKit.UIView.Add(UIKit.UIView)
  commentId: M:UIKit.UIView.Add(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: Add(UIView)
  nameWithType: UIView.Add(UIView)
  fullName: UIKit.UIView.Add(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.Add(UIKit.UIView)
    name: Add
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Add(UIKit.UIView)
    name: Add
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddSubviews(UIKit.UIView[])
  commentId: M:UIKit.UIView.AddSubviews(UIKit.UIView[])
  parent: UIKit.UIView
  isExternal: true
  name: AddSubviews(params UIView[])
  nameWithType: UIView.AddSubviews(params UIView[])
  fullName: UIKit.UIView.AddSubviews(params UIKit.UIView[])
  nameWithType.vb: UIView.AddSubviews(ParamArray UIView())
  fullName.vb: UIKit.UIView.AddSubviews(ParamArray UIKit.UIView())
  name.vb: AddSubviews(ParamArray UIView())
  spec.csharp:
  - uid: UIKit.UIView.AddSubviews(UIKit.UIView[])
    name: AddSubviews
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddSubviews(UIKit.UIView[])
    name: AddSubviews
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.GetEnumerator
  commentId: M:UIKit.UIView.GetEnumerator
  parent: UIKit.UIView
  isExternal: true
  name: GetEnumerator()
  nameWithType: UIView.GetEnumerator()
  fullName: UIKit.UIView.GetEnumerator()
  spec.csharp:
  - uid: UIKit.UIView.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.BeginAnimations(System.String)
  commentId: M:UIKit.UIView.BeginAnimations(System.String)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BeginAnimations(string)
  nameWithType: UIView.BeginAnimations(string)
  fullName: UIKit.UIView.BeginAnimations(string)
  nameWithType.vb: UIView.BeginAnimations(String)
  fullName.vb: UIKit.UIView.BeginAnimations(String)
  name.vb: BeginAnimations(String)
  spec.csharp:
  - uid: UIKit.UIView.BeginAnimations(System.String)
    name: BeginAnimations
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UIKit.UIView.BeginAnimations(System.String)
    name: BeginAnimations
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UIKit.UIView.Animate(System.Double,System.Action,System.Action)
  commentId: M:UIKit.UIView.Animate(System.Double,System.Action,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Animate(double, Action, Action)
  nameWithType: UIView.Animate(double, Action, Action)
  fullName: UIKit.UIView.Animate(double, System.Action, System.Action)
  nameWithType.vb: UIView.Animate(Double, Action, Action)
  fullName.vb: UIKit.UIView.Animate(Double, System.Action, System.Action)
  name.vb: Animate(Double, Action, Action)
  spec.csharp:
  - uid: UIKit.UIView.Animate(System.Double,System.Action,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Animate(System.Double,System.Action,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.Animate(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  commentId: M:UIKit.UIView.Animate(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Animate(double, double, UIViewAnimationOptions, Action, Action)
  nameWithType: UIView.Animate(double, double, UIViewAnimationOptions, Action, Action)
  fullName: UIKit.UIView.Animate(double, double, UIKit.UIViewAnimationOptions, System.Action, System.Action)
  nameWithType.vb: UIView.Animate(Double, Double, UIViewAnimationOptions, Action, Action)
  fullName.vb: UIKit.UIView.Animate(Double, Double, UIKit.UIViewAnimationOptions, System.Action, System.Action)
  name.vb: Animate(Double, Double, UIViewAnimationOptions, Action, Action)
  spec.csharp:
  - uid: UIKit.UIView.Animate(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Animate(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.Transition(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.Transition(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Transition(UIView, UIView, double, UIViewAnimationOptions, Action)
  nameWithType: UIView.Transition(UIView, UIView, double, UIViewAnimationOptions, Action)
  fullName: UIKit.UIView.Transition(UIKit.UIView, UIKit.UIView, double, UIKit.UIViewAnimationOptions, System.Action)
  nameWithType.vb: UIView.Transition(UIView, UIView, Double, UIViewAnimationOptions, Action)
  fullName.vb: UIKit.UIView.Transition(UIKit.UIView, UIKit.UIView, Double, UIKit.UIViewAnimationOptions, System.Action)
  name.vb: Transition(UIView, UIView, Double, UIViewAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.Transition(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: Transition
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Transition(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: Transition
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.Transition(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  commentId: M:UIKit.UIView.Transition(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Transition(UIView, double, UIViewAnimationOptions, Action, Action)
  nameWithType: UIView.Transition(UIView, double, UIViewAnimationOptions, Action, Action)
  fullName: UIKit.UIView.Transition(UIKit.UIView, double, UIKit.UIViewAnimationOptions, System.Action, System.Action)
  nameWithType.vb: UIView.Transition(UIView, Double, UIViewAnimationOptions, Action, Action)
  fullName.vb: UIKit.UIView.Transition(UIKit.UIView, Double, UIKit.UIViewAnimationOptions, System.Action, System.Action)
  name.vb: Transition(UIView, Double, UIViewAnimationOptions, Action, Action)
  spec.csharp:
  - uid: UIKit.UIView.Transition(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
    name: Transition
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Transition(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,System.Action)
    name: Transition
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AnimateAsync(System.Double,System.Action)
  commentId: M:UIKit.UIView.AnimateAsync(System.Double,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateAsync(double, Action)
  nameWithType: UIView.AnimateAsync(double, Action)
  fullName: UIKit.UIView.AnimateAsync(double, System.Action)
  nameWithType.vb: UIView.AnimateAsync(Double, Action)
  fullName.vb: UIKit.UIView.AnimateAsync(Double, System.Action)
  name.vb: AnimateAsync(Double, Action)
  spec.csharp:
  - uid: UIKit.UIView.AnimateAsync(System.Double,System.Action)
    name: AnimateAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateAsync(System.Double,System.Action)
    name: AnimateAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.Capture(System.Boolean)
  commentId: M:UIKit.UIView.Capture(System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Capture(bool)
  nameWithType: UIView.Capture(bool)
  fullName: UIKit.UIView.Capture(bool)
  nameWithType.vb: UIView.Capture(Boolean)
  fullName.vb: UIKit.UIView.Capture(Boolean)
  name.vb: Capture(Boolean)
  spec.csharp:
  - uid: UIKit.UIView.Capture(System.Boolean)
    name: Capture
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Capture(System.Boolean)
    name: Capture
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.AccessibilityActivate
  commentId: M:UIKit.UIView.AccessibilityActivate
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityActivate()
  nameWithType: UIView.AccessibilityActivate()
  fullName: UIKit.UIView.AccessibilityActivate()
  spec.csharp:
  - uid: UIKit.UIView.AccessibilityActivate
    name: AccessibilityActivate
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AccessibilityActivate
    name: AccessibilityActivate
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ActionForLayer(CoreAnimation.CALayer,System.String)
  commentId: M:UIKit.UIView.ActionForLayer(CoreAnimation.CALayer,System.String)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ActionForLayer(CALayer, string)
  nameWithType: UIView.ActionForLayer(CALayer, string)
  fullName: UIKit.UIView.ActionForLayer(CoreAnimation.CALayer, string)
  nameWithType.vb: UIView.ActionForLayer(CALayer, String)
  fullName.vb: UIKit.UIView.ActionForLayer(CoreAnimation.CALayer, String)
  name.vb: ActionForLayer(CALayer, String)
  spec.csharp:
  - uid: UIKit.UIView.ActionForLayer(CoreAnimation.CALayer,System.String)
    name: ActionForLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ActionForLayer(CoreAnimation.CALayer,System.String)
    name: ActionForLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
  commentId: M:UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
  parent: UIKit.UIView
  isExternal: true
  name: AddConstraint(NSLayoutConstraint)
  nameWithType: UIView.AddConstraint(NSLayoutConstraint)
  fullName: UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
  spec.csharp:
  - uid: UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
    name: AddConstraint
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddConstraint(UIKit.NSLayoutConstraint)
    name: AddConstraint
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
  commentId: M:UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
  parent: UIKit.UIView
  isExternal: true
  name: AddConstraints(NSLayoutConstraint[])
  nameWithType: UIView.AddConstraints(NSLayoutConstraint[])
  fullName: UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
  nameWithType.vb: UIView.AddConstraints(NSLayoutConstraint())
  fullName.vb: UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint())
  name.vb: AddConstraints(NSLayoutConstraint())
  spec.csharp:
  - uid: UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
    name: AddConstraints
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddConstraints(UIKit.NSLayoutConstraint[])
    name: AddConstraints
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
  commentId: M:UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
  parent: UIKit.UIView
  isExternal: true
  name: AddGestureRecognizer(UIGestureRecognizer)
  nameWithType: UIView.AddGestureRecognizer(UIGestureRecognizer)
  fullName: UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
  spec.csharp:
  - uid: UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
    name: AddGestureRecognizer
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddGestureRecognizer(UIKit.UIGestureRecognizer)
    name: AddGestureRecognizer
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
  commentId: M:UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
  parent: UIKit.UIView
  isExternal: true
  name: AddInteraction(IUIInteraction)
  nameWithType: UIView.AddInteraction(IUIInteraction)
  fullName: UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
  spec.csharp:
  - uid: UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
    name: AddInteraction
    isExternal: true
  - name: (
  - uid: UIKit.IUIInteraction
    name: IUIInteraction
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddInteraction(UIKit.IUIInteraction)
    name: AddInteraction
    isExternal: true
  - name: (
  - uid: UIKit.IUIInteraction
    name: IUIInteraction
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double,System.Double,System.Action)
  commentId: M:UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double,System.Double,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AddKeyframeWithRelativeStartTime(double, double, Action)
  nameWithType: UIView.AddKeyframeWithRelativeStartTime(double, double, Action)
  fullName: UIKit.UIView.AddKeyframeWithRelativeStartTime(double, double, System.Action)
  nameWithType.vb: UIView.AddKeyframeWithRelativeStartTime(Double, Double, Action)
  fullName.vb: UIKit.UIView.AddKeyframeWithRelativeStartTime(Double, Double, System.Action)
  name.vb: AddKeyframeWithRelativeStartTime(Double, Double, Action)
  spec.csharp:
  - uid: UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double,System.Double,System.Action)
    name: AddKeyframeWithRelativeStartTime
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddKeyframeWithRelativeStartTime(System.Double,System.Double,System.Action)
    name: AddKeyframeWithRelativeStartTime
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
  commentId: M:UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
  parent: UIKit.UIView
  isExternal: true
  name: AddLayoutGuide(UILayoutGuide)
  nameWithType: UIView.AddLayoutGuide(UILayoutGuide)
  fullName: UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
  spec.csharp:
  - uid: UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
    name: AddLayoutGuide
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutGuide
    name: UILayoutGuide
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddLayoutGuide(UIKit.UILayoutGuide)
    name: AddLayoutGuide
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutGuide
    name: UILayoutGuide
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
  commentId: M:UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
  parent: UIKit.UIView
  isExternal: true
  name: AddMotionEffect(UIMotionEffect)
  nameWithType: UIView.AddMotionEffect(UIMotionEffect)
  fullName: UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
  spec.csharp:
  - uid: UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
    name: AddMotionEffect
    isExternal: true
  - name: (
  - uid: UIKit.UIMotionEffect
    name: UIMotionEffect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddMotionEffect(UIKit.UIMotionEffect)
    name: AddMotionEffect
    isExternal: true
  - name: (
  - uid: UIKit.UIMotionEffect
    name: UIMotionEffect
    isExternal: true
  - name: )
- uid: UIKit.UIView.AddSubview(UIKit.UIView)
  commentId: M:UIKit.UIView.AddSubview(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: AddSubview(UIView)
  nameWithType: UIView.AddSubview(UIView)
  fullName: UIKit.UIView.AddSubview(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.AddSubview(UIKit.UIView)
    name: AddSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AddSubview(UIKit.UIView)
    name: AddSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
  commentId: M:UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
  parent: UIKit.UIView
  isExternal: true
  name: AlignmentRectForFrame(CGRect)
  nameWithType: UIView.AlignmentRectForFrame(CGRect)
  fullName: UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
  spec.csharp:
  - uid: UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
    name: AlignmentRectForFrame
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AlignmentRectForFrame(CoreGraphics.CGRect)
    name: AlignmentRectForFrame
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
- uid: UIKit.UIView.Animate(System.Double,System.Action)
  commentId: M:UIKit.UIView.Animate(System.Double,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: Animate(double, Action)
  nameWithType: UIView.Animate(double, Action)
  fullName: UIKit.UIView.Animate(double, System.Action)
  nameWithType.vb: UIView.Animate(Double, Action)
  fullName.vb: UIKit.UIView.Animate(Double, System.Action)
  name.vb: Animate(Double, Action)
  spec.csharp:
  - uid: UIKit.UIView.Animate(System.Double,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Animate(System.Double,System.Action)
    name: Animate
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AnimateKeyframes(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.AnimateKeyframes(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateKeyframes(double, double, UIViewKeyframeAnimationOptions, Action, UICompletionHandler)
  nameWithType: UIView.AnimateKeyframes(double, double, UIViewKeyframeAnimationOptions, Action, UICompletionHandler)
  fullName: UIKit.UIView.AnimateKeyframes(double, double, UIKit.UIViewKeyframeAnimationOptions, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.AnimateKeyframes(Double, Double, UIViewKeyframeAnimationOptions, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.AnimateKeyframes(Double, Double, UIKit.UIViewKeyframeAnimationOptions, System.Action, UIKit.UICompletionHandler)
  name.vb: AnimateKeyframes(Double, Double, UIViewKeyframeAnimationOptions, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.AnimateKeyframes(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateKeyframes
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewKeyframeAnimationOptions
    name: UIViewKeyframeAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateKeyframes(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateKeyframes
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewKeyframeAnimationOptions
    name: UIViewKeyframeAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.AnimateKeyframesAsync(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.AnimateKeyframesAsync(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateKeyframesAsync(double, double, UIViewKeyframeAnimationOptions, Action)
  nameWithType: UIView.AnimateKeyframesAsync(double, double, UIViewKeyframeAnimationOptions, Action)
  fullName: UIKit.UIView.AnimateKeyframesAsync(double, double, UIKit.UIViewKeyframeAnimationOptions, System.Action)
  nameWithType.vb: UIView.AnimateKeyframesAsync(Double, Double, UIViewKeyframeAnimationOptions, Action)
  fullName.vb: UIKit.UIView.AnimateKeyframesAsync(Double, Double, UIKit.UIViewKeyframeAnimationOptions, System.Action)
  name.vb: AnimateKeyframesAsync(Double, Double, UIViewKeyframeAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.AnimateKeyframesAsync(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action)
    name: AnimateKeyframesAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewKeyframeAnimationOptions
    name: UIViewKeyframeAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateKeyframesAsync(System.Double,System.Double,UIKit.UIViewKeyframeAnimationOptions,System.Action)
    name: AnimateKeyframesAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewKeyframeAnimationOptions
    name: UIViewKeyframeAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AnimateNotify(System.Double,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.AnimateNotify(System.Double,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotify(double, Action, UICompletionHandler)
  nameWithType: UIView.AnimateNotify(double, Action, UICompletionHandler)
  fullName: UIKit.UIView.AnimateNotify(double, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.AnimateNotify(Double, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.AnimateNotify(Double, System.Action, UIKit.UICompletionHandler)
  name.vb: AnimateNotify(Double, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Action)
  commentId: M:UIKit.UIView.AnimateNotifyAsync(System.Double,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotifyAsync(double, Action)
  nameWithType: UIView.AnimateNotifyAsync(double, Action)
  fullName: UIKit.UIView.AnimateNotifyAsync(double, System.Action)
  nameWithType.vb: UIView.AnimateNotifyAsync(Double, Action)
  fullName.vb: UIKit.UIView.AnimateNotifyAsync(Double, System.Action)
  name.vb: AnimateNotifyAsync(Double, Action)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.AnimateNotify(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotify(double, double, UIViewAnimationOptions, Action, UICompletionHandler)
  nameWithType: UIView.AnimateNotify(double, double, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName: UIKit.UIView.AnimateNotify(double, double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.AnimateNotify(Double, Double, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.AnimateNotify(Double, Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  name.vb: AnimateNotify(Double, Double, UIViewAnimationOptions, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotifyAsync(double, double, UIViewAnimationOptions, Action)
  nameWithType: UIView.AnimateNotifyAsync(double, double, UIViewAnimationOptions, Action)
  fullName: UIKit.UIView.AnimateNotifyAsync(double, double, UIKit.UIViewAnimationOptions, System.Action)
  nameWithType.vb: UIView.AnimateNotifyAsync(Double, Double, UIViewAnimationOptions, Action)
  fullName.vb: UIKit.UIView.AnimateNotifyAsync(Double, Double, UIKit.UIViewAnimationOptions, System.Action)
  name.vb: AnimateNotifyAsync(Double, Double, UIViewAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.AnimateNotify(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotify(double, double, NFloat, NFloat, UIViewAnimationOptions, Action, UICompletionHandler)
  nameWithType: UIView.AnimateNotify(double, double, NFloat, NFloat, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName: UIKit.UIView.AnimateNotify(double, double, System.Runtime.InteropServices.NFloat, System.Runtime.InteropServices.NFloat, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.AnimateNotify(Double, Double, NFloat, NFloat, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.AnimateNotify(Double, Double, System.Runtime.InteropServices.NFloat, System.Runtime.InteropServices.NFloat, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  name.vb: AnimateNotify(Double, Double, NFloat, NFloat, UIViewAnimationOptions, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotify(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: AnimateNotify
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: AnimateNotifyAsync(double, double, NFloat, NFloat, UIViewAnimationOptions, Action)
  nameWithType: UIView.AnimateNotifyAsync(double, double, NFloat, NFloat, UIViewAnimationOptions, Action)
  fullName: UIKit.UIView.AnimateNotifyAsync(double, double, System.Runtime.InteropServices.NFloat, System.Runtime.InteropServices.NFloat, UIKit.UIViewAnimationOptions, System.Action)
  nameWithType.vb: UIView.AnimateNotifyAsync(Double, Double, NFloat, NFloat, UIViewAnimationOptions, Action)
  fullName.vb: UIKit.UIView.AnimateNotifyAsync(Double, Double, System.Runtime.InteropServices.NFloat, System.Runtime.InteropServices.NFloat, UIKit.UIViewAnimationOptions, System.Action)
  name.vb: AnimateNotifyAsync(Double, Double, NFloat, NFloat, UIViewAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AnimateNotifyAsync(System.Double,System.Double,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,UIKit.UIViewAnimationOptions,System.Action)
    name: AnimateNotifyAsync
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.BeginAnimations(System.String,System.IntPtr)
  commentId: M:UIKit.UIView.BeginAnimations(System.String,System.IntPtr)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BeginAnimations(string, nint)
  nameWithType: UIView.BeginAnimations(string, nint)
  fullName: UIKit.UIView.BeginAnimations(string, nint)
  nameWithType.vb: UIView.BeginAnimations(String, IntPtr)
  fullName.vb: UIKit.UIView.BeginAnimations(String, System.IntPtr)
  name.vb: BeginAnimations(String, IntPtr)
  spec.csharp:
  - uid: UIKit.UIView.BeginAnimations(System.String,System.IntPtr)
    name: BeginAnimations
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: UIKit.UIView.BeginAnimations(System.String,System.IntPtr)
    name: BeginAnimations
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: UIKit.UIView.BringSubviewToFront(UIKit.UIView)
  commentId: M:UIKit.UIView.BringSubviewToFront(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: BringSubviewToFront(UIView)
  nameWithType: UIView.BringSubviewToFront(UIView)
  fullName: UIKit.UIView.BringSubviewToFront(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.BringSubviewToFront(UIKit.UIView)
    name: BringSubviewToFront
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.BringSubviewToFront(UIKit.UIView)
    name: BringSubviewToFront
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.CommitAnimations
  commentId: M:UIKit.UIView.CommitAnimations
  parent: UIKit.UIView
  isExternal: true
  name: CommitAnimations()
  nameWithType: UIView.CommitAnimations()
  fullName: UIKit.UIView.CommitAnimations()
  spec.csharp:
  - uid: UIKit.UIView.CommitAnimations
    name: CommitAnimations
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.CommitAnimations
    name: CommitAnimations
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
  commentId: M:UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
  parent: UIKit.UIView
  isExternal: true
  name: ContentCompressionResistancePriority(UILayoutConstraintAxis)
  nameWithType: UIView.ContentCompressionResistancePriority(UILayoutConstraintAxis)
  fullName: UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
  spec.csharp:
  - uid: UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
    name: ContentCompressionResistancePriority
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ContentCompressionResistancePriority(UIKit.UILayoutConstraintAxis)
    name: ContentCompressionResistancePriority
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
- uid: UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
  commentId: M:UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
  parent: UIKit.UIView
  isExternal: true
  name: ContentHuggingPriority(UILayoutConstraintAxis)
  nameWithType: UIView.ContentHuggingPriority(UILayoutConstraintAxis)
  fullName: UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
  spec.csharp:
  - uid: UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
    name: ContentHuggingPriority
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ContentHuggingPriority(UIKit.UILayoutConstraintAxis)
    name: ContentHuggingPriority
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  commentId: M:UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertPointFromCoordinateSpace(CGPoint, IUICoordinateSpace)
  nameWithType: UIView.ConvertPointFromCoordinateSpace(CGPoint, IUICoordinateSpace)
  fullName: UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace)
  spec.csharp:
  - uid: UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
    name: ConvertPointFromCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertPointFromCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
    name: ConvertPointFromCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint,UIKit.UIView)
  commentId: M:UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertPointFromView(CGPoint, UIView)
  nameWithType: UIView.ConvertPointFromView(CGPoint, UIView)
  fullName: UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint,UIKit.UIView)
    name: ConvertPointFromView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertPointFromView(CoreGraphics.CGPoint,UIKit.UIView)
    name: ConvertPointFromView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  commentId: M:UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertPointToCoordinateSpace(CGPoint, IUICoordinateSpace)
  nameWithType: UIView.ConvertPointToCoordinateSpace(CGPoint, IUICoordinateSpace)
  fullName: UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint, UIKit.IUICoordinateSpace)
  spec.csharp:
  - uid: UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
    name: ConvertPointToCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertPointToCoordinateSpace(CoreGraphics.CGPoint,UIKit.IUICoordinateSpace)
    name: ConvertPointToCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint,UIKit.UIView)
  commentId: M:UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertPointToView(CGPoint, UIView)
  nameWithType: UIView.ConvertPointToView(CGPoint, UIView)
  fullName: UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint,UIKit.UIView)
    name: ConvertPointToView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertPointToView(CoreGraphics.CGPoint,UIKit.UIView)
    name: ConvertPointToView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  commentId: M:UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertRectFromCoordinateSpace(CGRect, IUICoordinateSpace)
  nameWithType: UIView.ConvertRectFromCoordinateSpace(CGRect, IUICoordinateSpace)
  fullName: UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace)
  spec.csharp:
  - uid: UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
    name: ConvertRectFromCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertRectFromCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
    name: ConvertRectFromCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect,UIKit.UIView)
  commentId: M:UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertRectFromView(CGRect, UIView)
  nameWithType: UIView.ConvertRectFromView(CGRect, UIView)
  fullName: UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect,UIKit.UIView)
    name: ConvertRectFromView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertRectFromView(CoreGraphics.CGRect,UIKit.UIView)
    name: ConvertRectFromView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  commentId: M:UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertRectToCoordinateSpace(CGRect, IUICoordinateSpace)
  nameWithType: UIView.ConvertRectToCoordinateSpace(CGRect, IUICoordinateSpace)
  fullName: UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect, UIKit.IUICoordinateSpace)
  spec.csharp:
  - uid: UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
    name: ConvertRectToCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertRectToCoordinateSpace(CoreGraphics.CGRect,UIKit.IUICoordinateSpace)
    name: ConvertRectToCoordinateSpace
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.IUICoordinateSpace
    name: IUICoordinateSpace
    isExternal: true
  - name: )
- uid: UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect,UIKit.UIView)
  commentId: M:UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: ConvertRectToView(CGRect, UIView)
  nameWithType: UIView.ConvertRectToView(CGRect, UIView)
  fullName: UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect,UIKit.UIView)
    name: ConvertRectToView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ConvertRectToView(CoreGraphics.CGRect,UIKit.UIView)
    name: ConvertRectToView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
  commentId: M:UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
  parent: UIKit.UIView
  isExternal: true
  name: DecodeRestorableState(NSCoder)
  nameWithType: UIView.DecodeRestorableState(NSCoder)
  fullName: UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
  spec.csharp:
  - uid: UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
    name: DecodeRestorableState
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DecodeRestorableState(Foundation.NSCoder)
    name: DecodeRestorableState
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
- uid: UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
  commentId: M:UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
  parent: UIKit.UIView
  isExternal: true
  name: DidHintFocusMovement(UIFocusMovementHint)
  nameWithType: UIView.DidHintFocusMovement(UIFocusMovementHint)
  fullName: UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
  spec.csharp:
  - uid: UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
    name: DidHintFocusMovement
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusMovementHint
    name: UIFocusMovementHint
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DidHintFocusMovement(UIKit.UIFocusMovementHint)
    name: DidHintFocusMovement
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusMovementHint
    name: UIFocusMovementHint
    isExternal: true
  - name: )
- uid: UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)
  commentId: M:UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)
  parent: UIKit.UIView
  isExternal: true
  name: DidUpdateFocus(UIFocusUpdateContext, UIFocusAnimationCoordinator)
  nameWithType: UIView.DidUpdateFocus(UIFocusUpdateContext, UIFocusAnimationCoordinator)
  fullName: UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext, UIKit.UIFocusAnimationCoordinator)
  spec.csharp:
  - uid: UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)
    name: DidUpdateFocus
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusUpdateContext
    name: UIFocusUpdateContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIFocusAnimationCoordinator
    name: UIFocusAnimationCoordinator
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DidUpdateFocus(UIKit.UIFocusUpdateContext,UIKit.UIFocusAnimationCoordinator)
    name: DidUpdateFocus
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusUpdateContext
    name: UIFocusUpdateContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIFocusAnimationCoordinator
    name: UIFocusAnimationCoordinator
    isExternal: true
  - name: )
- uid: UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
  commentId: M:UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
  parent: UIKit.UIView
  isExternal: true
  name: DisplayLayer(CALayer)
  nameWithType: UIView.DisplayLayer(CALayer)
  fullName: UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
  spec.csharp:
  - uid: UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
    name: DisplayLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DisplayLayer(CoreAnimation.CALayer)
    name: DisplayLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
- uid: UIKit.UIView.Draw(CoreGraphics.CGRect)
  commentId: M:UIKit.UIView.Draw(CoreGraphics.CGRect)
  parent: UIKit.UIView
  isExternal: true
  name: Draw(CGRect)
  nameWithType: UIView.Draw(CGRect)
  fullName: UIKit.UIView.Draw(CoreGraphics.CGRect)
  spec.csharp:
  - uid: UIKit.UIView.Draw(CoreGraphics.CGRect)
    name: Draw
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.Draw(CoreGraphics.CGRect)
    name: Draw
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
- uid: UIKit.UIView.DrawLayer(CoreAnimation.CALayer,CoreGraphics.CGContext)
  commentId: M:UIKit.UIView.DrawLayer(CoreAnimation.CALayer,CoreGraphics.CGContext)
  parent: UIKit.UIView
  isExternal: true
  name: DrawLayer(CALayer, CGContext)
  nameWithType: UIView.DrawLayer(CALayer, CGContext)
  fullName: UIKit.UIView.DrawLayer(CoreAnimation.CALayer, CoreGraphics.CGContext)
  spec.csharp:
  - uid: UIKit.UIView.DrawLayer(CoreAnimation.CALayer,CoreGraphics.CGContext)
    name: DrawLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: ','
  - name: " "
  - uid: CoreGraphics.CGContext
    name: CGContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DrawLayer(CoreAnimation.CALayer,CoreGraphics.CGContext)
    name: DrawLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: ','
  - name: " "
  - uid: CoreGraphics.CGContext
    name: CGContext
    isExternal: true
  - name: )
- uid: UIKit.UIView.DrawRect(CoreGraphics.CGRect,UIKit.UIViewPrintFormatter)
  commentId: M:UIKit.UIView.DrawRect(CoreGraphics.CGRect,UIKit.UIViewPrintFormatter)
  parent: UIKit.UIView
  isExternal: true
  name: DrawRect(CGRect, UIViewPrintFormatter)
  nameWithType: UIView.DrawRect(CGRect, UIViewPrintFormatter)
  fullName: UIKit.UIView.DrawRect(CoreGraphics.CGRect, UIKit.UIViewPrintFormatter)
  spec.csharp:
  - uid: UIKit.UIView.DrawRect(CoreGraphics.CGRect,UIKit.UIViewPrintFormatter)
    name: DrawRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIViewPrintFormatter
    name: UIViewPrintFormatter
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DrawRect(CoreGraphics.CGRect,UIKit.UIViewPrintFormatter)
    name: DrawRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIViewPrintFormatter
    name: UIViewPrintFormatter
    isExternal: true
  - name: )
- uid: UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect,System.Boolean)
  commentId: M:UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect,System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DrawViewHierarchy(CGRect, bool)
  nameWithType: UIView.DrawViewHierarchy(CGRect, bool)
  fullName: UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect, bool)
  nameWithType.vb: UIView.DrawViewHierarchy(CGRect, Boolean)
  fullName.vb: UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect, Boolean)
  name.vb: DrawViewHierarchy(CGRect, Boolean)
  spec.csharp:
  - uid: UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect,System.Boolean)
    name: DrawViewHierarchy
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.DrawViewHierarchy(CoreGraphics.CGRect,System.Boolean)
    name: DrawViewHierarchy
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
  commentId: M:UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
  parent: UIKit.UIView
  isExternal: true
  name: EncodeRestorableState(NSCoder)
  nameWithType: UIView.EncodeRestorableState(NSCoder)
  fullName: UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
  spec.csharp:
  - uid: UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
    name: EncodeRestorableState
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.EncodeRestorableState(Foundation.NSCoder)
    name: EncodeRestorableState
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
- uid: UIKit.UIView.EncodeTo(Foundation.NSCoder)
  commentId: M:UIKit.UIView.EncodeTo(Foundation.NSCoder)
  parent: UIKit.UIView
  isExternal: true
  name: EncodeTo(NSCoder)
  nameWithType: UIView.EncodeTo(NSCoder)
  fullName: UIKit.UIView.EncodeTo(Foundation.NSCoder)
  spec.csharp:
  - uid: UIKit.UIView.EncodeTo(Foundation.NSCoder)
    name: EncodeTo
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.EncodeTo(Foundation.NSCoder)
    name: EncodeTo
    isExternal: true
  - name: (
  - uid: Foundation.NSCoder
    name: NSCoder
    isExternal: true
  - name: )
- uid: UIKit.UIView.ExchangeSubview(System.IntPtr,System.IntPtr)
  commentId: M:UIKit.UIView.ExchangeSubview(System.IntPtr,System.IntPtr)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: ExchangeSubview(nint, nint)
  nameWithType: UIView.ExchangeSubview(nint, nint)
  fullName: UIKit.UIView.ExchangeSubview(nint, nint)
  nameWithType.vb: UIView.ExchangeSubview(IntPtr, IntPtr)
  fullName.vb: UIKit.UIView.ExchangeSubview(System.IntPtr, System.IntPtr)
  name.vb: ExchangeSubview(IntPtr, IntPtr)
  spec.csharp:
  - uid: UIKit.UIView.ExchangeSubview(System.IntPtr,System.IntPtr)
    name: ExchangeSubview
    isExternal: true
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ExchangeSubview(System.IntPtr,System.IntPtr)
    name: ExchangeSubview
    isExternal: true
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: UIKit.UIView.ExerciseAmbiguityInLayout
  commentId: M:UIKit.UIView.ExerciseAmbiguityInLayout
  parent: UIKit.UIView
  isExternal: true
  name: ExerciseAmbiguityInLayout()
  nameWithType: UIView.ExerciseAmbiguityInLayout()
  fullName: UIKit.UIView.ExerciseAmbiguityInLayout()
  spec.csharp:
  - uid: UIKit.UIView.ExerciseAmbiguityInLayout
    name: ExerciseAmbiguityInLayout
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ExerciseAmbiguityInLayout
    name: ExerciseAmbiguityInLayout
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
  commentId: M:UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
  parent: UIKit.UIView
  isExternal: true
  name: FrameForAlignmentRect(CGRect)
  nameWithType: UIView.FrameForAlignmentRect(CGRect)
  fullName: UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
  spec.csharp:
  - uid: UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
    name: FrameForAlignmentRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.FrameForAlignmentRect(CoreGraphics.CGRect)
    name: FrameForAlignmentRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
- uid: UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
  commentId: M:UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
  parent: UIKit.UIView
  isExternal: true
  name: GestureRecognizerShouldBegin(UIGestureRecognizer)
  nameWithType: UIView.GestureRecognizerShouldBegin(UIGestureRecognizer)
  fullName: UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
  spec.csharp:
  - uid: UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
    name: GestureRecognizerShouldBegin
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GestureRecognizerShouldBegin(UIKit.UIGestureRecognizer)
    name: GestureRecognizerShouldBegin
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
  commentId: M:UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
  parent: UIKit.UIView
  isExternal: true
  name: GetConstraintsAffectingLayout(UILayoutConstraintAxis)
  nameWithType: UIView.GetConstraintsAffectingLayout(UILayoutConstraintAxis)
  fullName: UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
  spec.csharp:
  - uid: UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
    name: GetConstraintsAffectingLayout
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetConstraintsAffectingLayout(UIKit.UILayoutConstraintAxis)
    name: GetConstraintsAffectingLayout
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
  commentId: M:UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
  parent: UIKit.UIView
  isExternal: true
  name: GetFocusItems(CGRect)
  nameWithType: UIView.GetFocusItems(CGRect)
  fullName: UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
  spec.csharp:
  - uid: UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
    name: GetFocusItems
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetFocusItems(CoreGraphics.CGRect)
    name: GetFocusItems
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
  commentId: M:UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
  parent: UIKit.UIView
  isExternal: true
  name: GetUserInterfaceLayoutDirection(UISemanticContentAttribute)
  nameWithType: UIView.GetUserInterfaceLayoutDirection(UISemanticContentAttribute)
  fullName: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
  spec.csharp:
  - uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
    name: GetUserInterfaceLayoutDirection
    isExternal: true
  - name: (
  - uid: UIKit.UISemanticContentAttribute
    name: UISemanticContentAttribute
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute)
    name: GetUserInterfaceLayoutDirection
    isExternal: true
  - name: (
  - uid: UIKit.UISemanticContentAttribute
    name: UISemanticContentAttribute
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute,UIKit.UIUserInterfaceLayoutDirection)
  commentId: M:UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute,UIKit.UIUserInterfaceLayoutDirection)
  parent: UIKit.UIView
  isExternal: true
  name: GetUserInterfaceLayoutDirection(UISemanticContentAttribute, UIUserInterfaceLayoutDirection)
  nameWithType: UIView.GetUserInterfaceLayoutDirection(UISemanticContentAttribute, UIUserInterfaceLayoutDirection)
  fullName: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute, UIKit.UIUserInterfaceLayoutDirection)
  spec.csharp:
  - uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute,UIKit.UIUserInterfaceLayoutDirection)
    name: GetUserInterfaceLayoutDirection
    isExternal: true
  - name: (
  - uid: UIKit.UISemanticContentAttribute
    name: UISemanticContentAttribute
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIUserInterfaceLayoutDirection
    name: UIUserInterfaceLayoutDirection
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetUserInterfaceLayoutDirection(UIKit.UISemanticContentAttribute,UIKit.UIUserInterfaceLayoutDirection)
    name: GetUserInterfaceLayoutDirection
    isExternal: true
  - name: (
  - uid: UIKit.UISemanticContentAttribute
    name: UISemanticContentAttribute
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIUserInterfaceLayoutDirection
    name: UIUserInterfaceLayoutDirection
    isExternal: true
  - name: )
- uid: UIKit.UIView.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)
  commentId: M:UIKit.UIView.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)
  parent: UIKit.UIView
  isExternal: true
  name: HitTest(CGPoint, UIEvent)
  nameWithType: UIView.HitTest(CGPoint, UIEvent)
  fullName: UIKit.UIView.HitTest(CoreGraphics.CGPoint, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIView.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)
    name: HitTest
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.HitTest(CoreGraphics.CGPoint,UIKit.UIEvent)
    name: HitTest
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIView.InsertSubview(UIKit.UIView,System.IntPtr)
  commentId: M:UIKit.UIView.InsertSubview(UIKit.UIView,System.IntPtr)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: InsertSubview(UIView, nint)
  nameWithType: UIView.InsertSubview(UIView, nint)
  fullName: UIKit.UIView.InsertSubview(UIKit.UIView, nint)
  nameWithType.vb: UIView.InsertSubview(UIView, IntPtr)
  fullName.vb: UIKit.UIView.InsertSubview(UIKit.UIView, System.IntPtr)
  name.vb: InsertSubview(UIView, IntPtr)
  spec.csharp:
  - uid: UIKit.UIView.InsertSubview(UIKit.UIView,System.IntPtr)
    name: InsertSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: UIKit.UIView.InsertSubview(UIKit.UIView,System.IntPtr)
    name: InsertSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: UIKit.UIView.InsertSubviewAbove(UIKit.UIView,UIKit.UIView)
  commentId: M:UIKit.UIView.InsertSubviewAbove(UIKit.UIView,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: InsertSubviewAbove(UIView, UIView)
  nameWithType: UIView.InsertSubviewAbove(UIView, UIView)
  fullName: UIKit.UIView.InsertSubviewAbove(UIKit.UIView, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.InsertSubviewAbove(UIKit.UIView,UIKit.UIView)
    name: InsertSubviewAbove
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.InsertSubviewAbove(UIKit.UIView,UIKit.UIView)
    name: InsertSubviewAbove
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.InsertSubviewBelow(UIKit.UIView,UIKit.UIView)
  commentId: M:UIKit.UIView.InsertSubviewBelow(UIKit.UIView,UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: InsertSubviewBelow(UIView, UIView)
  nameWithType: UIView.InsertSubviewBelow(UIView, UIView)
  fullName: UIKit.UIView.InsertSubviewBelow(UIKit.UIView, UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.InsertSubviewBelow(UIKit.UIView,UIKit.UIView)
    name: InsertSubviewBelow
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.InsertSubviewBelow(UIKit.UIView,UIKit.UIView)
    name: InsertSubviewBelow
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.InvalidateIntrinsicContentSize
  commentId: M:UIKit.UIView.InvalidateIntrinsicContentSize
  parent: UIKit.UIView
  isExternal: true
  name: InvalidateIntrinsicContentSize()
  nameWithType: UIView.InvalidateIntrinsicContentSize()
  fullName: UIKit.UIView.InvalidateIntrinsicContentSize()
  spec.csharp:
  - uid: UIKit.UIView.InvalidateIntrinsicContentSize
    name: InvalidateIntrinsicContentSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.InvalidateIntrinsicContentSize
    name: InvalidateIntrinsicContentSize
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.IsDescendantOfView(UIKit.UIView)
  commentId: M:UIKit.UIView.IsDescendantOfView(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: IsDescendantOfView(UIView)
  nameWithType: UIView.IsDescendantOfView(UIView)
  fullName: UIKit.UIView.IsDescendantOfView(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.IsDescendantOfView(UIKit.UIView)
    name: IsDescendantOfView
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.IsDescendantOfView(UIKit.UIView)
    name: IsDescendantOfView
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.LayoutIfNeeded
  commentId: M:UIKit.UIView.LayoutIfNeeded
  parent: UIKit.UIView
  isExternal: true
  name: LayoutIfNeeded()
  nameWithType: UIView.LayoutIfNeeded()
  fullName: UIKit.UIView.LayoutIfNeeded()
  spec.csharp:
  - uid: UIKit.UIView.LayoutIfNeeded
    name: LayoutIfNeeded
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.LayoutIfNeeded
    name: LayoutIfNeeded
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
  commentId: M:UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
  parent: UIKit.UIView
  isExternal: true
  name: LayoutSublayersOfLayer(CALayer)
  nameWithType: UIView.LayoutSublayersOfLayer(CALayer)
  fullName: UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
  spec.csharp:
  - uid: UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
    name: LayoutSublayersOfLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.LayoutSublayersOfLayer(CoreAnimation.CALayer)
    name: LayoutSublayersOfLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
- uid: UIKit.UIView.LayoutSubviews
  commentId: M:UIKit.UIView.LayoutSubviews
  parent: UIKit.UIView
  isExternal: true
  name: LayoutSubviews()
  nameWithType: UIView.LayoutSubviews()
  fullName: UIKit.UIView.LayoutSubviews()
  spec.csharp:
  - uid: UIKit.UIView.LayoutSubviews
    name: LayoutSubviews
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.LayoutSubviews
    name: LayoutSubviews
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat,System.Boolean,System.Action)
  commentId: M:UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat,System.Boolean,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  name: ModifyAnimations(NFloat, bool, Action)
  nameWithType: UIView.ModifyAnimations(NFloat, bool, Action)
  fullName: UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat, bool, System.Action)
  nameWithType.vb: UIView.ModifyAnimations(NFloat, Boolean, Action)
  fullName.vb: UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat, Boolean, System.Action)
  name.vb: ModifyAnimations(NFloat, Boolean, Action)
  spec.csharp:
  - uid: UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat,System.Boolean,System.Action)
    name: ModifyAnimations
    isExternal: true
  - name: (
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ModifyAnimations(System.Runtime.InteropServices.NFloat,System.Boolean,System.Action)
    name: ModifyAnimations
    isExternal: true
  - name: (
  - uid: System.Runtime.InteropServices.NFloat
    name: NFloat
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.interopservices.nfloat
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.MovedToSuperview
  commentId: M:UIKit.UIView.MovedToSuperview
  parent: UIKit.UIView
  isExternal: true
  name: MovedToSuperview()
  nameWithType: UIView.MovedToSuperview()
  fullName: UIKit.UIView.MovedToSuperview()
  spec.csharp:
  - uid: UIKit.UIView.MovedToSuperview
    name: MovedToSuperview
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.MovedToSuperview
    name: MovedToSuperview
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.MovedToWindow
  commentId: M:UIKit.UIView.MovedToWindow
  parent: UIKit.UIView
  isExternal: true
  name: MovedToWindow()
  nameWithType: UIView.MovedToWindow()
  fullName: UIKit.UIView.MovedToWindow()
  spec.csharp:
  - uid: UIKit.UIView.MovedToWindow
    name: MovedToWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.MovedToWindow
    name: MovedToWindow
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.NeedsUpdateConstraints
  commentId: M:UIKit.UIView.NeedsUpdateConstraints
  parent: UIKit.UIView
  isExternal: true
  name: NeedsUpdateConstraints()
  nameWithType: UIView.NeedsUpdateConstraints()
  fullName: UIKit.UIView.NeedsUpdateConstraints()
  spec.csharp:
  - uid: UIKit.UIView.NeedsUpdateConstraints
    name: NeedsUpdateConstraints
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.NeedsUpdateConstraints
    name: NeedsUpdateConstraints
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: PerformSystemAnimation(UISystemAnimation, UIView[], UIViewAnimationOptions, Action, UICompletionHandler)
  nameWithType: UIView.PerformSystemAnimation(UISystemAnimation, UIView[], UIViewAnimationOptions, Action, UICompletionHandler)
  fullName: UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.PerformSystemAnimation(UISystemAnimation, UIView(), UIViewAnimationOptions, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation, UIKit.UIView(), UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  name.vb: PerformSystemAnimation(UISystemAnimation, UIView(), UIViewAnimationOptions, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: PerformSystemAnimation
    isExternal: true
  - name: (
  - uid: UIKit.UISystemAnimation
    name: UISystemAnimation
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.PerformSystemAnimation(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: PerformSystemAnimation
    isExternal: true
  - name: (
  - uid: UIKit.UISystemAnimation
    name: UISystemAnimation
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: PerformSystemAnimationAsync(UISystemAnimation, UIView[], UIViewAnimationOptions, Action)
  nameWithType: UIView.PerformSystemAnimationAsync(UISystemAnimation, UIView[], UIViewAnimationOptions, Action)
  fullName: UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation, UIKit.UIView[], UIKit.UIViewAnimationOptions, System.Action)
  nameWithType.vb: UIView.PerformSystemAnimationAsync(UISystemAnimation, UIView(), UIViewAnimationOptions, Action)
  fullName.vb: UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation, UIKit.UIView(), UIKit.UIViewAnimationOptions, System.Action)
  name.vb: PerformSystemAnimationAsync(UISystemAnimation, UIView(), UIViewAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action)
    name: PerformSystemAnimationAsync
    isExternal: true
  - name: (
  - uid: UIKit.UISystemAnimation
    name: UISystemAnimation
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.PerformSystemAnimationAsync(UIKit.UISystemAnimation,UIKit.UIView[],UIKit.UIViewAnimationOptions,System.Action)
    name: PerformSystemAnimationAsync
    isExternal: true
  - name: (
  - uid: UIKit.UISystemAnimation
    name: UISystemAnimation
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.PerformWithoutAnimation(System.Action)
  commentId: M:UIKit.UIView.PerformWithoutAnimation(System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: PerformWithoutAnimation(Action)
  nameWithType: UIView.PerformWithoutAnimation(Action)
  fullName: UIKit.UIView.PerformWithoutAnimation(System.Action)
  spec.csharp:
  - uid: UIKit.UIView.PerformWithoutAnimation(System.Action)
    name: PerformWithoutAnimation
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.PerformWithoutAnimation(System.Action)
    name: PerformWithoutAnimation
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)
  commentId: M:UIKit.UIView.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)
  parent: UIKit.UIView
  isExternal: true
  name: PointInside(CGPoint, UIEvent)
  nameWithType: UIView.PointInside(CGPoint, UIEvent)
  fullName: UIKit.UIView.PointInside(CoreGraphics.CGPoint, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIView.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)
    name: PointInside
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.PointInside(CoreGraphics.CGPoint,UIKit.UIEvent)
    name: PointInside
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGPoint
    name: CGPoint
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
  commentId: M:UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
  parent: UIKit.UIView
  isExternal: true
  name: RemoveConstraint(NSLayoutConstraint)
  nameWithType: UIView.RemoveConstraint(NSLayoutConstraint)
  fullName: UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
  spec.csharp:
  - uid: UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
    name: RemoveConstraint
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveConstraint(UIKit.NSLayoutConstraint)
    name: RemoveConstraint
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: )
- uid: UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
  commentId: M:UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
  parent: UIKit.UIView
  isExternal: true
  name: RemoveConstraints(NSLayoutConstraint[])
  nameWithType: UIView.RemoveConstraints(NSLayoutConstraint[])
  fullName: UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
  nameWithType.vb: UIView.RemoveConstraints(NSLayoutConstraint())
  fullName.vb: UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint())
  name.vb: RemoveConstraints(NSLayoutConstraint())
  spec.csharp:
  - uid: UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
    name: RemoveConstraints
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveConstraints(UIKit.NSLayoutConstraint[])
    name: RemoveConstraints
    isExternal: true
  - name: (
  - uid: UIKit.NSLayoutConstraint
    name: NSLayoutConstraint
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.RemoveFromSuperview
  commentId: M:UIKit.UIView.RemoveFromSuperview
  parent: UIKit.UIView
  isExternal: true
  name: RemoveFromSuperview()
  nameWithType: UIView.RemoveFromSuperview()
  fullName: UIKit.UIView.RemoveFromSuperview()
  spec.csharp:
  - uid: UIKit.UIView.RemoveFromSuperview
    name: RemoveFromSuperview
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveFromSuperview
    name: RemoveFromSuperview
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
  commentId: M:UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
  parent: UIKit.UIView
  isExternal: true
  name: RemoveGestureRecognizer(UIGestureRecognizer)
  nameWithType: UIView.RemoveGestureRecognizer(UIGestureRecognizer)
  fullName: UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
  spec.csharp:
  - uid: UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
    name: RemoveGestureRecognizer
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveGestureRecognizer(UIKit.UIGestureRecognizer)
    name: RemoveGestureRecognizer
    isExternal: true
  - name: (
  - uid: UIKit.UIGestureRecognizer
    name: UIGestureRecognizer
    isExternal: true
  - name: )
- uid: UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
  commentId: M:UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
  parent: UIKit.UIView
  isExternal: true
  name: RemoveInteraction(IUIInteraction)
  nameWithType: UIView.RemoveInteraction(IUIInteraction)
  fullName: UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
  spec.csharp:
  - uid: UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
    name: RemoveInteraction
    isExternal: true
  - name: (
  - uid: UIKit.IUIInteraction
    name: IUIInteraction
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveInteraction(UIKit.IUIInteraction)
    name: RemoveInteraction
    isExternal: true
  - name: (
  - uid: UIKit.IUIInteraction
    name: IUIInteraction
    isExternal: true
  - name: )
- uid: UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
  commentId: M:UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
  parent: UIKit.UIView
  isExternal: true
  name: RemoveLayoutGuide(UILayoutGuide)
  nameWithType: UIView.RemoveLayoutGuide(UILayoutGuide)
  fullName: UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
  spec.csharp:
  - uid: UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
    name: RemoveLayoutGuide
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutGuide
    name: UILayoutGuide
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveLayoutGuide(UIKit.UILayoutGuide)
    name: RemoveLayoutGuide
    isExternal: true
  - name: (
  - uid: UIKit.UILayoutGuide
    name: UILayoutGuide
    isExternal: true
  - name: )
- uid: UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
  commentId: M:UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
  parent: UIKit.UIView
  isExternal: true
  name: RemoveMotionEffect(UIMotionEffect)
  nameWithType: UIView.RemoveMotionEffect(UIMotionEffect)
  fullName: UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
  spec.csharp:
  - uid: UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
    name: RemoveMotionEffect
    isExternal: true
  - name: (
  - uid: UIKit.UIMotionEffect
    name: UIMotionEffect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RemoveMotionEffect(UIKit.UIMotionEffect)
    name: RemoveMotionEffect
    isExternal: true
  - name: (
  - uid: UIKit.UIMotionEffect
    name: UIMotionEffect
    isExternal: true
  - name: )
- uid: UIKit.UIView.RequiresConstraintBasedLayout
  commentId: M:UIKit.UIView.RequiresConstraintBasedLayout
  parent: UIKit.UIView
  isExternal: true
  name: RequiresConstraintBasedLayout()
  nameWithType: UIView.RequiresConstraintBasedLayout()
  fullName: UIKit.UIView.RequiresConstraintBasedLayout()
  spec.csharp:
  - uid: UIKit.UIView.RequiresConstraintBasedLayout
    name: RequiresConstraintBasedLayout
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.RequiresConstraintBasedLayout
    name: RequiresConstraintBasedLayout
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect,System.Boolean,UIKit.UIEdgeInsets)
  commentId: M:UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect,System.Boolean,UIKit.UIEdgeInsets)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ResizableSnapshotView(CGRect, bool, UIEdgeInsets)
  nameWithType: UIView.ResizableSnapshotView(CGRect, bool, UIEdgeInsets)
  fullName: UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect, bool, UIKit.UIEdgeInsets)
  nameWithType.vb: UIView.ResizableSnapshotView(CGRect, Boolean, UIEdgeInsets)
  fullName.vb: UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect, Boolean, UIKit.UIEdgeInsets)
  name.vb: ResizableSnapshotView(CGRect, Boolean, UIEdgeInsets)
  spec.csharp:
  - uid: UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect,System.Boolean,UIKit.UIEdgeInsets)
    name: ResizableSnapshotView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: UIKit.UIEdgeInsets
    name: UIEdgeInsets
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ResizableSnapshotView(CoreGraphics.CGRect,System.Boolean,UIKit.UIEdgeInsets)
    name: ResizableSnapshotView
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: UIKit.UIEdgeInsets
    name: UIEdgeInsets
    isExternal: true
  - name: )
- uid: UIKit.UIView.SafeAreaInsetsDidChange
  commentId: M:UIKit.UIView.SafeAreaInsetsDidChange
  parent: UIKit.UIView
  isExternal: true
  name: SafeAreaInsetsDidChange()
  nameWithType: UIView.SafeAreaInsetsDidChange()
  fullName: UIKit.UIView.SafeAreaInsetsDidChange()
  spec.csharp:
  - uid: UIKit.UIView.SafeAreaInsetsDidChange
    name: SafeAreaInsetsDidChange
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SafeAreaInsetsDidChange
    name: SafeAreaInsetsDidChange
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.SendSubviewToBack(UIKit.UIView)
  commentId: M:UIKit.UIView.SendSubviewToBack(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: SendSubviewToBack(UIView)
  nameWithType: UIView.SendSubviewToBack(UIView)
  fullName: UIKit.UIView.SendSubviewToBack(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.SendSubviewToBack(UIKit.UIView)
    name: SendSubviewToBack
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SendSubviewToBack(UIKit.UIView)
    name: SendSubviewToBack
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean)
  commentId: M:UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetAnimationBeginsFromCurrentState(bool)
  nameWithType: UIView.SetAnimationBeginsFromCurrentState(bool)
  fullName: UIKit.UIView.SetAnimationBeginsFromCurrentState(bool)
  nameWithType.vb: UIView.SetAnimationBeginsFromCurrentState(Boolean)
  fullName.vb: UIKit.UIView.SetAnimationBeginsFromCurrentState(Boolean)
  name.vb: SetAnimationBeginsFromCurrentState(Boolean)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean)
    name: SetAnimationBeginsFromCurrentState
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationBeginsFromCurrentState(System.Boolean)
    name: SetAnimationBeginsFromCurrentState
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
  commentId: M:UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
  parent: UIKit.UIView
  isExternal: true
  name: SetAnimationCurve(UIViewAnimationCurve)
  nameWithType: UIView.SetAnimationCurve(UIViewAnimationCurve)
  fullName: UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
    name: SetAnimationCurve
    isExternal: true
  - name: (
  - uid: UIKit.UIViewAnimationCurve
    name: UIViewAnimationCurve
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationCurve(UIKit.UIViewAnimationCurve)
    name: SetAnimationCurve
    isExternal: true
  - name: (
  - uid: UIKit.UIViewAnimationCurve
    name: UIViewAnimationCurve
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetAnimationDelay(System.Double)
  commentId: M:UIKit.UIView.SetAnimationDelay(System.Double)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: SetAnimationDelay(double)
  nameWithType: UIView.SetAnimationDelay(double)
  fullName: UIKit.UIView.SetAnimationDelay(double)
  nameWithType.vb: UIView.SetAnimationDelay(Double)
  fullName.vb: UIKit.UIView.SetAnimationDelay(Double)
  name.vb: SetAnimationDelay(Double)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationDelay(System.Double)
    name: SetAnimationDelay
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationDelay(System.Double)
    name: SetAnimationDelay
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
  commentId: M:UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
  parent: UIKit.UIView
  isExternal: true
  name: SetAnimationDelegate(NSObject)
  nameWithType: UIView.SetAnimationDelegate(NSObject)
  fullName: UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
    name: SetAnimationDelegate
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationDelegate(Foundation.NSObject)
    name: SetAnimationDelegate
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
  commentId: M:UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
  parent: UIKit.UIView
  isExternal: true
  name: SetAnimationDidStopSelector(Selector)
  nameWithType: UIView.SetAnimationDidStopSelector(Selector)
  fullName: UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
    name: SetAnimationDidStopSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationDidStopSelector(ObjCRuntime.Selector)
    name: SetAnimationDidStopSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetAnimationDuration(System.Double)
  commentId: M:UIKit.UIView.SetAnimationDuration(System.Double)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: SetAnimationDuration(double)
  nameWithType: UIView.SetAnimationDuration(double)
  fullName: UIKit.UIView.SetAnimationDuration(double)
  nameWithType.vb: UIView.SetAnimationDuration(Double)
  fullName.vb: UIKit.UIView.SetAnimationDuration(Double)
  name.vb: SetAnimationDuration(Double)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationDuration(System.Double)
    name: SetAnimationDuration
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationDuration(System.Double)
    name: SetAnimationDuration
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean)
  commentId: M:UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetAnimationRepeatAutoreverses(bool)
  nameWithType: UIView.SetAnimationRepeatAutoreverses(bool)
  fullName: UIKit.UIView.SetAnimationRepeatAutoreverses(bool)
  nameWithType.vb: UIView.SetAnimationRepeatAutoreverses(Boolean)
  fullName.vb: UIKit.UIView.SetAnimationRepeatAutoreverses(Boolean)
  name.vb: SetAnimationRepeatAutoreverses(Boolean)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean)
    name: SetAnimationRepeatAutoreverses
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationRepeatAutoreverses(System.Boolean)
    name: SetAnimationRepeatAutoreverses
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.SetAnimationRepeatCount(System.Single)
  commentId: M:UIKit.UIView.SetAnimationRepeatCount(System.Single)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SetAnimationRepeatCount(float)
  nameWithType: UIView.SetAnimationRepeatCount(float)
  fullName: UIKit.UIView.SetAnimationRepeatCount(float)
  nameWithType.vb: UIView.SetAnimationRepeatCount(Single)
  fullName.vb: UIKit.UIView.SetAnimationRepeatCount(Single)
  name.vb: SetAnimationRepeatCount(Single)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationRepeatCount(System.Single)
    name: SetAnimationRepeatCount
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationRepeatCount(System.Single)
    name: SetAnimationRepeatCount
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
  commentId: M:UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
  parent: UIKit.UIView
  isExternal: true
  name: SetAnimationStartDate(NSDate)
  nameWithType: UIView.SetAnimationStartDate(NSDate)
  fullName: UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
    name: SetAnimationStartDate
    isExternal: true
  - name: (
  - uid: Foundation.NSDate
    name: NSDate
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationStartDate(Foundation.NSDate)
    name: SetAnimationStartDate
    isExternal: true
  - name: (
  - uid: Foundation.NSDate
    name: NSDate
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition,UIKit.UIView,System.Boolean)
  commentId: M:UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition,UIKit.UIView,System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetAnimationTransition(UIViewAnimationTransition, UIView, bool)
  nameWithType: UIView.SetAnimationTransition(UIViewAnimationTransition, UIView, bool)
  fullName: UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition, UIKit.UIView, bool)
  nameWithType.vb: UIView.SetAnimationTransition(UIViewAnimationTransition, UIView, Boolean)
  fullName.vb: UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition, UIKit.UIView, Boolean)
  name.vb: SetAnimationTransition(UIViewAnimationTransition, UIView, Boolean)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition,UIKit.UIView,System.Boolean)
    name: SetAnimationTransition
    isExternal: true
  - name: (
  - uid: UIKit.UIViewAnimationTransition
    name: UIViewAnimationTransition
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationTransition(UIKit.UIViewAnimationTransition,UIKit.UIView,System.Boolean)
    name: SetAnimationTransition
    isExternal: true
  - name: (
  - uid: UIKit.UIViewAnimationTransition
    name: UIViewAnimationTransition
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
  commentId: M:UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
  parent: UIKit.UIView
  isExternal: true
  name: SetAnimationWillStartSelector(Selector)
  nameWithType: UIView.SetAnimationWillStartSelector(Selector)
  fullName: UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
    name: SetAnimationWillStartSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetAnimationWillStartSelector(ObjCRuntime.Selector)
    name: SetAnimationWillStartSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetContentCompressionResistancePriority(System.Single,UIKit.UILayoutConstraintAxis)
  commentId: M:UIKit.UIView.SetContentCompressionResistancePriority(System.Single,UIKit.UILayoutConstraintAxis)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SetContentCompressionResistancePriority(float, UILayoutConstraintAxis)
  nameWithType: UIView.SetContentCompressionResistancePriority(float, UILayoutConstraintAxis)
  fullName: UIKit.UIView.SetContentCompressionResistancePriority(float, UIKit.UILayoutConstraintAxis)
  nameWithType.vb: UIView.SetContentCompressionResistancePriority(Single, UILayoutConstraintAxis)
  fullName.vb: UIKit.UIView.SetContentCompressionResistancePriority(Single, UIKit.UILayoutConstraintAxis)
  name.vb: SetContentCompressionResistancePriority(Single, UILayoutConstraintAxis)
  spec.csharp:
  - uid: UIKit.UIView.SetContentCompressionResistancePriority(System.Single,UIKit.UILayoutConstraintAxis)
    name: SetContentCompressionResistancePriority
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetContentCompressionResistancePriority(System.Single,UIKit.UILayoutConstraintAxis)
    name: SetContentCompressionResistancePriority
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetContentHuggingPriority(System.Single,UIKit.UILayoutConstraintAxis)
  commentId: M:UIKit.UIView.SetContentHuggingPriority(System.Single,UIKit.UILayoutConstraintAxis)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SetContentHuggingPriority(float, UILayoutConstraintAxis)
  nameWithType: UIView.SetContentHuggingPriority(float, UILayoutConstraintAxis)
  fullName: UIKit.UIView.SetContentHuggingPriority(float, UIKit.UILayoutConstraintAxis)
  nameWithType.vb: UIView.SetContentHuggingPriority(Single, UILayoutConstraintAxis)
  fullName.vb: UIKit.UIView.SetContentHuggingPriority(Single, UIKit.UILayoutConstraintAxis)
  name.vb: SetContentHuggingPriority(Single, UILayoutConstraintAxis)
  spec.csharp:
  - uid: UIKit.UIView.SetContentHuggingPriority(System.Single,UIKit.UILayoutConstraintAxis)
    name: SetContentHuggingPriority
    isExternal: true
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetContentHuggingPriority(System.Single,UIKit.UILayoutConstraintAxis)
    name: SetContentHuggingPriority
    isExternal: true
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UIKit.UILayoutConstraintAxis
    name: UILayoutConstraintAxis
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetNeedsDisplay
  commentId: M:UIKit.UIView.SetNeedsDisplay
  parent: UIKit.UIView
  isExternal: true
  name: SetNeedsDisplay()
  nameWithType: UIView.SetNeedsDisplay()
  fullName: UIKit.UIView.SetNeedsDisplay()
  spec.csharp:
  - uid: UIKit.UIView.SetNeedsDisplay
    name: SetNeedsDisplay
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetNeedsDisplay
    name: SetNeedsDisplay
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
  commentId: M:UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
  parent: UIKit.UIView
  isExternal: true
  name: SetNeedsDisplayInRect(CGRect)
  nameWithType: UIView.SetNeedsDisplayInRect(CGRect)
  fullName: UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
  spec.csharp:
  - uid: UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
    name: SetNeedsDisplayInRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetNeedsDisplayInRect(CoreGraphics.CGRect)
    name: SetNeedsDisplayInRect
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGRect
    name: CGRect
    isExternal: true
  - name: )
- uid: UIKit.UIView.SetNeedsFocusUpdate
  commentId: M:UIKit.UIView.SetNeedsFocusUpdate
  parent: UIKit.UIView
  isExternal: true
  name: SetNeedsFocusUpdate()
  nameWithType: UIView.SetNeedsFocusUpdate()
  fullName: UIKit.UIView.SetNeedsFocusUpdate()
  spec.csharp:
  - uid: UIKit.UIView.SetNeedsFocusUpdate
    name: SetNeedsFocusUpdate
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetNeedsFocusUpdate
    name: SetNeedsFocusUpdate
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.SetNeedsLayout
  commentId: M:UIKit.UIView.SetNeedsLayout
  parent: UIKit.UIView
  isExternal: true
  name: SetNeedsLayout()
  nameWithType: UIView.SetNeedsLayout()
  fullName: UIKit.UIView.SetNeedsLayout()
  spec.csharp:
  - uid: UIKit.UIView.SetNeedsLayout
    name: SetNeedsLayout
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetNeedsLayout
    name: SetNeedsLayout
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.SetNeedsUpdateConstraints
  commentId: M:UIKit.UIView.SetNeedsUpdateConstraints
  parent: UIKit.UIView
  isExternal: true
  name: SetNeedsUpdateConstraints()
  nameWithType: UIView.SetNeedsUpdateConstraints()
  fullName: UIKit.UIView.SetNeedsUpdateConstraints()
  spec.csharp:
  - uid: UIKit.UIView.SetNeedsUpdateConstraints
    name: SetNeedsUpdateConstraints
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SetNeedsUpdateConstraints
    name: SetNeedsUpdateConstraints
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
  commentId: M:UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
  parent: UIKit.UIView
  isExternal: true
  name: ShouldUpdateFocus(UIFocusUpdateContext)
  nameWithType: UIView.ShouldUpdateFocus(UIFocusUpdateContext)
  fullName: UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
  spec.csharp:
  - uid: UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
    name: ShouldUpdateFocus
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusUpdateContext
    name: UIFocusUpdateContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ShouldUpdateFocus(UIKit.UIFocusUpdateContext)
    name: ShouldUpdateFocus
    isExternal: true
  - name: (
  - uid: UIKit.UIFocusUpdateContext
    name: UIFocusUpdateContext
    isExternal: true
  - name: )
- uid: UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
  commentId: M:UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
  parent: UIKit.UIView
  isExternal: true
  name: SizeThatFits(CGSize)
  nameWithType: UIView.SizeThatFits(CGSize)
  fullName: UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
  spec.csharp:
  - uid: UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
    name: SizeThatFits
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SizeThatFits(CoreGraphics.CGSize)
    name: SizeThatFits
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: )
- uid: UIKit.UIView.SizeToFit
  commentId: M:UIKit.UIView.SizeToFit
  parent: UIKit.UIView
  isExternal: true
  name: SizeToFit()
  nameWithType: UIView.SizeToFit()
  fullName: UIKit.UIView.SizeToFit()
  spec.csharp:
  - uid: UIKit.UIView.SizeToFit
    name: SizeToFit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SizeToFit
    name: SizeToFit
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.SnapshotView(System.Boolean)
  commentId: M:UIKit.UIView.SnapshotView(System.Boolean)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SnapshotView(bool)
  nameWithType: UIView.SnapshotView(bool)
  fullName: UIKit.UIView.SnapshotView(bool)
  nameWithType.vb: UIView.SnapshotView(Boolean)
  fullName.vb: UIKit.UIView.SnapshotView(Boolean)
  name.vb: SnapshotView(Boolean)
  spec.csharp:
  - uid: UIKit.UIView.SnapshotView(System.Boolean)
    name: SnapshotView
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SnapshotView(System.Boolean)
    name: SnapshotView
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UIKit.UIView.SubviewAdded(UIKit.UIView)
  commentId: M:UIKit.UIView.SubviewAdded(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: SubviewAdded(UIView)
  nameWithType: UIView.SubviewAdded(UIView)
  fullName: UIKit.UIView.SubviewAdded(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.SubviewAdded(UIKit.UIView)
    name: SubviewAdded
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SubviewAdded(UIKit.UIView)
    name: SubviewAdded
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
  commentId: M:UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
  parent: UIKit.UIView
  isExternal: true
  name: SystemLayoutSizeFittingSize(CGSize)
  nameWithType: UIView.SystemLayoutSizeFittingSize(CGSize)
  fullName: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
  spec.csharp:
  - uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
    name: SystemLayoutSizeFittingSize
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize)
    name: SystemLayoutSizeFittingSize
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: )
- uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize,System.Single,System.Single)
  commentId: M:UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize,System.Single,System.Single)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SystemLayoutSizeFittingSize(CGSize, float, float)
  nameWithType: UIView.SystemLayoutSizeFittingSize(CGSize, float, float)
  fullName: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize, float, float)
  nameWithType.vb: UIView.SystemLayoutSizeFittingSize(CGSize, Single, Single)
  fullName.vb: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize, Single, Single)
  name.vb: SystemLayoutSizeFittingSize(CGSize, Single, Single)
  spec.csharp:
  - uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize,System.Single,System.Single)
    name: SystemLayoutSizeFittingSize
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UIKit.UIView.SystemLayoutSizeFittingSize(CoreGraphics.CGSize,System.Single,System.Single)
    name: SystemLayoutSizeFittingSize
    isExternal: true
  - name: (
  - uid: CoreGraphics.CGSize
    name: CGSize
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UIKit.UIView.TintColorDidChange
  commentId: M:UIKit.UIView.TintColorDidChange
  parent: UIKit.UIView
  isExternal: true
  name: TintColorDidChange()
  nameWithType: UIView.TintColorDidChange()
  fullName: UIKit.UIView.TintColorDidChange()
  spec.csharp:
  - uid: UIKit.UIView.TintColorDidChange
    name: TintColorDidChange
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TintColorDidChange
    name: TintColorDidChange
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
  commentId: M:UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
  parent: UIKit.UIView
  isExternal: true
  name: TraitCollectionDidChange(UITraitCollection)
  nameWithType: UIView.TraitCollectionDidChange(UITraitCollection)
  fullName: UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
  spec.csharp:
  - uid: UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
    name: TraitCollectionDidChange
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TraitCollectionDidChange(UIKit.UITraitCollection)
    name: TraitCollectionDidChange
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
- uid: UIKit.UIView.TransitionNotify(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.TransitionNotify(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: TransitionNotify(UIView, UIView, double, UIViewAnimationOptions, UICompletionHandler)
  nameWithType: UIView.TransitionNotify(UIView, UIView, double, UIViewAnimationOptions, UICompletionHandler)
  fullName: UIKit.UIView.TransitionNotify(UIKit.UIView, UIKit.UIView, double, UIKit.UIViewAnimationOptions, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.TransitionNotify(UIView, UIView, Double, UIViewAnimationOptions, UICompletionHandler)
  fullName.vb: UIKit.UIView.TransitionNotify(UIKit.UIView, UIKit.UIView, Double, UIKit.UIViewAnimationOptions, UIKit.UICompletionHandler)
  name.vb: TransitionNotify(UIView, UIView, Double, UIViewAnimationOptions, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.TransitionNotify(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,UIKit.UICompletionHandler)
    name: TransitionNotify
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TransitionNotify(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,UIKit.UICompletionHandler)
    name: TransitionNotify
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions)
  commentId: M:UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: TransitionNotifyAsync(UIView, UIView, double, UIViewAnimationOptions)
  nameWithType: UIView.TransitionNotifyAsync(UIView, UIView, double, UIViewAnimationOptions)
  fullName: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, UIKit.UIView, double, UIKit.UIViewAnimationOptions)
  nameWithType.vb: UIView.TransitionNotifyAsync(UIView, UIView, Double, UIViewAnimationOptions)
  fullName.vb: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, UIKit.UIView, Double, UIKit.UIViewAnimationOptions)
  name.vb: TransitionNotifyAsync(UIView, UIView, Double, UIViewAnimationOptions)
  spec.csharp:
  - uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions)
    name: TransitionNotifyAsync
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions)
    name: TransitionNotifyAsync
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: )
- uid: UIKit.UIView.TransitionNotify(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  commentId: M:UIKit.UIView.TransitionNotify(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: TransitionNotify(UIView, double, UIViewAnimationOptions, Action, UICompletionHandler)
  nameWithType: UIView.TransitionNotify(UIView, double, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName: UIKit.UIView.TransitionNotify(UIKit.UIView, double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  nameWithType.vb: UIView.TransitionNotify(UIView, Double, UIViewAnimationOptions, Action, UICompletionHandler)
  fullName.vb: UIKit.UIView.TransitionNotify(UIKit.UIView, Double, UIKit.UIViewAnimationOptions, System.Action, UIKit.UICompletionHandler)
  name.vb: TransitionNotify(UIView, Double, UIViewAnimationOptions, Action, UICompletionHandler)
  spec.csharp:
  - uid: UIKit.UIView.TransitionNotify(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: TransitionNotify
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TransitionNotify(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action,UIKit.UICompletionHandler)
    name: TransitionNotify
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: UIKit.UICompletionHandler
    name: UICompletionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  commentId: M:UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: TransitionNotifyAsync(UIView, double, UIViewAnimationOptions, Action)
  nameWithType: UIView.TransitionNotifyAsync(UIView, double, UIViewAnimationOptions, Action)
  fullName: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, double, UIKit.UIViewAnimationOptions, System.Action)
  nameWithType.vb: UIView.TransitionNotifyAsync(UIView, Double, UIViewAnimationOptions, Action)
  fullName.vb: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView, Double, UIKit.UIViewAnimationOptions, System.Action)
  name.vb: TransitionNotifyAsync(UIView, Double, UIViewAnimationOptions, Action)
  spec.csharp:
  - uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: TransitionNotifyAsync
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: UIKit.UIView.TransitionNotifyAsync(UIKit.UIView,System.Double,UIKit.UIViewAnimationOptions,System.Action)
    name: TransitionNotifyAsync
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: UIKit.UIViewAnimationOptions
    name: UIViewAnimationOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: UIKit.UIView.UpdateConstraints
  commentId: M:UIKit.UIView.UpdateConstraints
  parent: UIKit.UIView
  isExternal: true
  name: UpdateConstraints()
  nameWithType: UIView.UpdateConstraints()
  fullName: UIKit.UIView.UpdateConstraints()
  spec.csharp:
  - uid: UIKit.UIView.UpdateConstraints
    name: UpdateConstraints
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.UpdateConstraints
    name: UpdateConstraints
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.UpdateConstraintsIfNeeded
  commentId: M:UIKit.UIView.UpdateConstraintsIfNeeded
  parent: UIKit.UIView
  isExternal: true
  name: UpdateConstraintsIfNeeded()
  nameWithType: UIView.UpdateConstraintsIfNeeded()
  fullName: UIKit.UIView.UpdateConstraintsIfNeeded()
  spec.csharp:
  - uid: UIKit.UIView.UpdateConstraintsIfNeeded
    name: UpdateConstraintsIfNeeded
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.UpdateConstraintsIfNeeded
    name: UpdateConstraintsIfNeeded
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.UpdateFocusIfNeeded
  commentId: M:UIKit.UIView.UpdateFocusIfNeeded
  parent: UIKit.UIView
  isExternal: true
  name: UpdateFocusIfNeeded()
  nameWithType: UIView.UpdateFocusIfNeeded()
  fullName: UIKit.UIView.UpdateFocusIfNeeded()
  spec.csharp:
  - uid: UIKit.UIView.UpdateFocusIfNeeded
    name: UpdateFocusIfNeeded
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.UpdateFocusIfNeeded
    name: UpdateFocusIfNeeded
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIView.ViewWithTag(System.IntPtr)
  commentId: M:UIKit.UIView.ViewWithTag(System.IntPtr)
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: ViewWithTag(nint)
  nameWithType: UIView.ViewWithTag(nint)
  fullName: UIKit.UIView.ViewWithTag(nint)
  nameWithType.vb: UIView.ViewWithTag(IntPtr)
  fullName.vb: UIKit.UIView.ViewWithTag(System.IntPtr)
  name.vb: ViewWithTag(IntPtr)
  spec.csharp:
  - uid: UIKit.UIView.ViewWithTag(System.IntPtr)
    name: ViewWithTag
    isExternal: true
  - name: (
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: UIKit.UIView.ViewWithTag(System.IntPtr)
    name: ViewWithTag
    isExternal: true
  - name: (
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
  commentId: M:UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
  parent: UIKit.UIView
  isExternal: true
  name: WillDrawLayer(CALayer)
  nameWithType: UIView.WillDrawLayer(CALayer)
  fullName: UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
  spec.csharp:
  - uid: UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
    name: WillDrawLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.WillDrawLayer(CoreAnimation.CALayer)
    name: WillDrawLayer
    isExternal: true
  - name: (
  - uid: CoreAnimation.CALayer
    name: CALayer
    isExternal: true
  - name: )
- uid: UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
  commentId: M:UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: WillMoveToSuperview(UIView)
  nameWithType: UIView.WillMoveToSuperview(UIView)
  fullName: UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
    name: WillMoveToSuperview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.WillMoveToSuperview(UIKit.UIView)
    name: WillMoveToSuperview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
  commentId: M:UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
  parent: UIKit.UIView
  isExternal: true
  name: WillMoveToWindow(UIWindow)
  nameWithType: UIView.WillMoveToWindow(UIWindow)
  fullName: UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
  spec.csharp:
  - uid: UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
    name: WillMoveToWindow
    isExternal: true
  - name: (
  - uid: UIKit.UIWindow
    name: UIWindow
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.WillMoveToWindow(UIKit.UIWindow)
    name: WillMoveToWindow
    isExternal: true
  - name: (
  - uid: UIKit.UIWindow
    name: UIWindow
    isExternal: true
  - name: )
- uid: UIKit.UIView.WillRemoveSubview(UIKit.UIView)
  commentId: M:UIKit.UIView.WillRemoveSubview(UIKit.UIView)
  parent: UIKit.UIView
  isExternal: true
  name: WillRemoveSubview(UIView)
  nameWithType: UIView.WillRemoveSubview(UIView)
  fullName: UIKit.UIView.WillRemoveSubview(UIKit.UIView)
  spec.csharp:
  - uid: UIKit.UIView.WillRemoveSubview(UIKit.UIView)
    name: WillRemoveSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.WillRemoveSubview(UIKit.UIView)
    name: WillRemoveSubview
    isExternal: true
  - name: (
  - uid: UIKit.UIView
    name: UIView
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetAppearance``1
  commentId: M:UIKit.UIView.GetAppearance``1
  parent: UIKit.UIView
  isExternal: true
  name: GetAppearance<T>()
  nameWithType: UIView.GetAppearance<T>()
  fullName: UIKit.UIView.GetAppearance<T>()
  nameWithType.vb: UIView.GetAppearance(Of T)()
  fullName.vb: UIKit.UIView.GetAppearance(Of T)()
  name.vb: GetAppearance(Of T)()
  spec.csharp:
  - uid: UIKit.UIView.GetAppearance``1
    name: GetAppearance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetAppearance``1
    name: GetAppearance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UIKit.UIView.AppearanceWhenContainedIn(System.Type[])
  commentId: M:UIKit.UIView.AppearanceWhenContainedIn(System.Type[])
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: AppearanceWhenContainedIn(params Type[])
  nameWithType: UIView.AppearanceWhenContainedIn(params Type[])
  fullName: UIKit.UIView.AppearanceWhenContainedIn(params System.Type[])
  nameWithType.vb: UIView.AppearanceWhenContainedIn(ParamArray Type())
  fullName.vb: UIKit.UIView.AppearanceWhenContainedIn(ParamArray System.Type())
  name.vb: AppearanceWhenContainedIn(ParamArray Type())
  spec.csharp:
  - uid: UIKit.UIView.AppearanceWhenContainedIn(System.Type[])
    name: AppearanceWhenContainedIn
    isExternal: true
  - name: (
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.AppearanceWhenContainedIn(System.Type[])
    name: AppearanceWhenContainedIn
    isExternal: true
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
  commentId: M:UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
  parent: UIKit.UIView
  isExternal: true
  name: GetAppearance(UITraitCollection)
  nameWithType: UIView.GetAppearance(UITraitCollection)
  fullName: UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
  spec.csharp:
  - uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
    name: GetAppearance
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection)
    name: GetAppearance
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection,System.Type[])
  commentId: M:UIKit.UIView.GetAppearance(UIKit.UITraitCollection,System.Type[])
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetAppearance(UITraitCollection, params Type[])
  nameWithType: UIView.GetAppearance(UITraitCollection, params Type[])
  fullName: UIKit.UIView.GetAppearance(UIKit.UITraitCollection, params System.Type[])
  nameWithType.vb: UIView.GetAppearance(UITraitCollection, ParamArray Type())
  fullName.vb: UIKit.UIView.GetAppearance(UIKit.UITraitCollection, ParamArray System.Type())
  name.vb: GetAppearance(UITraitCollection, ParamArray Type())
  spec.csharp:
  - uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection,System.Type[])
    name: GetAppearance
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetAppearance(UIKit.UITraitCollection,System.Type[])
    name: GetAppearance
    isExternal: true
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection)
  commentId: M:UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection)
  parent: UIKit.UIView
  isExternal: true
  name: GetAppearance<T>(UITraitCollection)
  nameWithType: UIView.GetAppearance<T>(UITraitCollection)
  fullName: UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection)
  nameWithType.vb: UIView.GetAppearance(Of T)(UITraitCollection)
  fullName.vb: UIKit.UIView.GetAppearance(Of T)(UIKit.UITraitCollection)
  name.vb: GetAppearance(Of T)(UITraitCollection)
  spec.csharp:
  - uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection)
    name: GetAppearance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection)
    name: GetAppearance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: )
- uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection,System.Type[])
  commentId: M:UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection,System.Type[])
  parent: UIKit.UIView
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetAppearance<T>(UITraitCollection, params Type[])
  nameWithType: UIView.GetAppearance<T>(UITraitCollection, params Type[])
  fullName: UIKit.UIView.GetAppearance<T>(UIKit.UITraitCollection, params System.Type[])
  nameWithType.vb: UIView.GetAppearance(Of T)(UITraitCollection, ParamArray Type())
  fullName.vb: UIKit.UIView.GetAppearance(Of T)(UIKit.UITraitCollection, ParamArray System.Type())
  name.vb: GetAppearance(Of T)(UITraitCollection, ParamArray Type())
  spec.csharp:
  - uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection,System.Type[])
    name: GetAppearance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIView.GetAppearance``1(UIKit.UITraitCollection,System.Type[])
    name: GetAppearance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UIKit.UITraitCollection
    name: UITraitCollection
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIView.ClassHandle
  commentId: P:UIKit.UIView.ClassHandle
  parent: UIKit.UIView
  isExternal: true
  name: ClassHandle
  nameWithType: UIView.ClassHandle
  fullName: UIKit.UIView.ClassHandle
- uid: UIKit.UIView.AccessibilityActivationPoint
  commentId: P:UIKit.UIView.AccessibilityActivationPoint
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityActivationPoint
  nameWithType: UIView.AccessibilityActivationPoint
  fullName: UIKit.UIView.AccessibilityActivationPoint
- uid: UIKit.UIView.AccessibilityAttributedHint
  commentId: P:UIKit.UIView.AccessibilityAttributedHint
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityAttributedHint
  nameWithType: UIView.AccessibilityAttributedHint
  fullName: UIKit.UIView.AccessibilityAttributedHint
- uid: UIKit.UIView.AccessibilityAttributedLabel
  commentId: P:UIKit.UIView.AccessibilityAttributedLabel
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityAttributedLabel
  nameWithType: UIView.AccessibilityAttributedLabel
  fullName: UIKit.UIView.AccessibilityAttributedLabel
- uid: UIKit.UIView.AccessibilityAttributedUserInputLabels
  commentId: P:UIKit.UIView.AccessibilityAttributedUserInputLabels
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityAttributedUserInputLabels
  nameWithType: UIView.AccessibilityAttributedUserInputLabels
  fullName: UIKit.UIView.AccessibilityAttributedUserInputLabels
- uid: UIKit.UIView.AccessibilityAttributedValue
  commentId: P:UIKit.UIView.AccessibilityAttributedValue
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityAttributedValue
  nameWithType: UIView.AccessibilityAttributedValue
  fullName: UIKit.UIView.AccessibilityAttributedValue
- uid: UIKit.UIView.AccessibilityElementsHidden
  commentId: P:UIKit.UIView.AccessibilityElementsHidden
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityElementsHidden
  nameWithType: UIView.AccessibilityElementsHidden
  fullName: UIKit.UIView.AccessibilityElementsHidden
- uid: UIKit.UIView.AccessibilityFrame
  commentId: P:UIKit.UIView.AccessibilityFrame
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityFrame
  nameWithType: UIView.AccessibilityFrame
  fullName: UIKit.UIView.AccessibilityFrame
- uid: UIKit.UIView.AccessibilityHint
  commentId: P:UIKit.UIView.AccessibilityHint
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityHint
  nameWithType: UIView.AccessibilityHint
  fullName: UIKit.UIView.AccessibilityHint
- uid: UIKit.UIView.AccessibilityIdentifier
  commentId: P:UIKit.UIView.AccessibilityIdentifier
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityIdentifier
  nameWithType: UIView.AccessibilityIdentifier
  fullName: UIKit.UIView.AccessibilityIdentifier
- uid: UIKit.UIView.AccessibilityIgnoresInvertColors
  commentId: P:UIKit.UIView.AccessibilityIgnoresInvertColors
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityIgnoresInvertColors
  nameWithType: UIView.AccessibilityIgnoresInvertColors
  fullName: UIKit.UIView.AccessibilityIgnoresInvertColors
- uid: UIKit.UIView.AccessibilityLabel
  commentId: P:UIKit.UIView.AccessibilityLabel
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityLabel
  nameWithType: UIView.AccessibilityLabel
  fullName: UIKit.UIView.AccessibilityLabel
- uid: UIKit.UIView.AccessibilityLanguage
  commentId: P:UIKit.UIView.AccessibilityLanguage
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityLanguage
  nameWithType: UIView.AccessibilityLanguage
  fullName: UIKit.UIView.AccessibilityLanguage
- uid: UIKit.UIView.AccessibilityNavigationStyle
  commentId: P:UIKit.UIView.AccessibilityNavigationStyle
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityNavigationStyle
  nameWithType: UIView.AccessibilityNavigationStyle
  fullName: UIKit.UIView.AccessibilityNavigationStyle
- uid: UIKit.UIView.AccessibilityPath
  commentId: P:UIKit.UIView.AccessibilityPath
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityPath
  nameWithType: UIView.AccessibilityPath
  fullName: UIKit.UIView.AccessibilityPath
- uid: UIKit.UIView.AccessibilityRespondsToUserInteraction
  commentId: P:UIKit.UIView.AccessibilityRespondsToUserInteraction
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityRespondsToUserInteraction
  nameWithType: UIView.AccessibilityRespondsToUserInteraction
  fullName: UIKit.UIView.AccessibilityRespondsToUserInteraction
- uid: UIKit.UIView.AccessibilityTextualContext
  commentId: P:UIKit.UIView.AccessibilityTextualContext
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityTextualContext
  nameWithType: UIView.AccessibilityTextualContext
  fullName: UIKit.UIView.AccessibilityTextualContext
- uid: UIKit.UIView.AccessibilityTraits
  commentId: P:UIKit.UIView.AccessibilityTraits
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityTraits
  nameWithType: UIView.AccessibilityTraits
  fullName: UIKit.UIView.AccessibilityTraits
- uid: UIKit.UIView.AccessibilityUserInputLabels
  commentId: P:UIKit.UIView.AccessibilityUserInputLabels
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityUserInputLabels
  nameWithType: UIView.AccessibilityUserInputLabels
  fullName: UIKit.UIView.AccessibilityUserInputLabels
- uid: UIKit.UIView.AccessibilityValue
  commentId: P:UIKit.UIView.AccessibilityValue
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityValue
  nameWithType: UIView.AccessibilityValue
  fullName: UIKit.UIView.AccessibilityValue
- uid: UIKit.UIView.AccessibilityViewIsModal
  commentId: P:UIKit.UIView.AccessibilityViewIsModal
  parent: UIKit.UIView
  isExternal: true
  name: AccessibilityViewIsModal
  nameWithType: UIView.AccessibilityViewIsModal
  fullName: UIKit.UIView.AccessibilityViewIsModal
- uid: UIKit.UIView.AlignmentRectInsets
  commentId: P:UIKit.UIView.AlignmentRectInsets
  parent: UIKit.UIView
  isExternal: true
  name: AlignmentRectInsets
  nameWithType: UIView.AlignmentRectInsets
  fullName: UIKit.UIView.AlignmentRectInsets
- uid: UIKit.UIView.Alpha
  commentId: P:UIKit.UIView.Alpha
  parent: UIKit.UIView
  isExternal: true
  name: Alpha
  nameWithType: UIView.Alpha
  fullName: UIKit.UIView.Alpha
- uid: UIKit.UIView.AnchorPoint
  commentId: P:UIKit.UIView.AnchorPoint
  parent: UIKit.UIView
  isExternal: true
  name: AnchorPoint
  nameWithType: UIView.AnchorPoint
  fullName: UIKit.UIView.AnchorPoint
- uid: UIKit.UIView.AnimationsEnabled
  commentId: P:UIKit.UIView.AnimationsEnabled
  parent: UIKit.UIView
  isExternal: true
  name: AnimationsEnabled
  nameWithType: UIView.AnimationsEnabled
  fullName: UIKit.UIView.AnimationsEnabled
- uid: UIKit.UIView.AppliedContentSizeCategoryLimitsDescription
  commentId: P:UIKit.UIView.AppliedContentSizeCategoryLimitsDescription
  parent: UIKit.UIView
  isExternal: true
  name: AppliedContentSizeCategoryLimitsDescription
  nameWithType: UIView.AppliedContentSizeCategoryLimitsDescription
  fullName: UIKit.UIView.AppliedContentSizeCategoryLimitsDescription
- uid: UIKit.UIView.AutoresizingMask
  commentId: P:UIKit.UIView.AutoresizingMask
  parent: UIKit.UIView
  isExternal: true
  name: AutoresizingMask
  nameWithType: UIView.AutoresizingMask
  fullName: UIKit.UIView.AutoresizingMask
- uid: UIKit.UIView.AutosizesSubviews
  commentId: P:UIKit.UIView.AutosizesSubviews
  parent: UIKit.UIView
  isExternal: true
  name: AutosizesSubviews
  nameWithType: UIView.AutosizesSubviews
  fullName: UIKit.UIView.AutosizesSubviews
- uid: UIKit.UIView.BackgroundColor
  commentId: P:UIKit.UIView.BackgroundColor
  parent: UIKit.UIView
  isExternal: true
  name: BackgroundColor
  nameWithType: UIView.BackgroundColor
  fullName: UIKit.UIView.BackgroundColor
- uid: UIKit.UIView.BottomAnchor
  commentId: P:UIKit.UIView.BottomAnchor
  parent: UIKit.UIView
  isExternal: true
  name: BottomAnchor
  nameWithType: UIView.BottomAnchor
  fullName: UIKit.UIView.BottomAnchor
- uid: UIKit.UIView.Bounds
  commentId: P:UIKit.UIView.Bounds
  parent: UIKit.UIView
  isExternal: true
  name: Bounds
  nameWithType: UIView.Bounds
  fullName: UIKit.UIView.Bounds
- uid: UIKit.UIView.CanBecomeFocused
  commentId: P:UIKit.UIView.CanBecomeFocused
  parent: UIKit.UIView
  isExternal: true
  name: CanBecomeFocused
  nameWithType: UIView.CanBecomeFocused
  fullName: UIKit.UIView.CanBecomeFocused
- uid: UIKit.UIView.Center
  commentId: P:UIKit.UIView.Center
  parent: UIKit.UIView
  isExternal: true
  name: Center
  nameWithType: UIView.Center
  fullName: UIKit.UIView.Center
- uid: UIKit.UIView.CenterXAnchor
  commentId: P:UIKit.UIView.CenterXAnchor
  parent: UIKit.UIView
  isExternal: true
  name: CenterXAnchor
  nameWithType: UIView.CenterXAnchor
  fullName: UIKit.UIView.CenterXAnchor
- uid: UIKit.UIView.CenterYAnchor
  commentId: P:UIKit.UIView.CenterYAnchor
  parent: UIKit.UIView
  isExternal: true
  name: CenterYAnchor
  nameWithType: UIView.CenterYAnchor
  fullName: UIKit.UIView.CenterYAnchor
- uid: UIKit.UIView.ClearsContextBeforeDrawing
  commentId: P:UIKit.UIView.ClearsContextBeforeDrawing
  parent: UIKit.UIView
  isExternal: true
  name: ClearsContextBeforeDrawing
  nameWithType: UIView.ClearsContextBeforeDrawing
  fullName: UIKit.UIView.ClearsContextBeforeDrawing
- uid: UIKit.UIView.ClipsToBounds
  commentId: P:UIKit.UIView.ClipsToBounds
  parent: UIKit.UIView
  isExternal: true
  name: ClipsToBounds
  nameWithType: UIView.ClipsToBounds
  fullName: UIKit.UIView.ClipsToBounds
- uid: UIKit.UIView.CollisionBoundingPath
  commentId: P:UIKit.UIView.CollisionBoundingPath
  parent: UIKit.UIView
  isExternal: true
  name: CollisionBoundingPath
  nameWithType: UIView.CollisionBoundingPath
  fullName: UIKit.UIView.CollisionBoundingPath
- uid: UIKit.UIView.CollisionBoundsType
  commentId: P:UIKit.UIView.CollisionBoundsType
  parent: UIKit.UIView
  isExternal: true
  name: CollisionBoundsType
  nameWithType: UIView.CollisionBoundsType
  fullName: UIKit.UIView.CollisionBoundsType
- uid: UIKit.UIView.Constraints
  commentId: P:UIKit.UIView.Constraints
  parent: UIKit.UIView
  isExternal: true
  name: Constraints
  nameWithType: UIView.Constraints
  fullName: UIKit.UIView.Constraints
- uid: UIKit.UIView.ContentMode
  commentId: P:UIKit.UIView.ContentMode
  parent: UIKit.UIView
  isExternal: true
  name: ContentMode
  nameWithType: UIView.ContentMode
  fullName: UIKit.UIView.ContentMode
- uid: UIKit.UIView.ContentScaleFactor
  commentId: P:UIKit.UIView.ContentScaleFactor
  parent: UIKit.UIView
  isExternal: true
  name: ContentScaleFactor
  nameWithType: UIView.ContentScaleFactor
  fullName: UIKit.UIView.ContentScaleFactor
- uid: UIKit.UIView.ContentStretch
  commentId: P:UIKit.UIView.ContentStretch
  parent: UIKit.UIView
  isExternal: true
  name: ContentStretch
  nameWithType: UIView.ContentStretch
  fullName: UIKit.UIView.ContentStretch
- uid: UIKit.UIView.CoordinateSpace
  commentId: P:UIKit.UIView.CoordinateSpace
  parent: UIKit.UIView
  isExternal: true
  name: CoordinateSpace
  nameWithType: UIView.CoordinateSpace
  fullName: UIKit.UIView.CoordinateSpace
- uid: UIKit.UIView.DirectionalLayoutMargins
  commentId: P:UIKit.UIView.DirectionalLayoutMargins
  parent: UIKit.UIView
  isExternal: true
  name: DirectionalLayoutMargins
  nameWithType: UIView.DirectionalLayoutMargins
  fullName: UIKit.UIView.DirectionalLayoutMargins
- uid: UIKit.UIView.EffectiveUserInterfaceLayoutDirection
  commentId: P:UIKit.UIView.EffectiveUserInterfaceLayoutDirection
  parent: UIKit.UIView
  isExternal: true
  name: EffectiveUserInterfaceLayoutDirection
  nameWithType: UIView.EffectiveUserInterfaceLayoutDirection
  fullName: UIKit.UIView.EffectiveUserInterfaceLayoutDirection
- uid: UIKit.UIView.ExclusiveTouch
  commentId: P:UIKit.UIView.ExclusiveTouch
  parent: UIKit.UIView
  isExternal: true
  name: ExclusiveTouch
  nameWithType: UIView.ExclusiveTouch
  fullName: UIKit.UIView.ExclusiveTouch
- uid: UIKit.UIView.FirstBaselineAnchor
  commentId: P:UIKit.UIView.FirstBaselineAnchor
  parent: UIKit.UIView
  isExternal: true
  name: FirstBaselineAnchor
  nameWithType: UIView.FirstBaselineAnchor
  fullName: UIKit.UIView.FirstBaselineAnchor
- uid: UIKit.UIView.FocusEffect
  commentId: P:UIKit.UIView.FocusEffect
  parent: UIKit.UIView
  isExternal: true
  name: FocusEffect
  nameWithType: UIView.FocusEffect
  fullName: UIKit.UIView.FocusEffect
- uid: UIKit.UIView.FocusGroupIdentifier
  commentId: P:UIKit.UIView.FocusGroupIdentifier
  parent: UIKit.UIView
  isExternal: true
  name: FocusGroupIdentifier
  nameWithType: UIView.FocusGroupIdentifier
  fullName: UIKit.UIView.FocusGroupIdentifier
- uid: UIKit.UIView.FocusGroupPriority
  commentId: P:UIKit.UIView.FocusGroupPriority
  parent: UIKit.UIView
  isExternal: true
  name: FocusGroupPriority
  nameWithType: UIView.FocusGroupPriority
  fullName: UIKit.UIView.FocusGroupPriority
- uid: UIKit.UIView.FocusItemContainer
  commentId: P:UIKit.UIView.FocusItemContainer
  parent: UIKit.UIView
  isExternal: true
  name: FocusItemContainer
  nameWithType: UIView.FocusItemContainer
  fullName: UIKit.UIView.FocusItemContainer
- uid: UIKit.UIView.Focused
  commentId: P:UIKit.UIView.Focused
  parent: UIKit.UIView
  isExternal: true
  name: Focused
  nameWithType: UIView.Focused
  fullName: UIKit.UIView.Focused
- uid: UIKit.UIView.GestureRecognizers
  commentId: P:UIKit.UIView.GestureRecognizers
  parent: UIKit.UIView
  isExternal: true
  name: GestureRecognizers
  nameWithType: UIView.GestureRecognizers
  fullName: UIKit.UIView.GestureRecognizers
- uid: UIKit.UIView.HasAmbiguousLayout
  commentId: P:UIKit.UIView.HasAmbiguousLayout
  parent: UIKit.UIView
  isExternal: true
  name: HasAmbiguousLayout
  nameWithType: UIView.HasAmbiguousLayout
  fullName: UIKit.UIView.HasAmbiguousLayout
- uid: UIKit.UIView.HeightAnchor
  commentId: P:UIKit.UIView.HeightAnchor
  parent: UIKit.UIView
  isExternal: true
  name: HeightAnchor
  nameWithType: UIView.HeightAnchor
  fullName: UIKit.UIView.HeightAnchor
- uid: UIKit.UIView.Hidden
  commentId: P:UIKit.UIView.Hidden
  parent: UIKit.UIView
  isExternal: true
  name: Hidden
  nameWithType: UIView.Hidden
  fullName: UIKit.UIView.Hidden
- uid: UIKit.UIView.InheritedAnimationDuration
  commentId: P:UIKit.UIView.InheritedAnimationDuration
  parent: UIKit.UIView
  isExternal: true
  name: InheritedAnimationDuration
  nameWithType: UIView.InheritedAnimationDuration
  fullName: UIKit.UIView.InheritedAnimationDuration
- uid: UIKit.UIView.InsetsLayoutMarginsFromSafeArea
  commentId: P:UIKit.UIView.InsetsLayoutMarginsFromSafeArea
  parent: UIKit.UIView
  isExternal: true
  name: InsetsLayoutMarginsFromSafeArea
  nameWithType: UIView.InsetsLayoutMarginsFromSafeArea
  fullName: UIKit.UIView.InsetsLayoutMarginsFromSafeArea
- uid: UIKit.UIView.Interactions
  commentId: P:UIKit.UIView.Interactions
  parent: UIKit.UIView
  isExternal: true
  name: Interactions
  nameWithType: UIView.Interactions
  fullName: UIKit.UIView.Interactions
- uid: UIKit.UIView.IntrinsicContentSize
  commentId: P:UIKit.UIView.IntrinsicContentSize
  parent: UIKit.UIView
  isExternal: true
  name: IntrinsicContentSize
  nameWithType: UIView.IntrinsicContentSize
  fullName: UIKit.UIView.IntrinsicContentSize
- uid: UIKit.UIView.IsAccessibilityElement
  commentId: P:UIKit.UIView.IsAccessibilityElement
  parent: UIKit.UIView
  isExternal: true
  name: IsAccessibilityElement
  nameWithType: UIView.IsAccessibilityElement
  fullName: UIKit.UIView.IsAccessibilityElement
- uid: UIKit.UIView.IsTransparentFocusItem
  commentId: P:UIKit.UIView.IsTransparentFocusItem
  parent: UIKit.UIView
  isExternal: true
  name: IsTransparentFocusItem
  nameWithType: UIView.IsTransparentFocusItem
  fullName: UIKit.UIView.IsTransparentFocusItem
- uid: UIKit.UIView.KeyboardLayoutGuide
  commentId: P:UIKit.UIView.KeyboardLayoutGuide
  parent: UIKit.UIView
  isExternal: true
  name: KeyboardLayoutGuide
  nameWithType: UIView.KeyboardLayoutGuide
  fullName: UIKit.UIView.KeyboardLayoutGuide
- uid: UIKit.UIView.LargeContentImage
  commentId: P:UIKit.UIView.LargeContentImage
  parent: UIKit.UIView
  isExternal: true
  name: LargeContentImage
  nameWithType: UIView.LargeContentImage
  fullName: UIKit.UIView.LargeContentImage
- uid: UIKit.UIView.LargeContentImageInsets
  commentId: P:UIKit.UIView.LargeContentImageInsets
  parent: UIKit.UIView
  isExternal: true
  name: LargeContentImageInsets
  nameWithType: UIView.LargeContentImageInsets
  fullName: UIKit.UIView.LargeContentImageInsets
- uid: UIKit.UIView.LargeContentTitle
  commentId: P:UIKit.UIView.LargeContentTitle
  parent: UIKit.UIView
  isExternal: true
  name: LargeContentTitle
  nameWithType: UIView.LargeContentTitle
  fullName: UIKit.UIView.LargeContentTitle
- uid: UIKit.UIView.LastBaselineAnchor
  commentId: P:UIKit.UIView.LastBaselineAnchor
  parent: UIKit.UIView
  isExternal: true
  name: LastBaselineAnchor
  nameWithType: UIView.LastBaselineAnchor
  fullName: UIKit.UIView.LastBaselineAnchor
- uid: UIKit.UIView.Layer
  commentId: P:UIKit.UIView.Layer
  parent: UIKit.UIView
  isExternal: true
  name: Layer
  nameWithType: UIView.Layer
  fullName: UIKit.UIView.Layer
- uid: UIKit.UIView.LayoutGuides
  commentId: P:UIKit.UIView.LayoutGuides
  parent: UIKit.UIView
  isExternal: true
  name: LayoutGuides
  nameWithType: UIView.LayoutGuides
  fullName: UIKit.UIView.LayoutGuides
- uid: UIKit.UIView.LayoutMargins
  commentId: P:UIKit.UIView.LayoutMargins
  parent: UIKit.UIView
  isExternal: true
  name: LayoutMargins
  nameWithType: UIView.LayoutMargins
  fullName: UIKit.UIView.LayoutMargins
- uid: UIKit.UIView.LayoutMarginsGuide
  commentId: P:UIKit.UIView.LayoutMarginsGuide
  parent: UIKit.UIView
  isExternal: true
  name: LayoutMarginsGuide
  nameWithType: UIView.LayoutMarginsGuide
  fullName: UIKit.UIView.LayoutMarginsGuide
- uid: UIKit.UIView.LeadingAnchor
  commentId: P:UIKit.UIView.LeadingAnchor
  parent: UIKit.UIView
  isExternal: true
  name: LeadingAnchor
  nameWithType: UIView.LeadingAnchor
  fullName: UIKit.UIView.LeadingAnchor
- uid: UIKit.UIView.LeftAnchor
  commentId: P:UIKit.UIView.LeftAnchor
  parent: UIKit.UIView
  isExternal: true
  name: LeftAnchor
  nameWithType: UIView.LeftAnchor
  fullName: UIKit.UIView.LeftAnchor
- uid: UIKit.UIView.MaskView
  commentId: P:UIKit.UIView.MaskView
  parent: UIKit.UIView
  isExternal: true
  name: MaskView
  nameWithType: UIView.MaskView
  fullName: UIKit.UIView.MaskView
- uid: UIKit.UIView.MaximumContentSizeCategory
  commentId: P:UIKit.UIView.MaximumContentSizeCategory
  parent: UIKit.UIView
  isExternal: true
  name: MaximumContentSizeCategory
  nameWithType: UIView.MaximumContentSizeCategory
  fullName: UIKit.UIView.MaximumContentSizeCategory
- uid: UIKit.UIView.MinimumContentSizeCategory
  commentId: P:UIKit.UIView.MinimumContentSizeCategory
  parent: UIKit.UIView
  isExternal: true
  name: MinimumContentSizeCategory
  nameWithType: UIView.MinimumContentSizeCategory
  fullName: UIKit.UIView.MinimumContentSizeCategory
- uid: UIKit.UIView.MotionEffects
  commentId: P:UIKit.UIView.MotionEffects
  parent: UIKit.UIView
  isExternal: true
  name: MotionEffects
  nameWithType: UIView.MotionEffects
  fullName: UIKit.UIView.MotionEffects
- uid: UIKit.UIView.MultipleTouchEnabled
  commentId: P:UIKit.UIView.MultipleTouchEnabled
  parent: UIKit.UIView
  isExternal: true
  name: MultipleTouchEnabled
  nameWithType: UIView.MultipleTouchEnabled
  fullName: UIKit.UIView.MultipleTouchEnabled
- uid: UIKit.UIView.Opaque
  commentId: P:UIKit.UIView.Opaque
  parent: UIKit.UIView
  isExternal: true
  name: Opaque
  nameWithType: UIView.Opaque
  fullName: UIKit.UIView.Opaque
- uid: UIKit.UIView.OverrideUserInterfaceStyle
  commentId: P:UIKit.UIView.OverrideUserInterfaceStyle
  parent: UIKit.UIView
  isExternal: true
  name: OverrideUserInterfaceStyle
  nameWithType: UIView.OverrideUserInterfaceStyle
  fullName: UIKit.UIView.OverrideUserInterfaceStyle
- uid: UIKit.UIView.ParentFocusEnvironment
  commentId: P:UIKit.UIView.ParentFocusEnvironment
  parent: UIKit.UIView
  isExternal: true
  name: ParentFocusEnvironment
  nameWithType: UIView.ParentFocusEnvironment
  fullName: UIKit.UIView.ParentFocusEnvironment
- uid: UIKit.UIView.PreferredFocusEnvironments
  commentId: P:UIKit.UIView.PreferredFocusEnvironments
  parent: UIKit.UIView
  isExternal: true
  name: PreferredFocusEnvironments
  nameWithType: UIView.PreferredFocusEnvironments
  fullName: UIKit.UIView.PreferredFocusEnvironments
- uid: UIKit.UIView.PreferredFocusedView
  commentId: P:UIKit.UIView.PreferredFocusedView
  parent: UIKit.UIView
  isExternal: true
  name: PreferredFocusedView
  nameWithType: UIView.PreferredFocusedView
  fullName: UIKit.UIView.PreferredFocusedView
- uid: UIKit.UIView.PreservesSuperviewLayoutMargins
  commentId: P:UIKit.UIView.PreservesSuperviewLayoutMargins
  parent: UIKit.UIView
  isExternal: true
  name: PreservesSuperviewLayoutMargins
  nameWithType: UIView.PreservesSuperviewLayoutMargins
  fullName: UIKit.UIView.PreservesSuperviewLayoutMargins
- uid: UIKit.UIView.ReadableContentGuide
  commentId: P:UIKit.UIView.ReadableContentGuide
  parent: UIKit.UIView
  isExternal: true
  name: ReadableContentGuide
  nameWithType: UIView.ReadableContentGuide
  fullName: UIKit.UIView.ReadableContentGuide
- uid: UIKit.UIView.RestorationIdentifier
  commentId: P:UIKit.UIView.RestorationIdentifier
  parent: UIKit.UIView
  isExternal: true
  name: RestorationIdentifier
  nameWithType: UIView.RestorationIdentifier
  fullName: UIKit.UIView.RestorationIdentifier
- uid: UIKit.UIView.RightAnchor
  commentId: P:UIKit.UIView.RightAnchor
  parent: UIKit.UIView
  isExternal: true
  name: RightAnchor
  nameWithType: UIView.RightAnchor
  fullName: UIKit.UIView.RightAnchor
- uid: UIKit.UIView.SafeAreaInsets
  commentId: P:UIKit.UIView.SafeAreaInsets
  parent: UIKit.UIView
  isExternal: true
  name: SafeAreaInsets
  nameWithType: UIView.SafeAreaInsets
  fullName: UIKit.UIView.SafeAreaInsets
- uid: UIKit.UIView.SafeAreaLayoutGuide
  commentId: P:UIKit.UIView.SafeAreaLayoutGuide
  parent: UIKit.UIView
  isExternal: true
  name: SafeAreaLayoutGuide
  nameWithType: UIView.SafeAreaLayoutGuide
  fullName: UIKit.UIView.SafeAreaLayoutGuide
- uid: UIKit.UIView.ScalesLargeContentImage
  commentId: P:UIKit.UIView.ScalesLargeContentImage
  parent: UIKit.UIView
  isExternal: true
  name: ScalesLargeContentImage
  nameWithType: UIView.ScalesLargeContentImage
  fullName: UIKit.UIView.ScalesLargeContentImage
- uid: UIKit.UIView.SemanticContentAttribute
  commentId: P:UIKit.UIView.SemanticContentAttribute
  parent: UIKit.UIView
  isExternal: true
  name: SemanticContentAttribute
  nameWithType: UIView.SemanticContentAttribute
  fullName: UIKit.UIView.SemanticContentAttribute
- uid: UIKit.UIView.ShouldGroupAccessibilityChildren
  commentId: P:UIKit.UIView.ShouldGroupAccessibilityChildren
  parent: UIKit.UIView
  isExternal: true
  name: ShouldGroupAccessibilityChildren
  nameWithType: UIView.ShouldGroupAccessibilityChildren
  fullName: UIKit.UIView.ShouldGroupAccessibilityChildren
- uid: UIKit.UIView.ShowsLargeContentViewer
  commentId: P:UIKit.UIView.ShowsLargeContentViewer
  parent: UIKit.UIView
  isExternal: true
  name: ShowsLargeContentViewer
  nameWithType: UIView.ShowsLargeContentViewer
  fullName: UIKit.UIView.ShowsLargeContentViewer
- uid: UIKit.UIView.Subviews
  commentId: P:UIKit.UIView.Subviews
  parent: UIKit.UIView
  isExternal: true
  name: Subviews
  nameWithType: UIView.Subviews
  fullName: UIKit.UIView.Subviews
- uid: UIKit.UIView.Superview
  commentId: P:UIKit.UIView.Superview
  parent: UIKit.UIView
  isExternal: true
  name: Superview
  nameWithType: UIView.Superview
  fullName: UIKit.UIView.Superview
- uid: UIKit.UIView.Tag
  commentId: P:UIKit.UIView.Tag
  parent: UIKit.UIView
  isExternal: true
  name: Tag
  nameWithType: UIView.Tag
  fullName: UIKit.UIView.Tag
- uid: UIKit.UIView.TintAdjustmentMode
  commentId: P:UIKit.UIView.TintAdjustmentMode
  parent: UIKit.UIView
  isExternal: true
  name: TintAdjustmentMode
  nameWithType: UIView.TintAdjustmentMode
  fullName: UIKit.UIView.TintAdjustmentMode
- uid: UIKit.UIView.TintColor
  commentId: P:UIKit.UIView.TintColor
  parent: UIKit.UIView
  isExternal: true
  name: TintColor
  nameWithType: UIView.TintColor
  fullName: UIKit.UIView.TintColor
- uid: UIKit.UIView.TopAnchor
  commentId: P:UIKit.UIView.TopAnchor
  parent: UIKit.UIView
  isExternal: true
  name: TopAnchor
  nameWithType: UIView.TopAnchor
  fullName: UIKit.UIView.TopAnchor
- uid: UIKit.UIView.TrailingAnchor
  commentId: P:UIKit.UIView.TrailingAnchor
  parent: UIKit.UIView
  isExternal: true
  name: TrailingAnchor
  nameWithType: UIView.TrailingAnchor
  fullName: UIKit.UIView.TrailingAnchor
- uid: UIKit.UIView.TraitCollection
  commentId: P:UIKit.UIView.TraitCollection
  parent: UIKit.UIView
  isExternal: true
  name: TraitCollection
  nameWithType: UIView.TraitCollection
  fullName: UIKit.UIView.TraitCollection
- uid: UIKit.UIView.Transform
  commentId: P:UIKit.UIView.Transform
  parent: UIKit.UIView
  isExternal: true
  name: Transform
  nameWithType: UIView.Transform
  fullName: UIKit.UIView.Transform
- uid: UIKit.UIView.Transform3D
  commentId: P:UIKit.UIView.Transform3D
  parent: UIKit.UIView
  isExternal: true
  name: Transform3D
  nameWithType: UIView.Transform3D
  fullName: UIKit.UIView.Transform3D
- uid: UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints
  commentId: P:UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints
  parent: UIKit.UIView
  isExternal: true
  name: TranslatesAutoresizingMaskIntoConstraints
  nameWithType: UIView.TranslatesAutoresizingMaskIntoConstraints
  fullName: UIKit.UIView.TranslatesAutoresizingMaskIntoConstraints
- uid: UIKit.UIView.UserInteractionEnabled
  commentId: P:UIKit.UIView.UserInteractionEnabled
  parent: UIKit.UIView
  isExternal: true
  name: UserInteractionEnabled
  nameWithType: UIView.UserInteractionEnabled
  fullName: UIKit.UIView.UserInteractionEnabled
- uid: UIKit.UIView.ViewForBaselineLayout
  commentId: P:UIKit.UIView.ViewForBaselineLayout
  parent: UIKit.UIView
  isExternal: true
  name: ViewForBaselineLayout
  nameWithType: UIView.ViewForBaselineLayout
  fullName: UIKit.UIView.ViewForBaselineLayout
- uid: UIKit.UIView.ViewForFirstBaselineLayout
  commentId: P:UIKit.UIView.ViewForFirstBaselineLayout
  parent: UIKit.UIView
  isExternal: true
  name: ViewForFirstBaselineLayout
  nameWithType: UIView.ViewForFirstBaselineLayout
  fullName: UIKit.UIView.ViewForFirstBaselineLayout
- uid: UIKit.UIView.ViewForLastBaselineLayout
  commentId: P:UIKit.UIView.ViewForLastBaselineLayout
  parent: UIKit.UIView
  isExternal: true
  name: ViewForLastBaselineLayout
  nameWithType: UIView.ViewForLastBaselineLayout
  fullName: UIKit.UIView.ViewForLastBaselineLayout
- uid: UIKit.UIView.ViewPrintFormatter
  commentId: P:UIKit.UIView.ViewPrintFormatter
  parent: UIKit.UIView
  isExternal: true
  name: ViewPrintFormatter
  nameWithType: UIView.ViewPrintFormatter
  fullName: UIKit.UIView.ViewPrintFormatter
- uid: UIKit.UIView.WidthAnchor
  commentId: P:UIKit.UIView.WidthAnchor
  parent: UIKit.UIView
  isExternal: true
  name: WidthAnchor
  nameWithType: UIView.WidthAnchor
  fullName: UIKit.UIView.WidthAnchor
- uid: UIKit.UIView.Window
  commentId: P:UIKit.UIView.Window
  parent: UIKit.UIView
  isExternal: true
  name: Window
  nameWithType: UIView.Window
  fullName: UIKit.UIView.Window
- uid: UIKit.UIView.AnnouncementDidFinishNotification
  commentId: P:UIKit.UIView.AnnouncementDidFinishNotification
  parent: UIKit.UIView
  isExternal: true
  name: AnnouncementDidFinishNotification
  nameWithType: UIView.AnnouncementDidFinishNotification
  fullName: UIKit.UIView.AnnouncementDidFinishNotification
- uid: UIKit.UIView.AnnouncementNotification
  commentId: P:UIKit.UIView.AnnouncementNotification
  parent: UIKit.UIView
  isExternal: true
  name: AnnouncementNotification
  nameWithType: UIView.AnnouncementNotification
  fullName: UIKit.UIView.AnnouncementNotification
- uid: UIKit.UIView.AssistiveTechnologyKey
  commentId: P:UIKit.UIView.AssistiveTechnologyKey
  parent: UIKit.UIView
  isExternal: true
  name: AssistiveTechnologyKey
  nameWithType: UIView.AssistiveTechnologyKey
  fullName: UIKit.UIView.AssistiveTechnologyKey
- uid: UIKit.UIView.AssistiveTouchStatusDidChangeNotification
  commentId: P:UIKit.UIView.AssistiveTouchStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: AssistiveTouchStatusDidChangeNotification
  nameWithType: UIView.AssistiveTouchStatusDidChangeNotification
  fullName: UIKit.UIView.AssistiveTouchStatusDidChangeNotification
- uid: UIKit.UIView.BoldTextStatusDidChangeNotification
  commentId: P:UIKit.UIView.BoldTextStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: BoldTextStatusDidChangeNotification
  nameWithType: UIView.BoldTextStatusDidChangeNotification
  fullName: UIKit.UIView.BoldTextStatusDidChangeNotification
- uid: UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification
  commentId: P:UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ButtonShapesEnabledStatusDidChangeNotification
  nameWithType: UIView.ButtonShapesEnabledStatusDidChangeNotification
  fullName: UIKit.UIView.ButtonShapesEnabledStatusDidChangeNotification
- uid: UIKit.UIView.ClosedCaptioningStatusDidChangeNotification
  commentId: P:UIKit.UIView.ClosedCaptioningStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ClosedCaptioningStatusDidChangeNotification
  nameWithType: UIView.ClosedCaptioningStatusDidChangeNotification
  fullName: UIKit.UIView.ClosedCaptioningStatusDidChangeNotification
- uid: UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification
  commentId: P:UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: DarkerSystemColorsStatusDidChangeNotification
  nameWithType: UIView.DarkerSystemColorsStatusDidChangeNotification
  fullName: UIKit.UIView.DarkerSystemColorsStatusDidChangeNotification
- uid: UIKit.UIView.ElementFocusedNotification
  commentId: P:UIKit.UIView.ElementFocusedNotification
  parent: UIKit.UIView
  isExternal: true
  name: ElementFocusedNotification
  nameWithType: UIView.ElementFocusedNotification
  fullName: UIKit.UIView.ElementFocusedNotification
- uid: UIKit.UIView.FocusedElementKey
  commentId: P:UIKit.UIView.FocusedElementKey
  parent: UIKit.UIView
  isExternal: true
  name: FocusedElementKey
  nameWithType: UIView.FocusedElementKey
  fullName: UIKit.UIView.FocusedElementKey
- uid: UIKit.UIView.GrayscaleStatusDidChangeNotification
  commentId: P:UIKit.UIView.GrayscaleStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: GrayscaleStatusDidChangeNotification
  nameWithType: UIView.GrayscaleStatusDidChangeNotification
  fullName: UIKit.UIView.GrayscaleStatusDidChangeNotification
- uid: UIKit.UIView.GuidedAccessStatusDidChangeNotification
  commentId: P:UIKit.UIView.GuidedAccessStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: GuidedAccessStatusDidChangeNotification
  nameWithType: UIView.GuidedAccessStatusDidChangeNotification
  fullName: UIKit.UIView.GuidedAccessStatusDidChangeNotification
- uid: UIKit.UIView.HearingDevicePairedEarDidChangeNotification
  commentId: P:UIKit.UIView.HearingDevicePairedEarDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: HearingDevicePairedEarDidChangeNotification
  nameWithType: UIView.HearingDevicePairedEarDidChangeNotification
  fullName: UIKit.UIView.HearingDevicePairedEarDidChangeNotification
- uid: UIKit.UIView.InvertColorsStatusDidChangeNotification
  commentId: P:UIKit.UIView.InvertColorsStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: InvertColorsStatusDidChangeNotification
  nameWithType: UIView.InvertColorsStatusDidChangeNotification
  fullName: UIKit.UIView.InvertColorsStatusDidChangeNotification
- uid: UIKit.UIView.LayoutChangedNotification
  commentId: P:UIKit.UIView.LayoutChangedNotification
  parent: UIKit.UIView
  isExternal: true
  name: LayoutChangedNotification
  nameWithType: UIView.LayoutChangedNotification
  fullName: UIKit.UIView.LayoutChangedNotification
- uid: UIKit.UIView.MonoAudioStatusDidChangeNotification
  commentId: P:UIKit.UIView.MonoAudioStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: MonoAudioStatusDidChangeNotification
  nameWithType: UIView.MonoAudioStatusDidChangeNotification
  fullName: UIKit.UIView.MonoAudioStatusDidChangeNotification
- uid: UIKit.UIView.NoIntrinsicMetric
  commentId: P:UIKit.UIView.NoIntrinsicMetric
  parent: UIKit.UIView
  isExternal: true
  name: NoIntrinsicMetric
  nameWithType: UIView.NoIntrinsicMetric
  fullName: UIKit.UIView.NoIntrinsicMetric
- uid: UIKit.UIView.NotificationSwitchControlIdentifier
  commentId: P:UIKit.UIView.NotificationSwitchControlIdentifier
  parent: UIKit.UIView
  isExternal: true
  name: NotificationSwitchControlIdentifier
  nameWithType: UIView.NotificationSwitchControlIdentifier
  fullName: UIKit.UIView.NotificationSwitchControlIdentifier
- uid: UIKit.UIView.NotificationVoiceOverIdentifier
  commentId: P:UIKit.UIView.NotificationVoiceOverIdentifier
  parent: UIKit.UIView
  isExternal: true
  name: NotificationVoiceOverIdentifier
  nameWithType: UIView.NotificationVoiceOverIdentifier
  fullName: UIKit.UIView.NotificationVoiceOverIdentifier
- uid: UIKit.UIView.OnOffSwitchLabelsDidChangeNotification
  commentId: P:UIKit.UIView.OnOffSwitchLabelsDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: OnOffSwitchLabelsDidChangeNotification
  nameWithType: UIView.OnOffSwitchLabelsDidChangeNotification
  fullName: UIKit.UIView.OnOffSwitchLabelsDidChangeNotification
- uid: UIKit.UIView.PageScrolledNotification
  commentId: P:UIKit.UIView.PageScrolledNotification
  parent: UIKit.UIView
  isExternal: true
  name: PageScrolledNotification
  nameWithType: UIView.PageScrolledNotification
  fullName: UIKit.UIView.PageScrolledNotification
- uid: UIKit.UIView.PauseAssistiveTechnologyNotification
  commentId: P:UIKit.UIView.PauseAssistiveTechnologyNotification
  parent: UIKit.UIView
  isExternal: true
  name: PauseAssistiveTechnologyNotification
  nameWithType: UIView.PauseAssistiveTechnologyNotification
  fullName: UIKit.UIView.PauseAssistiveTechnologyNotification
- uid: UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification
  commentId: P:UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: PrefersCrossFadeTransitionsStatusDidChangeNotification
  nameWithType: UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification
  fullName: UIKit.UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification
- uid: UIKit.UIView.ReduceMotionStatusDidChangeNotification
  commentId: P:UIKit.UIView.ReduceMotionStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ReduceMotionStatusDidChangeNotification
  nameWithType: UIView.ReduceMotionStatusDidChangeNotification
  fullName: UIKit.UIView.ReduceMotionStatusDidChangeNotification
- uid: UIKit.UIView.ReduceTransparencyStatusDidChangeNotification
  commentId: P:UIKit.UIView.ReduceTransparencyStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ReduceTransparencyStatusDidChangeNotification
  nameWithType: UIView.ReduceTransparencyStatusDidChangeNotification
  fullName: UIKit.UIView.ReduceTransparencyStatusDidChangeNotification
- uid: UIKit.UIView.ResumeAssistiveTechnologyNotification
  commentId: P:UIKit.UIView.ResumeAssistiveTechnologyNotification
  parent: UIKit.UIView
  isExternal: true
  name: ResumeAssistiveTechnologyNotification
  nameWithType: UIView.ResumeAssistiveTechnologyNotification
  fullName: UIKit.UIView.ResumeAssistiveTechnologyNotification
- uid: UIKit.UIView.ScreenChangedNotification
  commentId: P:UIKit.UIView.ScreenChangedNotification
  parent: UIKit.UIView
  isExternal: true
  name: ScreenChangedNotification
  nameWithType: UIView.ScreenChangedNotification
  fullName: UIKit.UIView.ScreenChangedNotification
- uid: UIKit.UIView.ShakeToUndoDidChangeNotification
  commentId: P:UIKit.UIView.ShakeToUndoDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ShakeToUndoDidChangeNotification
  nameWithType: UIView.ShakeToUndoDidChangeNotification
  fullName: UIKit.UIView.ShakeToUndoDidChangeNotification
- uid: UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification
  commentId: P:UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: ShouldDifferentiateWithoutColorDidChangeNotification
  nameWithType: UIView.ShouldDifferentiateWithoutColorDidChangeNotification
  fullName: UIKit.UIView.ShouldDifferentiateWithoutColorDidChangeNotification
- uid: UIKit.UIView.SpeakScreenStatusDidChangeNotification
  commentId: P:UIKit.UIView.SpeakScreenStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: SpeakScreenStatusDidChangeNotification
  nameWithType: UIView.SpeakScreenStatusDidChangeNotification
  fullName: UIKit.UIView.SpeakScreenStatusDidChangeNotification
- uid: UIKit.UIView.SpeakSelectionStatusDidChangeNotification
  commentId: P:UIKit.UIView.SpeakSelectionStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: SpeakSelectionStatusDidChangeNotification
  nameWithType: UIView.SpeakSelectionStatusDidChangeNotification
  fullName: UIKit.UIView.SpeakSelectionStatusDidChangeNotification
- uid: UIKit.UIView.SpeechAttributeIpaNotation
  commentId: P:UIKit.UIView.SpeechAttributeIpaNotation
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributeIpaNotation
  nameWithType: UIView.SpeechAttributeIpaNotation
  fullName: UIKit.UIView.SpeechAttributeIpaNotation
- uid: UIKit.UIView.SpeechAttributeLanguage
  commentId: P:UIKit.UIView.SpeechAttributeLanguage
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributeLanguage
  nameWithType: UIView.SpeechAttributeLanguage
  fullName: UIKit.UIView.SpeechAttributeLanguage
- uid: UIKit.UIView.SpeechAttributePitch
  commentId: P:UIKit.UIView.SpeechAttributePitch
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributePitch
  nameWithType: UIView.SpeechAttributePitch
  fullName: UIKit.UIView.SpeechAttributePitch
- uid: UIKit.UIView.SpeechAttributePunctuation
  commentId: P:UIKit.UIView.SpeechAttributePunctuation
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributePunctuation
  nameWithType: UIView.SpeechAttributePunctuation
  fullName: UIKit.UIView.SpeechAttributePunctuation
- uid: UIKit.UIView.SpeechAttributeQueueAnnouncement
  commentId: P:UIKit.UIView.SpeechAttributeQueueAnnouncement
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributeQueueAnnouncement
  nameWithType: UIView.SpeechAttributeQueueAnnouncement
  fullName: UIKit.UIView.SpeechAttributeQueueAnnouncement
- uid: UIKit.UIView.SpeechAttributeSpellOut
  commentId: P:UIKit.UIView.SpeechAttributeSpellOut
  parent: UIKit.UIView
  isExternal: true
  name: SpeechAttributeSpellOut
  nameWithType: UIView.SpeechAttributeSpellOut
  fullName: UIKit.UIView.SpeechAttributeSpellOut
- uid: UIKit.UIView.SwitchControlStatusDidChangeNotification
  commentId: P:UIKit.UIView.SwitchControlStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: SwitchControlStatusDidChangeNotification
  nameWithType: UIView.SwitchControlStatusDidChangeNotification
  fullName: UIKit.UIView.SwitchControlStatusDidChangeNotification
- uid: UIKit.UIView.TextAttributeContext
  commentId: P:UIKit.UIView.TextAttributeContext
  parent: UIKit.UIView
  isExternal: true
  name: TextAttributeContext
  nameWithType: UIView.TextAttributeContext
  fullName: UIKit.UIView.TextAttributeContext
- uid: UIKit.UIView.TextAttributeCustom
  commentId: P:UIKit.UIView.TextAttributeCustom
  parent: UIKit.UIView
  isExternal: true
  name: TextAttributeCustom
  nameWithType: UIView.TextAttributeCustom
  fullName: UIKit.UIView.TextAttributeCustom
- uid: UIKit.UIView.TextAttributeHeadingLevel
  commentId: P:UIKit.UIView.TextAttributeHeadingLevel
  parent: UIKit.UIView
  isExternal: true
  name: TextAttributeHeadingLevel
  nameWithType: UIView.TextAttributeHeadingLevel
  fullName: UIKit.UIView.TextAttributeHeadingLevel
- uid: UIKit.UIView.TraitAdjustable
  commentId: P:UIKit.UIView.TraitAdjustable
  parent: UIKit.UIView
  isExternal: true
  name: TraitAdjustable
  nameWithType: UIView.TraitAdjustable
  fullName: UIKit.UIView.TraitAdjustable
- uid: UIKit.UIView.TraitAllowsDirectInteraction
  commentId: P:UIKit.UIView.TraitAllowsDirectInteraction
  parent: UIKit.UIView
  isExternal: true
  name: TraitAllowsDirectInteraction
  nameWithType: UIView.TraitAllowsDirectInteraction
  fullName: UIKit.UIView.TraitAllowsDirectInteraction
- uid: UIKit.UIView.TraitButton
  commentId: P:UIKit.UIView.TraitButton
  parent: UIKit.UIView
  isExternal: true
  name: TraitButton
  nameWithType: UIView.TraitButton
  fullName: UIKit.UIView.TraitButton
- uid: UIKit.UIView.TraitCausesPageTurn
  commentId: P:UIKit.UIView.TraitCausesPageTurn
  parent: UIKit.UIView
  isExternal: true
  name: TraitCausesPageTurn
  nameWithType: UIView.TraitCausesPageTurn
  fullName: UIKit.UIView.TraitCausesPageTurn
- uid: UIKit.UIView.TraitHeader
  commentId: P:UIKit.UIView.TraitHeader
  parent: UIKit.UIView
  isExternal: true
  name: TraitHeader
  nameWithType: UIView.TraitHeader
  fullName: UIKit.UIView.TraitHeader
- uid: UIKit.UIView.TraitImage
  commentId: P:UIKit.UIView.TraitImage
  parent: UIKit.UIView
  isExternal: true
  name: TraitImage
  nameWithType: UIView.TraitImage
  fullName: UIKit.UIView.TraitImage
- uid: UIKit.UIView.TraitKeyboardKey
  commentId: P:UIKit.UIView.TraitKeyboardKey
  parent: UIKit.UIView
  isExternal: true
  name: TraitKeyboardKey
  nameWithType: UIView.TraitKeyboardKey
  fullName: UIKit.UIView.TraitKeyboardKey
- uid: UIKit.UIView.TraitLink
  commentId: P:UIKit.UIView.TraitLink
  parent: UIKit.UIView
  isExternal: true
  name: TraitLink
  nameWithType: UIView.TraitLink
  fullName: UIKit.UIView.TraitLink
- uid: UIKit.UIView.TraitNone
  commentId: P:UIKit.UIView.TraitNone
  parent: UIKit.UIView
  isExternal: true
  name: TraitNone
  nameWithType: UIView.TraitNone
  fullName: UIKit.UIView.TraitNone
- uid: UIKit.UIView.TraitNotEnabled
  commentId: P:UIKit.UIView.TraitNotEnabled
  parent: UIKit.UIView
  isExternal: true
  name: TraitNotEnabled
  nameWithType: UIView.TraitNotEnabled
  fullName: UIKit.UIView.TraitNotEnabled
- uid: UIKit.UIView.TraitPlaysSound
  commentId: P:UIKit.UIView.TraitPlaysSound
  parent: UIKit.UIView
  isExternal: true
  name: TraitPlaysSound
  nameWithType: UIView.TraitPlaysSound
  fullName: UIKit.UIView.TraitPlaysSound
- uid: UIKit.UIView.TraitSearchField
  commentId: P:UIKit.UIView.TraitSearchField
  parent: UIKit.UIView
  isExternal: true
  name: TraitSearchField
  nameWithType: UIView.TraitSearchField
  fullName: UIKit.UIView.TraitSearchField
- uid: UIKit.UIView.TraitSelected
  commentId: P:UIKit.UIView.TraitSelected
  parent: UIKit.UIView
  isExternal: true
  name: TraitSelected
  nameWithType: UIView.TraitSelected
  fullName: UIKit.UIView.TraitSelected
- uid: UIKit.UIView.TraitStartsMediaSession
  commentId: P:UIKit.UIView.TraitStartsMediaSession
  parent: UIKit.UIView
  isExternal: true
  name: TraitStartsMediaSession
  nameWithType: UIView.TraitStartsMediaSession
  fullName: UIKit.UIView.TraitStartsMediaSession
- uid: UIKit.UIView.TraitStaticText
  commentId: P:UIKit.UIView.TraitStaticText
  parent: UIKit.UIView
  isExternal: true
  name: TraitStaticText
  nameWithType: UIView.TraitStaticText
  fullName: UIKit.UIView.TraitStaticText
- uid: UIKit.UIView.TraitSummaryElement
  commentId: P:UIKit.UIView.TraitSummaryElement
  parent: UIKit.UIView
  isExternal: true
  name: TraitSummaryElement
  nameWithType: UIView.TraitSummaryElement
  fullName: UIKit.UIView.TraitSummaryElement
- uid: UIKit.UIView.TraitTabBar
  commentId: P:UIKit.UIView.TraitTabBar
  parent: UIKit.UIView
  isExternal: true
  name: TraitTabBar
  nameWithType: UIView.TraitTabBar
  fullName: UIKit.UIView.TraitTabBar
- uid: UIKit.UIView.TraitUpdatesFrequently
  commentId: P:UIKit.UIView.TraitUpdatesFrequently
  parent: UIKit.UIView
  isExternal: true
  name: TraitUpdatesFrequently
  nameWithType: UIView.TraitUpdatesFrequently
  fullName: UIKit.UIView.TraitUpdatesFrequently
- uid: UIKit.UIView.UILayoutFittingCompressedSize
  commentId: P:UIKit.UIView.UILayoutFittingCompressedSize
  parent: UIKit.UIView
  isExternal: true
  name: UILayoutFittingCompressedSize
  nameWithType: UIView.UILayoutFittingCompressedSize
  fullName: UIKit.UIView.UILayoutFittingCompressedSize
- uid: UIKit.UIView.UILayoutFittingExpandedSize
  commentId: P:UIKit.UIView.UILayoutFittingExpandedSize
  parent: UIKit.UIView
  isExternal: true
  name: UILayoutFittingExpandedSize
  nameWithType: UIView.UILayoutFittingExpandedSize
  fullName: UIKit.UIView.UILayoutFittingExpandedSize
- uid: UIKit.UIView.UnfocusedElementKey
  commentId: P:UIKit.UIView.UnfocusedElementKey
  parent: UIKit.UIView
  isExternal: true
  name: UnfocusedElementKey
  nameWithType: UIView.UnfocusedElementKey
  fullName: UIKit.UIView.UnfocusedElementKey
- uid: UIKit.UIView.VideoAutoplayStatusDidChangeNotification
  commentId: P:UIKit.UIView.VideoAutoplayStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: VideoAutoplayStatusDidChangeNotification
  nameWithType: UIView.VideoAutoplayStatusDidChangeNotification
  fullName: UIKit.UIView.VideoAutoplayStatusDidChangeNotification
- uid: UIKit.UIView.VoiceOverStatusChanged
  commentId: P:UIKit.UIView.VoiceOverStatusChanged
  parent: UIKit.UIView
  isExternal: true
  name: VoiceOverStatusChanged
  nameWithType: UIView.VoiceOverStatusChanged
  fullName: UIKit.UIView.VoiceOverStatusChanged
- uid: UIKit.UIView.VoiceOverStatusDidChangeNotification
  commentId: P:UIKit.UIView.VoiceOverStatusDidChangeNotification
  parent: UIKit.UIView
  isExternal: true
  name: VoiceOverStatusDidChangeNotification
  nameWithType: UIView.VoiceOverStatusDidChangeNotification
  fullName: UIKit.UIView.VoiceOverStatusDidChangeNotification
- uid: UIKit.UIView.Appearance
  commentId: P:UIKit.UIView.Appearance
  parent: UIKit.UIView
  isExternal: true
  name: Appearance
  nameWithType: UIView.Appearance
  fullName: UIKit.UIView.Appearance
- uid: UIKit.UIView.AnimationWillStart
  commentId: E:UIKit.UIView.AnimationWillStart
  parent: UIKit.UIView
  isExternal: true
  name: AnimationWillStart
  nameWithType: UIView.AnimationWillStart
  fullName: UIKit.UIView.AnimationWillStart
- uid: UIKit.UIView.AnimationWillEnd
  commentId: E:UIKit.UIView.AnimationWillEnd
  parent: UIKit.UIView
  isExternal: true
  name: AnimationWillEnd
  nameWithType: UIView.AnimationWillEnd
  fullName: UIKit.UIView.AnimationWillEnd
- uid: UIKit.UIResponder.AccessibilityDecrement
  commentId: M:UIKit.UIResponder.AccessibilityDecrement
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityDecrement()
  nameWithType: UIResponder.AccessibilityDecrement()
  fullName: UIKit.UIResponder.AccessibilityDecrement()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityDecrement
    name: AccessibilityDecrement
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityDecrement
    name: AccessibilityDecrement
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityElementDidBecomeFocused
  commentId: M:UIKit.UIResponder.AccessibilityElementDidBecomeFocused
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityElementDidBecomeFocused()
  nameWithType: UIResponder.AccessibilityElementDidBecomeFocused()
  fullName: UIKit.UIResponder.AccessibilityElementDidBecomeFocused()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityElementDidBecomeFocused
    name: AccessibilityElementDidBecomeFocused
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityElementDidBecomeFocused
    name: AccessibilityElementDidBecomeFocused
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityElementDidLoseFocus
  commentId: M:UIKit.UIResponder.AccessibilityElementDidLoseFocus
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityElementDidLoseFocus()
  nameWithType: UIResponder.AccessibilityElementDidLoseFocus()
  fullName: UIKit.UIResponder.AccessibilityElementDidLoseFocus()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityElementDidLoseFocus
    name: AccessibilityElementDidLoseFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityElementDidLoseFocus
    name: AccessibilityElementDidLoseFocus
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityElementIsFocused
  commentId: M:UIKit.UIResponder.AccessibilityElementIsFocused
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityElementIsFocused()
  nameWithType: UIResponder.AccessibilityElementIsFocused()
  fullName: UIKit.UIResponder.AccessibilityElementIsFocused()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityElementIsFocused
    name: AccessibilityElementIsFocused
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityElementIsFocused
    name: AccessibilityElementIsFocused
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityIncrement
  commentId: M:UIKit.UIResponder.AccessibilityIncrement
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityIncrement()
  nameWithType: UIResponder.AccessibilityIncrement()
  fullName: UIKit.UIResponder.AccessibilityIncrement()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityIncrement
    name: AccessibilityIncrement
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityIncrement
    name: AccessibilityIncrement
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityPerformEscape
  commentId: M:UIKit.UIResponder.AccessibilityPerformEscape
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityPerformEscape()
  nameWithType: UIResponder.AccessibilityPerformEscape()
  fullName: UIKit.UIResponder.AccessibilityPerformEscape()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityPerformEscape
    name: AccessibilityPerformEscape
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityPerformEscape
    name: AccessibilityPerformEscape
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityPerformMagicTap
  commentId: M:UIKit.UIResponder.AccessibilityPerformMagicTap
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityPerformMagicTap()
  nameWithType: UIResponder.AccessibilityPerformMagicTap()
  fullName: UIKit.UIResponder.AccessibilityPerformMagicTap()
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityPerformMagicTap
    name: AccessibilityPerformMagicTap
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityPerformMagicTap
    name: AccessibilityPerformMagicTap
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
  commentId: M:UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityScroll(UIAccessibilityScrollDirection)
  nameWithType: UIResponder.AccessibilityScroll(UIAccessibilityScrollDirection)
  fullName: UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
  spec.csharp:
  - uid: UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
    name: AccessibilityScroll
    isExternal: true
  - name: (
  - uid: UIKit.UIAccessibilityScrollDirection
    name: UIAccessibilityScrollDirection
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.AccessibilityScroll(UIKit.UIAccessibilityScrollDirection)
    name: AccessibilityScroll
    isExternal: true
  - name: (
  - uid: UIKit.UIAccessibilityScrollDirection
    name: UIAccessibilityScrollDirection
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.BecomeFirstResponder
  commentId: M:UIKit.UIResponder.BecomeFirstResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: BecomeFirstResponder()
  nameWithType: UIResponder.BecomeFirstResponder()
  fullName: UIKit.UIResponder.BecomeFirstResponder()
  spec.csharp:
  - uid: UIKit.UIResponder.BecomeFirstResponder
    name: BecomeFirstResponder
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.BecomeFirstResponder
    name: BecomeFirstResponder
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
  commentId: M:UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
  parent: UIKit.UIResponder
  isExternal: true
  name: BuildMenu(IUIMenuBuilder)
  nameWithType: UIResponder.BuildMenu(IUIMenuBuilder)
  fullName: UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
  spec.csharp:
  - uid: UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
    name: BuildMenu
    isExternal: true
  - name: (
  - uid: UIKit.IUIMenuBuilder
    name: IUIMenuBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.BuildMenu(UIKit.IUIMenuBuilder)
    name: BuildMenu
    isExternal: true
  - name: (
  - uid: UIKit.IUIMenuBuilder
    name: IUIMenuBuilder
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
  commentId: M:UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
  parent: UIKit.UIResponder
  isExternal: true
  name: CanPaste(NSItemProvider[])
  nameWithType: UIResponder.CanPaste(NSItemProvider[])
  fullName: UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
  nameWithType.vb: UIResponder.CanPaste(NSItemProvider())
  fullName.vb: UIKit.UIResponder.CanPaste(Foundation.NSItemProvider())
  name.vb: CanPaste(NSItemProvider())
  spec.csharp:
  - uid: UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
    name: CanPaste
    isExternal: true
  - name: (
  - uid: Foundation.NSItemProvider
    name: NSItemProvider
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.CanPaste(Foundation.NSItemProvider[])
    name: CanPaste
    isExternal: true
  - name: (
  - uid: Foundation.NSItemProvider
    name: NSItemProvider
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIResponder.CanPerform(ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:UIKit.UIResponder.CanPerform(ObjCRuntime.Selector,Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: CanPerform(Selector, NSObject)
  nameWithType: UIResponder.CanPerform(Selector, NSObject)
  fullName: UIKit.UIResponder.CanPerform(ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.CanPerform(ObjCRuntime.Selector,Foundation.NSObject)
    name: CanPerform
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.CanPerform(ObjCRuntime.Selector,Foundation.NSObject)
    name: CanPerform
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: CaptureTextFromCamera(NSObject)
  nameWithType: UIResponder.CaptureTextFromCamera(NSObject)
  fullName: UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
    name: CaptureTextFromCamera
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.CaptureTextFromCamera(Foundation.NSObject)
    name: CaptureTextFromCamera
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
  commentId: M:UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
  parent: UIKit.UIResponder
  isExternal: true
  name: ClearTextInputContextIdentifier(NSString)
  nameWithType: UIResponder.ClearTextInputContextIdentifier(NSString)
  fullName: UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
  spec.csharp:
  - uid: UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
    name: ClearTextInputContextIdentifier
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ClearTextInputContextIdentifier(Foundation.NSString)
    name: ClearTextInputContextIdentifier
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Copy(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Copy(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Copy(NSObject)
  nameWithType: UIResponder.Copy(NSObject)
  fullName: UIKit.UIResponder.Copy(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Copy(Foundation.NSObject)
    name: Copy
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Copy(Foundation.NSObject)
    name: Copy
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Cut(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Cut(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Cut(NSObject)
  nameWithType: UIResponder.Cut(NSObject)
  fullName: UIKit.UIResponder.Cut(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Cut(Foundation.NSObject)
    name: Cut
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Cut(Foundation.NSObject)
    name: Cut
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: DecreaseSize(NSObject)
  nameWithType: UIResponder.DecreaseSize(NSObject)
  fullName: UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
    name: DecreaseSize
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.DecreaseSize(Foundation.NSObject)
    name: DecreaseSize
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Delete(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Delete(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Delete(NSObject)
  nameWithType: UIResponder.Delete(NSObject)
  fullName: UIKit.UIResponder.Delete(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Delete(Foundation.NSObject)
    name: Delete
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Delete(Foundation.NSObject)
    name: Delete
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Duplicate(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Duplicate(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Duplicate(NSObject)
  nameWithType: UIResponder.Duplicate(NSObject)
  fullName: UIKit.UIResponder.Duplicate(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Duplicate(Foundation.NSObject)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Duplicate(Foundation.NSObject)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Export(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Export(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Export(NSObject)
  nameWithType: UIResponder.Export(NSObject)
  fullName: UIKit.UIResponder.Export(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Export(Foundation.NSObject)
    name: Export
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Export(Foundation.NSObject)
    name: Export
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Find(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Find(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Find(NSObject)
  nameWithType: UIResponder.Find(NSObject)
  fullName: UIKit.UIResponder.Find(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Find(Foundation.NSObject)
    name: Find
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Find(Foundation.NSObject)
    name: Find
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: FindAndReplace(NSObject)
  nameWithType: UIResponder.FindAndReplace(NSObject)
  fullName: UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
    name: FindAndReplace
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.FindAndReplace(Foundation.NSObject)
    name: FindAndReplace
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.FindNext(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.FindNext(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: FindNext(NSObject)
  nameWithType: UIResponder.FindNext(NSObject)
  fullName: UIKit.UIResponder.FindNext(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.FindNext(Foundation.NSObject)
    name: FindNext
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.FindNext(Foundation.NSObject)
    name: FindNext
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.FindPrevious(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.FindPrevious(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: FindPrevious(NSObject)
  nameWithType: UIResponder.FindPrevious(NSObject)
  fullName: UIKit.UIResponder.FindPrevious(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.FindPrevious(Foundation.NSObject)
    name: FindPrevious
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.FindPrevious(Foundation.NSObject)
    name: FindPrevious
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: GetTargetForAction(Selector, NSObject)
  nameWithType: UIResponder.GetTargetForAction(Selector, NSObject)
  fullName: UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)
    name: GetTargetForAction
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.GetTargetForAction(ObjCRuntime.Selector,Foundation.NSObject)
    name: GetTargetForAction
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: IncreaseSize(NSObject)
  nameWithType: UIResponder.IncreaseSize(NSObject)
  fullName: UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
    name: IncreaseSize
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.IncreaseSize(Foundation.NSObject)
    name: IncreaseSize
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: MakeTextWritingDirectionLeftToRight(NSObject)
  nameWithType: UIResponder.MakeTextWritingDirectionLeftToRight(NSObject)
  fullName: UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
    name: MakeTextWritingDirectionLeftToRight
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.MakeTextWritingDirectionLeftToRight(Foundation.NSObject)
    name: MakeTextWritingDirectionLeftToRight
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: MakeTextWritingDirectionRightToLeft(NSObject)
  nameWithType: UIResponder.MakeTextWritingDirectionRightToLeft(NSObject)
  fullName: UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
    name: MakeTextWritingDirectionRightToLeft
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.MakeTextWritingDirectionRightToLeft(Foundation.NSObject)
    name: MakeTextWritingDirectionRightToLeft
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: MotionBegan(UIEventSubtype, UIEvent)
  nameWithType: UIResponder.MotionBegan(UIEventSubtype, UIEvent)
  fullName: UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionBegan
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.MotionBegan(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionBegan
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: MotionCancelled(UIEventSubtype, UIEvent)
  nameWithType: UIResponder.MotionCancelled(UIEventSubtype, UIEvent)
  fullName: UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionCancelled
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.MotionCancelled(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionCancelled
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: MotionEnded(UIEventSubtype, UIEvent)
  nameWithType: UIResponder.MotionEnded(UIEventSubtype, UIEvent)
  fullName: UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionEnded
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.MotionEnded(UIKit.UIEventSubtype,UIKit.UIEvent)
    name: MotionEnded
    isExternal: true
  - name: (
  - uid: UIKit.UIEventSubtype
    name: UIEventSubtype
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Move(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Move(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Move(NSObject)
  nameWithType: UIResponder.Move(NSObject)
  fullName: UIKit.UIResponder.Move(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Move(Foundation.NSObject)
    name: Move
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Move(Foundation.NSObject)
    name: Move
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Paste(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Paste(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Paste(NSObject)
  nameWithType: UIResponder.Paste(NSObject)
  fullName: UIKit.UIResponder.Paste(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Paste(Foundation.NSObject)
    name: Paste
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Paste(Foundation.NSObject)
    name: Paste
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
  commentId: M:UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
  parent: UIKit.UIResponder
  isExternal: true
  name: Paste(NSItemProvider[])
  nameWithType: UIResponder.Paste(NSItemProvider[])
  fullName: UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
  nameWithType.vb: UIResponder.Paste(NSItemProvider())
  fullName.vb: UIKit.UIResponder.Paste(Foundation.NSItemProvider())
  name.vb: Paste(NSItemProvider())
  spec.csharp:
  - uid: UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
    name: Paste
    isExternal: true
  - name: (
  - uid: Foundation.NSItemProvider
    name: NSItemProvider
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Paste(Foundation.NSItemProvider[])
    name: Paste
    isExternal: true
  - name: (
  - uid: Foundation.NSItemProvider
    name: NSItemProvider
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: PasteAndGo(NSObject)
  nameWithType: UIResponder.PasteAndGo(NSObject)
  fullName: UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
    name: PasteAndGo
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PasteAndGo(Foundation.NSObject)
    name: PasteAndGo
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: PasteAndMatchStyle(NSObject)
  nameWithType: UIResponder.PasteAndMatchStyle(NSObject)
  fullName: UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
    name: PasteAndMatchStyle
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PasteAndMatchStyle(Foundation.NSObject)
    name: PasteAndMatchStyle
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: PasteAndSearch(NSObject)
  nameWithType: UIResponder.PasteAndSearch(NSObject)
  fullName: UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
    name: PasteAndSearch
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PasteAndSearch(Foundation.NSObject)
    name: PasteAndSearch
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PressesBegan(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  commentId: M:UIKit.UIResponder.PressesBegan(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: PressesBegan(NSSet<UIPress>, UIPressesEvent)
  nameWithType: UIResponder.PressesBegan(NSSet<UIPress>, UIPressesEvent)
  fullName: UIKit.UIResponder.PressesBegan(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent)
  nameWithType.vb: UIResponder.PressesBegan(NSSet(Of UIPress), UIPressesEvent)
  fullName.vb: UIKit.UIResponder.PressesBegan(Foundation.NSSet(Of UIKit.UIPress), UIKit.UIPressesEvent)
  name.vb: PressesBegan(NSSet(Of UIPress), UIPressesEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.PressesBegan(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesBegan
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: <
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PressesBegan(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesBegan
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PressesCancelled(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  commentId: M:UIKit.UIResponder.PressesCancelled(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: PressesCancelled(NSSet<UIPress>, UIPressesEvent)
  nameWithType: UIResponder.PressesCancelled(NSSet<UIPress>, UIPressesEvent)
  fullName: UIKit.UIResponder.PressesCancelled(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent)
  nameWithType.vb: UIResponder.PressesCancelled(NSSet(Of UIPress), UIPressesEvent)
  fullName.vb: UIKit.UIResponder.PressesCancelled(Foundation.NSSet(Of UIKit.UIPress), UIKit.UIPressesEvent)
  name.vb: PressesCancelled(NSSet(Of UIPress), UIPressesEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.PressesCancelled(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesCancelled
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: <
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PressesCancelled(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesCancelled
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PressesChanged(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  commentId: M:UIKit.UIResponder.PressesChanged(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: PressesChanged(NSSet<UIPress>, UIPressesEvent)
  nameWithType: UIResponder.PressesChanged(NSSet<UIPress>, UIPressesEvent)
  fullName: UIKit.UIResponder.PressesChanged(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent)
  nameWithType.vb: UIResponder.PressesChanged(NSSet(Of UIPress), UIPressesEvent)
  fullName.vb: UIKit.UIResponder.PressesChanged(Foundation.NSSet(Of UIKit.UIPress), UIKit.UIPressesEvent)
  name.vb: PressesChanged(NSSet(Of UIPress), UIPressesEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.PressesChanged(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesChanged
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: <
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PressesChanged(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesChanged
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.PressesEnded(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  commentId: M:UIKit.UIResponder.PressesEnded(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: PressesEnded(NSSet<UIPress>, UIPressesEvent)
  nameWithType: UIResponder.PressesEnded(NSSet<UIPress>, UIPressesEvent)
  fullName: UIKit.UIResponder.PressesEnded(Foundation.NSSet<UIKit.UIPress>, UIKit.UIPressesEvent)
  nameWithType.vb: UIResponder.PressesEnded(NSSet(Of UIPress), UIPressesEvent)
  fullName.vb: UIKit.UIResponder.PressesEnded(Foundation.NSSet(Of UIKit.UIPress), UIKit.UIPressesEvent)
  name.vb: PressesEnded(NSSet(Of UIPress), UIPressesEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.PressesEnded(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesEnded
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: <
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.PressesEnded(Foundation.NSSet{UIKit.UIPress},UIKit.UIPressesEvent)
    name: PressesEnded
    isExternal: true
  - name: (
  - uid: Foundation.NSSet`1
    name: NSSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UIKit.UIPress
    name: UIPress
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: UIKit.UIPressesEvent
    name: UIPressesEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Print(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Print(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Print(NSObject)
  nameWithType: UIResponder.Print(NSObject)
  fullName: UIKit.UIResponder.Print(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Print(Foundation.NSObject)
    name: Print
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Print(Foundation.NSObject)
    name: Print
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ReloadInputViews
  commentId: M:UIKit.UIResponder.ReloadInputViews
  parent: UIKit.UIResponder
  isExternal: true
  name: ReloadInputViews()
  nameWithType: UIResponder.ReloadInputViews()
  fullName: UIKit.UIResponder.ReloadInputViews()
  spec.csharp:
  - uid: UIKit.UIResponder.ReloadInputViews
    name: ReloadInputViews
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ReloadInputViews
    name: ReloadInputViews
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: RemoteControlReceived(UIEvent)
  nameWithType: UIResponder.RemoteControlReceived(UIEvent)
  fullName: UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
    name: RemoteControlReceived
    isExternal: true
  - name: (
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.RemoteControlReceived(UIKit.UIEvent)
    name: RemoteControlReceived
    isExternal: true
  - name: (
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Rename(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Rename(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Rename(NSObject)
  nameWithType: UIResponder.Rename(NSObject)
  fullName: UIKit.UIResponder.Rename(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Rename(Foundation.NSObject)
    name: Rename
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Rename(Foundation.NSObject)
    name: Rename
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ResignFirstResponder
  commentId: M:UIKit.UIResponder.ResignFirstResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: ResignFirstResponder()
  nameWithType: UIResponder.ResignFirstResponder()
  fullName: UIKit.UIResponder.ResignFirstResponder()
  spec.csharp:
  - uid: UIKit.UIResponder.ResignFirstResponder
    name: ResignFirstResponder
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ResignFirstResponder
    name: ResignFirstResponder
    isExternal: true
  - name: (
  - name: )
- uid: UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
  commentId: M:UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
  parent: UIKit.UIResponder
  isExternal: true
  name: RestoreUserActivityState(NSUserActivity)
  nameWithType: UIResponder.RestoreUserActivityState(NSUserActivity)
  fullName: UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
  spec.csharp:
  - uid: UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
    name: RestoreUserActivityState
    isExternal: true
  - name: (
  - uid: Foundation.NSUserActivity
    name: NSUserActivity
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.RestoreUserActivityState(Foundation.NSUserActivity)
    name: RestoreUserActivityState
    isExternal: true
  - name: (
  - uid: Foundation.NSUserActivity
    name: NSUserActivity
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.Select(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.Select(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: Select(NSObject)
  nameWithType: UIResponder.Select(NSObject)
  fullName: UIKit.UIResponder.Select(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.Select(Foundation.NSObject)
    name: Select
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.Select(Foundation.NSObject)
    name: Select
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.SelectAll(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.SelectAll(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: SelectAll(NSObject)
  nameWithType: UIResponder.SelectAll(NSObject)
  fullName: UIKit.UIResponder.SelectAll(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.SelectAll(Foundation.NSObject)
    name: SelectAll
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.SelectAll(Foundation.NSObject)
    name: SelectAll
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: ToggleBoldface(NSObject)
  nameWithType: UIResponder.ToggleBoldface(NSObject)
  fullName: UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
    name: ToggleBoldface
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ToggleBoldface(Foundation.NSObject)
    name: ToggleBoldface
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: ToggleItalics(NSObject)
  nameWithType: UIResponder.ToggleItalics(NSObject)
  fullName: UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
    name: ToggleItalics
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ToggleItalics(Foundation.NSObject)
    name: ToggleItalics
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: ToggleUnderline(NSObject)
  nameWithType: UIResponder.ToggleUnderline(NSObject)
  fullName: UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
    name: ToggleUnderline
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ToggleUnderline(Foundation.NSObject)
    name: ToggleUnderline
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: TouchesCancelled(NSSet, UIEvent)
  nameWithType: UIResponder.TouchesCancelled(NSSet, UIEvent)
  fullName: UIKit.UIResponder.TouchesCancelled(Foundation.NSSet, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesCancelled
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.TouchesCancelled(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesCancelled
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
  commentId: M:UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
  parent: UIKit.UIResponder
  isExternal: true
  name: TouchesEstimatedPropertiesUpdated(NSSet)
  nameWithType: UIResponder.TouchesEstimatedPropertiesUpdated(NSSet)
  fullName: UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
  spec.csharp:
  - uid: UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
    name: TouchesEstimatedPropertiesUpdated
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.TouchesEstimatedPropertiesUpdated(Foundation.NSSet)
    name: TouchesEstimatedPropertiesUpdated
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
  commentId: M:UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
  parent: UIKit.UIResponder
  isExternal: true
  name: UpdateTextAttributes(UITextAttributesConversionHandler)
  nameWithType: UIResponder.UpdateTextAttributes(UITextAttributesConversionHandler)
  fullName: UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
  spec.csharp:
  - uid: UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
    name: UpdateTextAttributes
    isExternal: true
  - name: (
  - uid: UIKit.UITextAttributesConversionHandler
    name: UITextAttributesConversionHandler
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.UpdateTextAttributes(UIKit.UITextAttributesConversionHandler)
    name: UpdateTextAttributes
    isExternal: true
  - name: (
  - uid: UIKit.UITextAttributesConversionHandler
    name: UITextAttributesConversionHandler
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
  commentId: M:UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
  parent: UIKit.UIResponder
  isExternal: true
  name: UpdateUserActivityState(NSUserActivity)
  nameWithType: UIResponder.UpdateUserActivityState(NSUserActivity)
  fullName: UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
  spec.csharp:
  - uid: UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
    name: UpdateUserActivityState
    isExternal: true
  - name: (
  - uid: Foundation.NSUserActivity
    name: NSUserActivity
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.UpdateUserActivityState(Foundation.NSUserActivity)
    name: UpdateUserActivityState
    isExternal: true
  - name: (
  - uid: Foundation.NSUserActivity
    name: NSUserActivity
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
  commentId: M:UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
  parent: UIKit.UIResponder
  isExternal: true
  name: UseSelectionForFind(NSObject)
  nameWithType: UIResponder.UseSelectionForFind(NSObject)
  fullName: UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
  spec.csharp:
  - uid: UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
    name: UseSelectionForFind
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.UseSelectionForFind(Foundation.NSObject)
    name: UseSelectionForFind
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
  commentId: M:UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
  parent: UIKit.UIResponder
  isExternal: true
  name: ValidateCommand(UICommand)
  nameWithType: UIResponder.ValidateCommand(UICommand)
  fullName: UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
  spec.csharp:
  - uid: UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
    name: ValidateCommand
    isExternal: true
  - name: (
  - uid: UIKit.UICommand
    name: UICommand
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.ValidateCommand(UIKit.UICommand)
    name: ValidateCommand
    isExternal: true
  - name: (
  - uid: UIKit.UICommand
    name: UICommand
    isExternal: true
  - name: )
- uid: UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers
  commentId: P:UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityAssistiveTechnologyFocusedIdentifiers
  nameWithType: UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers
  fullName: UIKit.UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers
- uid: UIKit.UIResponder.AccessibilityCustomActions
  commentId: P:UIKit.UIResponder.AccessibilityCustomActions
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityCustomActions
  nameWithType: UIResponder.AccessibilityCustomActions
  fullName: UIKit.UIResponder.AccessibilityCustomActions
- uid: UIKit.UIResponder.AccessibilityDragSourceDescriptors
  commentId: P:UIKit.UIResponder.AccessibilityDragSourceDescriptors
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityDragSourceDescriptors
  nameWithType: UIResponder.AccessibilityDragSourceDescriptors
  fullName: UIKit.UIResponder.AccessibilityDragSourceDescriptors
- uid: UIKit.UIResponder.AccessibilityDropPointDescriptors
  commentId: P:UIKit.UIResponder.AccessibilityDropPointDescriptors
  parent: UIKit.UIResponder
  isExternal: true
  name: AccessibilityDropPointDescriptors
  nameWithType: UIResponder.AccessibilityDropPointDescriptors
  fullName: UIKit.UIResponder.AccessibilityDropPointDescriptors
- uid: UIKit.UIResponder.ActivityItemsConfiguration
  commentId: P:UIKit.UIResponder.ActivityItemsConfiguration
  parent: UIKit.UIResponder
  isExternal: true
  name: ActivityItemsConfiguration
  nameWithType: UIResponder.ActivityItemsConfiguration
  fullName: UIKit.UIResponder.ActivityItemsConfiguration
- uid: UIKit.UIResponder.CanBecomeFirstResponder
  commentId: P:UIKit.UIResponder.CanBecomeFirstResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: CanBecomeFirstResponder
  nameWithType: UIResponder.CanBecomeFirstResponder
  fullName: UIKit.UIResponder.CanBecomeFirstResponder
- uid: UIKit.UIResponder.CanResignFirstResponder
  commentId: P:UIKit.UIResponder.CanResignFirstResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: CanResignFirstResponder
  nameWithType: UIResponder.CanResignFirstResponder
  fullName: UIKit.UIResponder.CanResignFirstResponder
- uid: UIKit.UIResponder.EditingInteractionConfiguration
  commentId: P:UIKit.UIResponder.EditingInteractionConfiguration
  parent: UIKit.UIResponder
  isExternal: true
  name: EditingInteractionConfiguration
  nameWithType: UIResponder.EditingInteractionConfiguration
  fullName: UIKit.UIResponder.EditingInteractionConfiguration
- uid: UIKit.UIResponder.InputAccessoryView
  commentId: P:UIKit.UIResponder.InputAccessoryView
  parent: UIKit.UIResponder
  isExternal: true
  name: InputAccessoryView
  nameWithType: UIResponder.InputAccessoryView
  fullName: UIKit.UIResponder.InputAccessoryView
- uid: UIKit.UIResponder.InputAccessoryViewController
  commentId: P:UIKit.UIResponder.InputAccessoryViewController
  parent: UIKit.UIResponder
  isExternal: true
  name: InputAccessoryViewController
  nameWithType: UIResponder.InputAccessoryViewController
  fullName: UIKit.UIResponder.InputAccessoryViewController
- uid: UIKit.UIResponder.InputAssistantItem
  commentId: P:UIKit.UIResponder.InputAssistantItem
  parent: UIKit.UIResponder
  isExternal: true
  name: InputAssistantItem
  nameWithType: UIResponder.InputAssistantItem
  fullName: UIKit.UIResponder.InputAssistantItem
- uid: UIKit.UIResponder.InputView
  commentId: P:UIKit.UIResponder.InputView
  parent: UIKit.UIResponder
  isExternal: true
  name: InputView
  nameWithType: UIResponder.InputView
  fullName: UIKit.UIResponder.InputView
- uid: UIKit.UIResponder.InputViewController
  commentId: P:UIKit.UIResponder.InputViewController
  parent: UIKit.UIResponder
  isExternal: true
  name: InputViewController
  nameWithType: UIResponder.InputViewController
  fullName: UIKit.UIResponder.InputViewController
- uid: UIKit.UIResponder.IsFirstResponder
  commentId: P:UIKit.UIResponder.IsFirstResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: IsFirstResponder
  nameWithType: UIResponder.IsFirstResponder
  fullName: UIKit.UIResponder.IsFirstResponder
- uid: UIKit.UIResponder.KeyCommands
  commentId: P:UIKit.UIResponder.KeyCommands
  parent: UIKit.UIResponder
  isExternal: true
  name: KeyCommands
  nameWithType: UIResponder.KeyCommands
  fullName: UIKit.UIResponder.KeyCommands
- uid: UIKit.UIResponder.NextResponder
  commentId: P:UIKit.UIResponder.NextResponder
  parent: UIKit.UIResponder
  isExternal: true
  name: NextResponder
  nameWithType: UIResponder.NextResponder
  fullName: UIKit.UIResponder.NextResponder
- uid: UIKit.UIResponder.PasteConfiguration
  commentId: P:UIKit.UIResponder.PasteConfiguration
  parent: UIKit.UIResponder
  isExternal: true
  name: PasteConfiguration
  nameWithType: UIResponder.PasteConfiguration
  fullName: UIKit.UIResponder.PasteConfiguration
- uid: UIKit.UIResponder.TextInputContextIdentifier
  commentId: P:UIKit.UIResponder.TextInputContextIdentifier
  parent: UIKit.UIResponder
  isExternal: true
  name: TextInputContextIdentifier
  nameWithType: UIResponder.TextInputContextIdentifier
  fullName: UIKit.UIResponder.TextInputContextIdentifier
- uid: UIKit.UIResponder.TextInputMode
  commentId: P:UIKit.UIResponder.TextInputMode
  parent: UIKit.UIResponder
  isExternal: true
  name: TextInputMode
  nameWithType: UIResponder.TextInputMode
  fullName: UIKit.UIResponder.TextInputMode
- uid: UIKit.UIResponder.UndoManager
  commentId: P:UIKit.UIResponder.UndoManager
  parent: UIKit.UIResponder
  isExternal: true
  name: UndoManager
  nameWithType: UIResponder.UndoManager
  fullName: UIKit.UIResponder.UndoManager
- uid: UIKit.UIResponder.UserActivity
  commentId: P:UIKit.UIResponder.UserActivity
  parent: UIKit.UIResponder
  isExternal: true
  name: UserActivity
  nameWithType: UIResponder.UserActivity
  fullName: UIKit.UIResponder.UserActivity
- uid: Foundation.NSObject.PlatformAssembly
  commentId: F:Foundation.NSObject.PlatformAssembly
  parent: Foundation.NSObject
  isExternal: true
  name: PlatformAssembly
  nameWithType: NSObject.PlatformAssembly
  fullName: Foundation.NSObject.PlatformAssembly
- uid: Foundation.NSObject.MarkDirty
  commentId: M:Foundation.NSObject.MarkDirty
  parent: Foundation.NSObject
  isExternal: true
  name: MarkDirty()
  nameWithType: NSObject.MarkDirty()
  fullName: Foundation.NSObject.MarkDirty()
  spec.csharp:
  - uid: Foundation.NSObject.MarkDirty
    name: MarkDirty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.MarkDirty
    name: MarkDirty
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
  commentId: M:Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
  parent: Foundation.NSObject
  isExternal: true
  name: ConformsToProtocol(NativeHandle)
  nameWithType: NSObject.ConformsToProtocol(NativeHandle)
  fullName: Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
  spec.csharp:
  - uid: Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
    name: ConformsToProtocol
    isExternal: true
  - name: (
  - uid: ObjCRuntime.NativeHandle
    name: NativeHandle
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ConformsToProtocol(ObjCRuntime.NativeHandle)
    name: ConformsToProtocol
    isExternal: true
  - name: (
  - uid: ObjCRuntime.NativeHandle
    name: NativeHandle
    isExternal: true
  - name: )
- uid: Foundation.NSObject.DangerousRelease
  commentId: M:Foundation.NSObject.DangerousRelease
  parent: Foundation.NSObject
  isExternal: true
  name: DangerousRelease()
  nameWithType: NSObject.DangerousRelease()
  fullName: Foundation.NSObject.DangerousRelease()
  spec.csharp:
  - uid: Foundation.NSObject.DangerousRelease
    name: DangerousRelease
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DangerousRelease
    name: DangerousRelease
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.DangerousRetain
  commentId: M:Foundation.NSObject.DangerousRetain
  parent: Foundation.NSObject
  isExternal: true
  name: DangerousRetain()
  nameWithType: NSObject.DangerousRetain()
  fullName: Foundation.NSObject.DangerousRetain()
  spec.csharp:
  - uid: Foundation.NSObject.DangerousRetain
    name: DangerousRetain
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DangerousRetain
    name: DangerousRetain
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.DangerousAutorelease
  commentId: M:Foundation.NSObject.DangerousAutorelease
  parent: Foundation.NSObject
  isExternal: true
  name: DangerousAutorelease()
  nameWithType: NSObject.DangerousAutorelease()
  fullName: Foundation.NSObject.DangerousAutorelease()
  spec.csharp:
  - uid: Foundation.NSObject.DangerousAutorelease
    name: DangerousAutorelease
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DangerousAutorelease
    name: DangerousAutorelease
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: BeginInvokeOnMainThread(Selector, NSObject)
  nameWithType: NSObject.BeginInvokeOnMainThread(Selector, NSObject)
  fullName: Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
    name: BeginInvokeOnMainThread
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.BeginInvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
    name: BeginInvokeOnMainThread
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: InvokeOnMainThread(Selector, NSObject)
  nameWithType: NSObject.InvokeOnMainThread(Selector, NSObject)
  fullName: Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
    name: InvokeOnMainThread
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.InvokeOnMainThread(ObjCRuntime.Selector,Foundation.NSObject)
    name: InvokeOnMainThread
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
  commentId: M:Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: BeginInvokeOnMainThread(Action)
  nameWithType: NSObject.BeginInvokeOnMainThread(Action)
  fullName: Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
  spec.csharp:
  - uid: Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
    name: BeginInvokeOnMainThread
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.BeginInvokeOnMainThread(System.Action)
    name: BeginInvokeOnMainThread
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: Foundation.NSObject.InvokeOnMainThread(System.Action)
  commentId: M:Foundation.NSObject.InvokeOnMainThread(System.Action)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: InvokeOnMainThread(Action)
  nameWithType: NSObject.InvokeOnMainThread(Action)
  fullName: Foundation.NSObject.InvokeOnMainThread(System.Action)
  spec.csharp:
  - uid: Foundation.NSObject.InvokeOnMainThread(System.Action)
    name: InvokeOnMainThread
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.InvokeOnMainThread(System.Action)
    name: InvokeOnMainThread
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: Foundation.NSObject.FromObject(System.Object)
  commentId: M:Foundation.NSObject.FromObject(System.Object)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: FromObject(object)
  nameWithType: NSObject.FromObject(object)
  fullName: Foundation.NSObject.FromObject(object)
  nameWithType.vb: NSObject.FromObject(Object)
  fullName.vb: Foundation.NSObject.FromObject(Object)
  name.vb: FromObject(Object)
  spec.csharp:
  - uid: Foundation.NSObject.FromObject(System.Object)
    name: FromObject
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.FromObject(System.Object)
    name: FromObject
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle,Foundation.NSString)
  commentId: M:Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: SetValueForKeyPath(NativeHandle, NSString)
  nameWithType: NSObject.SetValueForKeyPath(NativeHandle, NSString)
  fullName: Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle,Foundation.NSString)
    name: SetValueForKeyPath
    isExternal: true
  - name: (
  - uid: ObjCRuntime.NativeHandle
    name: NativeHandle
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetValueForKeyPath(ObjCRuntime.NativeHandle,Foundation.NSString)
    name: SetValueForKeyPath
    isExternal: true
  - name: (
  - uid: ObjCRuntime.NativeHandle
    name: NativeHandle
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.GetHashCode
  commentId: M:Foundation.NSObject.GetHashCode
  parent: Foundation.NSObject
  isExternal: true
  name: GetHashCode()
  nameWithType: NSObject.GetHashCode()
  fullName: Foundation.NSObject.GetHashCode()
  spec.csharp:
  - uid: Foundation.NSObject.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.Equals(System.Object)
  commentId: M:Foundation.NSObject.Equals(System.Object)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: NSObject.Equals(object)
  fullName: Foundation.NSObject.Equals(object)
  nameWithType.vb: NSObject.Equals(Object)
  fullName.vb: Foundation.NSObject.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Foundation.NSObject.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Foundation.NSObject.Equals(Foundation.NSObject)
  commentId: M:Foundation.NSObject.Equals(Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: Equals(NSObject)
  nameWithType: NSObject.Equals(NSObject)
  fullName: Foundation.NSObject.Equals(Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.Equals(Foundation.NSObject)
    name: Equals
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Equals(Foundation.NSObject)
    name: Equals
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.ToString
  commentId: M:Foundation.NSObject.ToString
  parent: Foundation.NSObject
  isExternal: true
  name: ToString()
  nameWithType: NSObject.ToString()
  fullName: Foundation.NSObject.ToString()
  spec.csharp:
  - uid: Foundation.NSObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.Invoke(System.Action,System.Double)
  commentId: M:Foundation.NSObject.Invoke(System.Action,System.Double)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Invoke(Action, double)
  nameWithType: NSObject.Invoke(Action, double)
  fullName: Foundation.NSObject.Invoke(System.Action, double)
  nameWithType.vb: NSObject.Invoke(Action, Double)
  fullName.vb: Foundation.NSObject.Invoke(System.Action, Double)
  name.vb: Invoke(Action, Double)
  spec.csharp:
  - uid: Foundation.NSObject.Invoke(System.Action,System.Double)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Invoke(System.Action,System.Double)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Foundation.NSObject.Invoke(System.Action,System.TimeSpan)
  commentId: M:Foundation.NSObject.Invoke(System.Action,System.TimeSpan)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Invoke(Action, TimeSpan)
  nameWithType: NSObject.Invoke(Action, TimeSpan)
  fullName: Foundation.NSObject.Invoke(System.Action, System.TimeSpan)
  spec.csharp:
  - uid: Foundation.NSObject.Invoke(System.Action,System.TimeSpan)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Invoke(System.Action,System.TimeSpan)
    name: Invoke
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: Foundation.NSObject.AddObserver(System.String,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  commentId: M:Foundation.NSObject.AddObserver(System.String,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddObserver(string, NSKeyValueObservingOptions, Action<NSObservedChange>)
  nameWithType: NSObject.AddObserver(string, NSKeyValueObservingOptions, Action<NSObservedChange>)
  fullName: Foundation.NSObject.AddObserver(string, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>)
  nameWithType.vb: NSObject.AddObserver(String, NSKeyValueObservingOptions, Action(Of NSObservedChange))
  fullName.vb: Foundation.NSObject.AddObserver(String, Foundation.NSKeyValueObservingOptions, System.Action(Of Foundation.NSObservedChange))
  name.vb: AddObserver(String, NSKeyValueObservingOptions, Action(Of NSObservedChange))
  spec.csharp:
  - uid: Foundation.NSObject.AddObserver(System.String,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
    name: AddObserver
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Foundation.NSObservedChange
    name: NSObservedChange
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AddObserver(System.String,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
    name: AddObserver
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Foundation.NSObservedChange
    name: NSObservedChange
    isExternal: true
  - name: )
  - name: )
- uid: Foundation.NSObject.AddObserver(Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  commentId: M:Foundation.NSObject.AddObserver(Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: AddObserver(NSString, NSKeyValueObservingOptions, Action<NSObservedChange>)
  nameWithType: NSObject.AddObserver(NSString, NSKeyValueObservingOptions, Action<NSObservedChange>)
  fullName: Foundation.NSObject.AddObserver(Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.Action<Foundation.NSObservedChange>)
  nameWithType.vb: NSObject.AddObserver(NSString, NSKeyValueObservingOptions, Action(Of NSObservedChange))
  fullName.vb: Foundation.NSObject.AddObserver(Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.Action(Of Foundation.NSObservedChange))
  name.vb: AddObserver(NSString, NSKeyValueObservingOptions, Action(Of NSObservedChange))
  spec.csharp:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Foundation.NSObservedChange
    name: NSObservedChange
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.Action{Foundation.NSObservedChange})
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Foundation.NSObservedChange
    name: NSObservedChange
    isExternal: true
  - name: )
  - name: )
- uid: Foundation.NSObject.Alloc(ObjCRuntime.Class)
  commentId: M:Foundation.NSObject.Alloc(ObjCRuntime.Class)
  parent: Foundation.NSObject
  isExternal: true
  name: Alloc(Class)
  nameWithType: NSObject.Alloc(Class)
  fullName: Foundation.NSObject.Alloc(ObjCRuntime.Class)
  spec.csharp:
  - uid: Foundation.NSObject.Alloc(ObjCRuntime.Class)
    name: Alloc
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Alloc(ObjCRuntime.Class)
    name: Alloc
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
- uid: Foundation.NSObject.Init
  commentId: M:Foundation.NSObject.Init
  parent: Foundation.NSObject
  isExternal: true
  name: Init()
  nameWithType: NSObject.Init()
  fullName: Foundation.NSObject.Init()
  spec.csharp:
  - uid: Foundation.NSObject.Init
    name: Init
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Init
    name: Init
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.InvokeInBackground(System.Action)
  commentId: M:Foundation.NSObject.InvokeInBackground(System.Action)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: InvokeInBackground(Action)
  nameWithType: NSObject.InvokeInBackground(Action)
  fullName: Foundation.NSObject.InvokeInBackground(System.Action)
  spec.csharp:
  - uid: Foundation.NSObject.InvokeInBackground(System.Action)
    name: InvokeInBackground
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.InvokeInBackground(System.Action)
    name: InvokeInBackground
    isExternal: true
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: Foundation.NSObject.AddObserver(Foundation.NSObject,Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  commentId: M:Foundation.NSObject.AddObserver(Foundation.NSObject,Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: AddObserver(NSObject, NSString, NSKeyValueObservingOptions, nint)
  nameWithType: NSObject.AddObserver(NSObject, NSString, NSKeyValueObservingOptions, nint)
  fullName: Foundation.NSObject.AddObserver(Foundation.NSObject, Foundation.NSString, Foundation.NSKeyValueObservingOptions, nint)
  nameWithType.vb: NSObject.AddObserver(NSObject, NSString, NSKeyValueObservingOptions, IntPtr)
  fullName.vb: Foundation.NSObject.AddObserver(Foundation.NSObject, Foundation.NSString, Foundation.NSKeyValueObservingOptions, System.IntPtr)
  name.vb: AddObserver(NSObject, NSString, NSKeyValueObservingOptions, IntPtr)
  spec.csharp:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSObject,Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.IntPtr)
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSObject,Foundation.NSString,Foundation.NSKeyValueObservingOptions,System.IntPtr)
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Foundation.NSObject.AddObserver(Foundation.NSObject,System.String,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  commentId: M:Foundation.NSObject.AddObserver(Foundation.NSObject,System.String,Foundation.NSKeyValueObservingOptions,System.IntPtr)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddObserver(NSObject, string, NSKeyValueObservingOptions, nint)
  nameWithType: NSObject.AddObserver(NSObject, string, NSKeyValueObservingOptions, nint)
  fullName: Foundation.NSObject.AddObserver(Foundation.NSObject, string, Foundation.NSKeyValueObservingOptions, nint)
  nameWithType.vb: NSObject.AddObserver(NSObject, String, NSKeyValueObservingOptions, IntPtr)
  fullName.vb: Foundation.NSObject.AddObserver(Foundation.NSObject, String, Foundation.NSKeyValueObservingOptions, System.IntPtr)
  name.vb: AddObserver(NSObject, String, NSKeyValueObservingOptions, IntPtr)
  spec.csharp:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSObject,System.String,Foundation.NSKeyValueObservingOptions,System.IntPtr)
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AddObserver(Foundation.NSObject,System.String,Foundation.NSKeyValueObservingOptions,System.IntPtr)
    name: AddObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueObservingOptions
    name: NSKeyValueObservingOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String)
  commentId: M:Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AutomaticallyNotifiesObserversForKey(string)
  nameWithType: NSObject.AutomaticallyNotifiesObserversForKey(string)
  fullName: Foundation.NSObject.AutomaticallyNotifiesObserversForKey(string)
  nameWithType.vb: NSObject.AutomaticallyNotifiesObserversForKey(String)
  fullName.vb: Foundation.NSObject.AutomaticallyNotifiesObserversForKey(String)
  name.vb: AutomaticallyNotifiesObserversForKey(String)
  spec.csharp:
  - uid: Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String)
    name: AutomaticallyNotifiesObserversForKey
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AutomaticallyNotifiesObserversForKey(System.String)
    name: AutomaticallyNotifiesObserversForKey
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Foundation.NSObject.AwakeFromNib
  commentId: M:Foundation.NSObject.AwakeFromNib
  parent: Foundation.NSObject
  isExternal: true
  name: AwakeFromNib()
  nameWithType: NSObject.AwakeFromNib()
  fullName: Foundation.NSObject.AwakeFromNib()
  spec.csharp:
  - uid: Foundation.NSObject.AwakeFromNib
    name: AwakeFromNib
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.AwakeFromNib
    name: AwakeFromNib
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
  commentId: M:Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: CancelPreviousPerformRequest(NSObject)
  nameWithType: NSObject.CancelPreviousPerformRequest(NSObject)
  fullName: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
    name: CancelPreviousPerformRequest
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject)
    name: CancelPreviousPerformRequest
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: CancelPreviousPerformRequest(NSObject, Selector, NSObject)
  nameWithType: NSObject.CancelPreviousPerformRequest(NSObject, Selector, NSObject)
  fullName: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject, ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)
    name: CancelPreviousPerformRequest
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.CancelPreviousPerformRequest(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)
    name: CancelPreviousPerformRequest
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.Copy
  commentId: M:Foundation.NSObject.Copy
  parent: Foundation.NSObject
  isExternal: true
  name: Copy()
  nameWithType: NSObject.Copy()
  fullName: Foundation.NSObject.Copy()
  spec.csharp:
  - uid: Foundation.NSObject.Copy
    name: Copy
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.Copy
    name: Copy
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.DidChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  commentId: M:Foundation.NSObject.DidChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: DidChange(NSKeyValueChange, NSIndexSet, NSString)
  nameWithType: NSObject.DidChange(NSKeyValueChange, NSIndexSet, NSString)
  fullName: Foundation.NSObject.DidChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.DidChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
    name: DidChange
    isExternal: true
  - name: (
  - uid: Foundation.NSKeyValueChange
    name: NSKeyValueChange
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSIndexSet
    name: NSIndexSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DidChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
    name: DidChange
    isExternal: true
  - name: (
  - uid: Foundation.NSKeyValueChange
    name: NSKeyValueChange
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSIndexSet
    name: NSIndexSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.DidChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  commentId: M:Foundation.NSObject.DidChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  parent: Foundation.NSObject
  isExternal: true
  name: DidChange(NSString, NSKeyValueSetMutationKind, NSSet)
  nameWithType: NSObject.DidChange(NSString, NSKeyValueSetMutationKind, NSSet)
  fullName: Foundation.NSObject.DidChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet)
  spec.csharp:
  - uid: Foundation.NSObject.DidChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
    name: DidChange
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueSetMutationKind
    name: NSKeyValueSetMutationKind
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DidChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
    name: DidChange
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueSetMutationKind
    name: NSKeyValueSetMutationKind
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
- uid: Foundation.NSObject.DidChangeValue(System.String)
  commentId: M:Foundation.NSObject.DidChangeValue(System.String)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DidChangeValue(string)
  nameWithType: NSObject.DidChangeValue(string)
  fullName: Foundation.NSObject.DidChangeValue(string)
  nameWithType.vb: NSObject.DidChangeValue(String)
  fullName.vb: Foundation.NSObject.DidChangeValue(String)
  name.vb: DidChangeValue(String)
  spec.csharp:
  - uid: Foundation.NSObject.DidChangeValue(System.String)
    name: DidChangeValue
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DidChangeValue(System.String)
    name: DidChangeValue
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
  commentId: M:Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
  parent: Foundation.NSObject
  isExternal: true
  name: DoesNotRecognizeSelector(Selector)
  nameWithType: NSObject.DoesNotRecognizeSelector(Selector)
  fullName: Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
    name: DoesNotRecognizeSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.DoesNotRecognizeSelector(ObjCRuntime.Selector)
    name: DoesNotRecognizeSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
  commentId: M:Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
  parent: Foundation.NSObject
  isExternal: true
  name: GetDictionaryOfValuesFromKeys(NSString[])
  nameWithType: NSObject.GetDictionaryOfValuesFromKeys(NSString[])
  fullName: Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
  nameWithType.vb: NSObject.GetDictionaryOfValuesFromKeys(NSString())
  fullName.vb: Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString())
  name.vb: GetDictionaryOfValuesFromKeys(NSString())
  spec.csharp:
  - uid: Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
    name: GetDictionaryOfValuesFromKeys
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.GetDictionaryOfValuesFromKeys(Foundation.NSString[])
    name: GetDictionaryOfValuesFromKeys
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
  commentId: M:Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: GetKeyPathsForValuesAffecting(NSString)
  nameWithType: NSObject.GetKeyPathsForValuesAffecting(NSString)
  fullName: Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
    name: GetKeyPathsForValuesAffecting
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.GetKeyPathsForValuesAffecting(Foundation.NSString)
    name: GetKeyPathsForValuesAffecting
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
  commentId: M:Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
  parent: Foundation.NSObject
  isExternal: true
  name: GetMethodForSelector(Selector)
  nameWithType: NSObject.GetMethodForSelector(Selector)
  fullName: Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
    name: GetMethodForSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.GetMethodForSelector(ObjCRuntime.Selector)
    name: GetMethodForSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: Foundation.NSObject.GetNativeHash
  commentId: M:Foundation.NSObject.GetNativeHash
  parent: Foundation.NSObject
  isExternal: true
  name: GetNativeHash()
  nameWithType: NSObject.GetNativeHash()
  fullName: Foundation.NSObject.GetNativeHash()
  spec.csharp:
  - uid: Foundation.NSObject.GetNativeHash
    name: GetNativeHash
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.GetNativeHash
    name: GetNativeHash
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.IsEqual(Foundation.NSObject)
  commentId: M:Foundation.NSObject.IsEqual(Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: IsEqual(NSObject)
  nameWithType: NSObject.IsEqual(NSObject)
  fullName: Foundation.NSObject.IsEqual(Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.IsEqual(Foundation.NSObject)
    name: IsEqual
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.IsEqual(Foundation.NSObject)
    name: IsEqual
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
  commentId: M:Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
  parent: Foundation.NSObject
  isExternal: true
  name: IsKindOfClass(Class)
  nameWithType: NSObject.IsKindOfClass(Class)
  fullName: Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
  spec.csharp:
  - uid: Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
    name: IsKindOfClass
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.IsKindOfClass(ObjCRuntime.Class)
    name: IsKindOfClass
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
- uid: Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
  commentId: M:Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
  parent: Foundation.NSObject
  isExternal: true
  name: IsMemberOfClass(Class)
  nameWithType: NSObject.IsMemberOfClass(Class)
  fullName: Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
  spec.csharp:
  - uid: Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
    name: IsMemberOfClass
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.IsMemberOfClass(ObjCRuntime.Class)
    name: IsMemberOfClass
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Class
    name: Class
    isExternal: true
  - name: )
- uid: Foundation.NSObject.MutableCopy
  commentId: M:Foundation.NSObject.MutableCopy
  parent: Foundation.NSObject
  isExternal: true
  name: MutableCopy()
  nameWithType: NSObject.MutableCopy()
  fullName: Foundation.NSObject.MutableCopy()
  spec.csharp:
  - uid: Foundation.NSObject.MutableCopy
    name: MutableCopy
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.MutableCopy
    name: MutableCopy
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.ObserveValue(Foundation.NSString,Foundation.NSObject,Foundation.NSDictionary,System.IntPtr)
  commentId: M:Foundation.NSObject.ObserveValue(Foundation.NSString,Foundation.NSObject,Foundation.NSDictionary,System.IntPtr)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: ObserveValue(NSString, NSObject, NSDictionary, nint)
  nameWithType: NSObject.ObserveValue(NSString, NSObject, NSDictionary, nint)
  fullName: Foundation.NSObject.ObserveValue(Foundation.NSString, Foundation.NSObject, Foundation.NSDictionary, nint)
  nameWithType.vb: NSObject.ObserveValue(NSString, NSObject, NSDictionary, IntPtr)
  fullName.vb: Foundation.NSObject.ObserveValue(Foundation.NSString, Foundation.NSObject, Foundation.NSDictionary, System.IntPtr)
  name.vb: ObserveValue(NSString, NSObject, NSDictionary, IntPtr)
  spec.csharp:
  - uid: Foundation.NSObject.ObserveValue(Foundation.NSString,Foundation.NSObject,Foundation.NSDictionary,System.IntPtr)
    name: ObserveValue
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSDictionary
    name: NSDictionary
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ObserveValue(Foundation.NSString,Foundation.NSObject,Foundation.NSDictionary,System.IntPtr)
    name: ObserveValue
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSDictionary
    name: NSDictionary
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double,Foundation.NSString[])
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double,Foundation.NSString[])
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: PerformSelector(Selector, NSObject, double, NSString[])
  nameWithType: NSObject.PerformSelector(Selector, NSObject, double, NSString[])
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, double, Foundation.NSString[])
  nameWithType.vb: NSObject.PerformSelector(Selector, NSObject, Double, NSString())
  fullName.vb: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, Double, Foundation.NSString())
  name.vb: PerformSelector(Selector, NSObject, Double, NSString())
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double,Foundation.NSString[])
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double,Foundation.NSString[])
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double)
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: PerformSelector(Selector, NSObject, double)
  nameWithType: NSObject.PerformSelector(Selector, NSObject, double)
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, double)
  nameWithType.vb: NSObject.PerformSelector(Selector, NSObject, Double)
  fullName.vb: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, Double)
  name.vb: PerformSelector(Selector, NSObject, Double)
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,System.Double)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean)
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PerformSelector(Selector, NSThread, NSObject, bool)
  nameWithType: NSObject.PerformSelector(Selector, NSThread, NSObject, bool)
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, bool)
  nameWithType.vb: NSObject.PerformSelector(Selector, NSThread, NSObject, Boolean)
  fullName.vb: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, Boolean)
  name.vb: PerformSelector(Selector, NSThread, NSObject, Boolean)
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSThread
    name: NSThread
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSThread
    name: NSThread
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean,Foundation.NSString[])
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean,Foundation.NSString[])
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PerformSelector(Selector, NSThread, NSObject, bool, NSString[])
  nameWithType: NSObject.PerformSelector(Selector, NSThread, NSObject, bool, NSString[])
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, bool, Foundation.NSString[])
  nameWithType.vb: NSObject.PerformSelector(Selector, NSThread, NSObject, Boolean, NSString())
  fullName.vb: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSThread, Foundation.NSObject, Boolean, Foundation.NSString())
  name.vb: PerformSelector(Selector, NSThread, NSObject, Boolean, NSString())
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean,Foundation.NSString[])
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSThread
    name: NSThread
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSThread,Foundation.NSObject,System.Boolean,Foundation.NSString[])
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSThread
    name: NSThread
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
  parent: Foundation.NSObject
  isExternal: true
  name: PerformSelector(Selector)
  nameWithType: NSObject.PerformSelector(Selector)
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: PerformSelector(Selector, NSObject)
  nameWithType: NSObject.PerformSelector(Selector, NSObject)
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)
  commentId: M:Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)
  parent: Foundation.NSObject
  isExternal: true
  name: PerformSelector(Selector, NSObject, NSObject)
  nameWithType: NSObject.PerformSelector(Selector, NSObject, NSObject)
  fullName: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector, Foundation.NSObject, Foundation.NSObject)
  spec.csharp:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PerformSelector(ObjCRuntime.Selector,Foundation.NSObject,Foundation.NSObject)
    name: PerformSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: )
- uid: Foundation.NSObject.PrepareForInterfaceBuilder
  commentId: M:Foundation.NSObject.PrepareForInterfaceBuilder
  parent: Foundation.NSObject
  isExternal: true
  name: PrepareForInterfaceBuilder()
  nameWithType: NSObject.PrepareForInterfaceBuilder()
  fullName: Foundation.NSObject.PrepareForInterfaceBuilder()
  spec.csharp:
  - uid: Foundation.NSObject.PrepareForInterfaceBuilder
    name: PrepareForInterfaceBuilder
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.PrepareForInterfaceBuilder
    name: PrepareForInterfaceBuilder
    isExternal: true
  - name: (
  - name: )
- uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString,System.IntPtr)
  commentId: M:Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString,System.IntPtr)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: RemoveObserver(NSObject, NSString, nint)
  nameWithType: NSObject.RemoveObserver(NSObject, NSString, nint)
  fullName: Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString, nint)
  nameWithType.vb: NSObject.RemoveObserver(NSObject, NSString, IntPtr)
  fullName.vb: Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString, System.IntPtr)
  name.vb: RemoveObserver(NSObject, NSString, IntPtr)
  spec.csharp:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString,System.IntPtr)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString,System.IntPtr)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String,System.IntPtr)
  commentId: M:Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String,System.IntPtr)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RemoveObserver(NSObject, string, nint)
  nameWithType: NSObject.RemoveObserver(NSObject, string, nint)
  fullName: Foundation.NSObject.RemoveObserver(Foundation.NSObject, string, nint)
  nameWithType.vb: NSObject.RemoveObserver(NSObject, String, IntPtr)
  fullName.vb: Foundation.NSObject.RemoveObserver(Foundation.NSObject, String, System.IntPtr)
  name.vb: RemoveObserver(NSObject, String, IntPtr)
  spec.csharp:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String,System.IntPtr)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String,System.IntPtr)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString)
  commentId: M:Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: RemoveObserver(NSObject, NSString)
  nameWithType: NSObject.RemoveObserver(NSObject, NSString)
  fullName: Foundation.NSObject.RemoveObserver(Foundation.NSObject, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,Foundation.NSString)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String)
  commentId: M:Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RemoveObserver(NSObject, string)
  nameWithType: NSObject.RemoveObserver(NSObject, string)
  fullName: Foundation.NSObject.RemoveObserver(Foundation.NSObject, string)
  nameWithType.vb: NSObject.RemoveObserver(NSObject, String)
  fullName.vb: Foundation.NSObject.RemoveObserver(Foundation.NSObject, String)
  name.vb: RemoveObserver(NSObject, String)
  spec.csharp:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.RemoveObserver(Foundation.NSObject,System.String)
    name: RemoveObserver
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
  commentId: M:Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
  parent: Foundation.NSObject
  isExternal: true
  name: RespondsToSelector(Selector)
  nameWithType: NSObject.RespondsToSelector(Selector)
  fullName: Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
  spec.csharp:
  - uid: Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
    name: RespondsToSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.RespondsToSelector(ObjCRuntime.Selector)
    name: RespondsToSelector
    isExternal: true
  - name: (
  - uid: ObjCRuntime.Selector
    name: Selector
    isExternal: true
  - name: )
- uid: Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
  commentId: M:Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: SetNilValueForKey(NSString)
  nameWithType: NSObject.SetNilValueForKey(NSString)
  fullName: Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
    name: SetNilValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetNilValueForKey(Foundation.NSString)
    name: SetNilValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.SetValueForKey(Foundation.NSObject,Foundation.NSString)
  commentId: M:Foundation.NSObject.SetValueForKey(Foundation.NSObject,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: SetValueForKey(NSObject, NSString)
  nameWithType: NSObject.SetValueForKey(NSObject, NSString)
  fullName: Foundation.NSObject.SetValueForKey(Foundation.NSObject, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.SetValueForKey(Foundation.NSObject,Foundation.NSString)
    name: SetValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetValueForKey(Foundation.NSObject,Foundation.NSString)
    name: SetValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject,Foundation.NSString)
  commentId: M:Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: SetValueForKeyPath(NSObject, NSString)
  nameWithType: NSObject.SetValueForKeyPath(NSObject, NSString)
  fullName: Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject,Foundation.NSString)
    name: SetValueForKeyPath
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetValueForKeyPath(Foundation.NSObject,Foundation.NSString)
    name: SetValueForKeyPath
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject,Foundation.NSString)
  commentId: M:Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: SetValueForUndefinedKey(NSObject, NSString)
  nameWithType: NSObject.SetValueForUndefinedKey(NSObject, NSString)
  fullName: Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject,Foundation.NSString)
    name: SetValueForUndefinedKey
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetValueForUndefinedKey(Foundation.NSObject,Foundation.NSString)
    name: SetValueForUndefinedKey
    isExternal: true
  - name: (
  - uid: Foundation.NSObject
    name: NSObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
  commentId: M:Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
  parent: Foundation.NSObject
  isExternal: true
  name: SetValuesForKeysWithDictionary(NSDictionary)
  nameWithType: NSObject.SetValuesForKeysWithDictionary(NSDictionary)
  fullName: Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
  spec.csharp:
  - uid: Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
    name: SetValuesForKeysWithDictionary
    isExternal: true
  - name: (
  - uid: Foundation.NSDictionary
    name: NSDictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.SetValuesForKeysWithDictionary(Foundation.NSDictionary)
    name: SetValuesForKeysWithDictionary
    isExternal: true
  - name: (
  - uid: Foundation.NSDictionary
    name: NSDictionary
    isExternal: true
  - name: )
- uid: Foundation.NSObject.ValueForKey(Foundation.NSString)
  commentId: M:Foundation.NSObject.ValueForKey(Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: ValueForKey(NSString)
  nameWithType: NSObject.ValueForKey(NSString)
  fullName: Foundation.NSObject.ValueForKey(Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.ValueForKey(Foundation.NSString)
    name: ValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ValueForKey(Foundation.NSString)
    name: ValueForKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
  commentId: M:Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: ValueForKeyPath(NSString)
  nameWithType: NSObject.ValueForKeyPath(NSString)
  fullName: Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
    name: ValueForKeyPath
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ValueForKeyPath(Foundation.NSString)
    name: ValueForKeyPath
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
  commentId: M:Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: ValueForUndefinedKey(NSString)
  nameWithType: NSObject.ValueForUndefinedKey(NSString)
  fullName: Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
    name: ValueForUndefinedKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.ValueForUndefinedKey(Foundation.NSString)
    name: ValueForUndefinedKey
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.WillChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  commentId: M:Foundation.NSObject.WillChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
  parent: Foundation.NSObject
  isExternal: true
  name: WillChange(NSKeyValueChange, NSIndexSet, NSString)
  nameWithType: NSObject.WillChange(NSKeyValueChange, NSIndexSet, NSString)
  fullName: Foundation.NSObject.WillChange(Foundation.NSKeyValueChange, Foundation.NSIndexSet, Foundation.NSString)
  spec.csharp:
  - uid: Foundation.NSObject.WillChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
    name: WillChange
    isExternal: true
  - name: (
  - uid: Foundation.NSKeyValueChange
    name: NSKeyValueChange
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSIndexSet
    name: NSIndexSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.WillChange(Foundation.NSKeyValueChange,Foundation.NSIndexSet,Foundation.NSString)
    name: WillChange
    isExternal: true
  - name: (
  - uid: Foundation.NSKeyValueChange
    name: NSKeyValueChange
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSIndexSet
    name: NSIndexSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: )
- uid: Foundation.NSObject.WillChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  commentId: M:Foundation.NSObject.WillChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
  parent: Foundation.NSObject
  isExternal: true
  name: WillChange(NSString, NSKeyValueSetMutationKind, NSSet)
  nameWithType: NSObject.WillChange(NSString, NSKeyValueSetMutationKind, NSSet)
  fullName: Foundation.NSObject.WillChange(Foundation.NSString, Foundation.NSKeyValueSetMutationKind, Foundation.NSSet)
  spec.csharp:
  - uid: Foundation.NSObject.WillChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
    name: WillChange
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueSetMutationKind
    name: NSKeyValueSetMutationKind
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.WillChange(Foundation.NSString,Foundation.NSKeyValueSetMutationKind,Foundation.NSSet)
    name: WillChange
    isExternal: true
  - name: (
  - uid: Foundation.NSString
    name: NSString
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSKeyValueSetMutationKind
    name: NSKeyValueSetMutationKind
    isExternal: true
  - name: ','
  - name: " "
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: )
- uid: Foundation.NSObject.WillChangeValue(System.String)
  commentId: M:Foundation.NSObject.WillChangeValue(System.String)
  parent: Foundation.NSObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WillChangeValue(string)
  nameWithType: NSObject.WillChangeValue(string)
  fullName: Foundation.NSObject.WillChangeValue(string)
  nameWithType.vb: NSObject.WillChangeValue(String)
  fullName.vb: Foundation.NSObject.WillChangeValue(String)
  name.vb: WillChangeValue(String)
  spec.csharp:
  - uid: Foundation.NSObject.WillChangeValue(System.String)
    name: WillChangeValue
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Foundation.NSObject.WillChangeValue(System.String)
    name: WillChangeValue
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Foundation.NSObject.IsDirectBinding
  commentId: P:Foundation.NSObject.IsDirectBinding
  parent: Foundation.NSObject
  isExternal: true
  name: IsDirectBinding
  nameWithType: NSObject.IsDirectBinding
  fullName: Foundation.NSObject.IsDirectBinding
- uid: Foundation.NSObject.SuperHandle
  commentId: P:Foundation.NSObject.SuperHandle
  parent: Foundation.NSObject
  isExternal: true
  name: SuperHandle
  nameWithType: NSObject.SuperHandle
  fullName: Foundation.NSObject.SuperHandle
- uid: Foundation.NSObject.Handle
  commentId: P:Foundation.NSObject.Handle
  parent: Foundation.NSObject
  isExternal: true
  name: Handle
  nameWithType: NSObject.Handle
  fullName: Foundation.NSObject.Handle
- uid: Foundation.NSObject.Class
  commentId: P:Foundation.NSObject.Class
  parent: Foundation.NSObject
  isExternal: true
  name: Class
  nameWithType: NSObject.Class
  fullName: Foundation.NSObject.Class
- uid: Foundation.NSObject.DebugDescription
  commentId: P:Foundation.NSObject.DebugDescription
  parent: Foundation.NSObject
  isExternal: true
  name: DebugDescription
  nameWithType: NSObject.DebugDescription
  fullName: Foundation.NSObject.DebugDescription
- uid: Foundation.NSObject.Description
  commentId: P:Foundation.NSObject.Description
  parent: Foundation.NSObject
  isExternal: true
  name: Description
  nameWithType: NSObject.Description
  fullName: Foundation.NSObject.Description
- uid: Foundation.NSObject.IsProxy
  commentId: P:Foundation.NSObject.IsProxy
  parent: Foundation.NSObject
  isExternal: true
  name: IsProxy
  nameWithType: NSObject.IsProxy
  fullName: Foundation.NSObject.IsProxy
- uid: Foundation.NSObject.RetainCount
  commentId: P:Foundation.NSObject.RetainCount
  parent: Foundation.NSObject
  isExternal: true
  name: RetainCount
  nameWithType: NSObject.RetainCount
  fullName: Foundation.NSObject.RetainCount
- uid: Foundation.NSObject.Self
  commentId: P:Foundation.NSObject.Self
  parent: Foundation.NSObject
  isExternal: true
  name: Self
  nameWithType: NSObject.Self
  fullName: Foundation.NSObject.Self
- uid: Foundation.NSObject.Superclass
  commentId: P:Foundation.NSObject.Superclass
  parent: Foundation.NSObject
  isExternal: true
  name: Superclass
  nameWithType: NSObject.Superclass
  fullName: Foundation.NSObject.Superclass
- uid: Foundation.NSObject.Zone
  commentId: P:Foundation.NSObject.Zone
  parent: Foundation.NSObject
  isExternal: true
  name: Zone
  nameWithType: NSObject.Zone
  fullName: Foundation.NSObject.Zone
- uid: Foundation.NSObject.ChangeIndexesKey
  commentId: P:Foundation.NSObject.ChangeIndexesKey
  parent: Foundation.NSObject
  isExternal: true
  name: ChangeIndexesKey
  nameWithType: NSObject.ChangeIndexesKey
  fullName: Foundation.NSObject.ChangeIndexesKey
- uid: Foundation.NSObject.ChangeKindKey
  commentId: P:Foundation.NSObject.ChangeKindKey
  parent: Foundation.NSObject
  isExternal: true
  name: ChangeKindKey
  nameWithType: NSObject.ChangeKindKey
  fullName: Foundation.NSObject.ChangeKindKey
- uid: Foundation.NSObject.ChangeNewKey
  commentId: P:Foundation.NSObject.ChangeNewKey
  parent: Foundation.NSObject
  isExternal: true
  name: ChangeNewKey
  nameWithType: NSObject.ChangeNewKey
  fullName: Foundation.NSObject.ChangeNewKey
- uid: Foundation.NSObject.ChangeNotificationIsPriorKey
  commentId: P:Foundation.NSObject.ChangeNotificationIsPriorKey
  parent: Foundation.NSObject
  isExternal: true
  name: ChangeNotificationIsPriorKey
  nameWithType: NSObject.ChangeNotificationIsPriorKey
  fullName: Foundation.NSObject.ChangeNotificationIsPriorKey
- uid: Foundation.NSObject.ChangeOldKey
  commentId: P:Foundation.NSObject.ChangeOldKey
  parent: Foundation.NSObject
  isExternal: true
  name: ChangeOldKey
  nameWithType: NSObject.ChangeOldKey
  fullName: Foundation.NSObject.ChangeOldKey
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Foundation
  commentId: N:Foundation
  isExternal: true
  name: Foundation
  nameWithType: Foundation
  fullName: Foundation
- uid: UIKit
  commentId: N:UIKit
  isExternal: true
  name: UIKit
  nameWithType: UIKit
  fullName: UIKit
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: CoreAnimation
  commentId: N:CoreAnimation
  isExternal: true
  name: CoreAnimation
  nameWithType: CoreAnimation
  fullName: CoreAnimation
- uid: ObjCRuntime
  commentId: N:ObjCRuntime
  isExternal: true
  name: ObjCRuntime
  nameWithType: ObjCRuntime
  fullName: ObjCRuntime
- uid: Mapsui.UI
  commentId: N:Mapsui.UI
  href: Mapsui.html
  name: Mapsui.UI
  nameWithType: Mapsui.UI
  fullName: Mapsui.UI
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.UI
    name: UI
    href: Mapsui.UI.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.UI
    name: UI
    href: Mapsui.UI.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.UI.iOS.MapControl.#ctor*
  commentId: Overload:Mapsui.UI.iOS.MapControl.#ctor
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl__ctor_CoreGraphics_CGRect_
  name: MapControl
  nameWithType: MapControl.MapControl
  fullName: Mapsui.UI.iOS.MapControl.MapControl
  nameWithType.vb: MapControl.New
  fullName.vb: Mapsui.UI.iOS.MapControl.New
  name.vb: New
- uid: CoreGraphics.CGRect
  commentId: T:CoreGraphics.CGRect
  parent: CoreGraphics
  isExternal: true
  name: CGRect
  nameWithType: CGRect
  fullName: CoreGraphics.CGRect
- uid: CoreGraphics
  commentId: N:CoreGraphics
  isExternal: true
  name: CoreGraphics
  nameWithType: CoreGraphics
  fullName: CoreGraphics
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: Mapsui.UI.iOS.MapControl.UseGPU*
  commentId: Overload:Mapsui.UI.iOS.MapControl.UseGPU
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_UseGPU
  name: UseGPU
  nameWithType: MapControl.UseGPU
  fullName: Mapsui.UI.iOS.MapControl.UseGPU
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UIKit.UIResponder.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: TouchesBegan(NSSet, UIEvent)
  nameWithType: UIResponder.TouchesBegan(NSSet, UIEvent)
  fullName: UIKit.UIResponder.TouchesBegan(Foundation.NSSet, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesBegan
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.TouchesBegan(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesBegan
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: Mapsui.UI.iOS.MapControl.TouchesBegan*
  commentId: Overload:Mapsui.UI.iOS.MapControl.TouchesBegan
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_TouchesBegan_Foundation_NSSet_UIKit_UIEvent_
  name: TouchesBegan
  nameWithType: MapControl.TouchesBegan
  fullName: Mapsui.UI.iOS.MapControl.TouchesBegan
- uid: Foundation.NSSet
  commentId: T:Foundation.NSSet
  parent: Foundation
  isExternal: true
  name: NSSet
  nameWithType: NSSet
  fullName: Foundation.NSSet
- uid: UIKit.UIEvent
  commentId: T:UIKit.UIEvent
  parent: UIKit
  isExternal: true
  name: UIEvent
  nameWithType: UIEvent
  fullName: UIKit.UIEvent
- uid: UIKit.UIResponder.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: TouchesMoved(NSSet, UIEvent)
  nameWithType: UIResponder.TouchesMoved(NSSet, UIEvent)
  fullName: UIKit.UIResponder.TouchesMoved(Foundation.NSSet, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesMoved
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.TouchesMoved(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesMoved
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: Mapsui.UI.iOS.MapControl.TouchesMoved*
  commentId: Overload:Mapsui.UI.iOS.MapControl.TouchesMoved
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_TouchesMoved_Foundation_NSSet_UIKit_UIEvent_
  name: TouchesMoved
  nameWithType: MapControl.TouchesMoved
  fullName: Mapsui.UI.iOS.MapControl.TouchesMoved
- uid: UIKit.UIResponder.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  commentId: M:UIKit.UIResponder.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
  parent: UIKit.UIResponder
  isExternal: true
  name: TouchesEnded(NSSet, UIEvent)
  nameWithType: UIResponder.TouchesEnded(NSSet, UIEvent)
  fullName: UIKit.UIResponder.TouchesEnded(Foundation.NSSet, UIKit.UIEvent)
  spec.csharp:
  - uid: UIKit.UIResponder.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesEnded
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: UIKit.UIResponder.TouchesEnded(Foundation.NSSet,UIKit.UIEvent)
    name: TouchesEnded
    isExternal: true
  - name: (
  - uid: Foundation.NSSet
    name: NSSet
    isExternal: true
  - name: ','
  - name: " "
  - uid: UIKit.UIEvent
    name: UIEvent
    isExternal: true
  - name: )
- uid: Mapsui.UI.iOS.MapControl.TouchesEnded*
  commentId: Overload:Mapsui.UI.iOS.MapControl.TouchesEnded
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_TouchesEnded_Foundation_NSSet_UIKit_UIEvent_
  name: TouchesEnded
  nameWithType: MapControl.TouchesEnded
  fullName: Mapsui.UI.iOS.MapControl.TouchesEnded
- uid: UIKit.UIView.Frame
  commentId: P:UIKit.UIView.Frame
  parent: UIKit.UIView
  isExternal: true
  name: Frame
  nameWithType: UIView.Frame
  fullName: UIKit.UIView.Frame
- uid: Mapsui.UI.iOS.MapControl.Frame*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Frame
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Frame
  name: Frame
  nameWithType: MapControl.Frame
  fullName: Mapsui.UI.iOS.MapControl.Frame
- uid: UIKit.UIView.LayoutMarginsDidChange
  commentId: M:UIKit.UIView.LayoutMarginsDidChange
  parent: UIKit.UIView
  isExternal: true
  name: LayoutMarginsDidChange()
  nameWithType: UIView.LayoutMarginsDidChange()
  fullName: UIKit.UIView.LayoutMarginsDidChange()
  spec.csharp:
  - uid: UIKit.UIView.LayoutMarginsDidChange
    name: LayoutMarginsDidChange
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UIKit.UIView.LayoutMarginsDidChange
    name: LayoutMarginsDidChange
    isExternal: true
  - name: (
  - name: )
- uid: Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange*
  commentId: Overload:Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_LayoutMarginsDidChange
  name: LayoutMarginsDidChange
  nameWithType: MapControl.LayoutMarginsDidChange
  fullName: Mapsui.UI.iOS.MapControl.LayoutMarginsDidChange
- uid: Mapsui.UI.iOS.MapControl.OpenInBrowser*
  commentId: Overload:Mapsui.UI.iOS.MapControl.OpenInBrowser
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_OpenInBrowser_System_String_
  name: OpenInBrowser
  nameWithType: MapControl.OpenInBrowser
  fullName: Mapsui.UI.iOS.MapControl.OpenInBrowser
- uid: Mapsui.UI.IMapControl.OpenInBrowser(System.String)
  commentId: M:Mapsui.UI.IMapControl.OpenInBrowser(System.String)
  parent: Mapsui.UI.IMapControl
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenInBrowser(string)
  nameWithType: IMapControl.OpenInBrowser(string)
  fullName: Mapsui.UI.IMapControl.OpenInBrowser(string)
  nameWithType.vb: IMapControl.OpenInBrowser(String)
  fullName.vb: Mapsui.UI.IMapControl.OpenInBrowser(String)
  name.vb: OpenInBrowser(String)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.OpenInBrowser(System.String)
    name: OpenInBrowser
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.OpenInBrowser(System.String)
    name: OpenInBrowser
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mapsui.UI.iOS.MapControl.Dispose*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Dispose
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Dispose
  name: Dispose
  nameWithType: MapControl.Dispose
  fullName: Mapsui.UI.iOS.MapControl.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Mapsui.UI.iOS.MapControl.MaxTapGestureMovement*
  commentId: Overload:Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_MaxTapGestureMovement
  name: MaxTapGestureMovement
  nameWithType: MapControl.MaxTapGestureMovement
  fullName: Mapsui.UI.iOS.MapControl.MaxTapGestureMovement
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.UI.iOS.MapControl.UseFling*
  commentId: Overload:Mapsui.UI.iOS.MapControl.UseFling
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_UseFling
  name: UseFling
  nameWithType: MapControl.UseFling
  fullName: Mapsui.UI.iOS.MapControl.UseFling
- uid: Mapsui.UI.iOS.MapControl.StartUpdates*
  commentId: Overload:Mapsui.UI.iOS.MapControl.StartUpdates
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_StartUpdates_System_Boolean_
  name: StartUpdates
  nameWithType: MapControl.StartUpdates
  fullName: Mapsui.UI.iOS.MapControl.StartUpdates
- uid: Mapsui.UI.iOS.MapControl.StopUpdates*
  commentId: Overload:Mapsui.UI.iOS.MapControl.StopUpdates
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_StopUpdates
  name: StopUpdates
  nameWithType: MapControl.StopUpdates
  fullName: Mapsui.UI.iOS.MapControl.StopUpdates
- uid: Mapsui.UI.iOS.MapControl.ForceUpdate*
  commentId: Overload:Mapsui.UI.iOS.MapControl.ForceUpdate
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_ForceUpdate
  name: ForceUpdate
  nameWithType: MapControl.ForceUpdate
  fullName: Mapsui.UI.iOS.MapControl.ForceUpdate
- uid: Mapsui.UI.iOS.MapControl.UpdateInterval*
  commentId: Overload:Mapsui.UI.iOS.MapControl.UpdateInterval
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_UpdateInterval
  name: UpdateInterval
  nameWithType: MapControl.UpdateInterval
  fullName: Mapsui.UI.iOS.MapControl.UpdateInterval
- uid: Mapsui.UI.iOS.MapControl.Performance*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Performance
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Performance
  name: Performance
  nameWithType: MapControl.Performance
  fullName: Mapsui.UI.iOS.MapControl.Performance
- uid: Mapsui.UI.IMapControl.Performance
  commentId: P:Mapsui.UI.IMapControl.Performance
  parent: Mapsui.UI.IMapControl
  name: Performance
  nameWithType: IMapControl.Performance
  fullName: Mapsui.UI.IMapControl.Performance
- uid: Mapsui.Utilities.Performance
  commentId: T:Mapsui.Utilities.Performance
  parent: Mapsui.Utilities
  href: Mapsui.Utilities.Performance.html
  name: Performance
  nameWithType: Performance
  fullName: Mapsui.Utilities.Performance
- uid: Mapsui.Utilities
  commentId: N:Mapsui.Utilities
  href: Mapsui.html
  name: Mapsui.Utilities
  nameWithType: Mapsui.Utilities
  fullName: Mapsui.Utilities
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Utilities
    name: Utilities
    href: Mapsui.Utilities.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Utilities
    name: Utilities
    href: Mapsui.Utilities.html
- uid: Mapsui.UI.iOS.MapControl.PixelDensity*
  commentId: Overload:Mapsui.UI.iOS.MapControl.PixelDensity
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_PixelDensity
  name: PixelDensity
  nameWithType: MapControl.PixelDensity
  fullName: Mapsui.UI.iOS.MapControl.PixelDensity
- uid: Mapsui.UI.IMapControl.PixelDensity
  commentId: P:Mapsui.UI.IMapControl.PixelDensity
  parent: Mapsui.UI.IMapControl
  name: PixelDensity
  nameWithType: IMapControl.PixelDensity
  fullName: Mapsui.UI.IMapControl.PixelDensity
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Mapsui.UI.iOS.MapControl.Renderer*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Renderer
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Renderer
  name: Renderer
  nameWithType: MapControl.Renderer
  fullName: Mapsui.UI.iOS.MapControl.Renderer
- uid: Mapsui.UI.IMapControl.Renderer
  commentId: P:Mapsui.UI.IMapControl.Renderer
  parent: Mapsui.UI.IMapControl
  name: Renderer
  nameWithType: IMapControl.Renderer
  fullName: Mapsui.UI.IMapControl.Renderer
- uid: Mapsui.Rendering.IRenderer
  commentId: T:Mapsui.Rendering.IRenderer
  parent: Mapsui.Rendering
  href: Mapsui.Rendering.IRenderer.html
  name: IRenderer
  nameWithType: IRenderer
  fullName: Mapsui.Rendering.IRenderer
- uid: Mapsui.Rendering
  commentId: N:Mapsui.Rendering
  href: Mapsui.html
  name: Mapsui.Rendering
  nameWithType: Mapsui.Rendering
  fullName: Mapsui.Rendering
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Rendering
    name: Rendering
    href: Mapsui.Rendering.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Rendering
    name: Rendering
    href: Mapsui.Rendering.html
- uid: Mapsui.UI.IMapControl.Info
  commentId: E:Mapsui.UI.IMapControl.Info
  parent: Mapsui.UI.IMapControl
  name: Info
  nameWithType: IMapControl.Info
  fullName: Mapsui.UI.IMapControl.Info
- uid: System.EventHandler{Mapsui.MapInfoEventArgs}
  commentId: T:System.EventHandler{Mapsui.MapInfoEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MapInfoEventArgs>
  nameWithType: EventHandler<MapInfoEventArgs>
  fullName: System.EventHandler<Mapsui.MapInfoEventArgs>
  nameWithType.vb: EventHandler(Of MapInfoEventArgs)
  fullName.vb: System.EventHandler(Of Mapsui.MapInfoEventArgs)
  name.vb: EventHandler(Of MapInfoEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Mapsui.MapInfoEventArgs
    name: MapInfoEventArgs
    href: Mapsui.MapInfoEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.MapInfoEventArgs
    name: MapInfoEventArgs
    href: Mapsui.MapInfoEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: Mapsui.UI.iOS.MapControl.OnPropertyChanged*
  commentId: Overload:Mapsui.UI.iOS.MapControl.OnPropertyChanged
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_OnPropertyChanged_System_String_
  name: OnPropertyChanged
  nameWithType: MapControl.OnPropertyChanged
  fullName: Mapsui.UI.iOS.MapControl.OnPropertyChanged
- uid: Mapsui.UI.iOS.MapControl.Unsubscribe*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Unsubscribe
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Unsubscribe
  name: Unsubscribe
  nameWithType: MapControl.Unsubscribe
  fullName: Mapsui.UI.iOS.MapControl.Unsubscribe
- uid: Mapsui.UI.IMapControl.Unsubscribe
  commentId: M:Mapsui.UI.IMapControl.Unsubscribe
  parent: Mapsui.UI.IMapControl
  name: Unsubscribe()
  nameWithType: IMapControl.Unsubscribe()
  fullName: Mapsui.UI.IMapControl.Unsubscribe()
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.Unsubscribe
    name: Unsubscribe
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.Unsubscribe
    name: Unsubscribe
  - name: (
  - name: )
- uid: Mapsui.UI.iOS.MapControl.Refresh*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Refresh
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Refresh_Mapsui_ChangeType_
  name: Refresh
  nameWithType: MapControl.Refresh
  fullName: Mapsui.UI.iOS.MapControl.Refresh
- uid: Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
  commentId: M:Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
  parent: Mapsui.UI.IMapControl
  name: Refresh(ChangeType)
  nameWithType: IMapControl.Refresh(ChangeType)
  fullName: Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
    name: Refresh
  - name: (
  - uid: Mapsui.ChangeType
    name: ChangeType
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.Refresh(Mapsui.ChangeType)
    name: Refresh
  - name: (
  - uid: Mapsui.ChangeType
    name: ChangeType
  - name: )
- uid: Mapsui.ChangeType
  commentId: T:Mapsui.ChangeType
  parent: Mapsui
  href: Mapsui.ChangeType.html
  name: ChangeType
  nameWithType: ChangeType
  fullName: Mapsui.ChangeType
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.UI.iOS.MapControl.RefreshGraphics*
  commentId: Overload:Mapsui.UI.iOS.MapControl.RefreshGraphics
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_RefreshGraphics
  name: RefreshGraphics
  nameWithType: MapControl.RefreshGraphics
  fullName: Mapsui.UI.iOS.MapControl.RefreshGraphics
- uid: Mapsui.UI.IMapControl.RefreshGraphics
  commentId: M:Mapsui.UI.IMapControl.RefreshGraphics
  parent: Mapsui.UI.IMapControl
  name: RefreshGraphics()
  nameWithType: IMapControl.RefreshGraphics()
  fullName: Mapsui.UI.IMapControl.RefreshGraphics()
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.RefreshGraphics
    name: RefreshGraphics
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.RefreshGraphics
    name: RefreshGraphics
  - name: (
  - name: )
- uid: Mapsui.UI.iOS.MapControl.Map*
  commentId: Overload:Mapsui.UI.iOS.MapControl.Map
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_Map
  name: Map
  nameWithType: MapControl.Map
  fullName: Mapsui.UI.iOS.MapControl.Map
- uid: Mapsui.UI.IMapControl.Map
  commentId: P:Mapsui.UI.IMapControl.Map
  parent: Mapsui.UI.IMapControl
  name: Map
  nameWithType: IMapControl.Map
  fullName: Mapsui.UI.IMapControl.Map
- uid: Mapsui.Map
  commentId: T:Mapsui.Map
  parent: Mapsui
  href: Mapsui.Map.html
  name: Map
  nameWithType: Map
  fullName: Mapsui.Map
- uid: Mapsui.UI.iOS.MapControl.ToPixels*
  commentId: Overload:Mapsui.UI.iOS.MapControl.ToPixels
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_ToPixels_Mapsui_MPoint_
  name: ToPixels
  nameWithType: MapControl.ToPixels
  fullName: Mapsui.UI.iOS.MapControl.ToPixels
- uid: Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
  commentId: M:Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
  parent: Mapsui.UI.IMapControl
  name: ToPixels(MPoint)
  nameWithType: IMapControl.ToPixels(MPoint)
  fullName: Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
    name: ToPixels
  - name: (
  - uid: Mapsui.MPoint
    name: MPoint
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.ToPixels(Mapsui.MPoint)
    name: ToPixels
  - name: (
  - uid: Mapsui.MPoint
    name: MPoint
  - name: )
- uid: Mapsui.MPoint
  commentId: T:Mapsui.MPoint
  parent: Mapsui
  href: Mapsui.MPoint.html
  name: MPoint
  nameWithType: MPoint
  fullName: Mapsui.MPoint
- uid: Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits*
  commentId: Overload:Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_ToDeviceIndependentUnits_Mapsui_MPoint_
  name: ToDeviceIndependentUnits
  nameWithType: MapControl.ToDeviceIndependentUnits
  fullName: Mapsui.UI.iOS.MapControl.ToDeviceIndependentUnits
- uid: Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  commentId: M:Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  parent: Mapsui.UI.IMapControl
  name: ToDeviceIndependentUnits(MPoint)
  nameWithType: IMapControl.ToDeviceIndependentUnits(MPoint)
  fullName: Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
    name: ToDeviceIndependentUnits
  - name: (
  - uid: Mapsui.MPoint
    name: MPoint
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.ToDeviceIndependentUnits(Mapsui.MPoint)
    name: ToDeviceIndependentUnits
  - name: (
  - uid: Mapsui.MPoint
    name: MPoint
  - name: )
- uid: Mapsui.UI.iOS.MapControl.RefreshData*
  commentId: Overload:Mapsui.UI.iOS.MapControl.RefreshData
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_RefreshData_Mapsui_ChangeType_
  name: RefreshData
  nameWithType: MapControl.RefreshData
  fullName: Mapsui.UI.iOS.MapControl.RefreshData
- uid: Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
  commentId: M:Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
  parent: Mapsui.UI.IMapControl
  name: RefreshData(ChangeType)
  nameWithType: IMapControl.RefreshData(ChangeType)
  fullName: Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
    name: RefreshData
  - name: (
  - uid: Mapsui.ChangeType
    name: ChangeType
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.RefreshData(Mapsui.ChangeType)
    name: RefreshData
  - name: (
  - uid: Mapsui.ChangeType
    name: ChangeType
  - name: )
- uid: Mapsui.UI.iOS.MapControl.OnMapInfo*
  commentId: Overload:Mapsui.UI.iOS.MapControl.OnMapInfo
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_OnMapInfo_Mapsui_MapInfoEventArgs_
  name: OnMapInfo
  nameWithType: MapControl.OnMapInfo
  fullName: Mapsui.UI.iOS.MapControl.OnMapInfo
- uid: Mapsui.MapInfoEventArgs
  commentId: T:Mapsui.MapInfoEventArgs
  parent: Mapsui
  href: Mapsui.MapInfoEventArgs.html
  name: MapInfoEventArgs
  nameWithType: MapInfoEventArgs
  fullName: Mapsui.MapInfoEventArgs
- uid: Mapsui.UI.iOS.MapControl.GetMapInfo*
  commentId: Overload:Mapsui.UI.iOS.MapControl.GetMapInfo
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_GetMapInfo_Mapsui_Manipulations_ScreenPosition_System_Int32_
  name: GetMapInfo
  nameWithType: MapControl.GetMapInfo
  fullName: Mapsui.UI.iOS.MapControl.GetMapInfo
- uid: Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  commentId: M:Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
  parent: Mapsui.UI.IMapControl
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetMapInfo(ScreenPosition, int)
  nameWithType: IMapControl.GetMapInfo(ScreenPosition, int)
  fullName: Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition, int)
  nameWithType.vb: IMapControl.GetMapInfo(ScreenPosition, Integer)
  fullName.vb: Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition, Integer)
  name.vb: GetMapInfo(ScreenPosition, Integer)
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
    name: GetMapInfo
  - name: (
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.GetMapInfo(Mapsui.Manipulations.ScreenPosition,System.Int32)
    name: GetMapInfo
  - name: (
  - uid: Mapsui.Manipulations.ScreenPosition
    name: ScreenPosition
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mapsui.Manipulations.ScreenPosition
  commentId: T:Mapsui.Manipulations.ScreenPosition
  parent: Mapsui.Manipulations
  href: Mapsui.Manipulations.ScreenPosition.html
  name: ScreenPosition
  nameWithType: ScreenPosition
  fullName: Mapsui.Manipulations.ScreenPosition
- uid: Mapsui.MapInfo
  commentId: T:Mapsui.MapInfo
  parent: Mapsui
  href: Mapsui.MapInfo.html
  name: MapInfo
  nameWithType: MapInfo
  fullName: Mapsui.MapInfo
- uid: Mapsui.Manipulations
  commentId: N:Mapsui.Manipulations
  href: Mapsui.html
  name: Mapsui.Manipulations
  nameWithType: Mapsui.Manipulations
  fullName: Mapsui.Manipulations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Manipulations
    name: Manipulations
    href: Mapsui.Manipulations.html
- uid: Mapsui.UI.iOS.MapControl.GetSnapshot*
  commentId: Overload:Mapsui.UI.iOS.MapControl.GetSnapshot
  href: Mapsui.UI.iOS.MapControl.html#Mapsui_UI_iOS_MapControl_GetSnapshot_System_Collections_Generic_IEnumerable_Mapsui_Layers_ILayer__
  name: GetSnapshot
  nameWithType: MapControl.GetSnapshot
  fullName: Mapsui.UI.iOS.MapControl.GetSnapshot
- uid: Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  commentId: M:Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
  parent: Mapsui.UI.IMapControl
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetSnapshot(IEnumerable<ILayer>)
  nameWithType: IMapControl.GetSnapshot(IEnumerable<ILayer>)
  fullName: Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>)
  nameWithType.vb: IMapControl.GetSnapshot(IEnumerable(Of ILayer))
  fullName.vb: Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer))
  name.vb: GetSnapshot(IEnumerable(Of ILayer))
  spec.csharp:
  - uid: Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
    name: GetSnapshot
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.Layers.ILayer
    name: ILayer
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mapsui.UI.IMapControl.GetSnapshot(System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer})
    name: GetSnapshot
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Layers.ILayer
    name: ILayer
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.Layers.ILayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ILayer>
  nameWithType: IEnumerable<ILayer>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.Layers.ILayer>
  nameWithType.vb: IEnumerable(Of ILayer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.Layers.ILayer)
  name.vb: IEnumerable(Of ILayer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
