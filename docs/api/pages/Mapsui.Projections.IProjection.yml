### YamlMime:ManagedReference
items:
- uid: Mapsui.Projections.IProjection
  commentId: T:Mapsui.Projections.IProjection
  id: IProjection
  parent: Mapsui.Projections
  children:
  - Mapsui.Projections.IProjection.IsProjectionSupported(System.String,System.String)
  - Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.IFeature)
  - Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MPoint)
  - Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MRect)
  - Mapsui.Projections.IProjection.Project(System.String,System.String,System.Collections.Generic.IEnumerable{Mapsui.IFeature})
  - Mapsui.Projections.IProjection.Project(System.String,System.String,System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: IProjection
  nameWithType: IProjection
  fullName: Mapsui.Projections.IProjection
  type: Interface
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: IProjection
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 5
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: public interface IProjection
    content.vb: Public Interface IProjection
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Projections.IProjection.Project(System.String,System.String,System.Double,System.Double)
  commentId: M:Mapsui.Projections.IProjection.Project(System.String,System.String,System.Double,System.Double)
  id: Project(System.String,System.String,System.Double,System.Double)
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: Project(string, string, double, double)
  nameWithType: IProjection.Project(string, string, double, double)
  fullName: Mapsui.Projections.IProjection.Project(string, string, double, double)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Project
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 7
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: (double X, double Y) Project(string fromCRS, string toCRS, double x, double y)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    return:
      type: System.ValueTuple{System.Double,System.Double}
    content.vb: Function Project(fromCRS As String, toCRS As String, x As Double, y As Double) As (X As Double, Y As Double)
  overload: Mapsui.Projections.IProjection.Project*
  nameWithType.vb: IProjection.Project(String, String, Double, Double)
  fullName.vb: Mapsui.Projections.IProjection.Project(String, String, Double, Double)
  name.vb: Project(String, String, Double, Double)
- uid: Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MPoint)
  commentId: M:Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MPoint)
  id: Project(System.String,System.String,Mapsui.MPoint)
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: Project(string, string, MPoint)
  nameWithType: IProjection.Project(string, string, MPoint)
  fullName: Mapsui.Projections.IProjection.Project(string, string, Mapsui.MPoint)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Project
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: void Project(string fromCRS, string toCRS, MPoint point)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    - id: point
      type: Mapsui.MPoint
    content.vb: Sub Project(fromCRS As String, toCRS As String, point As MPoint)
  overload: Mapsui.Projections.IProjection.Project*
  nameWithType.vb: IProjection.Project(String, String, MPoint)
  fullName.vb: Mapsui.Projections.IProjection.Project(String, String, Mapsui.MPoint)
  name.vb: Project(String, String, MPoint)
- uid: Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MRect)
  commentId: M:Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.MRect)
  id: Project(System.String,System.String,Mapsui.MRect)
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: Project(string, string, MRect)
  nameWithType: IProjection.Project(string, string, MRect)
  fullName: Mapsui.Projections.IProjection.Project(string, string, Mapsui.MRect)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Project
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 9
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: void Project(string fromCRS, string toCRS, MRect rect)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    - id: rect
      type: Mapsui.MRect
    content.vb: Sub Project(fromCRS As String, toCRS As String, rect As MRect)
  overload: Mapsui.Projections.IProjection.Project*
  nameWithType.vb: IProjection.Project(String, String, MRect)
  fullName.vb: Mapsui.Projections.IProjection.Project(String, String, Mapsui.MRect)
  name.vb: Project(String, String, MRect)
- uid: Mapsui.Projections.IProjection.IsProjectionSupported(System.String,System.String)
  commentId: M:Mapsui.Projections.IProjection.IsProjectionSupported(System.String,System.String)
  id: IsProjectionSupported(System.String,System.String)
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: IsProjectionSupported(string?, string?)
  nameWithType: IProjection.IsProjectionSupported(string?, string?)
  fullName: Mapsui.Projections.IProjection.IsProjectionSupported(string?, string?)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: IsProjectionSupported
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 10
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: bool IsProjectionSupported(string? fromCRS, string? toCRS)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsProjectionSupported(fromCRS As String, toCRS As String) As Boolean
  overload: Mapsui.Projections.IProjection.IsProjectionSupported*
  nameWithType.vb: IProjection.IsProjectionSupported(String, String)
  fullName.vb: Mapsui.Projections.IProjection.IsProjectionSupported(String, String)
  name.vb: IsProjectionSupported(String, String)
- uid: Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.IFeature)
  commentId: M:Mapsui.Projections.IProjection.Project(System.String,System.String,Mapsui.IFeature)
  id: Project(System.String,System.String,Mapsui.IFeature)
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: Project(string, string, IFeature)
  nameWithType: IProjection.Project(string, string, IFeature)
  fullName: Mapsui.Projections.IProjection.Project(string, string, Mapsui.IFeature)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Project
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 11
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: void Project(string fromCRS, string toCRS, IFeature feature)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    - id: feature
      type: Mapsui.IFeature
    content.vb: Sub Project(fromCRS As String, toCRS As String, feature As IFeature)
  overload: Mapsui.Projections.IProjection.Project*
  nameWithType.vb: IProjection.Project(String, String, IFeature)
  fullName.vb: Mapsui.Projections.IProjection.Project(String, String, Mapsui.IFeature)
  name.vb: Project(String, String, IFeature)
- uid: Mapsui.Projections.IProjection.Project(System.String,System.String,System.Collections.Generic.IEnumerable{Mapsui.IFeature})
  commentId: M:Mapsui.Projections.IProjection.Project(System.String,System.String,System.Collections.Generic.IEnumerable{Mapsui.IFeature})
  id: Project(System.String,System.String,System.Collections.Generic.IEnumerable{Mapsui.IFeature})
  parent: Mapsui.Projections.IProjection
  langs:
  - csharp
  - vb
  name: Project(string, string, IEnumerable<IFeature>)
  nameWithType: IProjection.Project(string, string, IEnumerable<IFeature>)
  fullName: Mapsui.Projections.IProjection.Project(string, string, System.Collections.Generic.IEnumerable<Mapsui.IFeature>)
  type: Method
  source:
    remote:
      path: Mapsui/Projections/IProjection.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Project
    path: ../../Mapsui/Projections/IProjection.cs
    startLine: 12
  assemblies:
  - Mapsui
  namespace: Mapsui.Projections
  syntax:
    content: void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features)
    parameters:
    - id: fromCRS
      type: System.String
    - id: toCRS
      type: System.String
    - id: features
      type: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
    content.vb: Sub Project(fromCRS As String, toCRS As String, features As IEnumerable(Of IFeature))
  overload: Mapsui.Projections.IProjection.Project*
  nameWithType.vb: IProjection.Project(String, String, IEnumerable(Of IFeature))
  fullName.vb: Mapsui.Projections.IProjection.Project(String, String, System.Collections.Generic.IEnumerable(Of Mapsui.IFeature))
  name.vb: Project(String, String, IEnumerable(Of IFeature))
references:
- uid: Mapsui.Projections
  commentId: N:Mapsui.Projections
  href: Mapsui.html
  name: Mapsui.Projections
  nameWithType: Mapsui.Projections
  fullName: Mapsui.Projections
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Projections
    name: Projections
    href: Mapsui.Projections.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Projections
    name: Projections
    href: Mapsui.Projections.html
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Projections.IProjection.Project*
  commentId: Overload:Mapsui.Projections.IProjection.Project
  href: Mapsui.Projections.IProjection.html#Mapsui_Projections_IProjection_Project_System_String_System_String_System_Double_System_Double_
  name: Project
  nameWithType: IProjection.Project
  fullName: Mapsui.Projections.IProjection.Project
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.ValueTuple{System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double x, double y)
  nameWithType: (double x, double y)
  fullName: (double x, double y)
  nameWithType.vb: (x As Double, y As Double)
  fullName.vb: (x As Double, y As Double)
  name.vb: (x As Double, y As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.x
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Mapsui.MPoint
  commentId: T:Mapsui.MPoint
  parent: Mapsui
  href: Mapsui.MPoint.html
  name: MPoint
  nameWithType: MPoint
  fullName: Mapsui.MPoint
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.MRect
  commentId: T:Mapsui.MRect
  parent: Mapsui
  href: Mapsui.MRect.html
  name: MRect
  nameWithType: MRect
  fullName: Mapsui.MRect
- uid: Mapsui.Projections.IProjection.IsProjectionSupported*
  commentId: Overload:Mapsui.Projections.IProjection.IsProjectionSupported
  href: Mapsui.Projections.IProjection.html#Mapsui_Projections_IProjection_IsProjectionSupported_System_String_System_String_
  name: IsProjectionSupported
  nameWithType: IProjection.IsProjectionSupported
  fullName: Mapsui.Projections.IProjection.IsProjectionSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.IFeature
  commentId: T:Mapsui.IFeature
  parent: Mapsui
  href: Mapsui.IFeature.html
  name: IFeature
  nameWithType: IFeature
  fullName: Mapsui.IFeature
- uid: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFeature>
  nameWithType: IEnumerable<IFeature>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.IFeature>
  nameWithType.vb: IEnumerable(Of IFeature)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.IFeature)
  name.vb: IEnumerable(Of IFeature)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
