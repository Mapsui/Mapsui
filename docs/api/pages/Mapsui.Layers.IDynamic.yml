### YamlMime:ManagedReference
items:
- uid: Mapsui.Layers.IDynamic
  commentId: T:Mapsui.Layers.IDynamic
  id: IDynamic
  parent: Mapsui.Layers
  children:
  - Mapsui.Layers.IDynamic.DataChanged
  - Mapsui.Layers.IDynamic.DataHasChanged
  langs:
  - csharp
  - vb
  name: IDynamic
  nameWithType: IDynamic
  fullName: Mapsui.Layers.IDynamic
  type: Interface
  source:
    remote:
      path: Mapsui/Layers/IDynamic.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: IDynamic
    path: ../../Mapsui/Layers/IDynamic.cs
    startLine: 8
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: public interface IDynamic
    content.vb: Public Interface IDynamic
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Layers.IDynamic.DataChanged
  commentId: E:Mapsui.Layers.IDynamic.DataChanged
  id: DataChanged
  parent: Mapsui.Layers.IDynamic
  langs:
  - csharp
  - vb
  name: DataChanged
  nameWithType: IDynamic.DataChanged
  fullName: Mapsui.Layers.IDynamic.DataChanged
  type: Event
  source:
    remote:
      path: Mapsui/Layers/IDynamic.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataChanged
    path: ../../Mapsui/Layers/IDynamic.cs
    startLine: 14
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: >-
    Event called when the data within the layer has changed allowing

    listeners to react to this.
  example: []
  syntax:
    content: event DataChangedEventHandler DataChanged
    return:
      type: Mapsui.Fetcher.DataChangedEventHandler
    content.vb: Event DataChanged As DataChangedEventHandler
- uid: Mapsui.Layers.IDynamic.DataHasChanged
  commentId: M:Mapsui.Layers.IDynamic.DataHasChanged
  id: DataHasChanged
  parent: Mapsui.Layers.IDynamic
  langs:
  - csharp
  - vb
  name: DataHasChanged()
  nameWithType: IDynamic.DataHasChanged()
  fullName: Mapsui.Layers.IDynamic.DataHasChanged()
  type: Method
  source:
    remote:
      path: Mapsui/Layers/IDynamic.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataHasChanged
    path: ../../Mapsui/Layers/IDynamic.cs
    startLine: 20
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: >-
    To indicate the data withing the class has changed. This triggers a DataChanged event.

    This is necessary for situations where the class itself can not know about changes to it's data.
  example: []
  syntax:
    content: void DataHasChanged()
    content.vb: Sub DataHasChanged()
  overload: Mapsui.Layers.IDynamic.DataHasChanged*
references:
- uid: Mapsui.Layers
  commentId: N:Mapsui.Layers
  href: Mapsui.html
  name: Mapsui.Layers
  nameWithType: Mapsui.Layers
  fullName: Mapsui.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Fetcher.DataChangedEventHandler
  commentId: T:Mapsui.Fetcher.DataChangedEventHandler
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.DataChangedEventHandler.html
  name: DataChangedEventHandler
  nameWithType: DataChangedEventHandler
  fullName: Mapsui.Fetcher.DataChangedEventHandler
- uid: Mapsui.Fetcher
  commentId: N:Mapsui.Fetcher
  href: Mapsui.html
  name: Mapsui.Fetcher
  nameWithType: Mapsui.Fetcher
  fullName: Mapsui.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
- uid: Mapsui.Layers.IDynamic.DataHasChanged*
  commentId: Overload:Mapsui.Layers.IDynamic.DataHasChanged
  href: Mapsui.Layers.IDynamic.html#Mapsui_Layers_IDynamic_DataHasChanged
  name: DataHasChanged
  nameWithType: IDynamic.DataHasChanged
  fullName: Mapsui.Layers.IDynamic.DataHasChanged
