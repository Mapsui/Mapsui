### YamlMime:ManagedReference
items:
- uid: Mapsui.Utilities.Algorithms
  commentId: T:Mapsui.Utilities.Algorithms
  id: Algorithms
  parent: Mapsui.Utilities
  children:
  - Mapsui.Utilities.Algorithms.DegreesToRadians(System.Double)
  - Mapsui.Utilities.Algorithms.Distance(Mapsui.MPoint,Mapsui.MPoint)
  - Mapsui.Utilities.Algorithms.Distance(System.Double,System.Double,System.Double,System.Double)
  - Mapsui.Utilities.Algorithms.DistancePointLine(Mapsui.MPoint,Mapsui.MPoint,Mapsui.MPoint)
  - Mapsui.Utilities.Algorithms.RadiansToDegrees(System.Double)
  - Mapsui.Utilities.Algorithms.RotateClockwiseDegrees(System.Double,System.Double,System.Double)
  - Mapsui.Utilities.Algorithms.RotateClockwiseRadians(System.Double,System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: Algorithms
  nameWithType: Algorithms
  fullName: Mapsui.Utilities.Algorithms
  type: Class
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Algorithms
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 10
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  syntax:
    content: public static class Algorithms
    content.vb: Public Module Algorithms
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mapsui.Utilities.Algorithms.Distance(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Mapsui.Utilities.Algorithms.Distance(System.Double,System.Double,System.Double,System.Double)
  id: Distance(System.Double,System.Double,System.Double,System.Double)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: Distance(double, double, double, double)
  nameWithType: Algorithms.Distance(double, double, double, double)
  fullName: Mapsui.Utilities.Algorithms.Distance(double, double, double, double)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Distance
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 23
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  summary: Gets the Euclidean distance between two points.
  example: []
  syntax:
    content: public static double Distance(double x1, double y1, double x2, double y2)
    parameters:
    - id: x1
      type: System.Double
      description: The first point's X coordinate.
    - id: y1
      type: System.Double
      description: The first point's Y coordinate.
    - id: x2
      type: System.Double
      description: The second point's X coordinate.
    - id: y2
      type: System.Double
      description: The second point's Y coordinate.
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Distance(x1 As Double, y1 As Double, x2 As Double, y2 As Double) As Double
  overload: Mapsui.Utilities.Algorithms.Distance*
  nameWithType.vb: Algorithms.Distance(Double, Double, Double, Double)
  fullName.vb: Mapsui.Utilities.Algorithms.Distance(Double, Double, Double, Double)
  name.vb: Distance(Double, Double, Double, Double)
- uid: Mapsui.Utilities.Algorithms.Distance(Mapsui.MPoint,Mapsui.MPoint)
  commentId: M:Mapsui.Utilities.Algorithms.Distance(Mapsui.MPoint,Mapsui.MPoint)
  id: Distance(Mapsui.MPoint,Mapsui.MPoint)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: Distance(MPoint, MPoint)
  nameWithType: Algorithms.Distance(MPoint, MPoint)
  fullName: Mapsui.Utilities.Algorithms.Distance(Mapsui.MPoint, Mapsui.MPoint)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Distance
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 28
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  syntax:
    content: public static double Distance(MPoint a, MPoint b)
    parameters:
    - id: a
      type: Mapsui.MPoint
    - id: b
      type: Mapsui.MPoint
    return:
      type: System.Double
    content.vb: Public Shared Function Distance(a As MPoint, b As MPoint) As Double
  overload: Mapsui.Utilities.Algorithms.Distance*
- uid: Mapsui.Utilities.Algorithms.DegreesToRadians(System.Double)
  commentId: M:Mapsui.Utilities.Algorithms.DegreesToRadians(System.Double)
  id: DegreesToRadians(System.Double)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: DegreesToRadians(double)
  nameWithType: Algorithms.DegreesToRadians(double)
  fullName: Mapsui.Utilities.Algorithms.DegreesToRadians(double)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DegreesToRadians
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 38
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  summary: Converts the specified angle from degrees to radians
  example: []
  syntax:
    content: public static double DegreesToRadians(double degrees)
    parameters:
    - id: degrees
      type: System.Double
      description: Angle to convert (degrees)
    return:
      type: System.Double
      description: Returns the angle in radians
    content.vb: Public Shared Function DegreesToRadians(degrees As Double) As Double
  overload: Mapsui.Utilities.Algorithms.DegreesToRadians*
  nameWithType.vb: Algorithms.DegreesToRadians(Double)
  fullName.vb: Mapsui.Utilities.Algorithms.DegreesToRadians(Double)
  name.vb: DegreesToRadians(Double)
- uid: Mapsui.Utilities.Algorithms.RadiansToDegrees(System.Double)
  commentId: M:Mapsui.Utilities.Algorithms.RadiansToDegrees(System.Double)
  id: RadiansToDegrees(System.Double)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: RadiansToDegrees(double)
  nameWithType: Algorithms.RadiansToDegrees(double)
  fullName: Mapsui.Utilities.Algorithms.RadiansToDegrees(double)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RadiansToDegrees
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 40
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  syntax:
    content: public static double RadiansToDegrees(double radians)
    parameters:
    - id: radians
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function RadiansToDegrees(radians As Double) As Double
  overload: Mapsui.Utilities.Algorithms.RadiansToDegrees*
  nameWithType.vb: Algorithms.RadiansToDegrees(Double)
  fullName.vb: Mapsui.Utilities.Algorithms.RadiansToDegrees(Double)
  name.vb: RadiansToDegrees(Double)
- uid: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees(System.Double,System.Double,System.Double)
  commentId: M:Mapsui.Utilities.Algorithms.RotateClockwiseDegrees(System.Double,System.Double,System.Double)
  id: RotateClockwiseDegrees(System.Double,System.Double,System.Double)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: RotateClockwiseDegrees(double, double, double)
  nameWithType: Algorithms.RotateClockwiseDegrees(double, double, double)
  fullName: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees(double, double, double)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RotateClockwiseDegrees
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 49
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  summary: Rotates the specified point clockwise about the origin
  example: []
  syntax:
    content: public static MPoint RotateClockwiseDegrees(double x, double y, double degrees)
    parameters:
    - id: x
      type: System.Double
      description: X coordinate to rotate
    - id: y
      type: System.Double
      description: Y coordinate to rotate
    - id: degrees
      type: System.Double
      description: Angle to rotate (degrees)
    return:
      type: Mapsui.MPoint
      description: Returns the rotated point
    content.vb: Public Shared Function RotateClockwiseDegrees(x As Double, y As Double, degrees As Double) As MPoint
  overload: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees*
  nameWithType.vb: Algorithms.RotateClockwiseDegrees(Double, Double, Double)
  fullName.vb: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees(Double, Double, Double)
  name.vb: RotateClockwiseDegrees(Double, Double, Double)
- uid: Mapsui.Utilities.Algorithms.RotateClockwiseRadians(System.Double,System.Double,System.Double)
  commentId: M:Mapsui.Utilities.Algorithms.RotateClockwiseRadians(System.Double,System.Double,System.Double)
  id: RotateClockwiseRadians(System.Double,System.Double,System.Double)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: RotateClockwiseRadians(double, double, double)
  nameWithType: Algorithms.RotateClockwiseRadians(double, double, double)
  fullName: Mapsui.Utilities.Algorithms.RotateClockwiseRadians(double, double, double)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: RotateClockwiseRadians
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 63
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  summary: Rotates the specified point clockwise about the origin
  example: []
  syntax:
    content: public static MPoint RotateClockwiseRadians(double x, double y, double radians)
    parameters:
    - id: x
      type: System.Double
      description: X coordinate to rotate
    - id: y
      type: System.Double
      description: Y coordinate to rotate
    - id: radians
      type: System.Double
      description: Angle to rotate (radians)
    return:
      type: Mapsui.MPoint
      description: Returns the rotated point
    content.vb: Public Shared Function RotateClockwiseRadians(x As Double, y As Double, radians As Double) As MPoint
  overload: Mapsui.Utilities.Algorithms.RotateClockwiseRadians*
  nameWithType.vb: Algorithms.RotateClockwiseRadians(Double, Double, Double)
  fullName.vb: Mapsui.Utilities.Algorithms.RotateClockwiseRadians(Double, Double, Double)
  name.vb: RotateClockwiseRadians(Double, Double, Double)
- uid: Mapsui.Utilities.Algorithms.DistancePointLine(Mapsui.MPoint,Mapsui.MPoint,Mapsui.MPoint)
  commentId: M:Mapsui.Utilities.Algorithms.DistancePointLine(Mapsui.MPoint,Mapsui.MPoint,Mapsui.MPoint)
  id: DistancePointLine(Mapsui.MPoint,Mapsui.MPoint,Mapsui.MPoint)
  parent: Mapsui.Utilities.Algorithms
  langs:
  - csharp
  - vb
  name: DistancePointLine(MPoint, MPoint, MPoint)
  nameWithType: Algorithms.DistancePointLine(MPoint, MPoint, MPoint)
  fullName: Mapsui.Utilities.Algorithms.DistancePointLine(Mapsui.MPoint, Mapsui.MPoint, Mapsui.MPoint)
  type: Method
  source:
    remote:
      path: Mapsui/Utilities/Algorithms.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DistancePointLine
    path: ../../Mapsui/Utilities/Algorithms.cs
    startLine: 81
  assemblies:
  - Mapsui
  namespace: Mapsui.Utilities
  summary: >-
    Computes the distance from a point p to a line segment AB.

    Note: NON-ROBUST!
  example: []
  syntax:
    content: public static double DistancePointLine(MPoint p, MPoint a, MPoint b)
    parameters:
    - id: p
      type: Mapsui.MPoint
      description: The point to compute the distance for.
    - id: a
      type: Mapsui.MPoint
      description: One point of the line.
    - id: b
      type: Mapsui.MPoint
      description: Another point of the line (must be different to A).
    return:
      type: System.Double
      description: The distance from p to line segment AB.
    content.vb: Public Shared Function DistancePointLine(p As MPoint, a As MPoint, b As MPoint) As Double
  overload: Mapsui.Utilities.Algorithms.DistancePointLine*
references:
- uid: Mapsui.Utilities
  commentId: N:Mapsui.Utilities
  href: Mapsui.html
  name: Mapsui.Utilities
  nameWithType: Mapsui.Utilities
  fullName: Mapsui.Utilities
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Utilities
    name: Utilities
    href: Mapsui.Utilities.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Utilities
    name: Utilities
    href: Mapsui.Utilities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Utilities.Algorithms.Distance*
  commentId: Overload:Mapsui.Utilities.Algorithms.Distance
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_Distance_System_Double_System_Double_System_Double_System_Double_
  name: Distance
  nameWithType: Algorithms.Distance
  fullName: Mapsui.Utilities.Algorithms.Distance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mapsui.MPoint
  commentId: T:Mapsui.MPoint
  parent: Mapsui
  href: Mapsui.MPoint.html
  name: MPoint
  nameWithType: MPoint
  fullName: Mapsui.MPoint
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.Utilities.Algorithms.DegreesToRadians*
  commentId: Overload:Mapsui.Utilities.Algorithms.DegreesToRadians
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_DegreesToRadians_System_Double_
  name: DegreesToRadians
  nameWithType: Algorithms.DegreesToRadians
  fullName: Mapsui.Utilities.Algorithms.DegreesToRadians
- uid: Mapsui.Utilities.Algorithms.RadiansToDegrees*
  commentId: Overload:Mapsui.Utilities.Algorithms.RadiansToDegrees
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_RadiansToDegrees_System_Double_
  name: RadiansToDegrees
  nameWithType: Algorithms.RadiansToDegrees
  fullName: Mapsui.Utilities.Algorithms.RadiansToDegrees
- uid: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees*
  commentId: Overload:Mapsui.Utilities.Algorithms.RotateClockwiseDegrees
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_RotateClockwiseDegrees_System_Double_System_Double_System_Double_
  name: RotateClockwiseDegrees
  nameWithType: Algorithms.RotateClockwiseDegrees
  fullName: Mapsui.Utilities.Algorithms.RotateClockwiseDegrees
- uid: Mapsui.Utilities.Algorithms.RotateClockwiseRadians*
  commentId: Overload:Mapsui.Utilities.Algorithms.RotateClockwiseRadians
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_RotateClockwiseRadians_System_Double_System_Double_System_Double_
  name: RotateClockwiseRadians
  nameWithType: Algorithms.RotateClockwiseRadians
  fullName: Mapsui.Utilities.Algorithms.RotateClockwiseRadians
- uid: Mapsui.Utilities.Algorithms.DistancePointLine*
  commentId: Overload:Mapsui.Utilities.Algorithms.DistancePointLine
  href: Mapsui.Utilities.Algorithms.html#Mapsui_Utilities_Algorithms_DistancePointLine_Mapsui_MPoint_Mapsui_MPoint_Mapsui_MPoint_
  name: DistancePointLine
  nameWithType: Algorithms.DistancePointLine
  fullName: Mapsui.Utilities.Algorithms.DistancePointLine
