### YamlMime:ManagedReference
items:
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  commentId: T:Mapsui.Tiling.Fetcher.TileFetchDispatcher
  id: TileFetchDispatcher
  parent: Mapsui.Tiling.Fetcher
  children:
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor(BruTile.Cache.ITileCache{Mapsui.IFeature},BruTile.ITileSchema,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}},Mapsui.Tiling.Fetcher.IDataFetchStrategy)
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.DataChanged
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.PropertyChanged
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport(Mapsui.Layers.FetchInfo)
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching
  - Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  langs:
  - csharp
  - vb
  name: TileFetchDispatcher
  nameWithType: TileFetchDispatcher
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  type: Class
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TileFetchDispatcher
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 17
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: 'public class TileFetchDispatcher : IFetchDispatcher, INotifyPropertyChanged'
    content.vb: Public Class TileFetchDispatcher Implements IFetchDispatcher, INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - Mapsui.Fetcher.IFetchDispatcher
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor(BruTile.Cache.ITileCache{Mapsui.IFeature},BruTile.ITileSchema,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}},Mapsui.Tiling.Fetcher.IDataFetchStrategy)
  commentId: M:Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor(BruTile.Cache.ITileCache{Mapsui.IFeature},BruTile.ITileSchema,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}},Mapsui.Tiling.Fetcher.IDataFetchStrategy)
  id: '#ctor(BruTile.Cache.ITileCache{Mapsui.IFeature},BruTile.ITileSchema,System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}},Mapsui.Tiling.Fetcher.IDataFetchStrategy)'
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: TileFetchDispatcher(ITileCache<IFeature?>, ITileSchema?, Func<TileInfo, Task<IFeature?>>, IDataFetchStrategy?)
  nameWithType: TileFetchDispatcher.TileFetchDispatcher(ITileCache<IFeature?>, ITileSchema?, Func<TileInfo, Task<IFeature?>>, IDataFetchStrategy?)
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TileFetchDispatcher(BruTile.Cache.ITileCache<Mapsui.IFeature?>, BruTile.ITileSchema?, System.Func<BruTile.TileInfo, System.Threading.Tasks.Task<Mapsui.IFeature?>>, Mapsui.Tiling.Fetcher.IDataFetchStrategy?)
  type: Constructor
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 31
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public TileFetchDispatcher(ITileCache<IFeature?> tileCache, ITileSchema? tileSchema, Func<TileInfo, Task<IFeature?>> fetchTileAsFeature, IDataFetchStrategy? dataFetchStrategy = null)
    parameters:
    - id: tileCache
      type: BruTile.Cache.ITileCache{Mapsui.IFeature}
    - id: tileSchema
      type: BruTile.ITileSchema
    - id: fetchTileAsFeature
      type: System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
    - id: dataFetchStrategy
      type: Mapsui.Tiling.Fetcher.IDataFetchStrategy
    content.vb: Public Sub New(tileCache As ITileCache(Of IFeature), tileSchema As ITileSchema, fetchTileAsFeature As Func(Of TileInfo, Task(Of IFeature)), dataFetchStrategy As IDataFetchStrategy = Nothing)
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor*
  nameWithType.vb: TileFetchDispatcher.New(ITileCache(Of IFeature), ITileSchema, Func(Of TileInfo, Task(Of IFeature)), IDataFetchStrategy)
  fullName.vb: Mapsui.Tiling.Fetcher.TileFetchDispatcher.New(BruTile.Cache.ITileCache(Of Mapsui.IFeature), BruTile.ITileSchema, System.Func(Of BruTile.TileInfo, System.Threading.Tasks.Task(Of Mapsui.IFeature)), Mapsui.Tiling.Fetcher.IDataFetchStrategy)
  name.vb: New(ITileCache(Of IFeature), ITileSchema, Func(Of TileInfo, Task(Of IFeature)), IDataFetchStrategy)
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.DataChanged
  commentId: E:Mapsui.Tiling.Fetcher.TileFetchDispatcher.DataChanged
  id: DataChanged
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: DataChanged
  nameWithType: TileFetchDispatcher.DataChanged
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.DataChanged
  type: Event
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataChanged
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 44
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public event DataChangedEventHandler? DataChanged
    return:
      type: Mapsui.Fetcher.DataChangedEventHandler
    content.vb: Public Event DataChanged As DataChangedEventHandler
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.PropertyChanged
  commentId: E:Mapsui.Tiling.Fetcher.TileFetchDispatcher.PropertyChanged
  id: PropertyChanged
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: TileFetchDispatcher.PropertyChanged
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.PropertyChanged
  type: Event
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: PropertyChanged
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 45
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  example: []
  syntax:
    content: public event PropertyChangedEventHandler? PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - Mapsui.Fetcher.IFetchDispatcher.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
  commentId: P:Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
  id: NumberTilesNeeded
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: NumberTilesNeeded
  nameWithType: TileFetchDispatcher.NumberTilesNeeded
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: NumberTilesNeeded
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 46
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public int NumberTilesNeeded { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumberTilesNeeded As Integer
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded*
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
  commentId: P:Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
  id: MaxTilesInOneRequest
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: MaxTilesInOneRequest
  nameWithType: TileFetchDispatcher.MaxTilesInOneRequest
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MaxTilesInOneRequest
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 48
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public static int MaxTilesInOneRequest { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property MaxTilesInOneRequest As Integer
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest*
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport(Mapsui.Layers.FetchInfo)
  commentId: M:Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport(Mapsui.Layers.FetchInfo)
  id: SetViewport(Mapsui.Layers.FetchInfo)
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: SetViewport(FetchInfo)
  nameWithType: TileFetchDispatcher.SetViewport(FetchInfo)
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport(Mapsui.Layers.FetchInfo)
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SetViewport
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 50
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public void SetViewport(FetchInfo fetchInfo)
    parameters:
    - id: fetchInfo
      type: Mapsui.Layers.FetchInfo
    content.vb: Public Sub SetViewport(fetchInfo As FetchInfo)
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport*
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  commentId: M:Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  id: TryTake(System.Func{System.Threading.Tasks.Task}@)
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: TryTake(out Func<Task>?)
  nameWithType: TileFetchDispatcher.TryTake(out Func<Task>?)
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake(out System.Func<System.Threading.Tasks.Task>?)
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: TryTake
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 60
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  example: []
  syntax:
    content: public bool TryTake(out Func<Task>? method)
    parameters:
    - id: method
      type: System.Func{System.Threading.Tasks.Task}
    return:
      type: System.Boolean
    content.vb: Public Function TryTake(method As Func(Of Task)) As Boolean
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake*
  implements:
  - Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  nameWithType.vb: TileFetchDispatcher.TryTake(Func(Of Task))
  fullName.vb: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake(System.Func(Of System.Threading.Tasks.Task))
  name.vb: TryTake(Func(Of Task))
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
  commentId: P:Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
  id: Busy
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: Busy
  nameWithType: TileFetchDispatcher.Busy
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
  type: Property
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Busy
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 116
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public bool Busy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Busy As Boolean
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy*
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching
  commentId: M:Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching
  id: StopFetching
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: StopFetching()
  nameWithType: TileFetchDispatcher.StopFetching()
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching()
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: StopFetching
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 127
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public void StopFetching()
    content.vb: Public Sub StopFetching()
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching*
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching
  commentId: M:Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching
  id: StartFetching
  parent: Mapsui.Tiling.Fetcher.TileFetchDispatcher
  langs:
  - csharp
  - vb
  name: StartFetching()
  nameWithType: TileFetchDispatcher.StartFetching()
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching()
  type: Method
  source:
    remote:
      path: Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: StartFetching
    path: ../../Mapsui.Tiling/Fetcher/TileFetchDispatcher.cs
    startLine: 132
  assemblies:
  - Mapsui.Tiling
  namespace: Mapsui.Tiling.Fetcher
  syntax:
    content: public void StartFetching()
    content.vb: Public Sub StartFetching()
  overload: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching*
references:
- uid: Mapsui.Tiling.Fetcher
  commentId: N:Mapsui.Tiling.Fetcher
  href: Mapsui.html
  name: Mapsui.Tiling.Fetcher
  nameWithType: Mapsui.Tiling.Fetcher
  fullName: Mapsui.Tiling.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Fetcher
    name: Fetcher
    href: Mapsui.Tiling.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Tiling
    name: Tiling
    href: Mapsui.Tiling.html
  - name: .
  - uid: Mapsui.Tiling.Fetcher
    name: Fetcher
    href: Mapsui.Tiling.Fetcher.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mapsui.Fetcher.IFetchDispatcher
  commentId: T:Mapsui.Fetcher.IFetchDispatcher
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.IFetchDispatcher.html
  name: IFetchDispatcher
  nameWithType: IFetchDispatcher
  fullName: Mapsui.Fetcher.IFetchDispatcher
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Fetcher
  commentId: N:Mapsui.Fetcher
  href: Mapsui.html
  name: Mapsui.Fetcher
  nameWithType: Mapsui.Fetcher
  fullName: Mapsui.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.#ctor
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher__ctor_BruTile_Cache_ITileCache_Mapsui_IFeature__BruTile_ITileSchema_System_Func_BruTile_TileInfo_System_Threading_Tasks_Task_Mapsui_IFeature___Mapsui_Tiling_Fetcher_IDataFetchStrategy_
  name: TileFetchDispatcher
  nameWithType: TileFetchDispatcher.TileFetchDispatcher
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TileFetchDispatcher
  nameWithType.vb: TileFetchDispatcher.New
  fullName.vb: Mapsui.Tiling.Fetcher.TileFetchDispatcher.New
  name.vb: New
- uid: BruTile.Cache.ITileCache{Mapsui.IFeature}
  commentId: T:BruTile.Cache.ITileCache{Mapsui.IFeature}
  parent: BruTile.Cache
  definition: BruTile.Cache.ITileCache`1
  href: Mapsui.IFeature.html
  name: ITileCache<IFeature>
  nameWithType: ITileCache<IFeature>
  fullName: BruTile.Cache.ITileCache<Mapsui.IFeature>
  nameWithType.vb: ITileCache(Of IFeature)
  fullName.vb: BruTile.Cache.ITileCache(Of Mapsui.IFeature)
  name.vb: ITileCache(Of IFeature)
  spec.csharp:
  - uid: BruTile.Cache.ITileCache`1
    name: ITileCache
    isExternal: true
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  spec.vb:
  - uid: BruTile.Cache.ITileCache`1
    name: ITileCache
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
- uid: BruTile.ITileSchema
  commentId: T:BruTile.ITileSchema
  parent: BruTile
  isExternal: true
  name: ITileSchema
  nameWithType: ITileSchema
  fullName: BruTile.ITileSchema
- uid: System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
  commentId: T:System.Func{BruTile.TileInfo,System.Threading.Tasks.Task{Mapsui.IFeature}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TileInfo, Task<IFeature>>
  nameWithType: Func<TileInfo, Task<IFeature>>
  fullName: System.Func<BruTile.TileInfo, System.Threading.Tasks.Task<Mapsui.IFeature>>
  nameWithType.vb: Func(Of TileInfo, Task(Of IFeature))
  fullName.vb: System.Func(Of BruTile.TileInfo, System.Threading.Tasks.Task(Of Mapsui.IFeature))
  name.vb: Func(Of TileInfo, Task(Of IFeature))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: BruTile.TileInfo
    name: TileInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: BruTile.TileInfo
    name: TileInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
  - name: )
- uid: Mapsui.Tiling.Fetcher.IDataFetchStrategy
  commentId: T:Mapsui.Tiling.Fetcher.IDataFetchStrategy
  parent: Mapsui.Tiling.Fetcher
  href: Mapsui.Tiling.Fetcher.IDataFetchStrategy.html
  name: IDataFetchStrategy
  nameWithType: IDataFetchStrategy
  fullName: Mapsui.Tiling.Fetcher.IDataFetchStrategy
- uid: BruTile.Cache.ITileCache`1
  commentId: T:BruTile.Cache.ITileCache`1
  isExternal: true
  name: ITileCache<T>
  nameWithType: ITileCache<T>
  fullName: BruTile.Cache.ITileCache<T>
  nameWithType.vb: ITileCache(Of T)
  fullName.vb: BruTile.Cache.ITileCache(Of T)
  name.vb: ITileCache(Of T)
  spec.csharp:
  - uid: BruTile.Cache.ITileCache`1
    name: ITileCache
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: BruTile.Cache.ITileCache`1
    name: ITileCache
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BruTile.Cache
  commentId: N:BruTile.Cache
  isExternal: true
  name: BruTile.Cache
  nameWithType: BruTile.Cache
  fullName: BruTile.Cache
  spec.csharp:
  - uid: BruTile
    name: BruTile
    isExternal: true
  - name: .
  - uid: BruTile.Cache
    name: Cache
    isExternal: true
  spec.vb:
  - uid: BruTile
    name: BruTile
    isExternal: true
  - name: .
  - uid: BruTile.Cache
    name: Cache
    isExternal: true
- uid: BruTile
  commentId: N:BruTile
  isExternal: true
  name: BruTile
  nameWithType: BruTile
  fullName: BruTile
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Mapsui.Fetcher.DataChangedEventHandler
  commentId: T:Mapsui.Fetcher.DataChangedEventHandler
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.DataChangedEventHandler.html
  name: DataChangedEventHandler
  nameWithType: DataChangedEventHandler
  fullName: Mapsui.Fetcher.DataChangedEventHandler
- uid: Mapsui.Fetcher.IFetchDispatcher.PropertyChanged
  commentId: E:Mapsui.Fetcher.IFetchDispatcher.PropertyChanged
  parent: Mapsui.Fetcher.IFetchDispatcher
  href: Mapsui.Fetcher.IFetchDispatcher.html#Mapsui_Fetcher_IFetchDispatcher_PropertyChanged
  name: PropertyChanged
  nameWithType: IFetchDispatcher.PropertyChanged
  fullName: Mapsui.Fetcher.IFetchDispatcher.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_NumberTilesNeeded
  name: NumberTilesNeeded
  nameWithType: TileFetchDispatcher.NumberTilesNeeded
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.NumberTilesNeeded
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_MaxTilesInOneRequest
  name: MaxTilesInOneRequest
  nameWithType: TileFetchDispatcher.MaxTilesInOneRequest
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.MaxTilesInOneRequest
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_SetViewport_Mapsui_Layers_FetchInfo_
  name: SetViewport
  nameWithType: TileFetchDispatcher.SetViewport
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.SetViewport
- uid: Mapsui.Layers.FetchInfo
  commentId: T:Mapsui.Layers.FetchInfo
  parent: Mapsui.Layers
  href: Mapsui.Layers.FetchInfo.html
  name: FetchInfo
  nameWithType: FetchInfo
  fullName: Mapsui.Layers.FetchInfo
- uid: Mapsui.Layers
  commentId: N:Mapsui.Layers
  href: Mapsui.html
  name: Mapsui.Layers
  nameWithType: Mapsui.Layers
  fullName: Mapsui.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_TryTake_System_Func_System_Threading_Tasks_Task___
  name: TryTake
  nameWithType: TileFetchDispatcher.TryTake
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.TryTake
- uid: Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  commentId: M:Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
  parent: Mapsui.Fetcher.IFetchDispatcher
  isExternal: true
  href: Mapsui.Fetcher.IFetchDispatcher.html#Mapsui_Fetcher_IFetchDispatcher_TryTake_System_Func_System_Threading_Tasks_Task___
  name: TryTake(out Func<Task>)
  nameWithType: IFetchDispatcher.TryTake(out Func<Task>)
  fullName: Mapsui.Fetcher.IFetchDispatcher.TryTake(out System.Func<System.Threading.Tasks.Task>)
  nameWithType.vb: IFetchDispatcher.TryTake(Func(Of Task))
  fullName.vb: Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func(Of System.Threading.Tasks.Task))
  name.vb: TryTake(Func(Of Task))
  spec.csharp:
  - uid: Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
    name: TryTake
    href: Mapsui.Fetcher.IFetchDispatcher.html#Mapsui_Fetcher_IFetchDispatcher_TryTake_System_Func_System_Threading_Tasks_Task___
  - name: (
  - name: out
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mapsui.Fetcher.IFetchDispatcher.TryTake(System.Func{System.Threading.Tasks.Task}@)
    name: TryTake
    href: Mapsui.Fetcher.IFetchDispatcher.html#Mapsui_Fetcher_IFetchDispatcher_TryTake_System_Func_System_Threading_Tasks_Task___
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
  - name: )
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_Busy
  name: Busy
  nameWithType: TileFetchDispatcher.Busy
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.Busy
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_StopFetching
  name: StopFetching
  nameWithType: TileFetchDispatcher.StopFetching
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StopFetching
- uid: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching*
  commentId: Overload:Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching
  href: Mapsui.Tiling.Fetcher.TileFetchDispatcher.html#Mapsui_Tiling_Fetcher_TileFetchDispatcher_StartFetching
  name: StartFetching
  nameWithType: TileFetchDispatcher.StartFetching
  fullName: Mapsui.Tiling.Fetcher.TileFetchDispatcher.StartFetching
