### YamlMime:ManagedReference
items:
- uid: Mapsui.Layers.BaseLayer
  commentId: T:Mapsui.Layers.BaseLayer
  id: BaseLayer
  parent: Mapsui.Layers
  children:
  - Mapsui.Layers.BaseLayer.#ctor
  - Mapsui.Layers.BaseLayer.#ctor(System.String)
  - Mapsui.Layers.BaseLayer.Attribution
  - Mapsui.Layers.BaseLayer.Busy
  - Mapsui.Layers.BaseLayer.DataChanged
  - Mapsui.Layers.BaseLayer.DataHasChanged
  - Mapsui.Layers.BaseLayer.Dispose
  - Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  - Mapsui.Layers.BaseLayer.Enabled
  - Mapsui.Layers.BaseLayer.Extent
  - Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  - Mapsui.Layers.BaseLayer.Id
  - Mapsui.Layers.BaseLayer.IsMapInfoLayer
  - Mapsui.Layers.BaseLayer.MaxVisible
  - Mapsui.Layers.BaseLayer.MinVisible
  - Mapsui.Layers.BaseLayer.Name
  - Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  - Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  - Mapsui.Layers.BaseLayer.Opacity
  - Mapsui.Layers.BaseLayer.PropertyChanged
  - Mapsui.Layers.BaseLayer.Resolutions
  - Mapsui.Layers.BaseLayer.SortFeatures
  - Mapsui.Layers.BaseLayer.Style
  - Mapsui.Layers.BaseLayer.Tag
  - Mapsui.Layers.BaseLayer.ToString
  - Mapsui.Layers.BaseLayer.UpdateAnimations
  langs:
  - csharp
  - vb
  name: BaseLayer
  nameWithType: BaseLayer
  fullName: Mapsui.Layers.BaseLayer
  type: Class
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: BaseLayer
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 12
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: 'public abstract class BaseLayer : ILayer, IAnimatable, INotifyPropertyChanged, IDisposable'
    content.vb: Public MustInherit Class BaseLayer Implements ILayer, IAnimatable, INotifyPropertyChanged, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Mapsui.Layers.AnimatedLayers.AnimatedPointLayer
  - Mapsui.Layers.GenericCollectionLayer`1
  - Mapsui.Layers.ImageLayer
  - Mapsui.Layers.Layer
  - Mapsui.Layers.MemoryLayer
  - Mapsui.Layers.MyLocationLayer
  - Mapsui.Layers.RasterizingLayer
  - Mapsui.Layers.WritableLayer
  - Mapsui.Tiling.Layers.TileLayer
  - Mapsui.UI.Objects.MyLocationLayer
  implements:
  - Mapsui.Layers.ILayer
  - Mapsui.Animations.IAnimatable
  - System.ComponentModel.INotifyPropertyChanged
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Mapsui.Layers.ILayer.Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync
  - System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
- uid: Mapsui.Layers.BaseLayer.#ctor
  commentId: M:Mapsui.Layers.BaseLayer.#ctor
  id: '#ctor'
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: BaseLayer()
  nameWithType: BaseLayer.BaseLayer()
  fullName: Mapsui.Layers.BaseLayer.BaseLayer()
  type: Constructor
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 29
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Creates a BaseLayer without a name
  example: []
  syntax:
    content: protected BaseLayer()
    content.vb: Protected Sub New()
  overload: Mapsui.Layers.BaseLayer.#ctor*
  nameWithType.vb: BaseLayer.New()
  fullName.vb: Mapsui.Layers.BaseLayer.New()
  name.vb: New()
- uid: Mapsui.Layers.BaseLayer.#ctor(System.String)
  commentId: M:Mapsui.Layers.BaseLayer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: BaseLayer(string)
  nameWithType: BaseLayer.BaseLayer(string)
  fullName: Mapsui.Layers.BaseLayer.BaseLayer(string)
  type: Constructor
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: .ctor
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 50
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Creates a BaseLayer with a name
  example: []
  syntax:
    content: protected BaseLayer(string name)
    parameters:
    - id: name
      type: System.String
      description: Name for this layer
    content.vb: Protected Sub New(name As String)
  overload: Mapsui.Layers.BaseLayer.#ctor*
  nameWithType.vb: BaseLayer.New(String)
  fullName.vb: Mapsui.Layers.BaseLayer.New(String)
  name.vb: New(String)
- uid: Mapsui.Layers.BaseLayer.PropertyChanged
  commentId: E:Mapsui.Layers.BaseLayer.PropertyChanged
  id: PropertyChanged
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: BaseLayer.PropertyChanged
  fullName: Mapsui.Layers.BaseLayer.PropertyChanged
  type: Event
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: PropertyChanged
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 59
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Called whenever a property changed
  example: []
  syntax:
    content: public event PropertyChangedEventHandler? PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: Mapsui.Layers.BaseLayer.DataChanged
  commentId: E:Mapsui.Layers.BaseLayer.DataChanged
  id: DataChanged
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: DataChanged
  nameWithType: BaseLayer.DataChanged
  fullName: Mapsui.Layers.BaseLayer.DataChanged
  type: Event
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataChanged
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 70
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: >-
    Event called when the data within the layer has changed allowing

    listeners to react to this.
  example: []
  syntax:
    content: public event DataChangedEventHandler? DataChanged
    return:
      type: Mapsui.Fetcher.DataChangedEventHandler
    content.vb: Public Event DataChanged As DataChangedEventHandler
  implements:
  - Mapsui.Layers.ILayer.DataChanged
- uid: Mapsui.Layers.BaseLayer.Id
  commentId: P:Mapsui.Layers.BaseLayer.Id
  id: Id
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BaseLayer.Id
  fullName: Mapsui.Layers.BaseLayer.Id
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Id
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 73
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Numerical Id of layer
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: Mapsui.Layers.BaseLayer.Id*
  implements:
  - Mapsui.Layers.ILayer.Id
- uid: Mapsui.Layers.BaseLayer.Tag
  commentId: P:Mapsui.Layers.BaseLayer.Tag
  id: Tag
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: BaseLayer.Tag
  fullName: Mapsui.Layers.BaseLayer.Tag
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Tag
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 76
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Gets or sets an arbitrary object value that can be used to store custom information about this element
  example: []
  syntax:
    content: public object? Tag { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Tag As Object
  overload: Mapsui.Layers.BaseLayer.Tag*
  implements:
  - Mapsui.Layers.ILayer.Tag
- uid: Mapsui.Layers.BaseLayer.MinVisible
  commentId: P:Mapsui.Layers.BaseLayer.MinVisible
  id: MinVisible
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: MinVisible
  nameWithType: BaseLayer.MinVisible
  fullName: Mapsui.Layers.BaseLayer.MinVisible
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MinVisible
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 88
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Minimum visible zoom level
  example: []
  syntax:
    content: public double MinVisible { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinVisible As Double
  overload: Mapsui.Layers.BaseLayer.MinVisible*
  implements:
  - Mapsui.Layers.ILayer.MinVisible
- uid: Mapsui.Layers.BaseLayer.MaxVisible
  commentId: P:Mapsui.Layers.BaseLayer.MaxVisible
  id: MaxVisible
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: MaxVisible
  nameWithType: BaseLayer.MaxVisible
  fullName: Mapsui.Layers.BaseLayer.MaxVisible
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: MaxVisible
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 100
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Minimum visible zoom level
  example: []
  syntax:
    content: public double MaxVisible { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MaxVisible As Double
  overload: Mapsui.Layers.BaseLayer.MaxVisible*
  implements:
  - Mapsui.Layers.ILayer.MaxVisible
- uid: Mapsui.Layers.BaseLayer.Enabled
  commentId: P:Mapsui.Layers.BaseLayer.Enabled
  id: Enabled
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: BaseLayer.Enabled
  fullName: Mapsui.Layers.BaseLayer.Enabled
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Enabled
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 112
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Specifies whether this layer should be rendered or not
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Mapsui.Layers.BaseLayer.Enabled*
  implements:
  - Mapsui.Layers.ILayer.Enabled
- uid: Mapsui.Layers.BaseLayer.Name
  commentId: P:Mapsui.Layers.BaseLayer.Name
  id: Name
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseLayer.Name
  fullName: Mapsui.Layers.BaseLayer.Name
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Name
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 124
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Name of layer
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mapsui.Layers.BaseLayer.Name*
  implements:
  - Mapsui.Layers.ILayer.Name
- uid: Mapsui.Layers.BaseLayer.Opacity
  commentId: P:Mapsui.Layers.BaseLayer.Opacity
  id: Opacity
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Opacity
  nameWithType: BaseLayer.Opacity
  fullName: Mapsui.Layers.BaseLayer.Opacity
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Opacity
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 136
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Opacity of layer
  example: []
  syntax:
    content: public double Opacity { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Opacity As Double
  overload: Mapsui.Layers.BaseLayer.Opacity*
  implements:
  - Mapsui.Layers.ILayer.Opacity
- uid: Mapsui.Layers.BaseLayer.Busy
  commentId: P:Mapsui.Layers.BaseLayer.Busy
  id: Busy
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Busy
  nameWithType: BaseLayer.Busy
  fullName: Mapsui.Layers.BaseLayer.Busy
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Busy
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 148
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Flag, if layer is busy
  example: []
  syntax:
    content: public virtual bool Busy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Busy As Boolean
  overload: Mapsui.Layers.BaseLayer.Busy*
  implements:
  - Mapsui.Layers.ILayer.Busy
- uid: Mapsui.Layers.BaseLayer.Style
  commentId: P:Mapsui.Layers.BaseLayer.Style
  id: Style
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: BaseLayer.Style
  fullName: Mapsui.Layers.BaseLayer.Style
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Style
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 160
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Gets or sets rendering style of layer
  example: []
  syntax:
    content: public IStyle? Style { get; set; }
    parameters: []
    return:
      type: Mapsui.Styles.IStyle
    content.vb: Public Property Style As IStyle
  overload: Mapsui.Layers.BaseLayer.Style*
  implements:
  - Mapsui.Layers.ILayer.Style
- uid: Mapsui.Layers.BaseLayer.Extent
  commentId: P:Mapsui.Layers.BaseLayer.Extent
  id: Extent
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Extent
  nameWithType: BaseLayer.Extent
  fullName: Mapsui.Layers.BaseLayer.Extent
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Extent
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 174
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Returns the envelope of all available data in the layer
  example: []
  syntax:
    content: public virtual MRect? Extent { get; protected set; }
    parameters: []
    return:
      type: Mapsui.MRect
    content.vb: Public Overridable Property Extent As MRect
  overload: Mapsui.Layers.BaseLayer.Extent*
  implements:
  - Mapsui.Layers.ILayer.Extent
- uid: Mapsui.Layers.BaseLayer.Attribution
  commentId: P:Mapsui.Layers.BaseLayer.Attribution
  id: Attribution
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Attribution
  nameWithType: BaseLayer.Attribution
  fullName: Mapsui.Layers.BaseLayer.Attribution
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Attribution
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 187
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Attribution for layer
  example: []
  syntax:
    content: public HyperlinkWidget Attribution { get; set; }
    parameters: []
    return:
      type: Mapsui.Widgets.ButtonWidgets.HyperlinkWidget
    content.vb: Public Property Attribution As HyperlinkWidget
  overload: Mapsui.Layers.BaseLayer.Attribution*
  implements:
  - Mapsui.Layers.ILayer.Attribution
- uid: Mapsui.Layers.BaseLayer.Resolutions
  commentId: P:Mapsui.Layers.BaseLayer.Resolutions
  id: Resolutions
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Resolutions
  nameWithType: BaseLayer.Resolutions
  fullName: Mapsui.Layers.BaseLayer.Resolutions
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Resolutions
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 190
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: List of native resolutions
  example: []
  syntax:
    content: public virtual IReadOnlyList<double> Resolutions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Double}
    content.vb: Public Overridable ReadOnly Property Resolutions As IReadOnlyList(Of Double)
  overload: Mapsui.Layers.BaseLayer.Resolutions*
  implements:
  - Mapsui.Layers.ILayer.Resolutions
- uid: Mapsui.Layers.BaseLayer.IsMapInfoLayer
  commentId: P:Mapsui.Layers.BaseLayer.IsMapInfoLayer
  id: IsMapInfoLayer
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: IsMapInfoLayer
  nameWithType: BaseLayer.IsMapInfoLayer
  fullName: Mapsui.Layers.BaseLayer.IsMapInfoLayer
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: IsMapInfoLayer
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 193
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Indicates if the layer should be taken into account for the GetMapInfo request
  example: []
  syntax:
    content: public bool IsMapInfoLayer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMapInfoLayer As Boolean
  overload: Mapsui.Layers.BaseLayer.IsMapInfoLayer*
  implements:
  - Mapsui.Layers.ILayer.IsMapInfoLayer
- uid: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  commentId: M:Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect,System.Double)
  id: GetFeatures(Mapsui.MRect,System.Double)
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: GetFeatures(MRect, double)
  nameWithType: BaseLayer.GetFeatures(MRect, double)
  fullName: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect, double)
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: GetFeatures
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 196
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Get all features in a given MRect for a given resolution
  example: []
  syntax:
    content: public abstract IEnumerable<IFeature> GetFeatures(MRect box, double resolution)
    parameters:
    - id: box
      type: Mapsui.MRect
    - id: resolution
      type: System.Double
      description: Resolution of viewport
    return:
      type: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
      description: ''
    content.vb: Public MustOverride Function GetFeatures(box As MRect, resolution As Double) As IEnumerable(Of IFeature)
  overload: Mapsui.Layers.BaseLayer.GetFeatures*
  implements:
  - Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect,System.Double)
  nameWithType.vb: BaseLayer.GetFeatures(MRect, Double)
  fullName.vb: Mapsui.Layers.BaseLayer.GetFeatures(Mapsui.MRect, Double)
  name.vb: GetFeatures(MRect, Double)
- uid: Mapsui.Layers.BaseLayer.SortFeatures
  commentId: P:Mapsui.Layers.BaseLayer.SortFeatures
  id: SortFeatures
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: SortFeatures
  nameWithType: BaseLayer.SortFeatures
  fullName: Mapsui.Layers.BaseLayer.SortFeatures
  type: Property
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: SortFeatures
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 199
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Function to sort order of features for drawing
  example: []
  syntax:
    content: public virtual Func<IEnumerable<IFeature>, IEnumerable<IFeature>> SortFeatures { get; set; }
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.IEnumerable{Mapsui.IFeature},System.Collections.Generic.IEnumerable{Mapsui.IFeature}}
    content.vb: Public Overridable Property SortFeatures As Func(Of IEnumerable(Of IFeature), IEnumerable(Of IFeature))
  overload: Mapsui.Layers.BaseLayer.SortFeatures*
  implements:
  - Mapsui.Layers.ILayer.SortFeatures
- uid: Mapsui.Layers.BaseLayer.DataHasChanged
  commentId: M:Mapsui.Layers.BaseLayer.DataHasChanged
  id: DataHasChanged
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: DataHasChanged()
  nameWithType: BaseLayer.DataHasChanged()
  fullName: Mapsui.Layers.BaseLayer.DataHasChanged()
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: DataHasChanged
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 201
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: >-
    To indicate the data withing the layer has changed. This triggers a DataChanged event.

    This is necessary for situations where the layer can not know about changes to it's data

    as in the case of editing of a geometry.
  example: []
  syntax:
    content: public void DataHasChanged()
    content.vb: Public Sub DataHasChanged()
  overload: Mapsui.Layers.BaseLayer.DataHasChanged*
  implements:
  - Mapsui.Layers.ILayer.DataHasChanged
- uid: Mapsui.Layers.BaseLayer.ToString
  commentId: M:Mapsui.Layers.BaseLayer.ToString
  id: ToString
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseLayer.ToString()
  fullName: Mapsui.Layers.BaseLayer.ToString()
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: ToString
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 206
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Mapsui.Layers.BaseLayer.ToString*
- uid: Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  commentId: M:Mapsui.Layers.BaseLayer.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string)
  nameWithType: BaseLayer.OnPropertyChanged(string)
  fullName: Mapsui.Layers.BaseLayer.OnPropertyChanged(string)
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnPropertyChanged
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 211
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: protected virtual void OnPropertyChanged(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Protected Overridable Sub OnPropertyChanged(name As String)
  overload: Mapsui.Layers.BaseLayer.OnPropertyChanged*
  nameWithType.vb: BaseLayer.OnPropertyChanged(String)
  fullName.vb: Mapsui.Layers.BaseLayer.OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
- uid: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  commentId: M:Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  id: OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: OnDataChanged(DataChangedEventArgs)
  nameWithType: BaseLayer.OnDataChanged(DataChangedEventArgs)
  fullName: Mapsui.Layers.BaseLayer.OnDataChanged(Mapsui.Fetcher.DataChangedEventArgs)
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: OnDataChanged
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 216
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: protected void OnDataChanged(DataChangedEventArgs args)
    parameters:
    - id: args
      type: Mapsui.Fetcher.DataChangedEventArgs
    content.vb: Protected Sub OnDataChanged(args As DataChangedEventArgs)
  overload: Mapsui.Layers.BaseLayer.OnDataChanged*
- uid: Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  commentId: M:Mapsui.Layers.BaseLayer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: BaseLayer.Dispose(bool)
  fullName: Mapsui.Layers.BaseLayer.Dispose(bool)
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Dispose
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 221
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Mapsui.Layers.BaseLayer.Dispose*
  nameWithType.vb: BaseLayer.Dispose(Boolean)
  fullName.vb: Mapsui.Layers.BaseLayer.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Mapsui.Layers.BaseLayer.Dispose
  commentId: M:Mapsui.Layers.BaseLayer.Dispose
  id: Dispose
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseLayer.Dispose()
  fullName: Mapsui.Layers.BaseLayer.Dispose()
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: Dispose
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 228
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: Mapsui.Layers.BaseLayer.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Mapsui.Layers.BaseLayer.UpdateAnimations
  commentId: M:Mapsui.Layers.BaseLayer.UpdateAnimations
  id: UpdateAnimations
  parent: Mapsui.Layers.BaseLayer
  langs:
  - csharp
  - vb
  name: UpdateAnimations()
  nameWithType: BaseLayer.UpdateAnimations()
  fullName: Mapsui.Layers.BaseLayer.UpdateAnimations()
  type: Method
  source:
    remote:
      path: Mapsui/Layers/BaseLayer.cs
      branch: main
      repo: git@github.com:Mapsui/Mapsui.git
    id: UpdateAnimations
    path: ../../Mapsui/Layers/BaseLayer.cs
    startLine: 234
  assemblies:
  - Mapsui
  namespace: Mapsui.Layers
  example: []
  syntax:
    content: public virtual bool UpdateAnimations()
    return:
      type: System.Boolean
      description: Returns true if animations are running and a graphics update is needed.
    content.vb: Public Overridable Function UpdateAnimations() As Boolean
  overload: Mapsui.Layers.BaseLayer.UpdateAnimations*
  implements:
  - Mapsui.Animations.IAnimatable.UpdateAnimations
references:
- uid: Mapsui.Layers
  commentId: N:Mapsui.Layers
  href: Mapsui.html
  name: Mapsui.Layers
  nameWithType: Mapsui.Layers
  fullName: Mapsui.Layers
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Layers
    name: Layers
    href: Mapsui.Layers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mapsui.Layers.ILayer
  commentId: T:Mapsui.Layers.ILayer
  parent: Mapsui.Layers
  href: Mapsui.Layers.ILayer.html
  name: ILayer
  nameWithType: ILayer
  fullName: Mapsui.Layers.ILayer
- uid: Mapsui.Animations.IAnimatable
  commentId: T:Mapsui.Animations.IAnimatable
  parent: Mapsui.Animations
  href: Mapsui.Animations.IAnimatable.html
  name: IAnimatable
  nameWithType: IAnimatable
  fullName: Mapsui.Animations.IAnimatable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Layers.ILayer.Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync
  commentId: M:Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  parent: Mapsui.Extensions.LayerExtensions
  definition: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  name: WaitForLoadingAsync(ILayer)
  nameWithType: LayerExtensions.WaitForLoadingAsync(ILayer)
  fullName: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  spec.csharp:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: System.Object.Mapsui.Extensions.DisposableExtension.DisposeIfDisposable
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  parent: Mapsui.Extensions.DisposableExtension
  definition: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mapsui.Animations
  commentId: N:Mapsui.Animations
  href: Mapsui.html
  name: Mapsui.Animations
  nameWithType: Mapsui.Animations
  fullName: Mapsui.Animations
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Animations
    name: Animations
    href: Mapsui.Animations.html
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  commentId: M:Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  name: WaitForLoadingAsync(ILayer)
  nameWithType: LayerExtensions.WaitForLoadingAsync(ILayer)
  fullName: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
  spec.csharp:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.LayerExtensions.WaitForLoadingAsync(Mapsui.Layers.ILayer)
    name: WaitForLoadingAsync
    href: Mapsui.Extensions.LayerExtensions.html#Mapsui_Extensions_LayerExtensions_WaitForLoadingAsync_Mapsui_Layers_ILayer_
  - name: (
  - uid: Mapsui.Layers.ILayer
    name: ILayer
    href: Mapsui.Layers.ILayer.html
  - name: )
- uid: Mapsui.Extensions.LayerExtensions
  commentId: T:Mapsui.Extensions.LayerExtensions
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.LayerExtensions.html
  name: LayerExtensions
  nameWithType: LayerExtensions
  fullName: Mapsui.Extensions.LayerExtensions
- uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  commentId: M:Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
  isExternal: true
  href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  name: DisposeIfDisposable(object)
  nameWithType: DisposableExtension.DisposeIfDisposable(object)
  fullName: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(object)
  nameWithType.vb: DisposableExtension.DisposeIfDisposable(Object)
  fullName.vb: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(Object)
  name.vb: DisposeIfDisposable(Object)
  spec.csharp:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Mapsui.Extensions.DisposableExtension.DisposeIfDisposable(System.Object)
    name: DisposeIfDisposable
    href: Mapsui.Extensions.DisposableExtension.html#Mapsui_Extensions_DisposableExtension_DisposeIfDisposable_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mapsui.Extensions.DisposableExtension
  commentId: T:Mapsui.Extensions.DisposableExtension
  parent: Mapsui.Extensions
  href: Mapsui.Extensions.DisposableExtension.html
  name: DisposableExtension
  nameWithType: DisposableExtension
  fullName: Mapsui.Extensions.DisposableExtension
- uid: Mapsui.Extensions
  commentId: N:Mapsui.Extensions
  href: Mapsui.html
  name: Mapsui.Extensions
  nameWithType: Mapsui.Extensions
  fullName: Mapsui.Extensions
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Extensions
    name: Extensions
    href: Mapsui.Extensions.html
- uid: Mapsui.Layers.BaseLayer.#ctor*
  commentId: Overload:Mapsui.Layers.BaseLayer.#ctor
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer__ctor
  name: BaseLayer
  nameWithType: BaseLayer.BaseLayer
  fullName: Mapsui.Layers.BaseLayer.BaseLayer
  nameWithType.vb: BaseLayer.New
  fullName.vb: Mapsui.Layers.BaseLayer.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: Mapsui.Layers.ILayer.DataChanged
  commentId: E:Mapsui.Layers.ILayer.DataChanged
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_DataChanged
  name: DataChanged
  nameWithType: ILayer.DataChanged
  fullName: Mapsui.Layers.ILayer.DataChanged
- uid: Mapsui.Fetcher.DataChangedEventHandler
  commentId: T:Mapsui.Fetcher.DataChangedEventHandler
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.DataChangedEventHandler.html
  name: DataChangedEventHandler
  nameWithType: DataChangedEventHandler
  fullName: Mapsui.Fetcher.DataChangedEventHandler
- uid: Mapsui.Fetcher
  commentId: N:Mapsui.Fetcher
  href: Mapsui.html
  name: Mapsui.Fetcher
  nameWithType: Mapsui.Fetcher
  fullName: Mapsui.Fetcher
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Fetcher
    name: Fetcher
    href: Mapsui.Fetcher.html
- uid: Mapsui.Layers.BaseLayer.Id*
  commentId: Overload:Mapsui.Layers.BaseLayer.Id
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Id
  name: Id
  nameWithType: BaseLayer.Id
  fullName: Mapsui.Layers.BaseLayer.Id
- uid: Mapsui.Layers.ILayer.Id
  commentId: P:Mapsui.Layers.ILayer.Id
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Id
  name: Id
  nameWithType: ILayer.Id
  fullName: Mapsui.Layers.ILayer.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mapsui.Layers.BaseLayer.Tag*
  commentId: Overload:Mapsui.Layers.BaseLayer.Tag
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Tag
  name: Tag
  nameWithType: BaseLayer.Tag
  fullName: Mapsui.Layers.BaseLayer.Tag
- uid: Mapsui.Layers.ILayer.Tag
  commentId: P:Mapsui.Layers.ILayer.Tag
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Tag
  name: Tag
  nameWithType: ILayer.Tag
  fullName: Mapsui.Layers.ILayer.Tag
- uid: Mapsui.Layers.BaseLayer.MinVisible*
  commentId: Overload:Mapsui.Layers.BaseLayer.MinVisible
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_MinVisible
  name: MinVisible
  nameWithType: BaseLayer.MinVisible
  fullName: Mapsui.Layers.BaseLayer.MinVisible
- uid: Mapsui.Layers.ILayer.MinVisible
  commentId: P:Mapsui.Layers.ILayer.MinVisible
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_MinVisible
  name: MinVisible
  nameWithType: ILayer.MinVisible
  fullName: Mapsui.Layers.ILayer.MinVisible
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mapsui.Layers.BaseLayer.MaxVisible*
  commentId: Overload:Mapsui.Layers.BaseLayer.MaxVisible
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_MaxVisible
  name: MaxVisible
  nameWithType: BaseLayer.MaxVisible
  fullName: Mapsui.Layers.BaseLayer.MaxVisible
- uid: Mapsui.Layers.ILayer.MaxVisible
  commentId: P:Mapsui.Layers.ILayer.MaxVisible
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_MaxVisible
  name: MaxVisible
  nameWithType: ILayer.MaxVisible
  fullName: Mapsui.Layers.ILayer.MaxVisible
- uid: Mapsui.Layers.BaseLayer.Enabled*
  commentId: Overload:Mapsui.Layers.BaseLayer.Enabled
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Enabled
  name: Enabled
  nameWithType: BaseLayer.Enabled
  fullName: Mapsui.Layers.BaseLayer.Enabled
- uid: Mapsui.Layers.ILayer.Enabled
  commentId: P:Mapsui.Layers.ILayer.Enabled
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Enabled
  name: Enabled
  nameWithType: ILayer.Enabled
  fullName: Mapsui.Layers.ILayer.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mapsui.Layers.BaseLayer.Name*
  commentId: Overload:Mapsui.Layers.BaseLayer.Name
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Name
  name: Name
  nameWithType: BaseLayer.Name
  fullName: Mapsui.Layers.BaseLayer.Name
- uid: Mapsui.Layers.ILayer.Name
  commentId: P:Mapsui.Layers.ILayer.Name
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Name
  name: Name
  nameWithType: ILayer.Name
  fullName: Mapsui.Layers.ILayer.Name
- uid: Mapsui.Layers.BaseLayer.Opacity*
  commentId: Overload:Mapsui.Layers.BaseLayer.Opacity
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Opacity
  name: Opacity
  nameWithType: BaseLayer.Opacity
  fullName: Mapsui.Layers.BaseLayer.Opacity
- uid: Mapsui.Layers.ILayer.Opacity
  commentId: P:Mapsui.Layers.ILayer.Opacity
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Opacity
  name: Opacity
  nameWithType: ILayer.Opacity
  fullName: Mapsui.Layers.ILayer.Opacity
- uid: Mapsui.Layers.BaseLayer.Busy*
  commentId: Overload:Mapsui.Layers.BaseLayer.Busy
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Busy
  name: Busy
  nameWithType: BaseLayer.Busy
  fullName: Mapsui.Layers.BaseLayer.Busy
- uid: Mapsui.Layers.ILayer.Busy
  commentId: P:Mapsui.Layers.ILayer.Busy
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Busy
  name: Busy
  nameWithType: ILayer.Busy
  fullName: Mapsui.Layers.ILayer.Busy
- uid: Mapsui.Layers.BaseLayer.Style*
  commentId: Overload:Mapsui.Layers.BaseLayer.Style
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Style
  name: Style
  nameWithType: BaseLayer.Style
  fullName: Mapsui.Layers.BaseLayer.Style
- uid: Mapsui.Layers.ILayer.Style
  commentId: P:Mapsui.Layers.ILayer.Style
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Style
  name: Style
  nameWithType: ILayer.Style
  fullName: Mapsui.Layers.ILayer.Style
- uid: Mapsui.Styles.IStyle
  commentId: T:Mapsui.Styles.IStyle
  parent: Mapsui.Styles
  href: Mapsui.Styles.IStyle.html
  name: IStyle
  nameWithType: IStyle
  fullName: Mapsui.Styles.IStyle
- uid: Mapsui.Styles
  commentId: N:Mapsui.Styles
  href: Mapsui.html
  name: Mapsui.Styles
  nameWithType: Mapsui.Styles
  fullName: Mapsui.Styles
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Styles
    name: Styles
    href: Mapsui.Styles.html
- uid: Mapsui.Layers.BaseLayer.Extent*
  commentId: Overload:Mapsui.Layers.BaseLayer.Extent
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Extent
  name: Extent
  nameWithType: BaseLayer.Extent
  fullName: Mapsui.Layers.BaseLayer.Extent
- uid: Mapsui.Layers.ILayer.Extent
  commentId: P:Mapsui.Layers.ILayer.Extent
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Extent
  name: Extent
  nameWithType: ILayer.Extent
  fullName: Mapsui.Layers.ILayer.Extent
- uid: Mapsui.MRect
  commentId: T:Mapsui.MRect
  parent: Mapsui
  href: Mapsui.MRect.html
  name: MRect
  nameWithType: MRect
  fullName: Mapsui.MRect
- uid: Mapsui
  commentId: N:Mapsui
  href: Mapsui.html
  name: Mapsui
  nameWithType: Mapsui
  fullName: Mapsui
- uid: Mapsui.Layers.BaseLayer.Attribution*
  commentId: Overload:Mapsui.Layers.BaseLayer.Attribution
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Attribution
  name: Attribution
  nameWithType: BaseLayer.Attribution
  fullName: Mapsui.Layers.BaseLayer.Attribution
- uid: Mapsui.Layers.ILayer.Attribution
  commentId: P:Mapsui.Layers.ILayer.Attribution
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Attribution
  name: Attribution
  nameWithType: ILayer.Attribution
  fullName: Mapsui.Layers.ILayer.Attribution
- uid: Mapsui.Widgets.ButtonWidgets.HyperlinkWidget
  commentId: T:Mapsui.Widgets.ButtonWidgets.HyperlinkWidget
  parent: Mapsui.Widgets.ButtonWidgets
  href: Mapsui.Widgets.ButtonWidgets.HyperlinkWidget.html
  name: HyperlinkWidget
  nameWithType: HyperlinkWidget
  fullName: Mapsui.Widgets.ButtonWidgets.HyperlinkWidget
- uid: Mapsui.Widgets.ButtonWidgets
  commentId: N:Mapsui.Widgets.ButtonWidgets
  href: Mapsui.html
  name: Mapsui.Widgets.ButtonWidgets
  nameWithType: Mapsui.Widgets.ButtonWidgets
  fullName: Mapsui.Widgets.ButtonWidgets
  spec.csharp:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Widgets
    name: Widgets
    href: Mapsui.Widgets.html
  - name: .
  - uid: Mapsui.Widgets.ButtonWidgets
    name: ButtonWidgets
    href: Mapsui.Widgets.ButtonWidgets.html
  spec.vb:
  - uid: Mapsui
    name: Mapsui
    href: Mapsui.html
  - name: .
  - uid: Mapsui.Widgets
    name: Widgets
    href: Mapsui.Widgets.html
  - name: .
  - uid: Mapsui.Widgets.ButtonWidgets
    name: ButtonWidgets
    href: Mapsui.Widgets.ButtonWidgets.html
- uid: Mapsui.Layers.BaseLayer.Resolutions*
  commentId: Overload:Mapsui.Layers.BaseLayer.Resolutions
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Resolutions
  name: Resolutions
  nameWithType: BaseLayer.Resolutions
  fullName: Mapsui.Layers.BaseLayer.Resolutions
- uid: Mapsui.Layers.ILayer.Resolutions
  commentId: P:Mapsui.Layers.ILayer.Resolutions
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_Resolutions
  name: Resolutions
  nameWithType: ILayer.Resolutions
  fullName: Mapsui.Layers.ILayer.Resolutions
- uid: System.Collections.Generic.IReadOnlyList{System.Double}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<double>
  nameWithType: IReadOnlyList<double>
  fullName: System.Collections.Generic.IReadOnlyList<double>
  nameWithType.vb: IReadOnlyList(Of Double)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Double)
  name.vb: IReadOnlyList(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mapsui.Layers.BaseLayer.IsMapInfoLayer*
  commentId: Overload:Mapsui.Layers.BaseLayer.IsMapInfoLayer
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_IsMapInfoLayer
  name: IsMapInfoLayer
  nameWithType: BaseLayer.IsMapInfoLayer
  fullName: Mapsui.Layers.BaseLayer.IsMapInfoLayer
- uid: Mapsui.Layers.ILayer.IsMapInfoLayer
  commentId: P:Mapsui.Layers.ILayer.IsMapInfoLayer
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_IsMapInfoLayer
  name: IsMapInfoLayer
  nameWithType: ILayer.IsMapInfoLayer
  fullName: Mapsui.Layers.ILayer.IsMapInfoLayer
- uid: Mapsui.Layers.BaseLayer.GetFeatures*
  commentId: Overload:Mapsui.Layers.BaseLayer.GetFeatures
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_GetFeatures_Mapsui_MRect_System_Double_
  name: GetFeatures
  nameWithType: BaseLayer.GetFeatures
  fullName: Mapsui.Layers.BaseLayer.GetFeatures
- uid: Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect,System.Double)
  commentId: M:Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect,System.Double)
  parent: Mapsui.Layers.ILayer
  isExternal: true
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_GetFeatures_Mapsui_MRect_System_Double_
  name: GetFeatures(MRect, double)
  nameWithType: ILayer.GetFeatures(MRect, double)
  fullName: Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect, double)
  nameWithType.vb: ILayer.GetFeatures(MRect, Double)
  fullName.vb: Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect, Double)
  name.vb: GetFeatures(MRect, Double)
  spec.csharp:
  - uid: Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect,System.Double)
    name: GetFeatures
    href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_GetFeatures_Mapsui_MRect_System_Double_
  - name: (
  - uid: Mapsui.MRect
    name: MRect
    href: Mapsui.MRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.ILayer.GetFeatures(Mapsui.MRect,System.Double)
    name: GetFeatures
    href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_GetFeatures_Mapsui_MRect_System_Double_
  - name: (
  - uid: Mapsui.MRect
    name: MRect
    href: Mapsui.MRect.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  commentId: T:System.Collections.Generic.IEnumerable{Mapsui.IFeature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFeature>
  nameWithType: IEnumerable<IFeature>
  fullName: System.Collections.Generic.IEnumerable<Mapsui.IFeature>
  nameWithType.vb: IEnumerable(Of IFeature)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mapsui.IFeature)
  name.vb: IEnumerable(Of IFeature)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mapsui.Layers.BaseLayer.SortFeatures*
  commentId: Overload:Mapsui.Layers.BaseLayer.SortFeatures
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_SortFeatures
  name: SortFeatures
  nameWithType: BaseLayer.SortFeatures
  fullName: Mapsui.Layers.BaseLayer.SortFeatures
- uid: Mapsui.Layers.ILayer.SortFeatures
  commentId: P:Mapsui.Layers.ILayer.SortFeatures
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_SortFeatures
  name: SortFeatures
  nameWithType: ILayer.SortFeatures
  fullName: Mapsui.Layers.ILayer.SortFeatures
- uid: System.Func{System.Collections.Generic.IEnumerable{Mapsui.IFeature},System.Collections.Generic.IEnumerable{Mapsui.IFeature}}
  commentId: T:System.Func{System.Collections.Generic.IEnumerable{Mapsui.IFeature},System.Collections.Generic.IEnumerable{Mapsui.IFeature}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IEnumerable<IFeature>, IEnumerable<IFeature>>
  nameWithType: Func<IEnumerable<IFeature>, IEnumerable<IFeature>>
  fullName: System.Func<System.Collections.Generic.IEnumerable<Mapsui.IFeature>, System.Collections.Generic.IEnumerable<Mapsui.IFeature>>
  nameWithType.vb: Func(Of IEnumerable(Of IFeature), IEnumerable(Of IFeature))
  fullName.vb: System.Func(Of System.Collections.Generic.IEnumerable(Of Mapsui.IFeature), System.Collections.Generic.IEnumerable(Of Mapsui.IFeature))
  name.vb: Func(Of IEnumerable(Of IFeature), IEnumerable(Of IFeature))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mapsui.IFeature
    name: IFeature
    href: Mapsui.IFeature.html
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Mapsui.Layers.BaseLayer.DataHasChanged*
  commentId: Overload:Mapsui.Layers.BaseLayer.DataHasChanged
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_DataHasChanged
  name: DataHasChanged
  nameWithType: BaseLayer.DataHasChanged
  fullName: Mapsui.Layers.BaseLayer.DataHasChanged
- uid: Mapsui.Layers.ILayer.DataHasChanged
  commentId: M:Mapsui.Layers.ILayer.DataHasChanged
  parent: Mapsui.Layers.ILayer
  href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_DataHasChanged
  name: DataHasChanged()
  nameWithType: ILayer.DataHasChanged()
  fullName: Mapsui.Layers.ILayer.DataHasChanged()
  spec.csharp:
  - uid: Mapsui.Layers.ILayer.DataHasChanged
    name: DataHasChanged
    href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_DataHasChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Layers.ILayer.DataHasChanged
    name: DataHasChanged
    href: Mapsui.Layers.ILayer.html#Mapsui_Layers_ILayer_DataHasChanged
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mapsui.Layers.BaseLayer.ToString*
  commentId: Overload:Mapsui.Layers.BaseLayer.ToString
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_ToString
  name: ToString
  nameWithType: BaseLayer.ToString
  fullName: Mapsui.Layers.BaseLayer.ToString
- uid: Mapsui.Layers.BaseLayer.OnPropertyChanged*
  commentId: Overload:Mapsui.Layers.BaseLayer.OnPropertyChanged
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnPropertyChanged_System_String_
  name: OnPropertyChanged
  nameWithType: BaseLayer.OnPropertyChanged
  fullName: Mapsui.Layers.BaseLayer.OnPropertyChanged
- uid: Mapsui.Layers.BaseLayer.OnDataChanged*
  commentId: Overload:Mapsui.Layers.BaseLayer.OnDataChanged
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_OnDataChanged_Mapsui_Fetcher_DataChangedEventArgs_
  name: OnDataChanged
  nameWithType: BaseLayer.OnDataChanged
  fullName: Mapsui.Layers.BaseLayer.OnDataChanged
- uid: Mapsui.Fetcher.DataChangedEventArgs
  commentId: T:Mapsui.Fetcher.DataChangedEventArgs
  parent: Mapsui.Fetcher
  href: Mapsui.Fetcher.DataChangedEventArgs.html
  name: DataChangedEventArgs
  nameWithType: DataChangedEventArgs
  fullName: Mapsui.Fetcher.DataChangedEventArgs
- uid: Mapsui.Layers.BaseLayer.Dispose*
  commentId: Overload:Mapsui.Layers.BaseLayer.Dispose
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_Dispose_System_Boolean_
  name: Dispose
  nameWithType: BaseLayer.Dispose
  fullName: Mapsui.Layers.BaseLayer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Mapsui.Layers.BaseLayer.UpdateAnimations*
  commentId: Overload:Mapsui.Layers.BaseLayer.UpdateAnimations
  href: Mapsui.Layers.BaseLayer.html#Mapsui_Layers_BaseLayer_UpdateAnimations
  name: UpdateAnimations
  nameWithType: BaseLayer.UpdateAnimations
  fullName: Mapsui.Layers.BaseLayer.UpdateAnimations
- uid: Mapsui.Animations.IAnimatable.UpdateAnimations
  commentId: M:Mapsui.Animations.IAnimatable.UpdateAnimations
  parent: Mapsui.Animations.IAnimatable
  href: Mapsui.Animations.IAnimatable.html#Mapsui_Animations_IAnimatable_UpdateAnimations
  name: UpdateAnimations()
  nameWithType: IAnimatable.UpdateAnimations()
  fullName: Mapsui.Animations.IAnimatable.UpdateAnimations()
  spec.csharp:
  - uid: Mapsui.Animations.IAnimatable.UpdateAnimations
    name: UpdateAnimations
    href: Mapsui.Animations.IAnimatable.html#Mapsui_Animations_IAnimatable_UpdateAnimations
  - name: (
  - name: )
  spec.vb:
  - uid: Mapsui.Animations.IAnimatable.UpdateAnimations
    name: UpdateAnimations
    href: Mapsui.Animations.IAnimatable.html#Mapsui_Animations_IAnimatable_UpdateAnimations
  - name: (
  - name: )
