{
  "pages/Mapsui.Animations.Animation.html": {
    "href": "pages/Mapsui.Animations.Animation.html",
    "title": "Class Animation",
    "keywords": "Class Animation Inheritance object Animation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public static class Animation Methods | Edit this page View Source Start<T>(AnimationEntry<T>, long) List of all active animations Declaration public static void Start<T>(AnimationEntry<T> entry, long duration) Parameters Type Name Description AnimationEntry<T> entry AnimationEntry to start long duration Duration im ms for the given AnimationEntry Type Parameters Name Description T | Edit this page View Source Start<T>(IEnumerable<AnimationEntry<T>>, long) Start a list of AnimationEntrys Declaration public static void Start<T>(IEnumerable<AnimationEntry<T>> entries, long duration) Parameters Type Name Description IEnumerable<AnimationEntry<T>> entries List of AnimationEntry to start long duration Duration im ms for the given AnimationEntry Type Parameters Name Description T Remarks All AnimationEntries are started at the same time. | Edit this page View Source Stop<T>(T, AnimationEntry<T>, bool) Stop a given AnimationEntry Declaration public static AnimationResult<T> Stop<T>(T target, AnimationEntry<T> entry, bool callFinal = true) Parameters Type Name Description T target AnimationEntry<T> entry AnimationEntry to stop bool callFinal Final function is called, if callFinal is true Returns Type Description AnimationResult<T> Type Parameters Name Description T | Edit this page View Source Stop<T>(T, IEnumerable<AnimationEntry<T>>, bool) Stop all AnimationEntries in a given list Declaration public static void Stop<T>(T target, IEnumerable<AnimationEntry<T>> entries, bool callFinal = true) Parameters Type Name Description T target IEnumerable<AnimationEntry<T>> entries AnimationEntry to stop bool callFinal Final function is called, if callFinal is true Type Parameters Name Description T | Edit this page View Source UpdateAnimations<T>(T, IEnumerable<AnimationEntry<T>>) Update all AnimationEntrys and check, if a redraw is needed Declaration public static AnimationResult<T> UpdateAnimations<T>(T target, IEnumerable<AnimationEntry<T>> entries) Parameters Type Name Description T target IEnumerable<AnimationEntry<T>> entries Returns Type Description AnimationResult<T> True, if a redraw of the screen is needed Type Parameters Name Description T"
  },
  "pages/Mapsui.Animations.AnimationEntry-1.html": {
    "href": "pages/Mapsui.Animations.AnimationEntry-1.html",
    "title": "Class AnimationEntry<T>",
    "keywords": "Class AnimationEntry<T> Inheritance object AnimationEntry<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public class AnimationEntry<T> Type Parameters Name Description T Constructors | Edit this page View Source AnimationEntry(object, object, double, double, Easing?, bool, Func<T, AnimationEntry<T>, double, AnimationResult<T>>?, Func<T, AnimationEntry<T>, AnimationResult<T>>?) Declaration public AnimationEntry(object start, object end, double animationStart = 0, double animationEnd = 1, Easing? easing = null, bool repeat = false, Func<T, AnimationEntry<T>, double, AnimationResult<T>>? tick = null, Func<T, AnimationEntry<T>, AnimationResult<T>>? final = null) Parameters Type Name Description object start object end double animationStart double animationEnd Easing easing bool repeat Func<T, AnimationEntry<T>, double, AnimationResult<T>> tick Func<T, AnimationEntry<T>, AnimationResult<T>> final Properties | Edit this page View Source AnimationEnd When this animation ends in animation cycle. Value between 0 and 1. Declaration public double AnimationEnd { get; } Property Value Type Description double | Edit this page View Source AnimationStart When this animation starts in animation cycle. Value between 0 and 1. Declaration public double AnimationStart { get; } Property Value Type Description double | Edit this page View Source Easing Easing to use for this animation Declaration public Easing Easing { get; } Property Value Type Description Easing | Edit this page View Source End Object holding the end value Declaration public object End { get; } Property Value Type Description object | Edit this page View Source Repeat Is this a repeating animation that starts over and over again Declaration public bool Repeat { get; } Property Value Type Description bool | Edit this page View Source Start Object holding the starting value Declaration public object Start { get; } Property Value Type Description object Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.AnimationEventArgs.html": {
    "href": "pages/Mapsui.Animations.AnimationEventArgs.html",
    "title": "Class AnimationEventArgs",
    "keywords": "Class AnimationEventArgs Inheritance object AnimationEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public class AnimationEventArgs Constructors | Edit this page View Source AnimationEventArgs(double, ChangeType) Declaration public AnimationEventArgs(double value, ChangeType changeType) Parameters Type Name Description double value ChangeType changeType Properties | Edit this page View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Edit this page View Source Value Declaration public double Value { get; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.AnimationResult-1.html": {
    "href": "pages/Mapsui.Animations.AnimationResult-1.html",
    "title": "Struct AnimationResult<T>",
    "keywords": "Struct AnimationResult<T> Implements IEquatable<AnimationResult<T>> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public record struct AnimationResult<T> : IEquatable<AnimationResult<T>> Type Parameters Name Description T The type that the animation is changing over time. Constructors | Edit this page View Source AnimationResult(T, bool) Declaration public AnimationResult(T State, bool IsRunning) Parameters Type Name Description T State The state of the object that is animated after the current update. bool IsRunning Will be false if the animation is cancelled. Properties | Edit this page View Source IsRunning Will be false if the animation is cancelled. Declaration public bool IsRunning { readonly get; set; } Property Value Type Description bool | Edit this page View Source State The state of the object that is animated after the current update. Declaration public T State { readonly get; set; } Property Value Type Description T Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.Easing.html": {
    "href": "pages/Mapsui.Animations.Easing.html",
    "title": "Class Easing",
    "keywords": "Class Easing Inheritance object Easing Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public class Easing Constructors | Edit this page View Source Easing(Func<double, double>) Declaration public Easing(Func<double, double> easingFunc) Parameters Type Name Description Func<double, double> easingFunc Fields | Edit this page View Source BounceIn Declaration public static readonly Easing BounceIn Field Value Type Description Easing | Edit this page View Source BounceOut Declaration public static readonly Easing BounceOut Field Value Type Description Easing | Edit this page View Source CubicIn Declaration public static readonly Easing CubicIn Field Value Type Description Easing | Edit this page View Source CubicInOut Declaration public static readonly Easing CubicInOut Field Value Type Description Easing | Edit this page View Source CubicOut Declaration public static readonly Easing CubicOut Field Value Type Description Easing | Edit this page View Source Linear Declaration public static readonly Easing Linear Field Value Type Description Easing | Edit this page View Source QuarticIn Declaration public static readonly Easing QuarticIn Field Value Type Description Easing | Edit this page View Source QuarticOut Declaration public static readonly Easing QuarticOut Field Value Type Description Easing | Edit this page View Source SinIn Declaration public static readonly Easing SinIn Field Value Type Description Easing | Edit this page View Source SinInOut Declaration public static readonly Easing SinInOut Field Value Type Description Easing | Edit this page View Source SinOut Declaration public static readonly Easing SinOut Field Value Type Description Easing | Edit this page View Source SpringIn Declaration public static readonly Easing SpringIn Field Value Type Description Easing | Edit this page View Source SpringOut Declaration public static readonly Easing SpringOut Field Value Type Description Easing Methods | Edit this page View Source Ease(double) Declaration public double Ease(double v) Parameters Type Name Description double v Returns Type Description double Operators | Edit this page View Source implicit operator Easing(Func<double, double>) Declaration public static implicit operator Easing(Func<double, double> func) Parameters Type Name Description Func<double, double> func Returns Type Description Easing Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.FlingAnimation.html": {
    "href": "pages/Mapsui.Animations.FlingAnimation.html",
    "title": "Class FlingAnimation",
    "keywords": "Class FlingAnimation Inheritance object FlingAnimation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public static class FlingAnimation Methods | Edit this page View Source Create(double, double, long, Action) Declaration public static List<AnimationEntry<Viewport>> Create(double velocityX, double velocityY, long maxDuration, Action refreshData) Parameters Type Name Description double velocityX double velocityY long maxDuration Action refreshData Returns Type Description List<AnimationEntry<Viewport>>"
  },
  "pages/Mapsui.Animations.FlyToAnimation.html": {
    "href": "pages/Mapsui.Animations.FlyToAnimation.html",
    "title": "Class FlyToAnimation",
    "keywords": "Class FlyToAnimation Inheritance object FlyToAnimation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public class FlyToAnimation Methods | Edit this page View Source Create(Viewport, MPoint, double, long) Declaration public static List<AnimationEntry<Viewport>> Create(Viewport viewport, MPoint center, double maxResolution, long duration) Parameters Type Name Description Viewport viewport MPoint center double maxResolution long duration Returns Type Description List<AnimationEntry<Viewport>> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.IAnimatable.html": {
    "href": "pages/Mapsui.Animations.IAnimatable.html",
    "title": "Interface IAnimatable",
    "keywords": "Interface IAnimatable Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public interface IAnimatable Methods | Edit this page View Source UpdateAnimations() Declaration bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.MouseWheelAnimation.html": {
    "href": "pages/Mapsui.Animations.MouseWheelAnimation.html",
    "title": "Class MouseWheelAnimation",
    "keywords": "Class MouseWheelAnimation Inheritance object MouseWheelAnimation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Animations Assembly: Mapsui.dll Syntax public class MouseWheelAnimation Properties | Edit this page View Source Duration Declaration public int Duration { get; set; } Property Value Type Description int | Edit this page View Source Easing Declaration public Easing Easing { get; set; } Property Value Type Description Easing Methods | Edit this page View Source GetResolution(int, double, MMinMax?, IReadOnlyList<double>) Declaration public double GetResolution(int mouseWheelDelta, double currentResolution, MMinMax? zoomBounds, IReadOnlyList<double> resolutions) Parameters Type Name Description int mouseWheelDelta double currentResolution MMinMax zoomBounds IReadOnlyList<double> resolutions Returns Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Animations.html": {
    "href": "pages/Mapsui.Animations.html",
    "title": "Namespace Mapsui.Animations",
    "keywords": "Namespace Mapsui.Animations Classes Animation AnimationEntry<T> AnimationEventArgs Easing FlingAnimation FlyToAnimation MouseWheelAnimation Structs AnimationResult<T> Interfaces IAnimatable"
  },
  "pages/Mapsui.ArcGIS.ArcGISContext.html": {
    "href": "pages/Mapsui.ArcGIS.ArcGISContext.html",
    "title": "Class ArcGISContext",
    "keywords": "Class ArcGISContext Inheritance object JsonSerializerContext ArcGISContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax [JsonSourceGenerationOptions(PropertyNameCaseInsensitive = true, UnmappedMemberHandling = JsonUnmappedMemberHandling.Skip, NumberHandling = JsonNumberHandling.AllowReadingFromString|JsonNumberHandling.AllowNamedFloatingPointLiterals, ReadCommentHandling = JsonCommentHandling.Skip, AllowTrailingCommas = true)] [JsonSerializable(typeof(ArcGISFeatureInfo))] [JsonSerializable(typeof(ArcGISLegendResponse))] [JsonSerializable(typeof(ArcGISDynamicCapabilities))] [JsonSerializable(typeof(ArcGISImageCapabilities))] public class ArcGISContext : JsonSerializerContext, IJsonTypeInfoResolver Constructors ArcGISContext() Declaration public ArcGISContext() ArcGISContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. Declaration public ArcGISContext(JsonSerializerOptions options) Parameters Type Name Description JsonSerializerOptions options The run time provided options for the context instance. Properties ArcGISDynamicCapabilities Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISDynamicCapabilities> ArcGISDynamicCapabilities { get; } Property Value Type Description JsonTypeInfo<ArcGISDynamicCapabilities> ArcGISFeatureInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISFeatureInfo> ArcGISFeatureInfo { get; } Property Value Type Description JsonTypeInfo<ArcGISFeatureInfo> ArcGISImageCapabilities Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISImageCapabilities> ArcGISImageCapabilities { get; } Property Value Type Description JsonTypeInfo<ArcGISImageCapabilities> ArcGISLayer Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLayer> ArcGISLayer { get; } Property Value Type Description JsonTypeInfo<ArcGISLayer> ArcGISLayerArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLayer[]> ArcGISLayerArray { get; } Property Value Type Description JsonTypeInfo<ArcGISLayer[]> ArcGISLegendResponse Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLegendResponse> ArcGISLegendResponse { get; } Property Value Type Description JsonTypeInfo<ArcGISLegendResponse> ArcGISLegendResponseLayer Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLegendResponseLayer> ArcGISLegendResponseLayer { get; } Property Value Type Description JsonTypeInfo<ArcGISLegendResponseLayer> ArcGISLegendResponseLayerArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLegendResponseLayer[]> ArcGISLegendResponseLayerArray { get; } Property Value Type Description JsonTypeInfo<ArcGISLegendResponseLayer[]> ArcGISLegendResponseLegend Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLegendResponseLegend> ArcGISLegendResponseLegend { get; } Property Value Type Description JsonTypeInfo<ArcGISLegendResponseLegend> ArcGISLegendResponseLegendArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<ArcGISLegendResponseLegend[]> ArcGISLegendResponseLegendArray { get; } Property Value Type Description JsonTypeInfo<ArcGISLegendResponseLegend[]> Boolean Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<bool> Boolean { get; } Property Value Type Description JsonTypeInfo<bool> DateTime Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DateTime> DateTime { get; } Property Value Type Description JsonTypeInfo<DateTime> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. Declaration public static ArcGISContext Default { get; } Property Value Type Description ArcGISContext DictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Dictionary<string, string>> DictionaryStringString { get; } Property Value Type Description JsonTypeInfo<Dictionary<string, string>> Domain Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Domain> Domain { get; } Property Value Type Description JsonTypeInfo<Domain> Double Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<double> Double { get; } Property Value Type Description JsonTypeInfo<double> DoubleArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<double[]> DoubleArray { get; } Property Value Type Description JsonTypeInfo<double[]> EditFieldsInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<EditFieldsInfo> EditFieldsInfo { get; } Property Value Type Description JsonTypeInfo<EditFieldsInfo> Extent Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Extent> Extent { get; } Property Value Type Description JsonTypeInfo<Extent> Field Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Field> Field { get; } Property Value Type Description JsonTypeInfo<Field> FieldArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Field[]> FieldArray { get; } Property Value Type Description JsonTypeInfo<Field[]> GeneratedSerializerOptions The source-generated options associated with this context. Declaration protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value Type Description JsonSerializerOptions Overrides JsonSerializerContext.GeneratedSerializerOptions IDictionaryStringString Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<IDictionary<string, string>> IDictionaryStringString { get; } Property Value Type Description JsonTypeInfo<IDictionary<string, string>> Int32 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<int> Int32 { get; } Property Value Type Description JsonTypeInfo<int> Int32Array Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<int[]> Int32Array { get; } Property Value Type Description JsonTypeInfo<int[]> Int64 Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<long> Int64 { get; } Property Value Type Description JsonTypeInfo<long> Int64Array Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<long[]> Int64Array { get; } Property Value Type Description JsonTypeInfo<long[]> InterpolationType Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<InterpolationType> InterpolationType { get; } Property Value Type Description JsonTypeInfo<InterpolationType> Lod Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TileInfo.Lod> Lod { get; } Property Value Type Description JsonTypeInfo<TileInfo.Lod> LodArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TileInfo.Lod[]> LodArray { get; } Property Value Type Description JsonTypeInfo<TileInfo.Lod[]> NullableDateTime Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<DateTime?> NullableDateTime { get; } Property Value Type Description JsonTypeInfo<DateTime?> NullableDouble Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<double?> NullableDouble { get; } Property Value Type Description JsonTypeInfo<double?> Origin Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TileInfo.Origin> Origin { get; } Property Value Type Description JsonTypeInfo<TileInfo.Origin> OwnershipBasedAccessControlForRasters Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<OwnershipBasedAccessControlForRasters> OwnershipBasedAccessControlForRasters { get; } Property Value Type Description JsonTypeInfo<OwnershipBasedAccessControlForRasters> RasterFunctionInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<RasterFunctionInfo> RasterFunctionInfo { get; } Property Value Type Description JsonTypeInfo<RasterFunctionInfo> RasterFunctionInfoArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<RasterFunctionInfo[]> RasterFunctionInfoArray { get; } Property Value Type Description JsonTypeInfo<RasterFunctionInfo[]> RasterTypeInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<RasterTypeInfo> RasterTypeInfo { get; } Property Value Type Description JsonTypeInfo<RasterTypeInfo> RasterTypeInfoArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<RasterTypeInfo[]> RasterTypeInfoArray { get; } Property Value Type Description JsonTypeInfo<RasterTypeInfo[]> Result Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Result> Result { get; } Property Value Type Description JsonTypeInfo<Result> ResultArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Result[]> ResultArray { get; } Property Value Type Description JsonTypeInfo<Result[]> SpatialReference Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<SpatialReference> SpatialReference { get; } Property Value Type Description JsonTypeInfo<SpatialReference> String Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<string> String { get; } Property Value Type Description JsonTypeInfo<string> Table Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Table> Table { get; } Property Value Type Description JsonTypeInfo<Table> TableArray Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<Table[]> TableArray { get; } Property Value Type Description JsonTypeInfo<Table[]> TileInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TileInfo> TileInfo { get; } Property Value Type Description JsonTypeInfo<TileInfo> TimeInfo Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TimeInfo> TimeInfo { get; } Property Value Type Description JsonTypeInfo<TimeInfo> TimeReference Defines the source generated JSON serialization contract metadata for a given type. Declaration public JsonTypeInfo<TimeReference> TimeReference { get; } Property Value Type Description JsonTypeInfo<TimeReference> Methods GetTypeInfo(Type) Gets metadata for the specified type. Declaration public override JsonTypeInfo? GetTypeInfo(Type type) Parameters Type Name Description Type type The type to fetch metadata for. Returns Type Description JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type. Overrides JsonSerializerContext.GetTypeInfo(Type) Implements IJsonTypeInfoResolver Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.CapabilitiesHelper.StatusEventHandler.html": {
    "href": "pages/Mapsui.ArcGIS.CapabilitiesHelper.StatusEventHandler.html",
    "title": "Delegate CapabilitiesHelper.StatusEventHandler",
    "keywords": "Delegate CapabilitiesHelper.StatusEventHandler Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public delegate void CapabilitiesHelper.StatusEventHandler(object? sender, EventArgs e) Parameters Type Name Description object sender EventArgs e Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.CapabilitiesHelper.html": {
    "href": "pages/Mapsui.ArcGIS.CapabilitiesHelper.html",
    "title": "Class CapabilitiesHelper",
    "keywords": "Class CapabilitiesHelper Inheritance object CapabilitiesHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class CapabilitiesHelper Constructors | Edit this page View Source CapabilitiesHelper(IUrlPersistentCache?) Helper class for getting capabilities of an ArcGIS service + extras Declaration public CapabilitiesHelper(IUrlPersistentCache? persistentCache) Parameters Type Name Description IUrlPersistentCache persistentCache Properties | Edit this page View Source TimeOut Timeout of webrequest in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int Methods | Edit this page View Source GetCapabilities(string, CapabilitiesType) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType) Parameters Type Name Description string url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType | Edit this page View Source GetCapabilities(string, CapabilitiesType, ICredentials) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, ICredentials credentials) Parameters Type Name Description string url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType ICredentials credentials Credentials to access the service | Edit this page View Source GetCapabilities(string, CapabilitiesType, string?) Get the capabilities of an ArcGIS Map Service Declaration public void GetCapabilities(string url, CapabilitiesType capabilitiesType, string? token) Parameters Type Name Description string url Url of map service example: http://url/arcgis/rest/services/test/MapServer CapabilitiesType capabilitiesType string token Token string to access the service | Edit this page View Source GetTileSchema(ArcGISDynamicCapabilities) Generate BruTile TileSchema based on ArcGIS Capabilities Declaration public static ITileSchema? GetTileSchema(ArcGISDynamicCapabilities arcGisDynamicCapabilities) Parameters Type Name Description ArcGISDynamicCapabilities arcGisDynamicCapabilities Returns Type Description ITileSchema TileSchema, returns null if service is not tiled | Edit this page View Source OnCapabilitiesFailed(EventArgs) Declaration protected virtual void OnCapabilitiesFailed(EventArgs e) Parameters Type Name Description EventArgs e | Edit this page View Source OnFinished(EventArgs) Declaration protected virtual void OnFinished(EventArgs e) Parameters Type Name Description EventArgs e Events | Edit this page View Source CapabilitiesFailed Triggered when failed parsing or getting capabilities Declaration public event CapabilitiesHelper.StatusEventHandler? CapabilitiesFailed Event Type Type Description CapabilitiesHelper.StatusEventHandler | Edit this page View Source CapabilitiesReceived Triggered when finished parsing capabilities, returns Capabilities object Declaration public event CapabilitiesHelper.StatusEventHandler? CapabilitiesReceived Event Type Type Description CapabilitiesHelper.StatusEventHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.CapabilitiesType.html": {
    "href": "pages/Mapsui.ArcGIS.CapabilitiesType.html",
    "title": "Enum CapabilitiesType",
    "keywords": "Enum CapabilitiesType Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public enum CapabilitiesType Fields Name Description DynamicServiceCapabilities ImageServiceCapabilities Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicCapabilities.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicCapabilities.html",
    "title": "Class ArcGISDynamicCapabilities",
    "keywords": "Class ArcGISDynamicCapabilities Inheritance object ArcGISDynamicCapabilities Implements IArcGISCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISDynamicCapabilities : IArcGISCapabilities Fields | Edit this page View Source tables Declaration public Table[]? tables Field Value Type Description Table[] Properties | Edit this page View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description string | Edit this page View Source capabilities Declaration public string? capabilities { get; set; } Property Value Type Description string | Edit this page View Source copyrightText Declaration public string? copyrightText { get; set; } Property Value Type Description string | Edit this page View Source currentVersion Declaration public double? currentVersion { get; set; } Property Value Type Description double? | Edit this page View Source description Declaration public string? description { get; set; } Property Value Type Description string | Edit this page View Source documentInfo Declaration public IDictionary<string, string>? documentInfo { get; set; } Property Value Type Description IDictionary<string, string> | Edit this page View Source fullExtent Declaration public Extent? fullExtent { get; set; } Property Value Type Description Extent | Edit this page View Source initialExtent Declaration public Extent? initialExtent { get; set; } Property Value Type Description Extent | Edit this page View Source layers Declaration public ArcGISLayer[]? layers { get; set; } Property Value Type Description ArcGISLayer[] | Edit this page View Source mapName Declaration public string? mapName { get; set; } Property Value Type Description string | Edit this page View Source serviceDescription Declaration public string? serviceDescription { get; set; } Property Value Type Description string | Edit this page View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description bool | Edit this page View Source spatialReference Declaration public SpatialReference? spatialReference { get; set; } Property Value Type Description SpatialReference | Edit this page View Source supportedImageFormatTypes Declaration public string? supportedImageFormatTypes { get; set; } Property Value Type Description string | Edit this page View Source tileInfo Declaration public TileInfo? tileInfo { get; set; } Property Value Type Description TileInfo | Edit this page View Source units Declaration public string? units { get; set; } Property Value Type Description string Methods | Edit this page View Source GetSupportedImageFormatTypes() Declaration public string[]? GetSupportedImageFormatTypes() Returns Type Description string[] Implements IArcGISCapabilities Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicProvider.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISDynamicProvider.html",
    "title": "Class ArcGISDynamicProvider",
    "keywords": "Class ArcGISDynamicProvider Inheritance object ArcGISDynamicProvider Implements IProjectingProvider IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISDynamicProvider : IProjectingProvider, IProvider Constructors | Edit this page View Source ArcGISDynamicProvider(string, ArcGISDynamicCapabilities, string?, IUrlPersistentCache?) Create ArcGisDynamicProvider based on a given capabilities file Declaration public ArcGISDynamicProvider(string url, ArcGISDynamicCapabilities arcGisDynamicCapabilities, string? token = null, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description string url url to map service example: http://url/arcgis/rest/services/test/MapServer ArcGISDynamicCapabilities arcGisDynamicCapabilities string token token to request service IUrlPersistentCache persistentCache | Edit this page View Source ArcGISDynamicProvider(string, string?, IUrlPersistentCache?) Create ArcGisDynamicProvider, capabilities will be parsed automatically Declaration public ArcGISDynamicProvider(string url, string? token = null, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description string url url to map service example: http://url/arcgis/rest/services/test/MapServer string token token to request service IUrlPersistentCache persistentCache persistent cache Properties | Edit this page View Source ArcGisDynamicCapabilities Declaration public ArcGISDynamicCapabilities ArcGisDynamicCapabilities { get; } Property Value Type Description ArcGISDynamicCapabilities | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Credentials Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source TimeOut Timeout of web request in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int | Edit this page View Source Token Declaration public string? Token { get; set; } Property Value Type Description string | Edit this page View Source Url Declaration public string Url { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source GetRequestUrl(MRect?, int, int) Gets the URL for a map export request base on current settings, the image size and boundingBox Declaration public string GetRequestUrl(MRect? box, int width, int height) Parameters Type Name Description MRect box Area the request should cover int width int height Returns Type Description string URL for ArcGIS Dynamic request | Edit this page View Source IsCrsSupported(string) Queries whether a provider supports projection to a certain CRS. Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description string crs The crs to project to Returns Type Description bool? True if is does, false if it does not, null if it is unknown | Edit this page View Source TryGetMapAsync(MSection) Retrieves the bitmap from ArcGIS Dynamic service Declaration public Task<(bool Success, MRaster? Raster)> TryGetMapAsync(MSection section) Parameters Type Name Description MSection section Returns Type Description Task<(bool Success, MRaster)> Implements IProjectingProvider IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISFeatureInfo.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISFeatureInfo.html",
    "title": "Class ArcGISFeatureInfo",
    "keywords": "Class ArcGISFeatureInfo Inheritance object ArcGISFeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISFeatureInfo Properties | Edit this page View Source results Declaration public Result[]? results { get; set; } Property Value Type Description Result[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISIdentify.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISIdentify.html",
    "title": "Class ArcGISIdentify",
    "keywords": "Class ArcGISIdentify Inheritance object ArcGISIdentify Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISIdentify Constructors | Edit this page View Source ArcGISIdentify() Declaration public ArcGISIdentify() Properties | Edit this page View Source TimeOut Timeout of webRequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int Methods | Edit this page View Source Request(string, double, double, int, string[], double, double, double, double, double, double, double, bool, ICredentials?, int) Request a ArcGIS Service for FeatureInfo Declaration public void Request(string url, double x, double y, int tolerance, string[] layers, double extendXmin, double extendYmin, double extendXmax, double extendYmax, double mapWidth, double mapHeight, double mapDpi, bool returnGeometry, ICredentials? credentials = null, int sr = -2147483648) Parameters Type Name Description string url Mapserver url double x x coordinate double y y coordinate int tolerance The distance in screen pixels from the specified geometry within which the identify should be performed string[] layers The layers to perform the identify operation on double extendXmin The extent or bounding box of the map currently being viewed. double extendYmin The extent or bounding box of the map currently being viewed. double extendXmax The extent or bounding box of the map currently being viewed. double extendYmax The extent or bounding box of the map currently being viewed. double mapWidth The screen image display width double mapHeight The screen image display height double mapDpi The screen image display dpi, default is: 96 bool returnGeometry ICredentials credentials int sr sr code of input geometry Events | Edit this page View Source IdentifyFailed Declaration public event StatusEventHandler? IdentifyFailed Event Type Type Description StatusEventHandler | Edit this page View Source IdentifyFinished Declaration public event StatusEventHandler? IdentifyFinished Event Type Type Description StatusEventHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLayer.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLayer.html",
    "title": "Class ArcGISLayer",
    "keywords": "Class ArcGISLayer Inheritance object ArcGISLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISLayer Properties | Edit this page View Source defaultVisibility Declaration public bool defaultVisibility { get; set; } Property Value Type Description bool | Edit this page View Source id Declaration public int id { get; set; } Property Value Type Description int | Edit this page View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description double | Edit this page View Source minScale Declaration public double minScale { get; set; } Property Value Type Description double | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string | Edit this page View Source parentLayerId Declaration public int parentLayerId { get; set; } Property Value Type Description int | Edit this page View Source subLayerIds Declaration public int[]? subLayerIds { get; set; } Property Value Type Description int[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendEventHandler.html",
    "title": "Delegate ArcGISLegendEventHandler",
    "keywords": "Delegate ArcGISLegendEventHandler Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public delegate void ArcGISLegendEventHandler(object sender, ArcGISLegendResponse? legendInfo) Parameters Type Name Description object sender ArcGISLegendResponse legendInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponse.html",
    "title": "Class ArcGISLegendResponse",
    "keywords": "Class ArcGISLegendResponse Inheritance object ArcGISLegendResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponse Properties | Edit this page View Source layers Declaration public ArcGISLegendResponseLayer[]? layers { get; set; } Property Value Type Description ArcGISLegendResponseLayer[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLayer.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLayer.html",
    "title": "Class ArcGISLegendResponseLayer",
    "keywords": "Class ArcGISLegendResponseLayer Inheritance object ArcGISLegendResponseLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponseLayer Properties | Edit this page View Source layerId Declaration public int layerId { get; set; } Property Value Type Description int | Edit this page View Source layerName Declaration public string? layerName { get; set; } Property Value Type Description string | Edit this page View Source layerType Declaration public string? layerType { get; set; } Property Value Type Description string | Edit this page View Source legend Declaration public ArcGISLegendResponseLegend[]? legend { get; set; } Property Value Type Description ArcGISLegendResponseLegend[] | Edit this page View Source maxScale Declaration public int maxScale { get; set; } Property Value Type Description int | Edit this page View Source minScale Declaration public int minScale { get; set; } Property Value Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLegend.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGISLegendResponseLegend.html",
    "title": "Class ArcGISLegendResponseLegend",
    "keywords": "Class ArcGISLegendResponseLegend Inheritance object ArcGISLegendResponseLegend Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISLegendResponseLegend Properties | Edit this page View Source contentType Declaration public string? contentType { get; set; } Property Value Type Description string | Edit this page View Source imageData Declaration public string? imageData { get; set; } Property Value Type Description string | Edit this page View Source label Declaration public string? label { get; set; } Property Value Type Description string | Edit this page View Source url Declaration public string? url { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.ArcGisLegend.html",
    "title": "Class ArcGisLegend",
    "keywords": "Class ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up Inheritance object ArcGisLegend Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGisLegend Constructors | Edit this page View Source ArcGisLegend(IUrlPersistentCache?) Declaration public ArcGisLegend(IUrlPersistentCache? urlPersistentCache = null) Parameters Type Name Description IUrlPersistentCache urlPersistentCache Properties | Edit this page View Source TimeOut Timeout of webrequest in milliseconds. Default is 5 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int Methods | Edit this page View Source GetLegendInfoAsync(string, ICredentials?) Declaration public Task<ArcGISLegendResponse?> GetLegendInfoAsync(string serviceUrl, ICredentials? credentials = null) Parameters Type Name Description string serviceUrl ICredentials credentials Returns Type Description Task<ArcGISLegendResponse> | Edit this page View Source GetLegendInfoRequest(string, ICredentials?) Get the legend for the given mapserver Declaration public void GetLegendInfoRequest(string serviceUrl, ICredentials? credentials = null) Parameters Type Name Description string serviceUrl Url to the mapserver ICredentials credentials Credentials Events | Edit this page View Source LegendFailed Declaration public event ArcGISLegendEventHandler? LegendFailed Event Type Type Description ArcGISLegendEventHandler | Edit this page View Source LegendReceived Declaration public event ArcGISLegendEventHandler? LegendReceived Event Type Type Description ArcGISLegendEventHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.Result.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.Result.html",
    "title": "Class Result",
    "keywords": "Class Result Inheritance object Result Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public class Result Properties | Edit this page View Source attributes Declaration public Dictionary<string, string>? attributes { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source displayFieldName Declaration public string? displayFieldName { get; set; } Property Value Type Description string | Edit this page View Source geometryType Declaration public string? geometryType { get; set; } Property Value Type Description string | Edit this page View Source layerId Declaration public string? layerId { get; set; } Property Value Type Description string | Edit this page View Source layerName Declaration public string? layerName { get; set; } Property Value Type Description string | Edit this page View Source value Declaration public string? value { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.StatusEventHandler.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace: Mapsui.ArcGIS.DynamicProvider Assembly: Mapsui.ArcGIS.dll Syntax public delegate void StatusEventHandler(object sender, ArcGISFeatureInfo? featureInfo) Parameters Type Name Description object sender ArcGISFeatureInfo featureInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.DynamicProvider.html": {
    "href": "pages/Mapsui.ArcGIS.DynamicProvider.html",
    "title": "Namespace Mapsui.ArcGIS.DynamicProvider",
    "keywords": "Namespace Mapsui.ArcGIS.DynamicProvider Classes ArcGISDynamicCapabilities ArcGISDynamicProvider ArcGISFeatureInfo ArcGISIdentify ArcGISLayer ArcGISLegendResponse ArcGISLegendResponseLayer ArcGISLegendResponseLegend ArcGisLegend ArcGislegend for getting the layer legends for ArcGIS layers only supports ArcGISserver 10.0 and up Result Delegates ArcGISLegendEventHandler StatusEventHandler"
  },
  "pages/Mapsui.ArcGIS.Extensions.ExtentExtensions.html": {
    "href": "pages/Mapsui.ArcGIS.Extensions.ExtentExtensions.html",
    "title": "Class ExtentExtensions",
    "keywords": "Class ExtentExtensions Inheritance object ExtentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.Extensions Assembly: Mapsui.ArcGIS.dll Syntax public static class ExtentExtensions Methods | Edit this page View Source ToMRect(Extent?) Declaration public static MRect? ToMRect(this Extent? extent) Parameters Type Name Description Extent extent Returns Type Description MRect"
  },
  "pages/Mapsui.ArcGIS.Extensions.html": {
    "href": "pages/Mapsui.ArcGIS.Extensions.html",
    "title": "Namespace Mapsui.ArcGIS.Extensions",
    "keywords": "Namespace Mapsui.ArcGIS.Extensions Classes ExtentExtensions"
  },
  "pages/Mapsui.ArcGIS.Extent.html": {
    "href": "pages/Mapsui.ArcGIS.Extent.html",
    "title": "Class Extent",
    "keywords": "Class Extent Inheritance object Extent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class Extent Properties | Edit this page View Source spatialReference Declaration public SpatialReference? spatialReference { get; set; } Property Value Type Description SpatialReference | Edit this page View Source xmax Declaration public double xmax { get; set; } Property Value Type Description double | Edit this page View Source xmin Declaration public double xmin { get; set; } Property Value Type Description double | Edit this page View Source ymax Declaration public double ymax { get; set; } Property Value Type Description double | Edit this page View Source ymin Declaration public double ymin { get; set; } Property Value Type Description double Extension Methods ExtentExtensions.ToMRect(Extent?) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.IArcGISCapabilities.html": {
    "href": "pages/Mapsui.ArcGIS.IArcGISCapabilities.html",
    "title": "Interface IArcGISCapabilities",
    "keywords": "Interface IArcGISCapabilities Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public interface IArcGISCapabilities Properties | Edit this page View Source ServiceUrl Declaration string ServiceUrl { get; set; } Property Value Type Description string | Edit this page View Source capabilities Declaration string? capabilities { get; set; } Property Value Type Description string | Edit this page View Source copyrightText Declaration string? copyrightText { get; set; } Property Value Type Description string | Edit this page View Source currentVersion Declaration double? currentVersion { get; set; } Property Value Type Description double? | Edit this page View Source description Declaration string? description { get; set; } Property Value Type Description string | Edit this page View Source fullExtent Declaration Extent? fullExtent { get; set; } Property Value Type Description Extent | Edit this page View Source initialExtent Declaration Extent? initialExtent { get; set; } Property Value Type Description Extent | Edit this page View Source serviceDescription Declaration string? serviceDescription { get; set; } Property Value Type Description string | Edit this page View Source singleFusedMapCache Declaration bool singleFusedMapCache { get; set; } Property Value Type Description bool | Edit this page View Source tileInfo Declaration TileInfo? tileInfo { get; set; } Property Value Type Description TileInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageCapabilities.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageCapabilities.html",
    "title": "Class ArcGISImageCapabilities",
    "keywords": "Class ArcGISImageCapabilities Inheritance object ArcGISImageCapabilities Implements IArcGISCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISImageCapabilities : IArcGISCapabilities Constructors | Edit this page View Source ArcGISImageCapabilities() Declaration public ArcGISImageCapabilities() | Edit this page View Source ArcGISImageCapabilities(string, long, long, string, InterpolationType) Declaration public ArcGISImageCapabilities(string url, long startTime = -1, long endTime = -1, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor) Parameters Type Name Description string url long startTime long endTime string format InterpolationType interpolation Properties | Edit this page View Source EndTime Declaration public long EndTime { get; set; } Property Value Type Description long | Edit this page View Source Format Declaration public string Format { get; set; } Property Value Type Description string | Edit this page View Source Interpolation Declaration public InterpolationType Interpolation { get; set; } Property Value Type Description InterpolationType | Edit this page View Source ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description string | Edit this page View Source StartTime Declaration public long StartTime { get; set; } Property Value Type Description long | Edit this page View Source allowComputeTiePoints Declaration public bool allowComputeTiePoints { get; set; } Property Value Type Description bool | Edit this page View Source allowRasterFunction Declaration public bool allowRasterFunction { get; set; } Property Value Type Description bool | Edit this page View Source allowedMosaicMethods Declaration public string? allowedMosaicMethods { get; set; } Property Value Type Description string | Edit this page View Source bandCount Declaration public int bandCount { get; set; } Property Value Type Description int | Edit this page View Source cacheDirectory Declaration public string? cacheDirectory { get; set; } Property Value Type Description string | Edit this page View Source capabilities Declaration public string? capabilities { get; set; } Property Value Type Description string | Edit this page View Source copyrightText Declaration public string? copyrightText { get; set; } Property Value Type Description string | Edit this page View Source currentVersion Declaration public double? currentVersion { get; set; } Property Value Type Description double? | Edit this page View Source defaultCompressionQuality Declaration public double? defaultCompressionQuality { get; set; } Property Value Type Description double? | Edit this page View Source defaultMosaicMethod Declaration public string? defaultMosaicMethod { get; set; } Property Value Type Description string | Edit this page View Source defaultResamplingMethod Declaration public string? defaultResamplingMethod { get; set; } Property Value Type Description string | Edit this page View Source description Declaration public string? description { get; set; } Property Value Type Description string | Edit this page View Source editFieldsInfo Declaration public EditFieldsInfo? editFieldsInfo { get; set; } Property Value Type Description EditFieldsInfo | Edit this page View Source fields Declaration public Field[]? fields { get; set; } Property Value Type Description Field[] | Edit this page View Source fullExtent Declaration public Extent? fullExtent { get; set; } Property Value Type Description Extent | Edit this page View Source hasColormap Declaration public bool hasColormap { get; set; } Property Value Type Description bool | Edit this page View Source hasHistograms Declaration public bool hasHistograms { get; set; } Property Value Type Description bool | Edit this page View Source hasRasterAttributeTable Declaration public bool hasRasterAttributeTable { get; set; } Property Value Type Description bool | Edit this page View Source initialExtent Declaration public Extent? initialExtent { get; set; } Property Value Type Description Extent | Edit this page View Source maxDownloadImageCount Declaration public double maxDownloadImageCount { get; set; } Property Value Type Description double | Edit this page View Source maxDownloadSizeLimit Declaration public double maxDownloadSizeLimit { get; set; } Property Value Type Description double | Edit this page View Source maxImageHeight Declaration public double maxImageHeight { get; set; } Property Value Type Description double | Edit this page View Source maxImageWidth Declaration public double maxImageWidth { get; set; } Property Value Type Description double | Edit this page View Source maxMosaicImageCount Declaration public double maxMosaicImageCount { get; set; } Property Value Type Description double | Edit this page View Source maxPixelSize Declaration public double maxPixelSize { get; set; } Property Value Type Description double | Edit this page View Source maxRecordCount Declaration public double maxRecordCount { get; set; } Property Value Type Description double | Edit this page View Source maxScale Declaration public double maxScale { get; set; } Property Value Type Description double | Edit this page View Source maxValues Declaration public double[]? maxValues { get; set; } Property Value Type Description double[] | Edit this page View Source mensurationCapabilities Declaration public string? mensurationCapabilities { get; set; } Property Value Type Description string | Edit this page View Source minPixelSize Declaration public double minPixelSize { get; set; } Property Value Type Description double | Edit this page View Source minScale Declaration public double minScale { get; set; } Property Value Type Description double | Edit this page View Source minValues Declaration public double[]? minValues { get; set; } Property Value Type Description double[] | Edit this page View Source mosaicOperator Declaration public string? mosaicOperator { get; set; } Property Value Type Description string | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string | Edit this page View Source objectIdField Declaration public string? objectIdField { get; set; } Property Value Type Description string | Edit this page View Source ownershipBasedAccessControlForRasters Declaration public OwnershipBasedAccessControlForRasters? ownershipBasedAccessControlForRasters { get; set; } Property Value Type Description OwnershipBasedAccessControlForRasters | Edit this page View Source pixelSizeX Declaration public double pixelSizeX { get; set; } Property Value Type Description double | Edit this page View Source pixelSizeY Declaration public double pixelSizeY { get; set; } Property Value Type Description double | Edit this page View Source pixelType Declaration public string? pixelType { get; set; } Property Value Type Description string | Edit this page View Source rasterFunctionInfos Declaration public RasterFunctionInfo[]? rasterFunctionInfos { get; set; } Property Value Type Description RasterFunctionInfo[] | Edit this page View Source rasterTypeInfos Declaration public RasterTypeInfo[]? rasterTypeInfos { get; set; } Property Value Type Description RasterTypeInfo[] | Edit this page View Source serviceDataType Declaration public string? serviceDataType { get; set; } Property Value Type Description string | Edit this page View Source serviceDescription Declaration public string? serviceDescription { get; set; } Property Value Type Description string | Edit this page View Source singleFusedMapCache Declaration public bool singleFusedMapCache { get; set; } Property Value Type Description bool | Edit this page View Source sortField Declaration public string? sortField { get; set; } Property Value Type Description string | Edit this page View Source sortValue Declaration public string? sortValue { get; set; } Property Value Type Description string | Edit this page View Source spatialReference Declaration public SpatialReference? spatialReference { get; set; } Property Value Type Description SpatialReference | Edit this page View Source stdvValues Declaration public double[]? stdvValues { get; set; } Property Value Type Description double[] | Edit this page View Source supportsAdvancedQueries Declaration public bool supportsAdvancedQueries { get; set; } Property Value Type Description bool | Edit this page View Source supportsStatistics Declaration public bool supportsStatistics { get; set; } Property Value Type Description bool | Edit this page View Source tileInfo Declaration public TileInfo? tileInfo { get; set; } Property Value Type Description TileInfo | Edit this page View Source timeInfo Declaration public TimeInfo? timeInfo { get; set; } Property Value Type Description TimeInfo | Edit this page View Source useStandardizedQueries Declaration public bool useStandardizedQueries { get; set; } Property Value Type Description bool Implements IArcGISCapabilities Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageServiceProvider.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.ArcGISImageServiceProvider.html",
    "title": "Class ArcGISImageServiceProvider",
    "keywords": "Class ArcGISImageServiceProvider Inheritance object ArcGISImageServiceProvider Implements IProjectingProvider IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class ArcGISImageServiceProvider : IProjectingProvider, IProvider Constructors | Edit this page View Source ArcGISImageServiceProvider(ArcGISImageCapabilities, bool, string?, IUrlPersistentCache?) Declaration public ArcGISImageServiceProvider(ArcGISImageCapabilities capabilities, bool continueOnError = true, string? token = null, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description ArcGISImageCapabilities capabilities bool continueOnError string token IUrlPersistentCache persistentCache | Edit this page View Source ArcGISImageServiceProvider(string, bool, string, InterpolationType, long, long, string?, IUrlPersistentCache?) Declaration public ArcGISImageServiceProvider(string url, bool continueOnError = false, string format = \"jpgpng\", InterpolationType interpolation = InterpolationType.RSP_NearestNeighbor, long startTime = -1, long endTime = -1, string? token = null, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description string url bool continueOnError string format InterpolationType interpolation long startTime long endTime string token IUrlPersistentCache persistentCache Properties | Edit this page View Source ArcGisImageCapabilities Declaration public ArcGISImageCapabilities ArcGisImageCapabilities { get; } Property Value Type Description ArcGISImageCapabilities | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source ContinueOnError Declaration public bool ContinueOnError { get; set; } Property Value Type Description bool | Edit this page View Source Credentials Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source TimeOut Timeout of request in milliseconds. Default is 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int | Edit this page View Source Token Declaration public string? Token { get; set; } Property Value Type Description string | Edit this page View Source Url Declaration public string Url { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source IsCrsSupported(string) Queries whether a provider supports projection to a certain CRS. Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description string crs The crs to project to Returns Type Description bool? True if is does, false if it does not, null if it is unknown | Edit this page View Source TryGetMapAsync(MSection) Declaration public Task<(bool Success, MRaster? Raster)> TryGetMapAsync(MSection section) Parameters Type Name Description MSection section Returns Type Description Task<(bool Success, MRaster)> Implements IProjectingProvider IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.Domain.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.Domain.html",
    "title": "Class Domain",
    "keywords": "Class Domain Inheritance object Domain Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class Domain Properties | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.EditFieldsInfo.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.EditFieldsInfo.html",
    "title": "Class EditFieldsInfo",
    "keywords": "Class EditFieldsInfo Inheritance object EditFieldsInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class EditFieldsInfo Properties | Edit this page View Source creationDateField Declaration public string? creationDateField { get; set; } Property Value Type Description string | Edit this page View Source creatorField Declaration public string? creatorField { get; set; } Property Value Type Description string | Edit this page View Source editDateField Declaration public string? editDateField { get; set; } Property Value Type Description string | Edit this page View Source editorField Declaration public string? editorField { get; set; } Property Value Type Description string | Edit this page View Source realm Declaration public string? realm { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.Field.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.Field.html",
    "title": "Class Field",
    "keywords": "Class Field Inheritance object Field Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class Field Properties | Edit this page View Source alias Declaration public string? alias { get; set; } Property Value Type Description string | Edit this page View Source domain Declaration public Domain? domain { get; set; } Property Value Type Description Domain | Edit this page View Source editable Declaration public bool editable { get; set; } Property Value Type Description bool | Edit this page View Source length Declaration public int length { get; set; } Property Value Type Description int | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string | Edit this page View Source nullable Declaration public bool nullable { get; set; } Property Value Type Description bool | Edit this page View Source type Declaration public string? type { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.InterpolationType.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.InterpolationType.html",
    "title": "Enum InterpolationType",
    "keywords": "Enum InterpolationType Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public enum InterpolationType Fields Name Description RSP_BilinearInterpolation RSP_CubicConvolution RSP_Majority RSP_NearestNeighbor Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.OwnershipBasedAccessControlForRasters.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.OwnershipBasedAccessControlForRasters.html",
    "title": "Class OwnershipBasedAccessControlForRasters",
    "keywords": "Class OwnershipBasedAccessControlForRasters Inheritance object OwnershipBasedAccessControlForRasters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class OwnershipBasedAccessControlForRasters Properties | Edit this page View Source allowOthersToDelete Declaration public bool allowOthersToDelete { get; set; } Property Value Type Description bool | Edit this page View Source allowOthersToUpdate Declaration public bool allowOthersToUpdate { get; set; } Property Value Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.RasterFunctionInfo.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.RasterFunctionInfo.html",
    "title": "Class RasterFunctionInfo",
    "keywords": "Class RasterFunctionInfo Inheritance object RasterFunctionInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class RasterFunctionInfo Properties | Edit this page View Source description Declaration public string? description { get; set; } Property Value Type Description string | Edit this page View Source help Declaration public string? help { get; set; } Property Value Type Description string | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.RasterTypeInfo.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.RasterTypeInfo.html",
    "title": "Class RasterTypeInfo",
    "keywords": "Class RasterTypeInfo Inheritance object RasterTypeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class RasterTypeInfo Properties | Edit this page View Source description Declaration public string? description { get; set; } Property Value Type Description string | Edit this page View Source help Declaration public string? help { get; set; } Property Value Type Description string | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.TimeInfo.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.TimeInfo.html",
    "title": "Class TimeInfo",
    "keywords": "Class TimeInfo Inheritance object TimeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class TimeInfo Properties | Edit this page View Source EndDate Declaration public DateTime? EndDate { get; } Property Value Type Description DateTime? | Edit this page View Source StartDate Declaration public DateTime? StartDate { get; } Property Value Type Description DateTime? | Edit this page View Source endTimeField Declaration public string? endTimeField { get; set; } Property Value Type Description string | Edit this page View Source startTimeField Declaration public string? startTimeField { get; set; } Property Value Type Description string | Edit this page View Source timeExtent Declaration public long[]? timeExtent { get; set; } Property Value Type Description long[] | Edit this page View Source timeReference Declaration public TimeReference? timeReference { get; set; } Property Value Type Description TimeReference Methods | Edit this page View Source ConvertUnixTimeStamp(long) Declaration public static DateTime? ConvertUnixTimeStamp(long unixTimeStamp) Parameters Type Name Description long unixTimeStamp Returns Type Description DateTime? Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.TimeReference.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.TimeReference.html",
    "title": "Class TimeReference",
    "keywords": "Class TimeReference Inheritance object TimeReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS.ImageServiceProvider Assembly: Mapsui.ArcGIS.dll Syntax public class TimeReference Properties | Edit this page View Source respectsDaylightSaving Declaration public bool respectsDaylightSaving { get; set; } Property Value Type Description bool | Edit this page View Source timeZone Declaration public string? timeZone { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.ImageServiceProvider.html": {
    "href": "pages/Mapsui.ArcGIS.ImageServiceProvider.html",
    "title": "Namespace Mapsui.ArcGIS.ImageServiceProvider",
    "keywords": "Namespace Mapsui.ArcGIS.ImageServiceProvider Classes ArcGISImageCapabilities ArcGISImageServiceProvider Domain EditFieldsInfo Field OwnershipBasedAccessControlForRasters RasterFunctionInfo RasterTypeInfo TimeInfo TimeReference Enums InterpolationType"
  },
  "pages/Mapsui.ArcGIS.SpatialReference.html": {
    "href": "pages/Mapsui.ArcGIS.SpatialReference.html",
    "title": "Class SpatialReference",
    "keywords": "Class SpatialReference Inheritance object SpatialReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class SpatialReference Properties | Edit this page View Source wkid Declaration public int wkid { get; set; } Property Value Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.Table.html": {
    "href": "pages/Mapsui.ArcGIS.Table.html",
    "title": "Class Table",
    "keywords": "Class Table Inheritance object Table Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class Table Properties | Edit this page View Source id Declaration public int id { get; set; } Property Value Type Description int | Edit this page View Source name Declaration public string? name { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.TileInfo.Lod.html": {
    "href": "pages/Mapsui.ArcGIS.TileInfo.Lod.html",
    "title": "Class TileInfo.Lod",
    "keywords": "Class TileInfo.Lod Inheritance object TileInfo.Lod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class TileInfo.Lod Properties | Edit this page View Source level Declaration public int level { get; set; } Property Value Type Description int | Edit this page View Source resolution Declaration public double resolution { get; set; } Property Value Type Description double | Edit this page View Source scale Declaration public double scale { get; set; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.TileInfo.Origin.html": {
    "href": "pages/Mapsui.ArcGIS.TileInfo.Origin.html",
    "title": "Class TileInfo.Origin",
    "keywords": "Class TileInfo.Origin Inheritance object TileInfo.Origin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class TileInfo.Origin Properties | Edit this page View Source x Declaration public double x { get; set; } Property Value Type Description double | Edit this page View Source y Declaration public double y { get; set; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.TileInfo.html": {
    "href": "pages/Mapsui.ArcGIS.TileInfo.html",
    "title": "Class TileInfo",
    "keywords": "Class TileInfo Inheritance object TileInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.ArcGIS Assembly: Mapsui.ArcGIS.dll Syntax public class TileInfo Properties | Edit this page View Source cols Declaration public int cols { get; set; } Property Value Type Description int | Edit this page View Source compressionQuality Declaration public int compressionQuality { get; set; } Property Value Type Description int | Edit this page View Source dpi Declaration public int dpi { get; set; } Property Value Type Description int | Edit this page View Source format Declaration public string? format { get; set; } Property Value Type Description string | Edit this page View Source lods Declaration public TileInfo.Lod[]? lods { get; set; } Property Value Type Description Lod[] | Edit this page View Source origin Declaration public TileInfo.Origin? origin { get; set; } Property Value Type Description TileInfo.Origin | Edit this page View Source rows Declaration public int rows { get; set; } Property Value Type Description int | Edit this page View Source spatialReference Declaration public SpatialReference? spatialReference { get; set; } Property Value Type Description SpatialReference Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ArcGIS.html": {
    "href": "pages/Mapsui.ArcGIS.html",
    "title": "Namespace Mapsui.ArcGIS",
    "keywords": "Namespace Mapsui.ArcGIS Classes ArcGISContext CapabilitiesHelper Extent SpatialReference Table TileInfo TileInfo.Lod TileInfo.Origin Interfaces IArcGISCapabilities Enums CapabilitiesType Delegates CapabilitiesHelper.StatusEventHandler"
  },
  "pages/Mapsui.BaseEventArgs.html": {
    "href": "pages/Mapsui.BaseEventArgs.html",
    "title": "Class BaseEventArgs",
    "keywords": "Class BaseEventArgs Inheritance object EventArgs HandledEventArgs BaseEventArgs MapEventArgs MapInfoEventArgs WidgetEventArgs Inherited Members HandledEventArgs.Handled EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class BaseEventArgs : HandledEventArgs Constructors | Edit this page View Source BaseEventArgs(ScreenPosition, MPoint, GestureType, Map, GetMapInfoDelegate, GetRemoteMapInfoAsyncDelegate) Declaration public BaseEventArgs(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType, Map map, GetMapInfoDelegate getMapInfo, GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Map map GetMapInfoDelegate getMapInfo GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync Properties | Edit this page View Source GestureType Number of clicks on the Widget Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source GetMapInfo Function to get the MapInfo Declaration public Func<IEnumerable<ILayer>, MapInfo> GetMapInfo { get; } Property Value Type Description Func<IEnumerable<ILayer>, MapInfo> | Edit this page View Source GetRemoteMapInfoAsync Function to get the remote MapInfo Declaration public Func<IEnumerable<ILayer>, Task<MapInfo>> GetRemoteMapInfoAsync { get; } Property Value Type Description Func<IEnumerable<ILayer>, Task<MapInfo>> | Edit this page View Source Map The map from which the event was triggered. Declaration public Map Map { get; } Property Value Type Description Map | Edit this page View Source ScreenPosition Screen Position of touch in device independent units (or DIP or DP) Declaration public ScreenPosition ScreenPosition { get; } Property Value Type Description ScreenPosition | Edit this page View Source WorldPosition World Position of touch in map coordinates Declaration public MPoint WorldPosition { get; } Property Value Type Description MPoint Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Cache.IUrlPersistentCache.html": {
    "href": "pages/Mapsui.Cache.IUrlPersistentCache.html",
    "title": "Interface IUrlPersistentCache",
    "keywords": "Interface IUrlPersistentCache Namespace: Mapsui.Cache Assembly: Mapsui.dll Syntax public interface IUrlPersistentCache Methods | Edit this page View Source Add(string, byte[]) Declaration void Add(string url, byte[] tile) Parameters Type Name Description string url byte[] tile | Edit this page View Source Add(string, byte[]?, byte[]) Declaration void Add(string url, byte[]? postData, byte[] tile) Parameters Type Name Description string url byte[] postData byte[] tile | Edit this page View Source Find(string) Declaration byte[]? Find(string url) Parameters Type Name Description string url Returns Type Description byte[] | Edit this page View Source Find(string, byte[]?) Declaration byte[]? Find(string url, byte[]? postData) Parameters Type Name Description string url byte[] postData Returns Type Description byte[] | Edit this page View Source Remove(string) Declaration void Remove(string url) Parameters Type Name Description string url | Edit this page View Source Remove(string, byte[]?) Declaration void Remove(string url, byte[]? postData) Parameters Type Name Description string url byte[] postData Extension Methods CacheExtensions.GetCachedBytesAsync(IUrlPersistentCache?, string, Func<string, Task<byte[]>>?) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Cache.LruCache-2.html": {
    "href": "pages/Mapsui.Cache.LruCache-2.html",
    "title": "Class LruCache<TKey, TValue>",
    "keywords": "Class LruCache<TKey, TValue> /// LRU Cache with disposing of disposable values. Inheritance object LruCache<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Cache Assembly: Mapsui.dll Syntax public class LruCache<TKey, TValue> where TKey : notnull Type Parameters Name Description TKey TValue Constructors | Edit this page View Source LruCache(int) /// LRU Cache with disposing of disposable values. Declaration public LruCache(int capacity) Parameters Type Name Description int capacity Properties | Edit this page View Source this[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue Methods | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Get(TKey) Declaration public TValue? Get(TKey key) Parameters Type Name Description TKey key Returns Type Description TValue | Edit this page View Source GetOrCreateValue<TParam, TResult>(TParam, Func<TParam, TResult>) Declaration public TResult? GetOrCreateValue<TParam, TResult>(TParam key, Func<TParam, TResult> func) where TParam : TKey where TResult : TValue Parameters Type Name Description TParam key Func<TParam, TResult> func Returns Type Description TResult Type Parameters Name Description TParam TResult | Edit this page View Source Put(TKey, TValue) Declaration public void Put(TKey key, TValue value) Parameters Type Name Description TKey key TValue value | Edit this page View Source TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Cache.html": {
    "href": "pages/Mapsui.Cache.html",
    "title": "Namespace Mapsui.Cache",
    "keywords": "Namespace Mapsui.Cache Classes LruCache<TKey, TValue> /// LRU Cache with disposing of disposable values. Interfaces IUrlPersistentCache"
  },
  "pages/Mapsui.ChangeType.html": {
    "href": "pages/Mapsui.ChangeType.html",
    "title": "Enum ChangeType",
    "keywords": "Enum ChangeType Namespace: Mapsui Assembly: Mapsui.dll Syntax public enum ChangeType Fields Name Description Continuous Continuous changes in Viewport state. Examples: Dragging the map During animations Mouse wheel changes Discrete Discrete changes in Viewport state. Examples: Plus and minus buttons. Map Initialization. Final change in an animation Touch-up after dragging. Final mouse wheel change Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.CoordinateSetter.html": {
    "href": "pages/Mapsui.CoordinateSetter.html",
    "title": "Delegate CoordinateSetter",
    "keywords": "Delegate CoordinateSetter Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void CoordinateSetter(double x, double y) Parameters Type Name Description double x double y Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Disposing.DisposableWrapper-1.html": {
    "href": "pages/Mapsui.Disposing.DisposableWrapper-1.html",
    "title": "Class DisposableWrapper<T>",
    "keywords": "Class DisposableWrapper<T> Inheritance object DisposableWrapper<T> Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Disposing Assembly: Mapsui.dll Syntax public class DisposableWrapper<T> : IDisposable where T : IDisposable Type Parameters Name Description T Constructors | Edit this page View Source DisposableWrapper(T, bool) Declaration public DisposableWrapper(T wrappedObject, bool ownsObject) Parameters Type Name Description T wrappedObject bool ownsObject Properties | Edit this page View Source WrappedObject Declaration public T WrappedObject { get; } Property Value Type Description T Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ~DisposableWrapper() Declaration protected ~DisposableWrapper() Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Disposing.html": {
    "href": "pages/Mapsui.Disposing.html",
    "title": "Namespace Mapsui.Disposing",
    "keywords": "Namespace Mapsui.Disposing Classes DisposableWrapper<T>"
  },
  "pages/Mapsui.Extensions.AssemblyExtensions.html": {
    "href": "pages/Mapsui.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions",
    "keywords": "Class AssemblyExtensions Inheritance object AssemblyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class AssemblyExtensions Methods | Edit this page View Source GetAssemblyName(Assembly) Declaration public static string? GetAssemblyName(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description string | Edit this page View Source GetFullName(Assembly, string) Declaration public static string GetFullName(this Assembly assembly, string relativePathToEmbeddedResource) Parameters Type Name Description Assembly assembly string relativePathToEmbeddedResource Returns Type Description string"
  },
  "pages/Mapsui.Extensions.BrushExtensions.html": {
    "href": "pages/Mapsui.Extensions.BrushExtensions.html",
    "title": "Class BrushExtensions",
    "keywords": "Class BrushExtensions Inheritance object BrushExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class BrushExtensions Methods | Edit this page View Source IsVisible(Brush?) Declaration public static bool IsVisible(this Brush? brush) Parameters Type Name Description Brush brush Returns Type Description bool"
  },
  "pages/Mapsui.Extensions.ByteExtensions.html": {
    "href": "pages/Mapsui.Extensions.ByteExtensions.html",
    "title": "Class ByteExtensions",
    "keywords": "Class ByteExtensions Inheritance object ByteExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class ByteExtensions Methods | Edit this page View Source IsSkp(byte[]) true if is Skp (Skia Serialized SkPicture) Declaration public static bool IsSkp(this byte[] buffer) Parameters Type Name Description byte[] buffer buffer Returns Type Description bool true if is xml | Edit this page View Source IsSvg(byte[]) Detects if a byte array represents an svg. Declaration public static bool IsSvg(this byte[] bytes) Parameters Type Name Description byte[] bytes The image data as byte array. Returns Type Description bool True if is and svg. | Edit this page View Source IsXml(byte[]) true if is Xml Declaration public static bool IsXml(this byte[] buffer) Parameters Type Name Description byte[] buffer buffer Returns Type Description bool true if is xml | Edit this page View Source ReadOneSearch(byte[], byte[]) https://stackoverflow.com/questions/1471975/best-way-to-find-position-in-the-stream-where-given-byte-sequence-starts Declaration public static long ReadOneSearch(this byte[] haystack, byte[] needle) Parameters Type Name Description byte[] haystack stream to search byte[] needle pattern to find Returns Type Description long position"
  },
  "pages/Mapsui.Extensions.Cache.SqlitePersistentCache.html": {
    "href": "pages/Mapsui.Extensions.Cache.SqlitePersistentCache.html",
    "title": "Class SqlitePersistentCache",
    "keywords": "Class SqlitePersistentCache Inheritance object SqlitePersistentCache Implements IPersistentCache<byte[]> ITileCache<byte[]> IUrlPersistentCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions.Cache Assembly: Mapsui.Extensions.dll Syntax public class SqlitePersistentCache : IPersistentCache<byte[]>, ITileCache<byte[]>, IUrlPersistentCache Constructors | Edit this page View Source SqlitePersistentCache(string, TimeSpan?, string?, bool) Declaration public SqlitePersistentCache(string name, TimeSpan? cacheExpireTime = null, string? folder = null, bool compress = true) Parameters Type Name Description string name TimeSpan? cacheExpireTime string folder bool compress Methods | Edit this page View Source Add(TileIndex, byte[]) Declaration public void Add(TileIndex index, byte[] tile) Parameters Type Name Description TileIndex index byte[] tile | Edit this page View Source Add(string, byte[]?, byte[]) Declaration public void Add(string url, byte[]? postData, byte[] tile) Parameters Type Name Description string url byte[] postData byte[] tile | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Find(TileIndex) Declaration public byte[]? Find(TileIndex index) Parameters Type Name Description TileIndex index Returns Type Description byte[] | Edit this page View Source Find(string, byte[]?) Declaration public byte[]? Find(string url, byte[]? postData) Parameters Type Name Description string url byte[] postData Returns Type Description byte[] | Edit this page View Source Remove(TileIndex) Declaration public void Remove(TileIndex index) Parameters Type Name Description TileIndex index | Edit this page View Source Remove(string, byte[]?) Declaration public void Remove(string url, byte[]? postData) Parameters Type Name Description string url byte[] postData Implements BruTile.Cache.IPersistentCache<T> BruTile.Cache.ITileCache<T> IUrlPersistentCache Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Extensions.Cache.Tile.html": {
    "href": "pages/Mapsui.Extensions.Cache.Tile.html",
    "title": "Class Tile",
    "keywords": "Class Tile Inheritance object Tile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions.Cache Assembly: Mapsui.Extensions.dll Syntax public class Tile Properties | Edit this page View Source Col Declaration public int Col { get; set; } Property Value Type Description int | Edit this page View Source Compression Declaration public string Compression { get; set; } Property Value Type Description string | Edit this page View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Edit this page View Source Data Declaration public byte[]? Data { get; set; } Property Value Type Description byte[] | Edit this page View Source Level Declaration public int Level { get; set; } Property Value Type Description int | Edit this page View Source Row Declaration public int Row { get; set; } Property Value Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Extensions.Cache.UrlCache.html": {
    "href": "pages/Mapsui.Extensions.Cache.UrlCache.html",
    "title": "Class UrlCache",
    "keywords": "Class UrlCache Inheritance object UrlCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions.Cache Assembly: Mapsui.Extensions.dll Syntax public class UrlCache Properties | Edit this page View Source Compression Declaration public string Compression { get; set; } Property Value Type Description string | Edit this page View Source Created Declaration public DateTime Created { get; set; } Property Value Type Description DateTime | Edit this page View Source Data Declaration public byte[]? Data { get; set; } Property Value Type Description byte[] | Edit this page View Source PostData Declaration public byte[]? PostData { get; set; } Property Value Type Description byte[] | Edit this page View Source Url Declaration public string Url { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Extensions.Cache.html": {
    "href": "pages/Mapsui.Extensions.Cache.html",
    "title": "Namespace Mapsui.Extensions.Cache",
    "keywords": "Namespace Mapsui.Extensions.Cache Classes SqlitePersistentCache Tile UrlCache"
  },
  "pages/Mapsui.Extensions.CacheExtensions.html": {
    "href": "pages/Mapsui.Extensions.CacheExtensions.html",
    "title": "Class CacheExtensions",
    "keywords": "Class CacheExtensions Inheritance object CacheExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class CacheExtensions Methods | Edit this page View Source GetCachedBytesAsync(IUrlPersistentCache?, string, Func<string, Task<byte[]>>?) Declaration public static Task<byte[]> GetCachedBytesAsync(this IUrlPersistentCache? persistentCache, string url, Func<string, Task<byte[]>>? getBytesAsync = null) Parameters Type Name Description IUrlPersistentCache persistentCache string url Func<string, Task<byte[]>> getBytesAsync Returns Type Description Task<byte[]>"
  },
  "pages/Mapsui.Extensions.CancellationTokenSourceExtensions.html": {
    "href": "pages/Mapsui.Extensions.CancellationTokenSourceExtensions.html",
    "title": "Class CancellationTokenSourceExtensions",
    "keywords": "Class CancellationTokenSourceExtensions Inheritance object CancellationTokenSourceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class CancellationTokenSourceExtensions"
  },
  "pages/Mapsui.Extensions.Catch.html": {
    "href": "pages/Mapsui.Extensions.Catch.html",
    "title": "Class Catch",
    "keywords": "Class Catch Inheritance object Catch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class Catch Methods | Edit this page View Source Exceptions(Action) Declaration public static void Exceptions(Action action) Parameters Type Name Description Action action | Edit this page View Source Exceptions(Func<Task>) Declaration public static void Exceptions(Func<Task> func) Parameters Type Name Description Func<Task> func | Edit this page View Source TaskRun(Action) Declaration public static void TaskRun(Action func) Parameters Type Name Description Action func | Edit this page View Source TaskRun(Func<Task>) Declaration public static void TaskRun(Func<Task> func) Parameters Type Name Description Func<Task> func"
  },
  "pages/Mapsui.Extensions.ConcurrentQueueExtensions.html": {
    "href": "pages/Mapsui.Extensions.ConcurrentQueueExtensions.html",
    "title": "Class ConcurrentQueueExtensions",
    "keywords": "Class ConcurrentQueueExtensions Inheritance object ConcurrentQueueExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class ConcurrentQueueExtensions Methods | Edit this page View Source AddRange<T>(ConcurrentQueue<T>, IEnumerable<T>) Declaration public static void AddRange<T>(this ConcurrentQueue<T> queue, IEnumerable<T> itemsToAdd) Parameters Type Name Description ConcurrentQueue<T> queue IEnumerable<T> itemsToAdd Type Parameters Name Description T | Edit this page View Source Add<T>(ConcurrentQueue<T>, T) Declaration public static void Add<T>(this ConcurrentQueue<T> queue, T item) Parameters Type Name Description ConcurrentQueue<T> queue T item Type Parameters Name Description T | Edit this page View Source Clear<T>(ConcurrentQueue<T>) Declaration public static void Clear<T>(this ConcurrentQueue<T> queue) Parameters Type Name Description ConcurrentQueue<T> queue Type Parameters Name Description T"
  },
  "pages/Mapsui.Extensions.DisposableExtension.html": {
    "href": "pages/Mapsui.Extensions.DisposableExtension.html",
    "title": "Class DisposableExtension",
    "keywords": "Class DisposableExtension Inheritance object DisposableExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class DisposableExtension Methods | Edit this page View Source DisposeAllIfDisposable<T>(IEnumerable<T>) Declaration public static void DisposeAllIfDisposable<T>(this IEnumerable<T> disposables) where T : class Parameters Type Name Description IEnumerable<T> disposables Type Parameters Name Description T | Edit this page View Source DisposeAndNullify(ref object?) Declaration public static void DisposeAndNullify(ref object? disposable) Parameters Type Name Description object disposable | Edit this page View Source DisposeAndNullify<T>(ref T?) Declaration public static void DisposeAndNullify<T>(ref T? disposable) where T : class, IDisposable Parameters Type Name Description T disposable Type Parameters Name Description T | Edit this page View Source DisposeIfDisposable(object?) Declaration public static void DisposeIfDisposable(this object? disposable) Parameters Type Name Description object disposable"
  },
  "pages/Mapsui.Extensions.DoubleExtensions.html": {
    "href": "pages/Mapsui.Extensions.DoubleExtensions.html",
    "title": "Class DoubleExtensions",
    "keywords": "Class DoubleExtensions Inheritance object DoubleExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class DoubleExtensions Methods | Edit this page View Source IsNanOrInfOrZero(double) Declaration public static bool IsNanOrInfOrZero(this double target) Parameters Type Name Description double target Returns Type Description bool"
  },
  "pages/Mapsui.Extensions.EnumerableLayerExtensions.html": {
    "href": "pages/Mapsui.Extensions.EnumerableLayerExtensions.html",
    "title": "Class EnumerableLayerExtensions",
    "keywords": "Class EnumerableLayerExtensions Inheritance object EnumerableLayerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class EnumerableLayerExtensions Methods | Edit this page View Source WaitForLoadingAsync(IEnumerable<ILayer>) Wait for Loading Async Declaration public static Task<bool> WaitForLoadingAsync(this IEnumerable<ILayer> layers) Parameters Type Name Description IEnumerable<ILayer> layers layers to wait for Returns Type Description Task<bool> true if it has waited false otherwise"
  },
  "pages/Mapsui.Extensions.FeatureExtensions.html": {
    "href": "pages/Mapsui.Extensions.FeatureExtensions.html",
    "title": "Class FeatureExtensions",
    "keywords": "Class FeatureExtensions Inheritance object FeatureExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class FeatureExtensions Methods | Edit this page View Source Copy(IEnumerable<IFeature>) Declaration public static IEnumerable<IFeature> Copy(this IEnumerable<IFeature> original) Parameters Type Name Description IEnumerable<IFeature> original Returns Type Description IEnumerable<IFeature> | Edit this page View Source Copy<T>(T) Declaration public static T Copy<T>(this T original) where T : IFeature Parameters Type Name Description T original Returns Type Description T Type Parameters Name Description T | Edit this page View Source GetExtent(IEnumerable<IFeature>) Declaration public static MRect? GetExtent(this IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable<IFeature> features Returns Type Description MRect | Edit this page View Source Project(IEnumerable<IFeature>, string?, string?, IProjection?) Declaration public static IEnumerable<IFeature> Project(this IEnumerable<IFeature> features, string? fromCRS, string? toCRS, IProjection? projection = null) Parameters Type Name Description IEnumerable<IFeature> features string fromCRS string toCRS IProjection projection Returns Type Description IEnumerable<IFeature> | Edit this page View Source ToDisplayText(IFeature) Declaration public static string ToDisplayText(this IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description string | Edit this page View Source ToDisplayText(IEnumerable<KeyValuePair<string, IEnumerable<IFeature>>>) Declaration public static string ToDisplayText(this IEnumerable<KeyValuePair<string, IEnumerable<IFeature>>> featureInfos) Parameters Type Name Description IEnumerable<KeyValuePair<string, IEnumerable<IFeature>>> featureInfos Returns Type Description string | Edit this page View Source ToStringOfKeyValuePairs(IFeature) Declaration public static string ToStringOfKeyValuePairs(this IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description string"
  },
  "pages/Mapsui.Extensions.HttpClientHandlerExtensions.html": {
    "href": "pages/Mapsui.Extensions.HttpClientHandlerExtensions.html",
    "title": "Class HttpClientHandlerExtensions",
    "keywords": "Class HttpClientHandlerExtensions Inheritance object HttpClientHandlerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class HttpClientHandlerExtensions Methods | Edit this page View Source SetCredentials(HttpClientHandler, ICredentials?) Declaration public static void SetCredentials(this HttpClientHandler httpClientHandler, ICredentials? credentials) Parameters Type Name Description HttpClientHandler httpClientHandler ICredentials credentials | Edit this page View Source SetUseDefaultCredentials(HttpClientHandler, bool) Declaration public static void SetUseDefaultCredentials(this HttpClientHandler httpClientHandler, bool useDefaultCredentials) Parameters Type Name Description HttpClientHandler httpClientHandler bool useDefaultCredentials"
  },
  "pages/Mapsui.Extensions.IntArrayExtension.html": {
    "href": "pages/Mapsui.Extensions.IntArrayExtension.html",
    "title": "Class IntArrayExtension",
    "keywords": "Class IntArrayExtension Inheritance object IntArrayExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class IntArrayExtension Methods | Edit this page View Source IsNaturalOrder(int[]) True if Is Natural Axis Order Declaration public static bool IsNaturalOrder(this int[] axisOrder) Parameters Type Name Description int[] axisOrder Returns Type Description bool"
  },
  "pages/Mapsui.Extensions.LayerExtensions.html": {
    "href": "pages/Mapsui.Extensions.LayerExtensions.html",
    "title": "Class LayerExtensions",
    "keywords": "Class LayerExtensions Inheritance object LayerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class LayerExtensions Methods | Edit this page View Source WaitForLoadingAsync(ILayer) Wait for Loading Async Declaration public static Task<bool> WaitForLoadingAsync(this ILayer layer) Parameters Type Name Description ILayer layer layer to wait for Returns Type Description Task<bool> true if it has waited false otherwise"
  },
  "pages/Mapsui.Extensions.MPointExtensions.html": {
    "href": "pages/Mapsui.Extensions.MPointExtensions.html",
    "title": "Class MPointExtensions",
    "keywords": "Class MPointExtensions Inheritance object MPointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class MPointExtensions Methods | Edit this page View Source ToFeatures(IEnumerable<MPoint>) Declaration public static IEnumerable<PointFeature> ToFeatures(this IEnumerable<MPoint> points) Parameters Type Name Description IEnumerable<MPoint> points Returns Type Description IEnumerable<PointFeature>"
  },
  "pages/Mapsui.Extensions.MapControlExtensions.html": {
    "href": "pages/Mapsui.Extensions.MapControlExtensions.html",
    "title": "Class MapControlExtensions",
    "keywords": "Class MapControlExtensions Map Control Extensions Inheritance object MapControlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class MapControlExtensions Methods | Edit this page View Source WaitForLoadingAsync(IMapControl) Wait for Loading Async Declaration public static Task WaitForLoadingAsync(this IMapControl mapControl) Parameters Type Name Description IMapControl mapControl map control Returns Type Description Task Task for Waiting for Layers"
  },
  "pages/Mapsui.Extensions.PenExtensions.html": {
    "href": "pages/Mapsui.Extensions.PenExtensions.html",
    "title": "Class PenExtensions",
    "keywords": "Class PenExtensions Inheritance object PenExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class PenExtensions Methods | Edit this page View Source IsVisible(Pen?) Declaration public static bool IsVisible(this Pen? pen) Parameters Type Name Description Pen pen Returns Type Description bool"
  },
  "pages/Mapsui.Extensions.Projections.DotSpatialProjection.html": {
    "href": "pages/Mapsui.Extensions.Projections.DotSpatialProjection.html",
    "title": "Class DotSpatialProjection",
    "keywords": "Class DotSpatialProjection Inheritance object DotSpatialProjection Implements IProjection IProjectionCrs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions.Projections Assembly: Mapsui.Extensions.dll Syntax public class DotSpatialProjection : IProjection, IProjectionCrs Methods | Edit this page View Source CrsFromEsri(string) Get Crs from Esri String Declaration public string? CrsFromEsri(string esriString) Parameters Type Name Description string esriString Returns Type Description string | Edit this page View Source GetTransformation(int, int) Declaration public static (ProjectionInfo From, ProjectionInfo To)? GetTransformation(int fromId, int toId) Parameters Type Name Description int fromId int toId Returns Type Description (ProjectionInfo From, ProjectionInfo To)? | Edit this page View Source Init() Declaration public static void Init() | Edit this page View Source IsProjectionSupported(string?, string?) Declaration public bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description string fromCRS string toCRS Returns Type Description bool | Edit this page View Source Project(string, string, IFeature) Declaration public void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description string fromCRS string toCRS IFeature feature | Edit this page View Source Project(string, string, MPoint) Declaration public void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description string fromCRS string toCRS MPoint point | Edit this page View Source Project(string, string, MRect) Declaration public void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description string fromCRS string toCRS MRect rect | Edit this page View Source Project(string, string, IEnumerable<IFeature>) Declaration public void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description string fromCRS string toCRS IEnumerable<IFeature> features | Edit this page View Source Project(string, string, double, double) Declaration public (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description string fromCRS string toCRS double x double y Returns Type Description (double x, double y) | Edit this page View Source Register(string, string) Declaration public void Register(string crs, string esriString) Parameters Type Name Description string crs string esriString Implements IProjection IProjectionCrs Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Extensions.Projections.html": {
    "href": "pages/Mapsui.Extensions.Projections.html",
    "title": "Namespace Mapsui.Extensions.Projections",
    "keywords": "Namespace Mapsui.Extensions.Projections Classes DotSpatialProjection"
  },
  "pages/Mapsui.Extensions.Provider.GeoTiffProvider.html": {
    "href": "pages/Mapsui.Extensions.Provider.GeoTiffProvider.html",
    "title": "Class GeoTiffProvider",
    "keywords": "Class GeoTiffProvider Inheritance object GeoTiffProvider Implements IProvider IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions.Provider Assembly: Mapsui.Extensions.dll Syntax public class GeoTiffProvider : IProvider, IDisposable Constructors | Edit this page View Source GeoTiffProvider(string, List<Color>?) Declaration public GeoTiffProvider(string tiffPath, List<Color>? noDataColors = null) Parameters Type Name Description string tiffPath List<Color> noDataColors Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string Methods | Edit this page View Source ConvertTiffToSKBitmap(MemoryStream) Declaration public static SKBitmap ConvertTiffToSKBitmap(MemoryStream tifImage) Parameters Type Name Description MemoryStream tifImage Returns Type Description SKBitmap | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public virtual void Dispose() | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source IsCrsSupported(string?) Declaration public bool? IsCrsSupported(string? crs) Parameters Type Name Description string crs Returns Type Description bool? | Edit this page View Source TagExtender(Tiff) Declaration public void TagExtender(Tiff tif) Parameters Type Name Description Tiff tif Implements IProvider IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Extensions.Provider.html": {
    "href": "pages/Mapsui.Extensions.Provider.html",
    "title": "Namespace Mapsui.Extensions.Provider",
    "keywords": "Namespace Mapsui.Extensions.Provider Classes GeoTiffProvider"
  },
  "pages/Mapsui.Extensions.StreamExtensions.html": {
    "href": "pages/Mapsui.Extensions.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance object StreamExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class StreamExtensions Methods | Edit this page View Source CopyToMemoryStream(Stream) Declaration public static MemoryStream CopyToMemoryStream(this Stream input) Parameters Type Name Description Stream input Returns Type Description MemoryStream | Edit this page View Source IsSvg(Stream) Detects if stream is svg stream Declaration public static bool IsSvg(this Stream stream) Parameters Type Name Description Stream stream stream Returns Type Description bool true if is svg stream | Edit this page View Source IsXml(Stream) Is Xml Declaration public static bool IsXml(this Stream stream) Parameters Type Name Description Stream stream stream Returns Type Description bool true if is xml | Edit this page View Source ReadOneSearch(Stream, byte[]) https://stackoverflow.com/questions/1471975/best-way-to-find-position-in-the-stream-where-given-byte-sequence-starts Declaration public static long ReadOneSearch(this Stream haystack, byte[] needle) Parameters Type Name Description Stream haystack stream to search byte[] needle pattern to find Returns Type Description long position | Edit this page View Source ReadOneSearch(Stream, string) Declaration public static long ReadOneSearch(this Stream haystack, string needle) Parameters Type Name Description Stream haystack string needle Returns Type Description long | Edit this page View Source ToBytes(Stream) Declaration public static byte[] ToBytes(this Stream input) Parameters Type Name Description Stream input Returns Type Description byte[]"
  },
  "pages/Mapsui.Extensions.StringExtensions.html": {
    "href": "pages/Mapsui.Extensions.StringExtensions.html",
    "title": "Class StringExtensions",
    "keywords": "Class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class StringExtensions Methods | Edit this page View Source AssureUriScheme(string, string) Declaration public static string AssureUriScheme(this string url, string scheme) Parameters Type Name Description string url string scheme Returns Type Description string | Edit this page View Source GetUriScheme(string) Declaration public static string GetUriScheme(this string url) Parameters Type Name Description string url Returns Type Description string"
  },
  "pages/Mapsui.Extensions.StyleExtensions.html": {
    "href": "pages/Mapsui.Extensions.StyleExtensions.html",
    "title": "Class StyleExtensions",
    "keywords": "Class StyleExtensions Inheritance object StyleExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class StyleExtensions Methods | Edit this page View Source GetStylesToApply(IStyle?, double) Declaration public static IEnumerable<IStyle> GetStylesToApply(this IStyle? style, double resolution) Parameters Type Name Description IStyle style double resolution Returns Type Description IEnumerable<IStyle> | Edit this page View Source ShouldBeApplied(IStyle?, double) Declaration public static bool ShouldBeApplied(this IStyle? style, double resolution) Parameters Type Name Description IStyle style double resolution Returns Type Description bool"
  },
  "pages/Mapsui.Extensions.TupleExtensions.html": {
    "href": "pages/Mapsui.Extensions.TupleExtensions.html",
    "title": "Class TupleExtensions",
    "keywords": "Class TupleExtensions Inheritance object TupleExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class TupleExtensions Methods | Edit this page View Source ToMPoint((double x, double y)) Declaration public static MPoint ToMPoint(this (double x, double y) coordinate) Parameters Type Name Description (double x, double y) coordinate Returns Type Description MPoint"
  },
  "pages/Mapsui.Extensions.TypeExtensions.html": {
    "href": "pages/Mapsui.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions",
    "keywords": "Class TypeExtensions Inheritance object TypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class TypeExtensions Methods | Edit this page View Source LoadImageSource(Type, string) Declaration public static Uri LoadImageSource(this Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description Type typeInAssemblyOfEmbeddedResource string relativePathToEmbeddedResource Returns Type Description Uri"
  },
  "pages/Mapsui.Extensions.ViewportExtensions.html": {
    "href": "pages/Mapsui.Extensions.ViewportExtensions.html",
    "title": "Class ViewportExtensions",
    "keywords": "Class ViewportExtensions Inheritance object ViewportExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Extensions Assembly: Mapsui.dll Syntax public static class ViewportExtensions Methods | Edit this page View Source HasSize(Viewport) True if Width and Height are not zero Declaration public static bool HasSize(this Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description bool | Edit this page View Source IsRotated(Viewport) IsRotated is true, when viewport displays map rotated Declaration public static bool IsRotated(this Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description bool | Edit this page View Source ScreenToWorld(Viewport, ScreenPosition) Converts a point in screen pixels to one in screen units, respecting rotation Declaration public static MPoint ScreenToWorld(this Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Coordinate in screen units Returns Type Description MPoint MPoint in world units | Edit this page View Source ScreenToWorld(Viewport, double, double) Converts X/Y in screen pixels to a point in screen units, respecting rotation Declaration public static MPoint ScreenToWorld(this Viewport viewport, double screenX, double screenY) Parameters Type Name Description Viewport viewport The viewport used to calculate the transformation double screenX Screen position x coordinate double screenY Screen position y coordinate Returns Type Description MPoint MPoint in world units | Edit this page View Source ScreenToWorldXY(Viewport, double, double) Converts X/Y in screen pixels to a point in screen units, respecting rotation Declaration public static (double worldX, double worldY) ScreenToWorldXY(this Viewport viewport, double screenX, double screenY) Parameters Type Name Description Viewport viewport double screenX Screen position x coordinate double screenY Screen position y coordinate Returns Type Description (double x, double y) Tuple of x and y in world coordinates | Edit this page View Source ToExtent(Viewport) Calculates extent from the viewport. Declaration public static MRect ToExtent(this Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description MRect Remarks This MRect is horizontally and vertically aligned, even if the viewport is rotated. So this MRect perhaps contain parts, that are not visible. | Edit this page View Source ToSection(Viewport) IsRotated is true, when viewport displays map rotated Declaration public static MSection ToSection(this Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description MSection | Edit this page View Source WorldToScreen(Viewport, MPoint) Converts X/Y in world units to a point in device independent unit (or DIP or DP), respecting rotation Declaration public static ScreenPosition WorldToScreen(this Viewport viewport, MPoint worldPosition) Parameters Type Name Description Viewport viewport MPoint worldPosition Coordinate in world units Returns Type Description ScreenPosition MPoint in screen pixels | Edit this page View Source WorldToScreen(Viewport, MRect) Transforms the MRect from world coordinates to screen coordinates. Note, that an MRect always represents and unrotated box. If the Viewport is rotated this will result in an unrotated box that encompasses the rotated transformation. Declaration public static MRect WorldToScreen(this Viewport viewport, MRect rect) Parameters Type Name Description Viewport viewport Viewport MRect rect The MRect to transform Returns Type Description MRect Transformed rect | Edit this page View Source WorldToScreen(Viewport, double, double) Converts X/Y in world units to a point in device independent units (or DIP or DP), respecting rotation Declaration public static ScreenPosition WorldToScreen(this Viewport viewport, double worldX, double worldY) Parameters Type Name Description Viewport viewport The viewport used to calculate the transformation double worldX X coordinate in world units double worldY Y coordinate in world units Returns Type Description ScreenPosition MPoint in screen pixels | Edit this page View Source WorldToScreenXY(Viewport, double, double) Converts X/Y in world units to a point in device independent units (or DIP or DP), respecting rotation Declaration public static (double screenX, double screenY) WorldToScreenXY(this Viewport viewport, double worldX, double worldY) Parameters Type Name Description Viewport viewport double worldX X coordinate in world units double worldY Y coordinate in world units Returns Type Description (double x, double y) Tuple of x and y in screen coordinates"
  },
  "pages/Mapsui.Extensions.html": {
    "href": "pages/Mapsui.Extensions.html",
    "title": "Namespace Mapsui.Extensions",
    "keywords": "Namespace Mapsui.Extensions Classes AssemblyExtensions BrushExtensions ByteExtensions CacheExtensions CancellationTokenSourceExtensions Catch ConcurrentQueueExtensions DisposableExtension DoubleExtensions EnumerableLayerExtensions FeatureExtensions HttpClientHandlerExtensions IntArrayExtension LayerExtensions MPointExtensions MapControlExtensions Map Control Extensions PenExtensions StreamExtensions StringExtensions StyleExtensions TupleExtensions TypeExtensions ViewportExtensions"
  },
  "pages/Mapsui.FeatureInfoEventArgs.html": {
    "href": "pages/Mapsui.FeatureInfoEventArgs.html",
    "title": "Class FeatureInfoEventArgs",
    "keywords": "Class FeatureInfoEventArgs Inheritance object EventArgs FeatureInfoEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax [Obsolete(\"Use Info and ILayerFeatureInfo\", true)] public class FeatureInfoEventArgs : EventArgs Properties | Edit this page View Source FeatureInfo Declaration public IDictionary<string, IEnumerable<IFeature>>? FeatureInfo { get; set; } Property Value Type Description IDictionary<string, IEnumerable<IFeature>> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Features.FeatureId.html": {
    "href": "pages/Mapsui.Features.FeatureId.html",
    "title": "Class FeatureId",
    "keywords": "Class FeatureId Inheritance object FeatureId Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Features Assembly: Mapsui.dll Syntax public static class FeatureId Methods | Edit this page View Source CreateId(int, uint) Declaration public static long CreateId(int layerId, uint featureId) Parameters Type Name Description int layerId uint featureId Returns Type Description long | Edit this page View Source CreateId<T>(int, T, Func<T, uint>) Declaration public static long CreateId<T>(int layerId, T key, Func<T, uint> keyCreator) Parameters Type Name Description int layerId T key Func<T, uint> keyCreator Returns Type Description long Type Parameters Name Description T"
  },
  "pages/Mapsui.Features.FeatureKeyCreator-1.html": {
    "href": "pages/Mapsui.Features.FeatureKeyCreator-1.html",
    "title": "Class FeatureKeyCreator<T>",
    "keywords": "Class FeatureKeyCreator<T> Inheritance object FeatureKeyCreator<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Features Assembly: Mapsui.dll Syntax public class FeatureKeyCreator<T> where T : notnull Type Parameters Name Description T Constructors | Edit this page View Source FeatureKeyCreator(int) Number of Keys to be created Declaration public FeatureKeyCreator(int numberOfKey = 100000) Parameters Type Name Description int numberOfKey number of keys Methods | Edit this page View Source GetKey(T) Declaration public uint GetKey(T key) Parameters Type Name Description T key Returns Type Description uint Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Features.html": {
    "href": "pages/Mapsui.Features.html",
    "title": "Namespace Mapsui.Features",
    "keywords": "Namespace Mapsui.Features Classes FeatureId FeatureKeyCreator<T>"
  },
  "pages/Mapsui.Fetcher.DataChangedEventArgs.html": {
    "href": "pages/Mapsui.Fetcher.DataChangedEventArgs.html",
    "title": "Class DataChangedEventArgs",
    "keywords": "Class DataChangedEventArgs Inheritance object EventArgs DataChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class DataChangedEventArgs : EventArgs Constructors | Edit this page View Source DataChangedEventArgs(Exception?, string) Declaration public DataChangedEventArgs(Exception? error, string layerName) Parameters Type Name Description Exception error string layerName | Edit this page View Source DataChangedEventArgs(string) Declaration public DataChangedEventArgs(string layerName) Parameters Type Name Description string layerName Properties | Edit this page View Source Error Declaration public Exception? Error { get; } Property Value Type Description Exception | Edit this page View Source LayerName Declaration public string LayerName { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.DataChangedEventHandler.html": {
    "href": "pages/Mapsui.Fetcher.DataChangedEventHandler.html",
    "title": "Delegate DataChangedEventHandler",
    "keywords": "Delegate DataChangedEventHandler Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public delegate void DataChangedEventHandler(object sender, DataChangedEventArgs e) Parameters Type Name Description object sender DataChangedEventArgs e Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.Delayer.html": {
    "href": "pages/Mapsui.Fetcher.Delayer.html",
    "title": "Class Delayer",
    "keywords": "Class Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. Inheritance object Delayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class Delayer Constructors | Edit this page View Source Delayer() Declaration public Delayer() Methods | Edit this page View Source ExecuteDelayed(Action, int, int) Schedules the specified action to be executed after a minimum delay, ensuring that at least delayBetweenCalls milliseconds have elapsed since the previous execution. If multiple calls are made in quick succession, only the most recent is executed. Declaration public void ExecuteDelayed(Action action, int delayBetweenCalls, int minimumDelay) Parameters Type Name Description Action action The action to execute. int delayBetweenCalls The minimum number of milliseconds between two executions. int minimumDelay The minimum number of milliseconds to wait after calling this method before executing action. This is useful when starting continuous changes, like dragging the map. | Edit this page View Source ExecuteDelayed(Func<Task>, int, int) Schedules the specified asynchronous function to be executed after a minimum delay, ensuring that at least delayBetweenCalls milliseconds have elapsed since the previous execution. If multiple calls are made in quick succession, only the most recent is executed. Declaration public void ExecuteDelayed(Func<Task> func, int delayBetweenCalls, int minimumDelay) Parameters Type Name Description Func<Task> func The asynchronous function to execute. int delayBetweenCalls The minimum number of milliseconds between two executions. int minimumDelay The minimum number of milliseconds to wait after calling this method before executing func. . This is useful when starting continuous changes, like dragging the map. Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.FetchJob.html": {
    "href": "pages/Mapsui.Fetcher.FetchJob.html",
    "title": "Class FetchJob",
    "keywords": "Class FetchJob Inheritance object FetchJob Implements IEquatable<FetchJob> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public record FetchJob : IEquatable<FetchJob> Constructors | Edit this page View Source FetchJob(int, Func<Task>) Declaration public FetchJob(int LayerId, Func<Task> FetchFunc) Parameters Type Name Description int LayerId Func<Task> FetchFunc Properties | Edit this page View Source FetchFunc Declaration public Func<Task> FetchFunc { get; init; } Property Value Type Description Func<Task> | Edit this page View Source JobId Declaration public long JobId { get; } Property Value Type Description long | Edit this page View Source LayerId Declaration public int LayerId { get; init; } Property Value Type Description int Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.FetchMachine.html": {
    "href": "pages/Mapsui.Fetcher.FetchMachine.html",
    "title": "Class FetchMachine",
    "keywords": "Class FetchMachine Inheritance object FetchMachine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class FetchMachine Constructors | Edit this page View Source FetchMachine(int) Declaration public FetchMachine(int numberOfWorkers = 4) Parameters Type Name Description int numberOfWorkers Properties | Edit this page View Source NumberOfWorkers Declaration public int NumberOfWorkers { get; } Property Value Type Description int Methods | Edit this page View Source Enqueue(Func<Task>) Declaration public void Enqueue(Func<Task> action) Parameters Type Name Description Func<Task> action | Edit this page View Source Stop() Declaration public void Stop() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.FetchRequestedEventArgs.html": {
    "href": "pages/Mapsui.Fetcher.FetchRequestedEventArgs.html",
    "title": "Class FetchRequestedEventArgs",
    "keywords": "Class FetchRequestedEventArgs Inheritance object EventArgs FetchRequestedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class FetchRequestedEventArgs : EventArgs Constructors | Edit this page View Source FetchRequestedEventArgs(ChangeType) Declaration public FetchRequestedEventArgs(ChangeType changeType) Parameters Type Name Description ChangeType changeType Properties | Edit this page View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.IAsyncDataFetcher.html": {
    "href": "pages/Mapsui.Fetcher.IAsyncDataFetcher.html",
    "title": "Interface IAsyncDataFetcher",
    "keywords": "Interface IAsyncDataFetcher Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public interface IAsyncDataFetcher Methods | Edit this page View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration void AbortFetch() | Edit this page View Source ClearCache() Clear cache of layer Declaration void ClearCache() | Edit this page View Source RefreshData(FetchInfo, Action<Func<Task>>) Indicates that there has been a change in the view of the map Declaration void RefreshData(FetchInfo fetchInfo, Action<Func<Task>> enqueueFetch) Parameters Type Name Description FetchInfo fetchInfo FetchInfo Action<Func<Task>> enqueueFetch Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.IFetchableSource.html": {
    "href": "pages/Mapsui.Fetcher.IFetchableSource.html",
    "title": "Interface IFetchableSource",
    "keywords": "Interface IFetchableSource Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public interface IFetchableSource Properties | Edit this page View Source Id The layer identifier. Declaration int Id { get; } Property Value Type Description int Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration void ClearCache() | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration FetchJob[] GetFetchJobs(int activeFetchCount, int availableFetchSlots) Parameters Type Name Description int activeFetchCount Number of active fetches for this layer. It is relevant if the layer itself has a maximum on the number of active fetches for itself. int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.LatestMailbox-1.html": {
    "href": "pages/Mapsui.Fetcher.LatestMailbox-1.html",
    "title": "Class LatestMailbox<T>",
    "keywords": "Class LatestMailbox<T> A thread-safe mailbox that always holds at most one message of type T. When a new message is added, it overwrites any existing message. This is useful in scenarios where only the most recent message is relevant, such as UI or viewport updates, and outdated messages should be ignored. Inheritance object LatestMailbox<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class LatestMailbox<T> where T : class Type Parameters Name Description T The type of message to store. Must be a reference type. Properties | Edit this page View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool Methods | Edit this page View Source Overwrite(T) Stores the specified message in the mailbox, replacing any previous message. If a message was already present, it is discarded and replaced by the new one. Declaration public void Overwrite(T message) Parameters Type Name Description T message The message to store. Cannot be null. | Edit this page View Source TryTake(out T) Attempts to retrieve and remove the current message from the mailbox. If a message is present, it is returned and the mailbox is cleared. If no message is present, returns false. Declaration public bool TryTake(out T message) Parameters Type Name Description T message When this method returns, contains the message retrieved from the mailbox, or null if the mailbox was empty. Returns Type Description bool True if a message was present and retrieved; false if the mailbox was empty. Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.LayerFetcher.html": {
    "href": "pages/Mapsui.Fetcher.LayerFetcher.html",
    "title": "Class LayerFetcher",
    "keywords": "Class LayerFetcher Inheritance object LayerFetcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public sealed class LayerFetcher Constructors | Edit this page View Source LayerFetcher(IEnumerable<ILayer>) Declaration public LayerFetcher(IEnumerable<ILayer> Layers) Parameters Type Name Description IEnumerable<ILayer> Layers Methods | Edit this page View Source ViewportChanged(FetchInfo) Declaration public void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.Throttler.html": {
    "href": "pages/Mapsui.Fetcher.Throttler.html",
    "title": "Class Throttler",
    "keywords": "Class Throttler Makes sure a method is always called 'MillisecondsToDelay' after the previous call. Inheritance object Throttler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Fetcher Assembly: Mapsui.dll Syntax public class Throttler Methods | Edit this page View Source ExecuteAsync(Action, int) Schedules the specified action to be executed after a minimum delay, ensuring that at least delayBetweenCalls milliseconds have elapsed since the previous execution. If multiple calls are made in quick succession, only the most recent is executed. Declaration public Task ExecuteAsync(Action action, int delayBetweenCalls) Parameters Type Name Description Action action The action to execute. int delayBetweenCalls The minimum number of milliseconds between two executions. Returns Type Description Task | Edit this page View Source ExecuteAsync(Func<Task>, int) Schedules the specified asynchronous function to be executed after a minimum delay, ensuring that at least delayBetweenCalls milliseconds have elapsed since the previous execution. If multiple calls are made in quick succession, only the most recent is executed. Declaration public Task ExecuteAsync(Func<Task> func, int delayBetweenCalls) Parameters Type Name Description Func<Task> func The asynchronous function to execute. int delayBetweenCalls The minimum number of milliseconds between two executions. Returns Type Description Task Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Fetcher.html": {
    "href": "pages/Mapsui.Fetcher.html",
    "title": "Namespace Mapsui.Fetcher",
    "keywords": "Namespace Mapsui.Fetcher Classes DataChangedEventArgs Delayer Makes sure a method is always called 'MillisecondsToDelay' after the previous call. FetchJob FetchMachine FetchRequestedEventArgs LatestMailbox<T> A thread-safe mailbox that always holds at most one message of type T. When a new message is added, it overwrites any existing message. This is useful in scenarios where only the most recent message is relevant, such as UI or viewport updates, and outdated messages should be ignored. LayerFetcher Throttler Makes sure a method is always called 'MillisecondsToDelay' after the previous call. Interfaces IAsyncDataFetcher IFetchableSource Delegates DataChangedEventHandler"
  },
  "pages/Mapsui.GetMapInfoDelegate.html": {
    "href": "pages/Mapsui.GetMapInfoDelegate.html",
    "title": "Delegate GetMapInfoDelegate",
    "keywords": "Delegate GetMapInfoDelegate Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate MapInfo GetMapInfoDelegate(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition IEnumerable<ILayer> layers Returns Type Description MapInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.GetRemoteMapInfoAsyncDelegate.html": {
    "href": "pages/Mapsui.GetRemoteMapInfoAsyncDelegate.html",
    "title": "Delegate GetRemoteMapInfoAsyncDelegate",
    "keywords": "Delegate GetRemoteMapInfoAsyncDelegate Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate Task<MapInfo> GetRemoteMapInfoAsyncDelegate(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.IFeature.html": {
    "href": "pages/Mapsui.IFeature.html",
    "title": "Interface IFeature",
    "keywords": "Interface IFeature Interface for a feature which could be displayed on the map. Inherited Members ICloneable.Clone() Namespace: Mapsui Assembly: Mapsui.dll Syntax public interface IFeature : ICloneable Properties | Edit this page View Source Data Object to store additional data. Declaration object? Data { get; set; } Property Value Type Description object | Edit this page View Source Extent Extent of the feature. Declaration MRect? Extent { get; } Property Value Type Description MRect | Edit this page View Source Fields Keys used to store information for feature. Declaration IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable<string> | Edit this page View Source Id Unique Id for feature. Declaration long Id { get; } Property Value Type Description long | Edit this page View Source this[string] Additional data that can be stored under specific keys. Declaration object? this[string key] { get; set; } Parameters Type Name Description string key Key used to store or retrieve specific data fields. Property Value Type Description object | Edit this page View Source Styles Styles used for this feature Declaration ICollection<IStyle> Styles { get; } Property Value Type Description ICollection<IStyle> Methods | Edit this page View Source ClearRenderedGeometry() Function to call if the rendered feature is invalid. Declaration void ClearRenderedGeometry() | Edit this page View Source CoordinateVisitor(Action<double, double, CoordinateSetter>) Implementation of visitor pattern for coordinates Declaration void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action<double, double, CoordinateSetter> visit Function for visiting each coordinate X or Y value | Edit this page View Source Modified() Function to call whenever something changes in settings of feature. Declaration void Modified() Extension Methods FeatureExtensions.Copy<T>(T) FeatureExtensions.ToDisplayText(IFeature) FeatureExtensions.ToStringOfKeyValuePairs(IFeature) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html": {
    "href": "pages/Mapsui.Layers.AnimatedLayers.AnimatedPointLayer.html",
    "title": "Class AnimatedPointLayer",
    "keywords": "Class AnimatedPointLayer Inheritance object BaseLayer AnimatedPointLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource<IProvider> Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers.AnimatedLayers Assembly: Mapsui.dll Syntax public class AnimatedPointLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, IAsyncDataFetcher, ILayerDataSource<IProvider> Constructors | Edit this page View Source AnimatedPointLayer(IProvider) Declaration public AnimatedPointLayer(IProvider dataSource) Parameters Type Name Description IProvider dataSource Properties | Edit this page View Source AnimationDuration The period of which the animation should move from the previous position to the new position. The default is 1000 milliseconds. Declaration public int AnimationDuration { get; set; } Property Value Type Description int | Edit this page View Source DataSource Declaration public IProvider? DataSource { get; } Property Value Type Description IProvider | Edit this page View Source DistanceThreshold When the distance between the current and the previous position is larger than the DistanceThreshold it will not be animated. The default is Double.MaxValue Declaration public double DistanceThreshold { get; set; } Property Value Type Description double | Edit this page View Source Easing The easing function to use for the animation. The default is Easing.CubicOut. Declaration public Easing Easing { get; set; } Property Value Type Description Easing | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Edit this page View Source IdField Declaration public string IdField { get; set; } Property Value Type Description string Methods | Edit this page View Source AbortFetch() Aborts the tile fetches that are in progress. If this method is not called the threads will terminate naturally. It will just take a little longer. Declaration public void AbortFetch() | Edit this page View Source ClearCache() Clear cache of layer Declaration public void ClearCache() | Edit this page View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides BaseLayer.Dispose(bool) | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source RefreshData(FetchInfo, Action<Func<Task>>) Indicates that there has been a change in the view of the map Declaration public void RefreshData(FetchInfo fetchInfo, Action<Func<Task>> enqueueFetch) Parameters Type Name Description FetchInfo fetchInfo FetchInfo Action<Func<Task>> enqueueFetch | Edit this page View Source SetAnimationTarget(IEnumerable<PointFeature>) Declaration public void SetAnimationTarget(IEnumerable<PointFeature> targets) Parameters Type Name Description IEnumerable<PointFeature> targets | Edit this page View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Overrides BaseLayer.UpdateAnimations() Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IAsyncDataFetcher ILayerDataSource<T> Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.AnimatedLayers.html": {
    "href": "pages/Mapsui.Layers.AnimatedLayers.html",
    "title": "Namespace Mapsui.Layers.AnimatedLayers",
    "keywords": "Namespace Mapsui.Layers.AnimatedLayers Classes AnimatedPointLayer"
  },
  "pages/Mapsui.Layers.BaseFeature.html": {
    "href": "pages/Mapsui.Layers.BaseFeature.html",
    "title": "Class BaseFeature",
    "keywords": "Class BaseFeature Inheritance object BaseFeature PointFeature RasterFeature GeometryFeature Implements IFeature ICloneable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public abstract class BaseFeature : IFeature, ICloneable Constructors | Edit this page View Source BaseFeature() Declaration protected BaseFeature() | Edit this page View Source BaseFeature(BaseFeature) Declaration protected BaseFeature(BaseFeature baseFeature) Parameters Type Name Description BaseFeature baseFeature | Edit this page View Source BaseFeature(BaseFeature, long) Declaration protected BaseFeature(BaseFeature baseFeature, long id) Parameters Type Name Description BaseFeature baseFeature long id | Edit this page View Source BaseFeature(long) Declaration protected BaseFeature(long id) Parameters Type Name Description long id Properties | Edit this page View Source Data Object to store additional data. Declaration public object? Data { get; set; } Property Value Type Description object | Edit this page View Source Extent Extent of the feature. Declaration public abstract MRect? Extent { get; } Property Value Type Description MRect | Edit this page View Source Fields Keys used to store information for feature. Declaration public IEnumerable<string> Fields { get; } Property Value Type Description IEnumerable<string> | Edit this page View Source Id Unique Id for feature. Declaration public long Id { get; } Property Value Type Description long | Edit this page View Source this[string] Additional data that can be stored under specific keys. Declaration public virtual object? this[string key] { get; set; } Parameters Type Name Description string key Key used to store or retrieve specific data fields. Property Value Type Description object | Edit this page View Source Styles Styles used for this feature Declaration public ICollection<IStyle> Styles { get; set; } Property Value Type Description ICollection<IStyle> Methods | Edit this page View Source Clone() Creates a new object that is a copy of the current instance. Declaration public abstract object Clone() Returns Type Description object A new object that is a copy of this instance. | Edit this page View Source CoordinateVisitor(Action<double, double, CoordinateSetter>) Implementation of visitor pattern for coordinates Declaration public abstract void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action<double, double, CoordinateSetter> visit Function for visiting each coordinate X or Y value | Edit this page View Source Modified() Function to call whenever something changes in settings of feature. Declaration public virtual void Modified() Implements IFeature ICloneable Extension Methods FeatureExtensions.ToDisplayText(IFeature) FeatureExtensions.ToStringOfKeyValuePairs(IFeature) FeatureExtensions.Copy<T>(T) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.BaseLayer.html": {
    "href": "pages/Mapsui.Layers.BaseLayer.html",
    "title": "Class BaseLayer",
    "keywords": "Class BaseLayer Inheritance object BaseLayer AnimatedPointLayer GenericCollectionLayer<T> ImageLayer Layer MemoryLayer MyLocationLayer RasterizingLayer WritableLayer TileLayer MyLocationLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public abstract class BaseLayer : ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Constructors | Edit this page View Source BaseLayer() Creates a BaseLayer without a name Declaration protected BaseLayer() | Edit this page View Source BaseLayer(string) Creates a BaseLayer with a name Declaration protected BaseLayer(string name) Parameters Type Name Description string name Name for this layer Properties | Edit this page View Source Attribution Attribution for layer Declaration public HyperlinkWidget Attribution { get; set; } Property Value Type Description HyperlinkWidget | Edit this page View Source Busy Flag, if layer is busy Declaration public virtual bool Busy { get; set; } Property Value Type Description bool | Edit this page View Source CustomLayerRendererName Name of the custom layer renderer. Set this value if you want to use a custom renderer for this layer. Declaration public string? CustomLayerRendererName { get; set; } Property Value Type Description string | Edit this page View Source Enabled Specifies whether this layer should be rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public virtual MRect? Extent { get; protected set; } Property Value Type Description MRect | Edit this page View Source Id Numerical Id of layer Declaration public int Id { get; } Property Value Type Description int | Edit this page View Source MaxVisible Minimum visible zoom level Declaration public double MaxVisible { get; set; } Property Value Type Description double | Edit this page View Source MinVisible Minimum visible zoom level Declaration public double MinVisible { get; set; } Property Value Type Description double | Edit this page View Source Name Name of layer Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Opacity Opacity of layer Declaration public double Opacity { get; set; } Property Value Type Description double | Edit this page View Source Resolutions List of native resolutions Declaration public virtual IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList<double> | Edit this page View Source SortFeatures Function to sort order of features for drawing Declaration public virtual Func<IEnumerable<IFeature>, IEnumerable<IFeature>> SortFeatures { get; set; } Property Value Type Description Func<IEnumerable<IFeature>, IEnumerable<IFeature>> | Edit this page View Source Style Gets or sets rendering style of layer Declaration public IStyle? Style { get; set; } Property Value Type Description IStyle | Edit this page View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration public object? Tag { get; set; } Property Value Type Description object Methods | Edit this page View Source DataHasChanged() To indicate the data withing the layer has changed. This triggers a DataChanged event. This is necessary for situations where the layer can not know about changes to it's data as in the case of editing of a geometry. Declaration public void DataHasChanged() | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public virtual void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public abstract IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> | Edit this page View Source NextId() Declaration public static int NextId() Returns Type Description int | Edit this page View Source OnDataChanged(DataChangedEventArgs) Declaration protected void OnDataChanged(DataChangedEventArgs e) Parameters Type Name Description DataChangedEventArgs e | Edit this page View Source OnPropertyChanged(string) Declaration protected virtual void OnPropertyChanged(string propertyName) Parameters Type Name Description string propertyName | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() | Edit this page View Source UpdateAnimations() Declaration public virtual bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Events | Edit this page View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration public event DataChangedEventHandler? DataChanged Event Type Type Description DataChangedEventHandler | Edit this page View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.FetchInfo.html": {
    "href": "pages/Mapsui.Layers.FetchInfo.html",
    "title": "Class FetchInfo",
    "keywords": "Class FetchInfo Inheritance object FetchInfo Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class FetchInfo Constructors | Edit this page View Source FetchInfo(FetchInfo) Declaration public FetchInfo(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo | Edit this page View Source FetchInfo(MSection, string?, ChangeType) Declaration public FetchInfo(MSection section, string? crs = null, ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description MSection section string crs ChangeType changeType Properties | Edit this page View Source CRS Declaration public string? CRS { get; } Property Value Type Description string | Edit this page View Source ChangeType Declaration public ChangeType ChangeType { get; } Property Value Type Description ChangeType | Edit this page View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Edit this page View Source Resolution Declaration public double Resolution { get; } Property Value Type Description double | Edit this page View Source Section Declaration public MSection Section { get; } Property Value Type Description MSection Methods | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source Grow(double) Declaration public FetchInfo Grow(double amountInScreenUnits) Parameters Type Name Description double amountInScreenUnits Returns Type Description FetchInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.GenericCollectionLayer-1.html": {
    "href": "pages/Mapsui.Layers.GenericCollectionLayer-1.html",
    "title": "Class GenericCollectionLayer<T>",
    "keywords": "Class GenericCollectionLayer<T> The GenericCollectionLayer uses a T of IEnumerable of IFeature Inheritance object BaseLayer GenericCollectionLayer<T> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class GenericCollectionLayer<T> : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable where T : IEnumerable<IFeature>, new() Type Parameters Name Description T Constructors | Edit this page View Source GenericCollectionLayer() Declaration public GenericCollectionLayer() Properties | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Edit this page View Source Features Declaration public T Features { get; set; } Property Value Type Description T Methods | Edit this page View Source GetFeatures(MRect?, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect? rect, double resolution) Parameters Type Name Description MRect rect double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.IDynamic.html": {
    "href": "pages/Mapsui.Layers.IDynamic.html",
    "title": "Interface IDynamic",
    "keywords": "Interface IDynamic Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public interface IDynamic Methods | Edit this page View Source DataHasChanged() To indicate the data withing the class has changed. This triggers a DataChanged event. This is necessary for situations where the class itself can not know about changes to it's data. Declaration void DataHasChanged() Events | Edit this page View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event EventHandler DataChanged Event Type Type Description EventHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.IFeatureInfo.html": {
    "href": "pages/Mapsui.Layers.IFeatureInfo.html",
    "title": "Interface IFeatureInfo",
    "keywords": "Interface IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax [Obsolete(\"Use ILayerFeatureInfo\")] public interface IFeatureInfo Methods | Edit this page View Source GetFeatureInfo(Viewport, double, double, Action<IDictionary<string, IEnumerable<IFeature>>>) Declaration void GetFeatureInfo(Viewport viewport, double x, double y, Action<IDictionary<string, IEnumerable<IFeature>>> callback) Parameters Type Name Description Viewport viewport double x double y Action<IDictionary<string, IEnumerable<IFeature>>> callback Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ILayer.html": {
    "href": "pages/Mapsui.Layers.ILayer.html",
    "title": "Interface ILayer",
    "keywords": "Interface ILayer Interface for map layers Inherited Members IAnimatable.UpdateAnimations() INotifyPropertyChanged.PropertyChanged IDisposable.Dispose() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public interface ILayer : IAnimatable, INotifyPropertyChanged, IDisposable Properties | Edit this page View Source Attribution Attribution for layer Declaration HyperlinkWidget Attribution { get; } Property Value Type Description HyperlinkWidget | Edit this page View Source Busy Flag, if layer is busy Declaration bool Busy { get; set; } Property Value Type Description bool | Edit this page View Source CustomLayerRendererName Name of the custom layer renderer. Set this value if you want to use a custom renderer for this layer. Declaration string? CustomLayerRendererName { get; set; } Property Value Type Description string | Edit this page View Source Enabled Specifies whether this layer should be rendered or not Declaration bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source Extent Gets the MRect of the entire layer. Can be null if there are no features in the layer. Declaration MRect? Extent { get; } Property Value Type Description MRect | Edit this page View Source Id Numerical Id of layer Declaration int Id { get; } Property Value Type Description int | Edit this page View Source MaxVisible Minimum visible zoom level Declaration double MaxVisible { get; } Property Value Type Description double | Edit this page View Source MinVisible Minimum visible zoom level Declaration double MinVisible { get; } Property Value Type Description double | Edit this page View Source Name Name of layer Declaration string Name { get; set; } Property Value Type Description string | Edit this page View Source Opacity Opacity of layer Declaration double Opacity { get; set; } Property Value Type Description double | Edit this page View Source Resolutions List of native resolutions Declaration IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList<double> | Edit this page View Source SortFeatures Function to sort order of features for drawing Declaration Func<IEnumerable<IFeature>, IEnumerable<IFeature>> SortFeatures { get; } Property Value Type Description Func<IEnumerable<IFeature>, IEnumerable<IFeature>> | Edit this page View Source Style Gets or sets rendering style of layer Declaration IStyle? Style { get; set; } Property Value Type Description IStyle | Edit this page View Source Tag Gets or sets an arbitrary object value that can be used to store custom information about this element Declaration object? Tag { get; set; } Property Value Type Description object Methods | Edit this page View Source DataHasChanged() To indicate the data withing the layer has changed. This triggers a DataChanged event. This is necessary for situations where the layer can not know about changes to it's data as in the case of editing of a geometry. Declaration void DataHasChanged() | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Events | Edit this page View Source DataChanged Event called when the data within the layer has changed allowing listeners to react to this. Declaration event DataChangedEventHandler DataChanged Event Type Type Description DataChangedEventHandler Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ILayerDataSource-1.html": {
    "href": "pages/Mapsui.Layers.ILayerDataSource-1.html",
    "title": "Interface ILayerDataSource<T>",
    "keywords": "Interface ILayerDataSource<T> Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public interface ILayerDataSource<out T> where T : IProvider Type Parameters Name Description T Properties | Edit this page View Source DataSource Declaration T? DataSource { get; } Property Value Type Description T Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ILayerFeatureInfo.html": {
    "href": "pages/Mapsui.Layers.ILayerFeatureInfo.html",
    "title": "Interface ILayerFeatureInfo",
    "keywords": "Interface ILayerFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public interface ILayerFeatureInfo Methods | Edit this page View Source GetFeatureInfoAsync(Viewport, ScreenPosition) Declaration Task<IDictionary<string, IEnumerable<IFeature>>> GetFeatureInfoAsync(Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Returns Type Description Task<IDictionary<string, IEnumerable<IFeature>>> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ISourceLayer.html": {
    "href": "pages/Mapsui.Layers.ISourceLayer.html",
    "title": "Interface ISourceLayer",
    "keywords": "Interface ISourceLayer Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public interface ISourceLayer Properties | Edit this page View Source SourceLayer Declaration ILayer SourceLayer { get; } Property Value Type Description ILayer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ImageLayer.html": {
    "href": "pages/Mapsui.Layers.ImageLayer.html",
    "title": "Class ImageLayer",
    "keywords": "Class ImageLayer Inheritance object BaseLayer ImageLayer Implements IFetchableSource ILayerDataSource<IProvider> ILayer IAnimatable INotifyPropertyChanged IDisposable ILayerFeatureInfo Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Extent BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class ImageLayer : BaseLayer, IFetchableSource, ILayerDataSource<IProvider>, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, ILayerFeatureInfo Constructors | Edit this page View Source ImageLayer() Declaration public ImageLayer() | Edit this page View Source ImageLayer(string) Declaration public ImageLayer(string layerName) Parameters Type Name Description string layerName Properties | Edit this page View Source DataSource Declaration public IProvider? DataSource { get; set; } Property Value Type Description IProvider | Edit this page View Source NeedsFetch Declaration public bool NeedsFetch { get; } Property Value Type Description bool Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration public void ClearCache() | Edit this page View Source GetFeatureInfoAsync(Viewport, ScreenPosition) Declaration public Task<IDictionary<string, IEnumerable<IFeature>>> GetFeatureInfoAsync(Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Returns Type Description Task<IDictionary<string, IEnumerable<IFeature>>> | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration public FetchJob[] GetFetchJobs(int activeFetches, int availableFetchSlots) Parameters Type Name Description int activeFetches int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source OnFetchRequested() Declaration protected virtual void OnFetchRequested() | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> Implements IFetchableSource ILayerDataSource<T> ILayer IAnimatable INotifyPropertyChanged IDisposable ILayerFeatureInfo Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.Layer.html": {
    "href": "pages/Mapsui.Layers.Layer.html",
    "title": "Class Layer",
    "keywords": "Class Layer Create layer with name Inheritance object BaseLayer Layer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IFetchableSource ILayerDataSource<IProvider> Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class Layer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, IFetchableSource, ILayerDataSource<IProvider> Constructors | Edit this page View Source Layer() Create a new layer Declaration public Layer() | Edit this page View Source Layer(string) Create layer with name Declaration public Layer(string layerName) Parameters Type Name Description string layerName Name to use for layer Properties | Edit this page View Source Animations Declaration public List<Func<bool>> Animations { get; } Property Value Type Description List<Func<bool>> | Edit this page View Source DataSource Data source for this layer Declaration public IProvider? DataSource { get; set; } Property Value Type Description IProvider | Edit this page View Source Extent Returns the extent of the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Bounding box corresponding to the extent of the features in the layer Overrides BaseLayer.Extent Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration public void ClearCache() | Edit this page View Source FetchAsync(FetchInfo, int) Declaration public Task FetchAsync(FetchInfo fetchInfo, int refreshCounter) Parameters Type Name Description FetchInfo fetchInfo int refreshCounter Returns Type Description Task | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration public FetchJob[] GetFetchJobs(int activeFetches, int availableFetchSlots) Parameters Type Name Description int activeFetches int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source OnFetchRequested() Declaration protected virtual void OnFetchRequested() | Edit this page View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Overrides BaseLayer.UpdateAnimations() | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IFetchableSource ILayerDataSource<T> Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html": {
    "href": "pages/Mapsui.Layers.LayerCollection.LayerCollectionChangedEventHandler.html",
    "title": "Delegate LayerCollection.LayerCollectionChangedEventHandler",
    "keywords": "Delegate LayerCollection.LayerCollectionChangedEventHandler Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public delegate void LayerCollection.LayerCollectionChangedEventHandler(object sender, LayerCollectionChangedEventArgs args) Parameters Type Name Description object sender LayerCollectionChangedEventArgs args Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.LayerCollection.html": {
    "href": "pages/Mapsui.Layers.LayerCollection.html",
    "title": "Class LayerCollection",
    "keywords": "Class LayerCollection Represents a collection of map layers with support for grouping, ordering, and change notifications. Inheritance object LayerCollection Implements IEnumerable<ILayer> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class LayerCollection : IEnumerable<ILayer>, IEnumerable Properties | Edit this page View Source Count Gets the number of layers in the collection. Declaration public int Count { get; } Property Value Type Description int Methods | Edit this page View Source Add(ILayer, int) Adds a layer to a specific group. Declaration public void Add(ILayer layer, int group = 0) Parameters Type Name Description ILayer layer The layer to add. int group The group identifier (default is 0). | Edit this page View Source Add(IEnumerable<ILayer>, int) Adds multiple layers to a specific group. Declaration public void Add(IEnumerable<ILayer> layers, int group = 0) Parameters Type Name Description IEnumerable<ILayer> layers The layers to add. int group The group identifier (default is 0). | Edit this page View Source AddOnBottom(ILayer, int) Adds a layer at the bottom of the collection in a specific group. Declaration public void AddOnBottom(ILayer layer, int group = 0) Parameters Type Name Description ILayer layer The layer to add. int group The group identifier (default is 0). | Edit this page View Source AddOnTop(ILayer, int) Adds a layer on top of the collection in a specific group. Declaration public void AddOnTop(ILayer layer, int group = 0) Parameters Type Name Description ILayer layer The layer to add. int group The group identifier (default is 0). | Edit this page View Source Clear(int) Clears layers from a specific group. Declaration public void Clear(int group = 0) Parameters Type Name Description int group The group identifier (default is 0). | Edit this page View Source ClearAllGroups() Clears all layers from all groups. Declaration public void ClearAllGroups() | Edit this page View Source FindLayer(string) Finds layers in the collection by their name. Declaration public IEnumerable<ILayer> FindLayer(string layerName) Parameters Type Name Description string layerName The name of the layer to find. Returns Type Description IEnumerable<ILayer> The layers with the specified name. | Edit this page View Source Get(int, int) Gets a layer at a specific index in a group. Declaration public ILayer Get(int index, int group = 0) Parameters Type Name Description int index The index of the layer. int group The group identifier (default is 0). Returns Type Description ILayer The layer at the specified index and group. | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<ILayer> GetEnumerator() Returns Type Description IEnumerator<ILayer> An enumerator for the layers in the collection. | Edit this page View Source GetLayers(int) Retrieves all layers in a specific group. Declaration public IEnumerable<ILayer> GetLayers(int group = 0) Parameters Type Name Description int group The group identifier (default is 0). Returns Type Description IEnumerable<ILayer> All the layers in the specified group. | Edit this page View Source GetLayersOfAllGroups() Retrieves all layers from all groups. Declaration public IEnumerable<ILayer> GetLayersOfAllGroups() Returns Type Description IEnumerable<ILayer> All the layers of all groups. | Edit this page View Source Insert(int, ILayer, int) Inserts a layer at a specific index in a group. Declaration public void Insert(int index, ILayer layer, int group = 0) Parameters Type Name Description int index The target index. ILayer layer The layer to insert. int group The group identifier (default is 0). | Edit this page View Source Insert(int, IEnumerable<ILayer>, int) Inserts multiple layers at a specific index in a group. Declaration public void Insert(int index, IEnumerable<ILayer> layers, int group = 0) Parameters Type Name Description int index The target index. IEnumerable<ILayer> layers The layers to insert. int group The group identifier (default is 0). | Edit this page View Source Modify(IEnumerable<ILayer>, IEnumerable<ILayer>) Modifies the layer collection by removing specified layers and adding new layers. Declaration public void Modify(IEnumerable<ILayer> layersToRemove, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description IEnumerable<ILayer> layersToRemove The layers to remove from the collection. IEnumerable<ILayer> layersToAdd The layers to add to the collection. | Edit this page View Source Modify(Func<ILayer, bool>, IEnumerable<ILayer>) Modifies the layer collection by removing layers that match a specified predicate and adding new layers. Declaration public void Modify(Func<ILayer, bool> removePredicate, IEnumerable<ILayer> layersToAdd) Parameters Type Name Description Func<ILayer, bool> removePredicate The predicate to determine which layers to remove from the collection. IEnumerable<ILayer> layersToAdd The layers to add to the collection. | Edit this page View Source Move(int, ILayer) Moves a layer to a specific index in the collection. Declaration public void Move(int index, ILayer layer) Parameters Type Name Description int index The target index. ILayer layer The layer to move. | Edit this page View Source MoveDown(ILayer) Declaration public void MoveDown(ILayer layer) Parameters Type Name Description ILayer layer | Edit this page View Source MoveToBottom(ILayer) Moves a layer to the bottom of it's current group. This means the other layers will be drawn on top of it. Declaration public void MoveToBottom(ILayer layer) Parameters Type Name Description ILayer layer The layer to move. | Edit this page View Source MoveToTop(ILayer) Moves a layer to the top of it's current group. This means this layer will be drawn on top of the other layers. Declaration public void MoveToTop(ILayer layer) Parameters Type Name Description ILayer layer The layer to move. | Edit this page View Source MoveUp(ILayer) Declaration public void MoveUp(ILayer layer) Parameters Type Name Description ILayer layer | Edit this page View Source Remove(ILayer) Removes a specific layer from the collection. Declaration public bool Remove(ILayer layer) Parameters Type Name Description ILayer layer The layer to remove. Returns Type Description bool True if the layer was removed successfully; otherwise, false. | Edit this page View Source Remove(ILayer[]) Removes multiple layers from the collection. Declaration public bool Remove(ILayer[] layers) Parameters Type Name Description ILayer[] layers The layers to remove. Returns Type Description bool True if all layers were removed successfully; otherwise, false. | Edit this page View Source Remove(Func<ILayer, bool>) Removes layers that match a specific predicate. Declaration public bool Remove(Func<ILayer, bool> predicate) Parameters Type Name Description Func<ILayer, bool> predicate The condition to match for removal. Returns Type Description bool True if all matching layers were removed successfully; otherwise, false. Events | Edit this page View Source Changed Occurs when the layer collection has changed (layers are added, removed, or moved). Declaration public event LayerCollection.LayerCollectionChangedEventHandler? Changed Event Type Type Description LayerCollection.LayerCollectionChangedEventHandler Implements IEnumerable<T> IEnumerable Extension Methods DisposableExtension.DisposeAllIfDisposable<T>(IEnumerable<T>) EnumerableLayerExtensions.WaitForLoadingAsync(IEnumerable<ILayer>) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.LayerCollectionChangedEventArgs.html": {
    "href": "pages/Mapsui.Layers.LayerCollectionChangedEventArgs.html",
    "title": "Class LayerCollectionChangedEventArgs",
    "keywords": "Class LayerCollectionChangedEventArgs Inheritance object EventArgs LayerCollectionChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class LayerCollectionChangedEventArgs : EventArgs Constructors | Edit this page View Source LayerCollectionChangedEventArgs(IEnumerable<ILayer>, IEnumerable<ILayer>, IEnumerable<ILayer>) Declaration public LayerCollectionChangedEventArgs(IEnumerable<ILayer> added, IEnumerable<ILayer> removed, IEnumerable<ILayer> moved) Parameters Type Name Description IEnumerable<ILayer> added IEnumerable<ILayer> removed IEnumerable<ILayer> moved Properties | Edit this page View Source AddedLayers Declaration public IEnumerable<ILayer> AddedLayers { get; } Property Value Type Description IEnumerable<ILayer> | Edit this page View Source MovedLayers Declaration public IEnumerable<ILayer> MovedLayers { get; } Property Value Type Description IEnumerable<ILayer> | Edit this page View Source RemovedLayers Declaration public IEnumerable<ILayer> RemovedLayers { get; } Property Value Type Description IEnumerable<ILayer> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.MemoryLayer.html": {
    "href": "pages/Mapsui.Layers.MemoryLayer.html",
    "title": "Class MemoryLayer",
    "keywords": "Class MemoryLayer The MemoryLayer has all features in memory. Inheritance object BaseLayer MemoryLayer ObservableMemoryLayer<T> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class MemoryLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Remarks Create layer with name Constructors | Edit this page View Source MemoryLayer() Create a new layer Declaration public MemoryLayer() | Edit this page View Source MemoryLayer(string) The MemoryLayer has all features in memory. Declaration public MemoryLayer(string layerName) Parameters Type Name Description string layerName Name to use for layer Remarks Create layer with name Properties | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Edit this page View Source Features Declaration public IEnumerable<IFeature> Features { get; set; } Property Value Type Description IEnumerable<IFeature> | Edit this page View Source SortFeatures Function to sort order of features for drawing Declaration public override Func<IEnumerable<IFeature>, IEnumerable<IFeature>> SortFeatures { get; set; } Property Value Type Description Func<IEnumerable<IFeature>, IEnumerable<IFeature>> Overrides BaseLayer.SortFeatures Methods | Edit this page View Source FeaturesWereModified() Declaration public void FeaturesWereModified() | Edit this page View Source GetFeatures(MRect?, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect? rect, double resolution) Parameters Type Name Description MRect rect double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.MyLocationLayer.html": {
    "href": "pages/Mapsui.Layers.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance object BaseLayer MyLocationLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Extent BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class MyLocationLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Remarks There are two different symbols for own location: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Edit this page View Source MyLocationLayer(Map) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(Map map) Parameters Type Name Description Map map Map, to which this layer belongs | Edit this page View Source MyLocationLayer(Map, MPoint) Initializes a new instance of the MyLocationLayer class with a starting location. Declaration public MyLocationLayer(Map map, MPoint location) Parameters Type Name Description Map map MapView, to which this layer belongs MPoint location Location, where to start Properties | Edit this page View Source CalloutText The text that is displayed in the MyLocation callout (can contain line breaks). Declaration public string CalloutText { get; set; } Property Value Type Description string | Edit this page View Source Direction Movement direction of device at location Declaration public double Direction { get; } Property Value Type Description double Direction at location | Edit this page View Source IsCentered MyLocation is always in the center of the map Declaration public bool IsCentered { get; set; } Property Value Type Description bool | Edit this page View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description bool | Edit this page View Source MyLocation Position of location, that is displayed Declaration public MPoint MyLocation { get; } Property Value Type Description MPoint Position of location | Edit this page View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description double Scale of symbol | Edit this page View Source ShowCallout Show or hide a callout with further info next to the MyLocation symbol. Declaration public bool ShowCallout { get; set; } Property Value Type Description bool | Edit this page View Source ViewingDirection Viewing direction of device (in degrees wrt. north direction) Declaration public double ViewingDirection { get; } Property Value Type Description double Direction at location Methods | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Overrides BaseLayer.UpdateAnimations() | Edit this page View Source UpdateMyDirection(double, double, bool) Updates my movement direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description double newDirection New direction double newViewportRotation New viewport rotation bool animated true if animated | Edit this page View Source UpdateMyLocation(MPoint, bool) Updates own location Declaration public void UpdateMyLocation(MPoint newLocation, bool animated = false) Parameters Type Name Description MPoint newLocation New location bool animated | Edit this page View Source UpdateMySpeed(double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description double newSpeed New speed | Edit this page View Source UpdateMyViewDirection(double, double, bool) Updates my view direction Declaration public void UpdateMyViewDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description double newDirection New direction double newViewportRotation New viewport rotation bool animated true if animated Events | Edit this page View Source Tapped This event is triggered whenever the MyLocation symbol or label is clicked. Declaration public event EventHandler<MapEventArgs>? Tapped Event Type Type Description EventHandler<MapEventArgs> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.ObservableMemoryLayer-1.html": {
    "href": "pages/Mapsui.Layers.ObservableMemoryLayer-1.html",
    "title": "Class ObservableMemoryLayer<T>",
    "keywords": "Class ObservableMemoryLayer<T> Inheritance object BaseLayer MemoryLayer ObservableMemoryLayer<T> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members MemoryLayer.FeaturesWereModified() MemoryLayer.GetFeatures(MRect, double) MemoryLayer.SortFeatures MemoryLayer.Extent BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class ObservableMemoryLayer<T> : MemoryLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable where T : class Type Parameters Name Description T Constructors | Edit this page View Source ObservableMemoryLayer(Func<T, IFeature?>, string?) Declaration public ObservableMemoryLayer(Func<T, IFeature?> getFeature, string? name = null) Parameters Type Name Description Func<T, IFeature> getFeature string name Properties | Edit this page View Source Features Hide set from Base Features Collection because, if this is set than observable memory layer does not work Declaration public IEnumerable<IFeature> Features { get; } Property Value Type Description IEnumerable<IFeature> | Edit this page View Source ObservableCollection Declaration public ObservableCollection<T>? ObservableCollection { get; set; } Property Value Type Description ObservableCollection<T> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.PointFeature.html": {
    "href": "pages/Mapsui.Layers.PointFeature.html",
    "title": "Class PointFeature",
    "keywords": "Class PointFeature Feature representing a point on the map Inheritance object BaseFeature PointFeature Implements IFeature ICloneable Inherited Members BaseFeature.Id BaseFeature.Styles BaseFeature.Fields BaseFeature.Data BaseFeature.this[string] BaseFeature.Modified() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class PointFeature : BaseFeature, IFeature, ICloneable Constructors | Edit this page View Source PointFeature(PointFeature) Declaration public PointFeature(PointFeature pointFeature) Parameters Type Name Description PointFeature pointFeature | Edit this page View Source PointFeature(MPoint) Declaration public PointFeature(MPoint point) Parameters Type Name Description MPoint point | Edit this page View Source PointFeature(double, double) Declaration public PointFeature(double x, double y) Parameters Type Name Description double x double y | Edit this page View Source PointFeature((double x, double y)) Declaration public PointFeature((double x, double y) point) Parameters Type Name Description (double x, double y) point Properties | Edit this page View Source Extent Extent of feature Declaration public override MRect Extent { get; } Property Value Type Description MRect Overrides BaseFeature.Extent | Edit this page View Source Point The location of the feature. Declaration public MPoint Point { get; } Property Value Type Description MPoint Methods | Edit this page View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description object A new object that is a copy of this instance. Overrides BaseFeature.Clone() | Edit this page View Source CoordinateVisitor(Action<double, double, CoordinateSetter>) Implementation of visitor pattern for coordinates Declaration public override void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action<double, double, CoordinateSetter> visit Overrides BaseFeature.CoordinateVisitor(Action<double, double, CoordinateSetter>) Implements IFeature ICloneable Extension Methods FeatureExtensions.ToDisplayText(IFeature) FeatureExtensions.ToStringOfKeyValuePairs(IFeature) FeatureExtensions.Copy<T>(T) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.RasterFeature.html": {
    "href": "pages/Mapsui.Layers.RasterFeature.html",
    "title": "Class RasterFeature",
    "keywords": "Class RasterFeature Feature representing a bitmap on the map. Inheritance object BaseFeature RasterFeature Implements IFeature ICloneable Inherited Members BaseFeature.Id BaseFeature.Styles BaseFeature.Fields BaseFeature.Data BaseFeature.this[string] BaseFeature.Modified() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class RasterFeature : BaseFeature, IFeature, ICloneable Constructors | Edit this page View Source RasterFeature(RasterFeature) Declaration public RasterFeature(RasterFeature rasterFeature) Parameters Type Name Description RasterFeature rasterFeature | Edit this page View Source RasterFeature(MRaster?) Declaration public RasterFeature(MRaster? raster) Parameters Type Name Description MRaster raster Properties | Edit this page View Source Extent Extent of feature Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseFeature.Extent | Edit this page View Source Raster Raster containing rect and bitmap of raster Declaration public MRaster? Raster { get; } Property Value Type Description MRaster Methods | Edit this page View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description object A new object that is a copy of this instance. Overrides BaseFeature.Clone() | Edit this page View Source CoordinateVisitor(Action<double, double, CoordinateSetter>) Implementation of visitor pattern for coordinates Declaration public override void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action<double, double, CoordinateSetter> visit Overrides BaseFeature.CoordinateVisitor(Action<double, double, CoordinateSetter>) Implements IFeature ICloneable Extension Methods FeatureExtensions.ToDisplayText(IFeature) FeatureExtensions.ToStringOfKeyValuePairs(IFeature) FeatureExtensions.Copy<T>(T) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.RasterizingLayer.html": {
    "href": "pages/Mapsui.Layers.RasterizingLayer.html",
    "title": "Class RasterizingLayer",
    "keywords": "Class RasterizingLayer Inheritance object BaseLayer RasterizingLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IFetchableSource ISourceLayer Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class RasterizingLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, IFetchableSource, ISourceLayer Constructors | Edit this page View Source RasterizingLayer(ILayer, int, IRenderer?, float, RenderFormat) Creates a RasterizingLayer which rasterizes a layer for performance Declaration public RasterizingLayer(ILayer layer, int delayBeforeRasterize = 1000, IRenderer? rasterizer = null, float pixelDensity = 1, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description ILayer layer The Layer to be rasterized int delayBeforeRasterize Delay after viewport change to start re-rasterizing IRenderer rasterizer Rasterizer to use. null will use the default float pixelDensity RenderFormat renderFormat render Format png is default and skp is skia picture Properties | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Edit this page View Source SourceLayer Declaration public ILayer SourceLayer { get; } Property Value Type Description ILayer | Edit this page View Source SymbolSize Declaration public static double SymbolSize { get; set; } Property Value Type Description double Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration public void ClearCache() | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration public FetchJob[] GetFetchJobs(int activeFetchCount, int availableFetchSlots) Parameters Type Name Description int activeFetchCount Number of active fetches for this layer. It is relevant if the layer itself has a maximum on the number of active fetches for itself. int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source OnFetchRequested() Declaration protected virtual void OnFetchRequested() | Edit this page View Source ToViewport(MSection) Declaration public static Viewport ToViewport(MSection section) Parameters Type Name Description MSection section Returns Type Description Viewport | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable IFetchableSource ISourceLayer Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.WritableLayer.html": {
    "href": "pages/Mapsui.Layers.WritableLayer.html",
    "title": "Class WritableLayer",
    "keywords": "Class WritableLayer Inheritance object BaseLayer WritableLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Layers Assembly: Mapsui.dll Syntax public class WritableLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Properties | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent Methods | Edit this page View Source Add(IFeature) Declaration public void Add(IFeature feature) Parameters Type Name Description IFeature feature | Edit this page View Source AddRange(IEnumerable<IFeature>) Declaration public void AddRange(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable<IFeature> features | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Find(IFeature) Declaration public IFeature? Find(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description IFeature | Edit this page View Source GetFeatures() Declaration public IEnumerable<IFeature> GetFeatures() Returns Type Description IEnumerable<IFeature> | Edit this page View Source GetFeatures(MRect?, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect? box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source TryRemove(IFeature, Func<IFeature, IFeature, bool>?) Tries to remove a feature. Declaration public bool TryRemove(IFeature feature, Func<IFeature, IFeature, bool>? compare = null) Parameters Type Name Description IFeature feature Feature to remove Func<IFeature, IFeature, bool> compare Optional method to compare the feature with any of the other features in the list. If omitted a reference compare is done. Returns Type Description bool Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Layers.html": {
    "href": "pages/Mapsui.Layers.html",
    "title": "Namespace Mapsui.Layers",
    "keywords": "Namespace Mapsui.Layers Classes BaseFeature BaseLayer FetchInfo GenericCollectionLayer<T> The GenericCollectionLayer uses a T of IEnumerable of IFeature ImageLayer Layer Create layer with name LayerCollection Represents a collection of map layers with support for grouping, ordering, and change notifications. LayerCollectionChangedEventArgs MemoryLayer The MemoryLayer has all features in memory. MyLocationLayer A layer to display a symbol for own location ObservableMemoryLayer<T> PointFeature Feature representing a point on the map RasterFeature Feature representing a bitmap on the map. RasterizingLayer WritableLayer Interfaces IDynamic IFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. ILayer Interface for map layers ILayerDataSource<T> ILayerFeatureInfo Some data source like WMS allow request for feature info. This is information not available in the primary response such as the WMS image. ISourceLayer Delegates LayerCollection.LayerCollectionChangedEventHandler"
  },
  "pages/Mapsui.Limiting.IViewportLimiter.html": {
    "href": "pages/Mapsui.Limiting.IViewportLimiter.html",
    "title": "Interface IViewportLimiter",
    "keywords": "Interface IViewportLimiter Namespace: Mapsui.Limiting Assembly: Mapsui.dll Syntax public interface IViewportLimiter Methods | Edit this page View Source Limit(Viewport, MRect?, MMinMax?) Declaration Viewport Limit(Viewport viewport, MRect? panBounds, MMinMax? zoomBounds) Parameters Type Name Description Viewport viewport MRect panBounds MMinMax zoomBounds Returns Type Description Viewport Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Limiting.ViewportLimiter.html": {
    "href": "pages/Mapsui.Limiting.ViewportLimiter.html",
    "title": "Class ViewportLimiter",
    "keywords": "Class ViewportLimiter Inheritance object ViewportLimiter Implements IViewportLimiter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Limiting Assembly: Mapsui.dll Syntax public class ViewportLimiter : IViewportLimiter Methods | Edit this page View Source Limit(Viewport, MRect?, MMinMax?) Declaration public Viewport Limit(Viewport viewport, MRect? panBounds, MMinMax? zoomBounds) Parameters Type Name Description Viewport viewport MRect panBounds MMinMax zoomBounds Returns Type Description Viewport Implements IViewportLimiter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Limiting.ViewportLimiterKeepWithinExtent.html": {
    "href": "pages/Mapsui.Limiting.ViewportLimiterKeepWithinExtent.html",
    "title": "Class ViewportLimiterKeepWithinExtent",
    "keywords": "Class ViewportLimiterKeepWithinExtent This Viewport limiter will make sure that only the area within the panBounds will be visible in the viewport. It should not be possible to view anything outside of the panBounds. An exception is rotation. Inheritance object ViewportLimiterKeepWithinExtent Implements IViewportLimiter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Limiting Assembly: Mapsui.dll Syntax public class ViewportLimiterKeepWithinExtent : IViewportLimiter Methods | Edit this page View Source Limit(Viewport, MRect?, MMinMax?) Declaration public Viewport Limit(Viewport viewport, MRect? panBounds, MMinMax? zoomBounds) Parameters Type Name Description Viewport viewport MRect panBounds MMinMax zoomBounds Returns Type Description Viewport Implements IViewportLimiter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Limiting.ViewportLimiterWithoutLimits.html": {
    "href": "pages/Mapsui.Limiting.ViewportLimiterWithoutLimits.html",
    "title": "Class ViewportLimiterWithoutLimits",
    "keywords": "Class ViewportLimiterWithoutLimits Inheritance object ViewportLimiterWithoutLimits Implements IViewportLimiter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Limiting Assembly: Mapsui.dll Syntax public class ViewportLimiterWithoutLimits : IViewportLimiter Methods | Edit this page View Source Limit(Viewport, MRect?, MMinMax?) Declaration public Viewport Limit(Viewport viewport, MRect? panBounds, MMinMax? zoomBounds) Parameters Type Name Description Viewport viewport MRect panBounds MMinMax zoomBounds Returns Type Description Viewport Implements IViewportLimiter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Limiting.html": {
    "href": "pages/Mapsui.Limiting.html",
    "title": "Namespace Mapsui.Limiting",
    "keywords": "Namespace Mapsui.Limiting Classes ViewportLimiter ViewportLimiterKeepWithinExtent This Viewport limiter will make sure that only the area within the panBounds will be visible in the viewport. It should not be possible to view anything outside of the panBounds. An exception is rotation. ViewportLimiterWithoutLimits Interfaces IViewportLimiter"
  },
  "pages/Mapsui.Logging.LogLevel.html": {
    "href": "pages/Mapsui.Logging.LogLevel.html",
    "title": "Enum LogLevel",
    "keywords": "Enum LogLevel Namespace: Mapsui.Logging Assembly: Mapsui.dll Syntax public enum LogLevel Fields Name Description Debug Error Information Trace Warning Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Logging.Logger.LoggerSettings.html": {
    "href": "pages/Mapsui.Logging.Logger.LoggerSettings.html",
    "title": "Class Logger.LoggerSettings",
    "keywords": "Class Logger.LoggerSettings Inheritance object Logger.LoggerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Logging Assembly: Mapsui.dll Syntax public class Logger.LoggerSettings Properties | Edit this page View Source LogFlingEvents Declaration public bool LogFlingEvents { get; set; } Property Value Type Description bool | Edit this page View Source LogMapEvents Declaration public bool LogMapEvents { get; set; } Property Value Type Description bool | Edit this page View Source LogWidgetEvents Declaration public bool LogWidgetEvents { get; set; } Property Value Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Logging.Logger.html": {
    "href": "pages/Mapsui.Logging.Logger.html",
    "title": "Class Logger",
    "keywords": "Class Logger Inheritance object Logger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Logging Assembly: Mapsui.dll Syntax public static class Logger Properties | Edit this page View Source LogDelegate Declaration public static Action<LogLevel, string, Exception?>? LogDelegate { get; set; } Property Value Type Description Action<LogLevel, string, Exception> | Edit this page View Source Settings Declaration public static Logger.LoggerSettings Settings { get; } Property Value Type Description Logger.LoggerSettings Methods | Edit this page View Source Log(LogLevel, string, Exception?) Declaration public static void Log(LogLevel level, string message, Exception? exception = null) Parameters Type Name Description LogLevel level string message Exception exception"
  },
  "pages/Mapsui.Logging.html": {
    "href": "pages/Mapsui.Logging.html",
    "title": "Namespace Mapsui.Logging",
    "keywords": "Namespace Mapsui.Logging Classes Logger Logger.LoggerSettings Enums LogLevel"
  },
  "pages/Mapsui.MBoxFit.html": {
    "href": "pages/Mapsui.MBoxFit.html",
    "title": "Enum MBoxFit",
    "keywords": "Enum MBoxFit Namespace: Mapsui Assembly: Mapsui.dll Syntax public enum MBoxFit Fields Name Description Fill Fill up the entire view port of the screen Fit Fit within the view port of the screen FitHeight Fill the height of the screen FitWidth Fill the width of the screen Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.MMinMax.html": {
    "href": "pages/Mapsui.MMinMax.html",
    "title": "Class MMinMax",
    "keywords": "Class MMinMax Inheritance object MMinMax Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MMinMax Constructors | Edit this page View Source MMinMax(double, double) Declaration public MMinMax(double value1, double value2) Parameters Type Name Description double value1 double value2 Properties | Edit this page View Source Max Declaration public double Max { get; } Property Value Type Description double | Edit this page View Source Min Declaration public double Min { get; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MPoint.html": {
    "href": "pages/Mapsui.MPoint.html",
    "title": "Class MPoint",
    "keywords": "Class MPoint Class for a point in Mapsui Inheritance object MPoint Implements IEquatable<MPoint> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MPoint : IEquatable<MPoint> Constructors | Edit this page View Source MPoint() Declaration public MPoint() | Edit this page View Source MPoint(MPoint) Declaration public MPoint(MPoint point) Parameters Type Name Description MPoint point | Edit this page View Source MPoint(double, double) Declaration public MPoint(double x, double y) Parameters Type Name Description double x double y | Edit this page View Source MPoint((double x, double y)) Declaration public MPoint((double x, double y) position) Parameters Type Name Description (double x, double y) position Properties | Edit this page View Source X Declaration public double X { get; set; } Property Value Type Description double | Edit this page View Source Y Declaration public double Y { get; set; } Property Value Type Description double Methods | Edit this page View Source Copy() Declaration public MPoint Copy() Returns Type Description MPoint | Edit this page View Source Distance(MPoint) Calculate distance to a given point Declaration public double Distance(MPoint point) Parameters Type Name Description MPoint point Point for calculating distance Returns Type Description double Distance between this and given point | Edit this page View Source Equals(MPoint?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MPoint? point) Parameters Type Name Description MPoint point Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source Offset(double, double) Create a new MPoint with an offset (x, y) to the original one Declaration public MPoint Offset(double offsetX, double offsetY) Parameters Type Name Description double offsetX Offset in X direction double offsetY Offset in Y direction Returns Type Description MPoint | Edit this page View Source Rotate(double) Calculates a new point by rotating this point clockwise about the origin (0,0) Declaration public MPoint Rotate(double degrees) Parameters Type Name Description double degrees Angle to rotate clockwise (degrees) Returns Type Description MPoint Returns the rotated point | Edit this page View Source Rotate(double, MPoint) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, MPoint center) Parameters Type Name Description double degrees Angle to rotate clockwise (degrees) MPoint center MPoint about which to rotate Returns Type Description MPoint Returns the rotated point | Edit this page View Source Rotate(double, double, double) Calculates a new point by rotating this point clockwise about the specified center point Declaration public MPoint Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description double degrees Angle to rotate clockwise (degrees) double centerX X coordinate of point about which to rotate double centerY Y coordinate of point about which to rotate Returns Type Description MPoint Returns the rotated point | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Operators | Edit this page View Source operator +(MPoint, MPoint) Declaration public static MPoint operator +(MPoint point1, MPoint point2) Parameters Type Name Description MPoint point1 MPoint point2 Returns Type Description MPoint | Edit this page View Source operator ==(MPoint?, MPoint?) Declaration public static bool operator ==(MPoint? left, MPoint? right) Parameters Type Name Description MPoint left MPoint right Returns Type Description bool | Edit this page View Source operator !=(MPoint?, MPoint?) Declaration public static bool operator !=(MPoint? left, MPoint? right) Parameters Type Name Description MPoint left MPoint right Returns Type Description bool | Edit this page View Source operator *(MPoint, double) Declaration public static MPoint operator *(MPoint point1, double multiplier) Parameters Type Name Description MPoint point1 double multiplier Returns Type Description MPoint | Edit this page View Source operator -(MPoint, MPoint) Declaration public static MPoint operator -(MPoint point1, MPoint point2) Parameters Type Name Description MPoint point1 MPoint point2 Returns Type Description MPoint Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MQuad.html": {
    "href": "pages/Mapsui.MQuad.html",
    "title": "Class MQuad",
    "keywords": "Class MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. Inheritance object MQuad Implements IEquatable<MQuad> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MQuad : IEquatable<MQuad> Remarks The sides do not have to be parallel to the two axes of the coordinate system. If this has been rotated, the 'BottomLeft' vertex may not actually be the min point in x/y. Constructors | Edit this page View Source MQuad() Declaration public MQuad() | Edit this page View Source MQuad(MPoint, MPoint, MPoint, MPoint) Declaration public MQuad(MPoint bottomLeft, MPoint topLeft, MPoint topRight, MPoint bottomRight) Parameters Type Name Description MPoint bottomLeft MPoint topLeft MPoint topRight MPoint bottomRight | Edit this page View Source MQuad(MQuad) Declaration public MQuad(MQuad quad) Parameters Type Name Description MQuad quad Properties | Edit this page View Source BottomLeft Declaration public MPoint BottomLeft { get; set; } Property Value Type Description MPoint | Edit this page View Source BottomRight Declaration public MPoint BottomRight { get; set; } Property Value Type Description MPoint | Edit this page View Source TopLeft Declaration public MPoint TopLeft { get; set; } Property Value Type Description MPoint | Edit this page View Source TopRight Declaration public MPoint TopRight { get; set; } Property Value Type Description MPoint | Edit this page View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<MPoint> Vertices { get; } Property Value Type Description IEnumerable<MPoint> Methods | Edit this page View Source Equals(MQuad?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MQuad? other) Parameters Type Name Description MQuad other Other object to compare Returns Type Description bool Returns true if they are equal | Edit this page View Source Equals(object?) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Other object to compare Returns Type Description bool Returns true if they are equal Overrides object.Equals(object) | Edit this page View Source GetHashCode() Returns a hash code for the specified object Declaration public override int GetHashCode() Returns Type Description int A hash code for the specified object Overrides object.GetHashCode() | Edit this page View Source Rotate(double, double, double) Creates a new quad by rotate all 4 vertices clockwise about the specified center point Declaration public MQuad Rotate(double degrees, double centerX, double centerY) Parameters Type Name Description double degrees Angle to rotate clockwise (degrees) double centerX X coordinate of point about which to rotate double centerY Y coordinate of point about which to rotate Returns Type Description MQuad Returns the rotate quad | Edit this page View Source ToBoundingBox() Calculates a new bounding box that encompasses all 4 vertices. Declaration public MRect ToBoundingBox() Returns Type Description MRect Returns the calculate bounding box | Edit this page View Source ToString() Returns a string representation of the vertices from bottom-left clockwise to bottom-right Declaration public override string ToString() Returns Type Description string Returns the string Overrides object.ToString() Operators | Edit this page View Source operator ==(MQuad?, MQuad?) Declaration public static bool operator ==(MQuad? left, MQuad? right) Parameters Type Name Description MQuad left MQuad right Returns Type Description bool | Edit this page View Source operator !=(MQuad?, MQuad?) Declaration public static bool operator !=(MQuad? left, MQuad? right) Parameters Type Name Description MQuad left MQuad right Returns Type Description bool Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MRaster.html": {
    "href": "pages/Mapsui.MRaster.html",
    "title": "Class MRaster",
    "keywords": "Class MRaster Inheritance object MRaster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MRaster Constructors | Edit this page View Source MRaster(MRaster) Declaration public MRaster(MRaster raster) Parameters Type Name Description MRaster raster | Edit this page View Source MRaster(byte[], MRect) Declaration public MRaster(byte[] data, MRect extent) Parameters Type Name Description byte[] data MRect extent Properties | Edit this page View Source Data Declaration public byte[] Data { get; } Property Value Type Description byte[] | Edit this page View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Edit this page View Source TickFetched Declaration public long TickFetched { get; } Property Value Type Description long Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MRect.html": {
    "href": "pages/Mapsui.MRect.html",
    "title": "Class MRect",
    "keywords": "Class MRect Inheritance object MRect Implements IEquatable<MRect> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MRect : IEquatable<MRect> Constructors | Edit this page View Source MRect(MRect) Declaration public MRect(MRect rect) Parameters Type Name Description MRect rect | Edit this page View Source MRect(IEnumerable<MRect>) Declaration public MRect(IEnumerable<MRect> rects) Parameters Type Name Description IEnumerable<MRect> rects | Edit this page View Source MRect(double) Declaration public MRect(double value) Parameters Type Name Description double value | Edit this page View Source MRect(double, double) Declaration public MRect(double x, double y) Parameters Type Name Description double x double y | Edit this page View Source MRect(double, double, double, double) Declaration public MRect(double minX, double minY, double maxX, double maxY) Parameters Type Name Description double minX double minY double maxX double maxY Properties | Edit this page View Source Bottom Declaration public double Bottom { get; } Property Value Type Description double | Edit this page View Source Centroid Declaration public MPoint Centroid { get; } Property Value Type Description MPoint | Edit this page View Source Height Declaration public double Height { get; } Property Value Type Description double | Edit this page View Source Left Declaration public double Left { get; } Property Value Type Description double | Edit this page View Source Max Declaration public MPoint Max { get; } Property Value Type Description MPoint | Edit this page View Source MaxX Declaration public double MaxX { get; } Property Value Type Description double | Edit this page View Source MaxY Declaration public double MaxY { get; } Property Value Type Description double | Edit this page View Source Min Declaration public MPoint Min { get; } Property Value Type Description MPoint | Edit this page View Source MinX Declaration public double MinX { get; } Property Value Type Description double | Edit this page View Source MinY Declaration public double MinY { get; } Property Value Type Description double | Edit this page View Source Right Declaration public double Right { get; } Property Value Type Description double | Edit this page View Source Top Declaration public double Top { get; } Property Value Type Description double | Edit this page View Source Vertices Returns the vertices in clockwise order from bottom left around to bottom right Declaration public IEnumerable<MPoint> Vertices { get; } Property Value Type Description IEnumerable<MPoint> | Edit this page View Source Width Declaration public double Width { get; } Property Value Type Description double Methods | Edit this page View Source Contains(MPoint?) Declaration public bool Contains(MPoint? point) Parameters Type Name Description MPoint point Returns Type Description bool | Edit this page View Source Contains(MRect) Declaration public bool Contains(MRect r) Parameters Type Name Description MRect r Returns Type Description bool | Edit this page View Source Contains(double, double) Declaration public bool Contains(double x, double y) Parameters Type Name Description double x double y Returns Type Description bool | Edit this page View Source Copy() Declaration public MRect Copy() Returns Type Description MRect | Edit this page View Source Equals(MRect?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MRect? other) Parameters Type Name Description MRect other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetArea() Declaration public double GetArea() Returns Type Description double | Edit this page View Source GetBottomLeft() Declaration public MPoint GetBottomLeft() Returns Type Description MPoint | Edit this page View Source GetBottomRight() Declaration public MPoint GetBottomRight() Returns Type Description MPoint | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source GetTopLeft() Declaration public MPoint GetTopLeft() Returns Type Description MPoint | Edit this page View Source GetTopRight() Declaration public MPoint GetTopRight() Returns Type Description MPoint | Edit this page View Source Grow(double) Declaration public MRect Grow(double amount) Parameters Type Name Description double amount Returns Type Description MRect | Edit this page View Source Grow(double, double) Declaration public MRect Grow(double amountInX, double amountInY) Parameters Type Name Description double amountInX double amountInY Returns Type Description MRect | Edit this page View Source Intersects(MRect?) Declaration public bool Intersects(MRect? rect) Parameters Type Name Description MRect rect Returns Type Description bool | Edit this page View Source Join(MRect?) Declaration public MRect Join(MRect? rect) Parameters Type Name Description MRect rect Returns Type Description MRect | Edit this page View Source Multiply(double) Adjusts the size by increasing Width and Heigh with (Width * Height) / 2 * factor. Declaration public MRect Multiply(double factor) Parameters Type Name Description double factor Returns Type Description MRect | Edit this page View Source Rotate(double) Calculates a new quad by rotating this rect about its center by the specified angle clockwise Declaration public MQuad Rotate(double degrees) Parameters Type Name Description double degrees Angle about which to rotate (degrees) Returns Type Description MQuad Returns the calculated quad | Edit this page View Source ToString() Returns a string representation of the vertices from bottom-left and top-right Declaration public override string ToString() Returns Type Description string Returns the string Overrides object.ToString() Operators | Edit this page View Source operator ==(MRect?, MRect?) Declaration public static bool operator ==(MRect? left, MRect? right) Parameters Type Name Description MRect left MRect right Returns Type Description bool | Edit this page View Source operator !=(MRect?, MRect?) Declaration public static bool operator !=(MRect? left, MRect? right) Parameters Type Name Description MRect left MRect right Returns Type Description bool Implements IEquatable<T> Extension Methods MRectExtensions.ToExtent(MRect) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MSection.html": {
    "href": "pages/Mapsui.MSection.html",
    "title": "Class MSection",
    "keywords": "Class MSection MSection represents a part of the map defined by the extent and the resolution to indicate the level of detail. It's main purpose is to define which data should be fetched. Inheritance object MSection Implements IEquatable<MSection> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public record MSection : IEquatable<MSection> Constructors | Edit this page View Source MSection(MRect, double) Declaration public MSection(MRect extent, double resolution) Parameters Type Name Description MRect extent double resolution Properties | Edit this page View Source Extent Declaration public MRect Extent { get; } Property Value Type Description MRect | Edit this page View Source Resolution Declaration public double Resolution { get; } Property Value Type Description double | Edit this page View Source ScreenHeight Declaration public double ScreenHeight { get; } Property Value Type Description double | Edit this page View Source ScreenWidth Declaration public double ScreenWidth { get; } Property Value Type Description double Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.FlingTracker.html": {
    "href": "pages/Mapsui.Manipulations.FlingTracker.html",
    "title": "Class FlingTracker",
    "keywords": "Class FlingTracker Inheritance object FlingTracker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public class FlingTracker Constructors | Edit this page View Source FlingTracker() Declaration public FlingTracker() Properties | Edit this page View Source MaxVelocity Declaration public static double MaxVelocity { get; set; } Property Value Type Description double | Edit this page View Source MinVelocity Declaration public static double MinVelocity { get; set; } Property Value Type Description double Methods | Edit this page View Source AddEvent(ScreenPosition, long) Declaration public void AddEvent(ScreenPosition position, long ticks) Parameters Type Name Description ScreenPosition position long ticks | Edit this page View Source FlingIfNeeded(Action<double, double>) Declaration public void FlingIfNeeded(Action<double, double> onFling) Parameters Type Name Description Action<double, double> onFling | Edit this page View Source Restart() Declaration public void Restart() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.GestureType.html": {
    "href": "pages/Mapsui.Manipulations.GestureType.html",
    "title": "Enum GestureType",
    "keywords": "Enum GestureType Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public enum GestureType Fields Name Description DoubleTap Two SingleTaps on nearly the same position within a certain time period. Drag Previously down on other position. Hover Previously up on other position. LongPress Previously down on nearly the same position during some specific period. Press First down. Release First up. SingleTap First up after a down on nearly the same position. Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Manipulations.Manipulation.html": {
    "href": "pages/Mapsui.Manipulations.Manipulation.html",
    "title": "Class Manipulation",
    "keywords": "Class Manipulation Inheritance object Manipulation Implements IEquatable<Manipulation> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public record Manipulation : IEquatable<Manipulation> Constructors | Edit this page View Source Manipulation(ScreenPosition, ScreenPosition, double, double, double) Declaration public Manipulation(ScreenPosition Center, ScreenPosition PreviousCenter, double ScaleFactor, double RotationChange, double TotalRotationChange) Parameters Type Name Description ScreenPosition Center ScreenPosition PreviousCenter double ScaleFactor double RotationChange double TotalRotationChange Properties | Edit this page View Source Center Declaration public ScreenPosition Center { get; init; } Property Value Type Description ScreenPosition | Edit this page View Source PreviousCenter Declaration public ScreenPosition PreviousCenter { get; init; } Property Value Type Description ScreenPosition | Edit this page View Source RotationChange Declaration public double RotationChange { get; init; } Property Value Type Description double | Edit this page View Source ScaleFactor Declaration public double ScaleFactor { get; init; } Property Value Type Description double | Edit this page View Source TotalRotationChange Declaration public double TotalRotationChange { get; init; } Property Value Type Description double Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.ManipulationTracker.html": {
    "href": "pages/Mapsui.Manipulations.ManipulationTracker.html",
    "title": "Class ManipulationTracker",
    "keywords": "Class ManipulationTracker Inheritance object ManipulationTracker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public class ManipulationTracker Methods | Edit this page View Source Manipulate(ReadOnlySpan<ScreenPosition>, Action<Manipulation>) Declaration public void Manipulate(ReadOnlySpan<ScreenPosition> positions, Action<Manipulation> onManipulation) Parameters Type Name Description ReadOnlySpan<ScreenPosition> positions Action<Manipulation> onManipulation | Edit this page View Source Restart(ReadOnlySpan<ScreenPosition>) Call this method before the first Update call. The Update method tracks the start manipulation angle which is needed to for rotation snapping and the previous manipulation state. Declaration public void Restart(ReadOnlySpan<ScreenPosition> positions) Parameters Type Name Description ReadOnlySpan<ScreenPosition> positions Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.ScreenPosition.html": {
    "href": "pages/Mapsui.Manipulations.ScreenPosition.html",
    "title": "Struct ScreenPosition",
    "keywords": "Struct ScreenPosition Implements IEquatable<ScreenPosition> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public record struct ScreenPosition : IEquatable<ScreenPosition> Constructors | Edit this page View Source ScreenPosition(double, double) Declaration public ScreenPosition(double X, double Y) Parameters Type Name Description double X double Y Properties | Edit this page View Source X Declaration public double X { readonly get; set; } Property Value Type Description double | Edit this page View Source Y Declaration public double Y { readonly get; set; } Property Value Type Description double Methods | Edit this page View Source Distance(ScreenPosition) Declaration public readonly double Distance(ScreenPosition position) Parameters Type Name Description ScreenPosition position Returns Type Description double | Edit this page View Source Offset(double, double) Declaration public readonly ScreenPosition Offset(double offsetX, double offsetY) Parameters Type Name Description double offsetX double offsetY Returns Type Description ScreenPosition Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.TapGestureTracker.html": {
    "href": "pages/Mapsui.Manipulations.TapGestureTracker.html",
    "title": "Class TapGestureTracker",
    "keywords": "Class TapGestureTracker Inheritance object TapGestureTracker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Manipulations Assembly: Mapsui.dll Syntax public class TapGestureTracker Methods | Edit this page View Source Restart(ScreenPosition) Declaration public void Restart(ScreenPosition position) Parameters Type Name Description ScreenPosition position | Edit this page View Source TapIfNeeded(ScreenPosition?, double, Func<ScreenPosition, GestureType, bool>) Declaration public bool TapIfNeeded(ScreenPosition? tapEndPosition, double maxTapDistance, Func<ScreenPosition, GestureType, bool> onTapped) Parameters Type Name Description ScreenPosition? tapEndPosition double maxTapDistance Func<ScreenPosition, GestureType, bool> onTapped Returns Type Description bool Indicates if the event was handled. If it is handled the caller should not do any further handling. The implementation of the tap event determines if the event is handled. Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Manipulations.html": {
    "href": "pages/Mapsui.Manipulations.html",
    "title": "Namespace Mapsui.Manipulations",
    "keywords": "Namespace Mapsui.Manipulations Classes FlingTracker Manipulation ManipulationTracker TapGestureTracker Structs ScreenPosition Enums GestureType"
  },
  "pages/Mapsui.Map.html": {
    "href": "pages/Mapsui.Map.html",
    "title": "Class Map",
    "keywords": "Class Map Map class Inheritance object Map Implements INotifyPropertyChanged IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class Map : INotifyPropertyChanged, IDisposable Remarks Map holds all map related info like the target CRS, layers, widgets and so on. Constructors | Edit this page View Source Map() Initializes a new map Declaration public Map() Properties | Edit this page View Source BackColor Map background color (defaults to transparent) Declaration public Color BackColor { get; set; } Property Value Type Description Color | Edit this page View Source CRS Coordinate reference system (projection type of map). Default: \"EPSG:3857\" (SphericalMercator). Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Extent Gets the extent of the map based on the extent of all the layers in the layers collection Declaration public MRect? Extent { get; } Property Value Type Description MRect Full map extent | Edit this page View Source FetchMachine Declaration public FetchMachine FetchMachine { get; } Property Value Type Description FetchMachine | Edit this page View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public LayerCollection Layers { get; } Property Value Type Description LayerCollection | Edit this page View Source Navigator Handles all manipulations of the map viewport Declaration public Navigator Navigator { get; } Property Value Type Description Navigator | Edit this page View Source Performance Declaration public Performance Performance { get; } Property Value Type Description Performance | Edit this page View Source RenderService Declaration public RenderService RenderService { get; set; } Property Value Type Description RenderService | Edit this page View Source Widgets List of Widgets belonging to map Declaration public ConcurrentQueue<IWidget> Widgets { get; } Property Value Type Description ConcurrentQueue<IWidget> Methods | Edit this page View Source AbortFetch() Abort fetching of all layers Declaration public void AbortFetch() | Edit this page View Source ClearCache() Clear cache of all layers Declaration public void ClearCache() | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source GetWidgetsOfMapAndLayers() Declaration public IEnumerable<IWidget> GetWidgetsOfMapAndLayers() Returns Type Description IEnumerable<IWidget> | Edit this page View Source OnMapInfo(MapInfoEventArgs) This method is to invoke the Info event from the Map. This method is called by the MapControl/MapView and should usually not be called from user code. Declaration public void OnMapInfo(MapInfoEventArgs e) Parameters Type Name Description MapInfoEventArgs e | Edit this page View Source OnViewportSizeInitialized() Declaration public void OnViewportSizeInitialized() | Edit this page View Source Refresh(ChangeType) Refresh data of the map and than repaint it Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType, Viewport?) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete, Viewport? viewport = null) Parameters Type Name Description ChangeType changeType Viewport? viewport | Edit this page View Source RefreshData(Viewport) Declaration public void RefreshData(Viewport viewport) Parameters Type Name Description Viewport viewport | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description bool Events | Edit this page View Source DataChanged DataChanged should be triggered by any data changes of any of the child layers Declaration public event DataChangedEventHandler? DataChanged Event Type Type Description DataChangedEventHandler | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source PointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? PointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? PointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? PointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler | Edit this page View Source RefreshGraphicsRequest Declaration public event EventHandler? RefreshGraphicsRequest Event Type Type Description EventHandler | Edit this page View Source Tapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? Tapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source ViewportInitialized Called when the viewport is initialized Declaration public event EventHandler? ViewportInitialized Event Type Type Description EventHandler Implements INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.AddLayer.html": {
    "href": "pages/Mapsui.MapBuilder.AddLayer.html",
    "title": "Delegate MapBuilder.AddLayer",
    "keywords": "Delegate MapBuilder.AddLayer Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate ILayer MapBuilder.AddLayer(Map map) Parameters Type Name Description Map map Returns Type Description ILayer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.AddWidget.html": {
    "href": "pages/Mapsui.MapBuilder.AddWidget.html",
    "title": "Delegate MapBuilder.AddWidget",
    "keywords": "Delegate MapBuilder.AddWidget Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate IWidget MapBuilder.AddWidget(Map map) Parameters Type Name Description Map map Returns Type Description IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.ConfigureLayer.html": {
    "href": "pages/Mapsui.MapBuilder.ConfigureLayer.html",
    "title": "Delegate MapBuilder.ConfigureLayer",
    "keywords": "Delegate MapBuilder.ConfigureLayer Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void MapBuilder.ConfigureLayer(ILayer layer, Map map) Parameters Type Name Description ILayer layer Map map Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.ConfigureMap.html": {
    "href": "pages/Mapsui.MapBuilder.ConfigureMap.html",
    "title": "Delegate MapBuilder.ConfigureMap",
    "keywords": "Delegate MapBuilder.ConfigureMap Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void MapBuilder.ConfigureMap(Map map) Parameters Type Name Description Map map Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.ConfigureWidget.html": {
    "href": "pages/Mapsui.MapBuilder.ConfigureWidget.html",
    "title": "Delegate MapBuilder.ConfigureWidget",
    "keywords": "Delegate MapBuilder.ConfigureWidget Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void MapBuilder.ConfigureWidget(IWidget widget) Parameters Type Name Description IWidget widget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.TapFeature.html": {
    "href": "pages/Mapsui.MapBuilder.TapFeature.html",
    "title": "Delegate MapBuilder.TapFeature",
    "keywords": "Delegate MapBuilder.TapFeature Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void MapBuilder.TapFeature(Action<IFeature> tapFeature) Parameters Type Name Description Action<IFeature> tapFeature Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapBuilder.html": {
    "href": "pages/Mapsui.MapBuilder.html",
    "title": "Class MapBuilder",
    "keywords": "Class MapBuilder Inheritance object MapBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MapBuilder Methods | Edit this page View Source Build() Declaration public Map Build() Returns Type Description Map | Edit this page View Source WithBaseLayer(AddLayer) Declaration public MapBuilder WithBaseLayer(MapBuilder.AddLayer layerFactory) Parameters Type Name Description MapBuilder.AddLayer layerFactory Returns Type Description MapBuilder | Edit this page View Source WithLayer(AddLayer, ConfigureLayer?) Declaration public MapBuilder WithLayer(MapBuilder.AddLayer layerFactory, MapBuilder.ConfigureLayer? configureLayer = null) Parameters Type Name Description MapBuilder.AddLayer layerFactory MapBuilder.ConfigureLayer configureLayer Returns Type Description MapBuilder | Edit this page View Source WithMapCRS(string) Declaration public MapBuilder WithMapCRS(string crs) Parameters Type Name Description string crs Returns Type Description MapBuilder | Edit this page View Source WithMapConfiguration(ConfigureMap) Declaration public MapBuilder WithMapConfiguration(MapBuilder.ConfigureMap configureMap) Parameters Type Name Description MapBuilder.ConfigureMap configureMap Returns Type Description MapBuilder | Edit this page View Source WithWidget(AddWidget) Declaration public MapBuilder WithWidget(MapBuilder.AddWidget widgetFactory) Parameters Type Name Description MapBuilder.AddWidget widgetFactory Returns Type Description MapBuilder | Edit this page View Source WithWidget(AddWidget, ConfigureWidget) Declaration public MapBuilder WithWidget(MapBuilder.AddWidget widgetFactory, MapBuilder.ConfigureWidget configureWidget) Parameters Type Name Description MapBuilder.AddWidget widgetFactory MapBuilder.ConfigureWidget configureWidget Returns Type Description MapBuilder | Edit this page View Source WithZoomButtons() Declaration public MapBuilder WithZoomButtons() Returns Type Description MapBuilder Extension Methods MapBuilderExtensions.WithOpenStreetMapLayer(MapBuilder, MapBuilder.ConfigureLayer) MapBuilderExtensions.WithScaleBarWidget(MapBuilder) MapBuilderExtensions.WithScaleBarWidget(MapBuilder, MapBuilderExtensions.ConfigureScaleBarWidget) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapEventArgs.html": {
    "href": "pages/Mapsui.MapEventArgs.html",
    "title": "Class MapEventArgs",
    "keywords": "Class MapEventArgs Inheritance object EventArgs HandledEventArgs BaseEventArgs MapEventArgs Inherited Members BaseEventArgs.ScreenPosition BaseEventArgs.WorldPosition BaseEventArgs.GestureType BaseEventArgs.Map BaseEventArgs.GetMapInfo BaseEventArgs.GetRemoteMapInfoAsync HandledEventArgs.Handled EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MapEventArgs : BaseEventArgs Constructors | Edit this page View Source MapEventArgs(ScreenPosition, MPoint, GestureType, Map, GetMapInfoDelegate, GetRemoteMapInfoAsyncDelegate) Declaration public MapEventArgs(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType, Map map, GetMapInfoDelegate getMapInfo, GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Map map GetMapInfoDelegate getMapInfo GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapInfo.html": {
    "href": "pages/Mapsui.MapInfo.html",
    "title": "Class MapInfo",
    "keywords": "Class MapInfo Inheritance object MapInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MapInfo Constructors | Edit this page View Source MapInfo(ScreenPosition, MPoint, double, IEnumerable<MapInfoRecord>?) Declaration public MapInfo(ScreenPosition screenPosition, MPoint worldPosition, double resolution, IEnumerable<MapInfoRecord>? mapInfoRecords = null) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition double resolution IEnumerable<MapInfoRecord> mapInfoRecords Properties | Edit this page View Source Feature The feature touched by the user Declaration public IFeature? Feature { get; } Property Value Type Description IFeature | Edit this page View Source Layer The layer to which the touched feature belongs Declaration public ILayer? Layer { get; } Property Value Type Description ILayer | Edit this page View Source MapInfoRecord Current Map Info Record Declaration public MapInfoRecord? MapInfoRecord { get; } Property Value Type Description MapInfoRecord | Edit this page View Source MapInfoRecords List of MapInfo Records Declaration public IEnumerable<MapInfoRecord> MapInfoRecords { get; } Property Value Type Description IEnumerable<MapInfoRecord> | Edit this page View Source Resolution The resolution at which the info was retrieved. This can be useful to calculate screen distances, which are needed for editing functionality. Declaration public double Resolution { get; } Property Value Type Description double | Edit this page View Source ScreenPosition Screen position of the place the user touched Declaration public ScreenPosition ScreenPosition { get; } Property Value Type Description ScreenPosition | Edit this page View Source Style The style of feature touched by the user Declaration public IStyle? Style { get; } Property Value Type Description IStyle | Edit this page View Source WorldPosition World position of the place the user touched Declaration public MPoint WorldPosition { get; } Property Value Type Description MPoint Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.MapInfoEventArgs.html": {
    "href": "pages/Mapsui.MapInfoEventArgs.html",
    "title": "Class MapInfoEventArgs",
    "keywords": "Class MapInfoEventArgs Inheritance object EventArgs HandledEventArgs BaseEventArgs MapInfoEventArgs Inherited Members BaseEventArgs.ScreenPosition BaseEventArgs.WorldPosition BaseEventArgs.GestureType BaseEventArgs.Map BaseEventArgs.GetMapInfo BaseEventArgs.GetRemoteMapInfoAsync HandledEventArgs.Handled EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class MapInfoEventArgs : BaseEventArgs Constructors | Edit this page View Source MapInfoEventArgs(ScreenPosition, MPoint, GestureType, Map, GetMapInfoDelegate, GetRemoteMapInfoAsyncDelegate) Declaration public MapInfoEventArgs(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType, Map map, GetMapInfoDelegate getMapInfo, GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Map map GetMapInfoDelegate getMapInfo GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Navigator.ViewportChangedEventHandler.html": {
    "href": "pages/Mapsui.Navigator.ViewportChangedEventHandler.html",
    "title": "Delegate Navigator.ViewportChangedEventHandler",
    "keywords": "Delegate Navigator.ViewportChangedEventHandler Namespace: Mapsui Assembly: Mapsui.dll Syntax public delegate void Navigator.ViewportChangedEventHandler(object sender, ViewportChangedEventArgs e) Parameters Type Name Description object sender ViewportChangedEventArgs e Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Navigator.html": {
    "href": "pages/Mapsui.Navigator.html",
    "title": "Class Navigator",
    "keywords": "Class Navigator Inheritance object Navigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class Navigator Constructors | Edit this page View Source Navigator() Declaration public Navigator() Properties | Edit this page View Source IsInitialized Declaration public bool IsInitialized { get; } Property Value Type Description bool | Edit this page View Source Limiter Declaration public IViewportLimiter Limiter { get; set; } Property Value Type Description IViewportLimiter | Edit this page View Source MouseWheelAnimation Declaration public MouseWheelAnimation MouseWheelAnimation { get; } Property Value Type Description MouseWheelAnimation | Edit this page View Source OverridePanBounds Overrides the default pan bounds which come from the Map extent. Declaration public MRect? OverridePanBounds { get; set; } Property Value Type Description MRect | Edit this page View Source OverrideResolutions Overrides the default resolutions which are derived from the Map.Layers resolutions. Declaration public IReadOnlyList<double>? OverrideResolutions { get; set; } Property Value Type Description IReadOnlyList<double> | Edit this page View Source OverrideZoomBounds Declaration public MMinMax? OverrideZoomBounds { get; set; } Property Value Type Description MMinMax | Edit this page View Source PanBounds The bounds to restrict panning. Exactly how these bounds affects panning depends on the implementation of the IViewportLimiter. Declaration public MRect? PanBounds { get; } Property Value Type Description MRect | Edit this page View Source PanLock When true the user can not pan (move) the map. Declaration public bool PanLock { get; set; } Property Value Type Description bool | Edit this page View Source ReSnapRotation With how many degrees from 0 should map snap to 0 degrees Declaration public double ReSnapRotation { get; set; } Property Value Type Description double | Edit this page View Source Resolutions List of resolutions that can be used when going to a new zoom level. In the most common case these resolutions correspond to the resolutions of the background layer of the map. In the Mapsui samples this is usually the openstreetmap layer, but there are also situations where this is no background layer with resolutions. Or where one app switches between different background layers with different resolutions. Also note that when pinch zooming these resolutions are not used. Declaration public IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList<double> | Edit this page View Source RotationLock When true the user can not rotate the map Declaration public bool RotationLock { get; set; } Property Value Type Description bool | Edit this page View Source UnSnapRotation Overrides the default zoom bounds which are derived from the Map resolutions. Declaration public double UnSnapRotation { get; set; } Property Value Type Description double | Edit this page View Source Viewport Declaration public Viewport Viewport { get; } Property Value Type Description Viewport | Edit this page View Source ZoomBounds The bounds of zooming, i.e. the smallest and biggest resolutions. How these bounds affect zooming depends on the implementation of the IViewportLimiter. Declaration public MMinMax? ZoomBounds { get; } Property Value Type Description MMinMax | Edit this page View Source ZoomLock When true the user can not zoom the map Declaration public bool ZoomLock { get; set; } Property Value Type Description bool Methods | Edit this page View Source CenterOn(MPoint, long, Easing?) Change center of the viewport Declaration public void CenterOn(MPoint center, long duration = -1, Easing? easing = null) Parameters Type Name Description MPoint center New center point of the viewport long duration Duration for animation in milliseconds. Easing easing Function for easing | Edit this page View Source CenterOn(double, double, long, Easing?) Change center of the viewport to X/Y coordinates Declaration public void CenterOn(double x, double y, long duration = -1, Easing? easing = null) Parameters Type Name Description double x X value of the new center double y Y value of the new center long duration Duration for animation in milliseconds. Easing easing Function for easing | Edit this page View Source CenterOnAndZoomTo(MPoint, double, long, Easing?) Navigate to center and change resolution with animation Declaration public void CenterOnAndZoomTo(MPoint center, double resolution, long duration = -1, Easing? easing = null) Parameters Type Name Description MPoint center New center to move to double resolution New resolution to use long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source Fling(double, double, long) Animate Fling of the viewport. This method is called from the MapControl and is usually not called from user code. This method does not call Navigated. Declaration public void Fling(double velocityX, double velocityY, long maxDuration) Parameters Type Name Description double velocityX VelocityX from SwipedEventArgs> double velocityY VelocityX from SwipedEventArgs> long maxDuration Maximum duration of fling deceleration> | Edit this page View Source FlyTo(MPoint, double, long) Fly to the given center with zooming out to given resolution and in again Declaration public void FlyTo(MPoint center, double maxResolution, long duration = 500) Parameters Type Name Description MPoint center MPoint to fly to double maxResolution Maximum resolution to zoom out long duration Duration for animation in milliseconds. | Edit this page View Source Manipulate(Manipulation?) Declaration public void Manipulate(Manipulation? manipulation) Parameters Type Name Description Manipulation manipulation | Edit this page View Source MouseWheelZoom(int, ScreenPosition) Declaration public void MouseWheelZoom(int mouseWheelDelta, ScreenPosition centerOfZoom) Parameters Type Name Description int mouseWheelDelta ScreenPosition centerOfZoom | Edit this page View Source MouseWheelZoomContinuous(double, ScreenPosition) Declaration public void MouseWheelZoomContinuous(double scaleFactor, ScreenPosition centerOfZoom) Parameters Type Name Description double scaleFactor ScreenPosition centerOfZoom | Edit this page View Source RotateTo(double, long, Easing?) Change rotation of the viewport Declaration public void RotateTo(double rotation, long duration = -1, Easing? easing = null) Parameters Type Name Description double rotation New rotation in degrees of the viewport> long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source SetSize(double, double) Declaration public void SetSize(double width, double height) Parameters Type Name Description double width double height | Edit this page View Source SetViewport(Viewport, long, Easing?) Declaration public void SetViewport(Viewport viewport, long duration = -1, Easing? easing = null) Parameters Type Name Description Viewport viewport long duration Easing easing | Edit this page View Source SetViewportAnimations(List<AnimationEntry<Viewport>>) Declaration public void SetViewportAnimations(List<AnimationEntry<Viewport>> animations) Parameters Type Name Description List<AnimationEntry<Viewport>> animations | Edit this page View Source UpdateAnimations() Declaration public bool UpdateAnimations() Returns Type Description bool | Edit this page View Source ZoomIn(ScreenPosition, long, Easing?) Zoom in to a given point Declaration public void ZoomIn(ScreenPosition centerOfZoom, long duration = -1, Easing? easing = null) Parameters Type Name Description ScreenPosition centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in.For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomIn(long, Easing?) Zoom in to the next resolution in the Navigator.Resolutions list. Declaration public void ZoomIn(long duration = -1, Easing? easing = null) Parameters Type Name Description long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomOut(ScreenPosition, long, Easing?) Zoom out to a given point Declaration public void ZoomOut(ScreenPosition centerOfZoom, long duration = -1, Easing? easing = null) Parameters Type Name Description ScreenPosition centerOfZoom Center of zoom. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomOut(long, Easing?) Zoom out to the next resolution in the Navigator.Resolutions list. Declaration public void ZoomOut(long duration = -1, Easing? easing = null) Parameters Type Name Description long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomTo(double, ScreenPosition, long, Easing?) Zoom to a given resolution with a given point as center Declaration public void ZoomTo(double resolution, ScreenPosition centerOfZoomScreen, long duration = -1, Easing? easing = null) Parameters Type Name Description double resolution Resolution to zoom ScreenPosition centerOfZoomScreen Center of zoom in screen coordinates. This is the one point in the map that stays on the same location while zooming in. For instance, in mouse wheel zoom animation the position of the mouse pointer can be the center of zoom. Note, that the centerOfZoom is in screen coordinates not world coordinates, this is because this is most convenient for the main use case, zoom with the mouse position as center. long duration Duration for animation in milliseconds. Easing easing The easing of the animation when duration is > 0 | Edit this page View Source ZoomTo(double, long, Easing?) Change resolution of the viewport Declaration public void ZoomTo(double resolution, long duration = -1, Easing? easing = null) Parameters Type Name Description double resolution New resolution to use long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomToBox(MRect?, MBoxFit, long, Easing?) Zooms the viewport to show the box. The boxFit parameter can be used to deal with a difference in the width/height ratio between the viewport and the box. The center and resolution will change accordingly. Declaration public void ZoomToBox(MRect? box, MBoxFit boxFit = MBoxFit.Fit, long duration = -1, Easing? easing = null) Parameters Type Name Description MRect box The box to show in the viewport. MBoxFit boxFit The way the box should be fit into the view. long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state | Edit this page View Source ZoomToLevel(int) Zooms to the level indicated. The level is the index of the resolution in the Navigator.Resolutions list. Declaration public void ZoomToLevel(int level) Parameters Type Name Description int level The index of the Navigator.Resolutions list. | Edit this page View Source ZoomToPanBounds(MBoxFit, long, Easing?) Navigate to the PanBounds. Declaration public void ZoomToPanBounds(MBoxFit boxFit = MBoxFit.Fill, long duration = -1, Easing? easing = null) Parameters Type Name Description MBoxFit boxFit Scale method to use to determine resolution long duration Duration for animation in milliseconds. Easing easing The type of easing function used to transform from begin tot end state Events | Edit this page View Source FetchRequested Called when a data refresh is needed. This directly after a non-animated viewport change is made and after an animation has completed. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> | Edit this page View Source ViewportChanged Declaration public event Navigator.ViewportChangedEventHandler? ViewportChanged Event Type Type Description Navigator.ViewportChangedEventHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Editing.AddInfo.html": {
    "href": "pages/Mapsui.Nts.Editing.AddInfo.html",
    "title": "Class AddInfo",
    "keywords": "Class AddInfo Inheritance object AddInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public class AddInfo Properties | Edit this page View Source Feature Declaration public GeometryFeature? Feature { get; set; } Property Value Type Description GeometryFeature | Edit this page View Source Vertex Declaration public Coordinate? Vertex { get; set; } Property Value Type Description Coordinate | Edit this page View Source Vertices Declaration public IList<Coordinate>? Vertices { get; set; } Property Value Type Description IList<Coordinate> Methods | Edit this page View Source Reset() Declaration public void Reset() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Editing.DragInfo.html": {
    "href": "pages/Mapsui.Nts.Editing.DragInfo.html",
    "title": "Class DragInfo",
    "keywords": "Class DragInfo Inheritance object DragInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public class DragInfo Properties | Edit this page View Source DraggingFeature Declaration public bool DraggingFeature { get; set; } Property Value Type Description bool | Edit this page View Source Feature Declaration public GeometryFeature? Feature { get; set; } Property Value Type Description GeometryFeature | Edit this page View Source StartOffsetToVertex Declaration public MPoint? StartOffsetToVertex { get; set; } Property Value Type Description MPoint | Edit this page View Source Vertex Declaration public Coordinate? Vertex { get; set; } Property Value Type Description Coordinate Methods | Edit this page View Source Reset() Declaration public void Reset() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Editing.EditHelper.html": {
    "href": "pages/Mapsui.Nts.Editing.EditHelper.html",
    "title": "Class EditHelper",
    "keywords": "Class EditHelper Inheritance object EditHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public static class EditHelper Methods | Edit this page View Source ShouldInsert(MPoint, double, List<Coordinate>, double, out int) Determines if a coordinate should be inserted into list of coordinates. It fails if the distance of the location to the line is larger than the screenDistance. Declaration public static bool ShouldInsert(MPoint worldPosition, double resolution, List<Coordinate> coordinates, double screenDistance, out int segment) Parameters Type Name Description MPoint worldPosition The position that should perhaps be inserted. double resolution The map resolution that is needed to calculate the distance. List<Coordinate> coordinates The coordinates to insert into. double screenDistance The allowed screen distance. This value is determined by the size of a symbol or the line width. int segment The segment to insert it at. Returns Type Description bool"
  },
  "pages/Mapsui.Nts.Editing.EditManager.html": {
    "href": "pages/Mapsui.Nts.Editing.EditManager.html",
    "title": "Class EditManager",
    "keywords": "Class EditManager Inheritance object EditManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public class EditManager Properties | Edit this page View Source EditMode Declaration public EditMode EditMode { get; set; } Property Value Type Description EditMode | Edit this page View Source Layer Declaration public WritableLayer? Layer { get; set; } Property Value Type Description WritableLayer | Edit this page View Source SelectMode Declaration public bool SelectMode { get; set; } Property Value Type Description bool | Edit this page View Source VertexRadius Declaration public int VertexRadius { get; set; } Property Value Type Description int Methods | Edit this page View Source AddVertex(Coordinate) Declaration public bool AddVertex(Coordinate worldPosition) Parameters Type Name Description Coordinate worldPosition Returns Type Description bool | Edit this page View Source AngleBetween(Point, Point) Declaration public static double AngleBetween(Point vector1, Point vector2) Parameters Type Name Description Point vector1 Point vector2 Returns Type Description double | Edit this page View Source Dragging(Point?) Declaration public bool Dragging(Point? worldPosition) Parameters Type Name Description Point worldPosition Returns Type Description bool | Edit this page View Source EndEdit() Declaration public bool EndEdit() Returns Type Description bool | Edit this page View Source GetGrownExtent() Declaration public MRect? GetGrownExtent() Returns Type Description MRect | Edit this page View Source HoveringVertex(MapInfo) Declaration public void HoveringVertex(MapInfo mapInfo) Parameters Type Name Description MapInfo mapInfo | Edit this page View Source IsManipulating() Declaration public bool IsManipulating() Returns Type Description bool | Edit this page View Source ResetManipulations() Declaration public void ResetManipulations() | Edit this page View Source Rotating(Point?) Declaration public bool Rotating(Point? worldPosition) Parameters Type Name Description Point worldPosition Returns Type Description bool | Edit this page View Source Scaling(Point?) Declaration public bool Scaling(Point? worldPosition) Parameters Type Name Description Point worldPosition Returns Type Description bool | Edit this page View Source StartDragging(MapInfo, double) Declaration public bool StartDragging(MapInfo mapInfo, double screenDistance) Parameters Type Name Description MapInfo mapInfo double screenDistance Returns Type Description bool | Edit this page View Source StartRotating(MapInfo) Declaration public bool StartRotating(MapInfo mapInfo) Parameters Type Name Description MapInfo mapInfo Returns Type Description bool | Edit this page View Source StartScaling(MapInfo) Declaration public bool StartScaling(MapInfo mapInfo) Parameters Type Name Description MapInfo mapInfo Returns Type Description bool | Edit this page View Source StopDragging() Declaration public void StopDragging() | Edit this page View Source StopRotating() Declaration public void StopRotating() | Edit this page View Source StopScaling() Declaration public void StopScaling() | Edit this page View Source TryDeleteCoordinate(MapInfo, double) Declaration public bool TryDeleteCoordinate(MapInfo mapInfo, double screenDistance) Parameters Type Name Description MapInfo mapInfo double screenDistance Returns Type Description bool | Edit this page View Source TryInsertCoordinate(MapInfo) Declaration public bool TryInsertCoordinate(MapInfo mapInfo) Parameters Type Name Description MapInfo mapInfo Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Editing.EditManipulation.html": {
    "href": "pages/Mapsui.Nts.Editing.EditManipulation.html",
    "title": "Class EditManipulation",
    "keywords": "Class EditManipulation Inheritance object EditManipulation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public static class EditManipulation Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs, EditManager) Declaration public static bool OnPointerMoved(WidgetEventArgs e, EditManager editManager) Parameters Type Name Description WidgetEventArgs e EditManager editManager Returns Type Description bool | Edit this page View Source OnPointerPressed(WidgetEventArgs, EditManager) Declaration public static bool OnPointerPressed(WidgetEventArgs e, EditManager editManager) Parameters Type Name Description WidgetEventArgs e EditManager editManager Returns Type Description bool | Edit this page View Source OnPointerReleased(EditManager) Declaration public static bool OnPointerReleased(EditManager editManager) Parameters Type Name Description EditManager editManager Returns Type Description bool | Edit this page View Source OnTapped(WidgetEventArgs, EditManager) Declaration public static bool OnTapped(WidgetEventArgs e, EditManager editManager) Parameters Type Name Description WidgetEventArgs e EditManager editManager Returns Type Description bool"
  },
  "pages/Mapsui.Nts.Editing.EditMode.html": {
    "href": "pages/Mapsui.Nts.Editing.EditMode.html",
    "title": "Enum EditMode",
    "keywords": "Enum EditMode Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public enum EditMode Fields Name Description AddLine AddPoint AddPolygon DrawingLine DrawingPolygon Modify None Rotate Scale Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Nts.Editing.Geomorpher.html": {
    "href": "pages/Mapsui.Nts.Editing.Geomorpher.html",
    "title": "Class Geomorpher",
    "keywords": "Class Geomorpher Inheritance object Geomorpher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public static class Geomorpher Methods | Edit this page View Source Rotate(Geometry, double, Point) Declaration public static void Rotate(Geometry geometry, double degrees, Point center) Parameters Type Name Description Geometry geometry double degrees Point center | Edit this page View Source Scale(Geometry, double, Point) Declaration public static void Scale(Geometry geometry, double scale, Point center) Parameters Type Name Description Geometry geometry double scale Point center"
  },
  "pages/Mapsui.Nts.Editing.RotateInfo.html": {
    "href": "pages/Mapsui.Nts.Editing.RotateInfo.html",
    "title": "Class RotateInfo",
    "keywords": "Class RotateInfo Inheritance object RotateInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Editing Assembly: Mapsui.Nts.dll Syntax public class RotateInfo Properties | Edit this page View Source Center Declaration public Point? Center { get; set; } Property Value Type Description Point | Edit this page View Source Feature Declaration public GeometryFeature? Feature { get; set; } Property Value Type Description GeometryFeature | Edit this page View Source PreviousPosition Declaration public Point? PreviousPosition { get; set; } Property Value Type Description Point Methods | Edit this page View Source Reset() Declaration public void Reset() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Editing.html": {
    "href": "pages/Mapsui.Nts.Editing.html",
    "title": "Namespace Mapsui.Nts.Editing",
    "keywords": "Namespace Mapsui.Nts.Editing Classes AddInfo DragInfo EditHelper EditManager EditManipulation Geomorpher RotateInfo Enums EditMode"
  },
  "pages/Mapsui.Nts.Extensions.CoordinateExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.CoordinateExtensions.html",
    "title": "Class CoordinateExtensions",
    "keywords": "Class CoordinateExtensions Inheritance object CoordinateExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class CoordinateExtensions Methods | Edit this page View Source SetXY(Coordinate?, MPoint?) Declaration public static void SetXY(this Coordinate? target, MPoint? source) Parameters Type Name Description Coordinate target MPoint source | Edit this page View Source SetXY(Coordinate?, Coordinate?) Declaration public static void SetXY(this Coordinate? target, Coordinate? source) Parameters Type Name Description Coordinate target Coordinate source | Edit this page View Source ToLineString(IEnumerable<Coordinate>) Declaration public static LineString ToLineString(this IEnumerable<Coordinate> coordinates) Parameters Type Name Description IEnumerable<Coordinate> coordinates Returns Type Description LineString | Edit this page View Source ToLinearRing(IEnumerable<Coordinate>) Declaration public static LinearRing ToLinearRing(this IEnumerable<Coordinate> coordinates) Parameters Type Name Description IEnumerable<Coordinate> coordinates Returns Type Description LinearRing | Edit this page View Source ToMPoint(Coordinate) Declaration public static MPoint ToMPoint(this Coordinate coordinate) Parameters Type Name Description Coordinate coordinate Returns Type Description MPoint | Edit this page View Source ToPoint(Coordinate) Declaration public static Point ToPoint(this Coordinate coordinate) Parameters Type Name Description Coordinate coordinate Returns Type Description Point | Edit this page View Source ToPolygon(IEnumerable<Coordinate>, IEnumerable<IEnumerable<Coordinate>>?) Declaration public static Polygon ToPolygon(this IEnumerable<Coordinate> coordinates, IEnumerable<IEnumerable<Coordinate>>? holes = null) Parameters Type Name Description IEnumerable<Coordinate> coordinates IEnumerable<IEnumerable<Coordinate>> holes Returns Type Description Polygon"
  },
  "pages/Mapsui.Nts.Extensions.EnvelopeExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.EnvelopeExtensions.html",
    "title": "Class EnvelopeExtensions",
    "keywords": "Class EnvelopeExtensions Inheritance object EnvelopeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class EnvelopeExtensions Methods | Edit this page View Source ToMRect(Envelope) Declaration public static MRect ToMRect(this Envelope envelope) Parameters Type Name Description Envelope envelope Returns Type Description MRect"
  },
  "pages/Mapsui.Nts.Extensions.GeometryExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.GeometryExtensions.html",
    "title": "Class GeometryExtensions",
    "keywords": "Class GeometryExtensions Inheritance object GeometryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class GeometryExtensions Methods | Edit this page View Source DeleteCoordinate(Geometry?, int) Declaration public static Geometry? DeleteCoordinate(this Geometry? geometry, int index) Parameters Type Name Description Geometry geometry int index Returns Type Description Geometry | Edit this page View Source GetVertexLists(Geometry) For editing features it is simpler if we can treat al geometries as a list of lists of points. Declaration public static IList<IList<Coordinate>> GetVertexLists(this Geometry geometry) Parameters Type Name Description Geometry geometry Returns Type Description IList<IList<Coordinate>> | Edit this page View Source InsertCoordinate(Geometry?, Coordinate, int) Declaration public static Geometry? InsertCoordinate(this Geometry? geometry, Coordinate coordinate, int segment) Parameters Type Name Description Geometry geometry Coordinate coordinate int segment Returns Type Description Geometry | Edit this page View Source MainCoordinates(Geometry) Declaration public static List<Coordinate> MainCoordinates(this Geometry geometry) Parameters Type Name Description Geometry geometry Returns Type Description List<Coordinate> | Edit this page View Source ToFeature(Geometry) Declaration public static GeometryFeature ToFeature(this Geometry geometry) Parameters Type Name Description Geometry geometry Returns Type Description GeometryFeature | Edit this page View Source ToFeatures(IEnumerable<Geometry>) Declaration public static IEnumerable<GeometryFeature> ToFeatures(this IEnumerable<Geometry> geometries) Parameters Type Name Description IEnumerable<Geometry> geometries Returns Type Description IEnumerable<GeometryFeature>"
  },
  "pages/Mapsui.Nts.Extensions.LineStringExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.LineStringExtensions.html",
    "title": "Class LineStringExtensions",
    "keywords": "Class LineStringExtensions Inheritance object LineStringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class LineStringExtensions Methods | Edit this page View Source ToLinearRing(LineString) Declaration public static LinearRing ToLinearRing(this LineString lineString) Parameters Type Name Description LineString lineString Returns Type Description LinearRing"
  },
  "pages/Mapsui.Nts.Extensions.MPointExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.MPointExtensions.html",
    "title": "Class MPointExtensions",
    "keywords": "Class MPointExtensions Inheritance object MPointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class MPointExtensions Methods | Edit this page View Source ToCoordinate(MPoint?) Declaration public static Coordinate? ToCoordinate(this MPoint? point) Parameters Type Name Description MPoint point Returns Type Description Coordinate | Edit this page View Source ToPoint(MPoint?) Declaration public static Point? ToPoint(this MPoint? point) Parameters Type Name Description MPoint point Returns Type Description Point"
  },
  "pages/Mapsui.Nts.Extensions.MRectExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance object MRectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class MRectExtensions Methods | Edit this page View Source ToEnvelope(MRect) Declaration public static Envelope ToEnvelope(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Envelope | Edit this page View Source ToPolygon(MRect) Declaration public static Polygon ToPolygon(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Polygon"
  },
  "pages/Mapsui.Nts.Extensions.PointExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance object PointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class PointExtensions Methods | Edit this page View Source ToMPoint(Point) Declaration public static MPoint ToMPoint(this Point point) Parameters Type Name Description Point point Returns Type Description MPoint"
  },
  "pages/Mapsui.Nts.Extensions.TupleExtensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.TupleExtensions.html",
    "title": "Class TupleExtensions",
    "keywords": "Class TupleExtensions Inheritance object TupleExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Extensions Assembly: Mapsui.Nts.dll Syntax public static class TupleExtensions Methods | Edit this page View Source ToCoordinate((double x, double y)) Declaration public static Coordinate ToCoordinate(this (double x, double y) coordinate) Parameters Type Name Description (double x, double y) coordinate Returns Type Description Coordinate"
  },
  "pages/Mapsui.Nts.Extensions.html": {
    "href": "pages/Mapsui.Nts.Extensions.html",
    "title": "Namespace Mapsui.Nts.Extensions",
    "keywords": "Namespace Mapsui.Nts.Extensions Classes CoordinateExtensions EnvelopeExtensions GeometryExtensions LineStringExtensions MPointExtensions MRectExtensions PointExtensions TupleExtensions"
  },
  "pages/Mapsui.Nts.GeometryFeature.html": {
    "href": "pages/Mapsui.Nts.GeometryFeature.html",
    "title": "Class GeometryFeature",
    "keywords": "Class GeometryFeature Feature representing a NTS geometry on the map./> Inheritance object BaseFeature GeometryFeature Implements IFeature ICloneable Inherited Members BaseFeature.Id BaseFeature.Styles BaseFeature.Fields BaseFeature.Data BaseFeature.this[string] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts Assembly: Mapsui.Nts.dll Syntax public class GeometryFeature : BaseFeature, IFeature, ICloneable Constructors | Edit this page View Source GeometryFeature() Declaration public GeometryFeature() | Edit this page View Source GeometryFeature(GeometryFeature) Declaration public GeometryFeature(GeometryFeature geometryFeature) Parameters Type Name Description GeometryFeature geometryFeature | Edit this page View Source GeometryFeature(GeometryFeature, long) Declaration public GeometryFeature(GeometryFeature geometryFeature, long id) Parameters Type Name Description GeometryFeature geometryFeature long id | Edit this page View Source GeometryFeature(Geometry?) Declaration public GeometryFeature(Geometry? geometry) Parameters Type Name Description Geometry geometry | Edit this page View Source GeometryFeature(long) Declaration public GeometryFeature(long id) Parameters Type Name Description long id Properties | Edit this page View Source Extent Extent of feature Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseFeature.Extent | Edit this page View Source Geometry Geometry for this feature Declaration public Geometry? Geometry { get; set; } Property Value Type Description Geometry Methods | Edit this page View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description object A new object that is a copy of this instance. Overrides BaseFeature.Clone() | Edit this page View Source CoordinateVisitor(Action<double, double, CoordinateSetter>) Implementation of visitor pattern for coordinates Declaration public override void CoordinateVisitor(Action<double, double, CoordinateSetter> visit) Parameters Type Name Description Action<double, double, CoordinateSetter> visit Overrides BaseFeature.CoordinateVisitor(Action<double, double, CoordinateSetter>) | Edit this page View Source Modified() Function to call whenever something changes in settings of feature. Declaration public override void Modified() Overrides BaseFeature.Modified() Implements IFeature ICloneable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Projections.GeometryTransform.html": {
    "href": "pages/Mapsui.Nts.Projections.GeometryTransform.html",
    "title": "Class GeometryTransform",
    "keywords": "Class GeometryTransform Inheritance object GeometryTransform Implements ICoordinateSequenceFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Projections Assembly: Mapsui.Extensions.dll Syntax public sealed class GeometryTransform : ICoordinateSequenceFilter Constructors | Edit this page View Source GeometryTransform((ProjectionInfo? From, ProjectionInfo? To)) Declaration public GeometryTransform((ProjectionInfo? From, ProjectionInfo? To) transform) Parameters Type Name Description (ProjectionInfo From, ProjectionInfo To) transform Properties | Edit this page View Source Done Reports whether the application of this filter can be terminated. Declaration public bool Done { get; } Property Value Type Description bool Remarks Once this method returns true, it must continue to return true on every subsequent call. | Edit this page View Source GeometryChanged Reports whether the execution of this filter has modified the coordinates of the geometry. If so, NetTopologySuite.Geometries.Geometry.GeometryChanged() will be executed after this filter has finished being executed. Declaration public bool GeometryChanged { get; } Property Value Type Description bool Remarks Most filters can simply return a constant value reflecting whether they are able to change the coordinates. Methods | Edit this page View Source Filter(CoordinateSequence, int) Performs an operation on a coordinate in a NetTopologySuite.Geometries.CoordinateSequence. Declaration public void Filter(CoordinateSequence seq, int i) Parameters Type Name Description CoordinateSequence seq the CoordinateSequence to which the filter is applied int i i the index of the coordinate to apply the filter to Implements NetTopologySuite.Geometries.ICoordinateSequenceFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Projections.html": {
    "href": "pages/Mapsui.Nts.Projections.html",
    "title": "Namespace Mapsui.Nts.Projections",
    "keywords": "Namespace Mapsui.Nts.Projections Classes GeometryTransform"
  },
  "pages/Mapsui.Nts.Providers.GeoJsonProvider.html": {
    "href": "pages/Mapsui.Nts.Providers.GeoJsonProvider.html",
    "title": "Class GeoJsonProvider",
    "keywords": "Class GeoJsonProvider Inheritance object GeoJsonProvider Implements IProviderExtended IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers Assembly: Mapsui.Nts.dll Syntax public class GeoJsonProvider : IProviderExtended, IProvider Constructors | Edit this page View Source GeoJsonProvider(string) Declaration public GeoJsonProvider(string geoJson) Parameters Type Name Description string geoJson Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source FeatureKeyCreator Declaration public FeatureKeyCreator<string> FeatureKeyCreator { get; set; } Property Value Type Description FeatureKeyCreator<string> | Edit this page View Source Id Declaration public int Id { get; } Property Value Type Description int Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProviderExtended IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.GeometryIntersectionProvider.html": {
    "href": "pages/Mapsui.Nts.Providers.GeometryIntersectionProvider.html",
    "title": "Class GeometryIntersectionProvider",
    "keywords": "Class GeometryIntersectionProvider Inheritance object GeometryIntersectionProvider Implements IProviderExtended IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers Assembly: Mapsui.Nts.dll Syntax public class GeometryIntersectionProvider : IProviderExtended, IProvider Constructors | Edit this page View Source GeometryIntersectionProvider(IProvider) Declaration public GeometryIntersectionProvider(IProvider provider) Parameters Type Name Description IProvider provider Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source FeatureKeyCreator Declaration public FeatureKeyCreator<(long, MRect)> FeatureKeyCreator { get; set; } Property Value Type Description FeatureKeyCreator<(long, MRect)> | Edit this page View Source Id Declaration public int Id { get; } Property Value Type Description int Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProviderExtended IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.GeometrySimplifyProvider.html": {
    "href": "pages/Mapsui.Nts.Providers.GeometrySimplifyProvider.html",
    "title": "Class GeometrySimplifyProvider",
    "keywords": "Class GeometrySimplifyProvider Inheritance object GeometrySimplifyProvider Implements IProviderExtended IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers Assembly: Mapsui.Nts.dll Syntax public class GeometrySimplifyProvider : IProviderExtended, IProvider Constructors | Edit this page View Source GeometrySimplifyProvider(IProvider, Func<Geometry, double, Geometry>?, double?) Declaration public GeometrySimplifyProvider(IProvider provider, Func<Geometry, double, Geometry>? simplify = null, double? distanceTolerance = null) Parameters Type Name Description IProvider provider Func<Geometry, double, Geometry> simplify double? distanceTolerance Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source FeatureKeyCreator Declaration public FeatureKeyCreator<(long, double)> FeatureKeyCreator { get; set; } Property Value Type Description FeatureKeyCreator<(long, double)> | Edit this page View Source Id Declaration public int Id { get; } Property Value Type Description int Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProviderExtended IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.IndexedMemoryProvider.html": {
    "href": "pages/Mapsui.Nts.Providers.IndexedMemoryProvider.html",
    "title": "Class IndexedMemoryProvider",
    "keywords": "Class IndexedMemoryProvider Inheritance object IndexedMemoryProvider Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers Assembly: Mapsui.Nts.dll Syntax public class IndexedMemoryProvider : IProvider Constructors | Edit this page View Source IndexedMemoryProvider() Gets or sets the geometries this data source contains Declaration public IndexedMemoryProvider() | Edit this page View Source IndexedMemoryProvider(IFeature) Initializes a new instance of the IndxedMemoryProvider Declaration public IndexedMemoryProvider(IFeature feature) Parameters Type Name Description IFeature feature Feature to be in this dataSource | Edit this page View Source IndexedMemoryProvider(IEnumerable<IFeature>) Initializes a new instance of the IndxedMemoryProvider Declaration public IndexedMemoryProvider(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable<IFeature> features Features to be included in this dataSource Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Features Declaration public IReadOnlyList<IFeature> Features { get; } Property Value Type Description IReadOnlyList<IFeature> | Edit this page View Source SymbolSize Declaration public double SymbolSize { get; set; } Property Value Type Description double Methods | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Find(object?, string) Search for a feature Declaration public IFeature? Find(object? value, string fieldName) Parameters Type Name Description object value Value to search for string fieldName Name of the field to search in. This is the key of the T dictionary Returns Type Description IFeature | Edit this page View Source GetExtent() BoundingBox of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public virtual Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.ObservableCollectionProvider-1.html": {
    "href": "pages/Mapsui.Nts.Providers.ObservableCollectionProvider-1.html",
    "title": "Class ObservableCollectionProvider<T>",
    "keywords": "Class ObservableCollectionProvider<T> Inheritance object ObservableCollectionProvider<T> Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers Assembly: Mapsui.Nts.dll Syntax public class ObservableCollectionProvider<T> : IProvider where T : IFeatureProvider Type Parameters Name Description T Constructors | Edit this page View Source ObservableCollectionProvider(ObservableCollection<T>) Declaration public ObservableCollectionProvider(ObservableCollection<T> collection) Parameters Type Name Description ObservableCollection<T> collection Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Collection Declaration public ObservableCollection<T> Collection { get; } Property Value Type Description ObservableCollection<T> Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.ItemValue.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.ItemValue.html",
    "title": "Struct BinaryTree<T, TU>.ItemValue",
    "keywords": "Struct BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU>. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax public struct BinaryTree<T, TU>.ItemValue Remarks Creates an instance of an item in a BinaryTree<T, TU>. Constructors | Edit this page View Source ItemValue(T, TU) A value in a BinaryTree<T, TU>. Declaration public ItemValue(T value, TU id) Parameters Type Name Description T value Value TU id Identifier for the value Remarks Creates an instance of an item in a BinaryTree<T, TU>. Fields | Edit this page View Source Id Identifier for the value Declaration public TU? Id Field Value Type Description TU | Edit this page View Source Value Value Declaration public T? Value Field Value Type Description T Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.BinaryTree-2.html",
    "title": "Class BinaryTree<T, TU>",
    "keywords": "Class BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries Inheritance object BinaryTree<T, TU> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax [Serializable] public class BinaryTree<T, TU> where T : IComparable<T?> Type Parameters Name Description T Value type to be indexed TU Value ID type Constructors | Edit this page View Source BinaryTree() Initializes a new instance of the generic binary tree. Declaration public BinaryTree() Properties | Edit this page View Source InOrder Gets an enumerator for all the values in the tree in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> InOrder { get; } Property Value Type Description IEnumerable<BinaryTree<T, TU>.ItemValue> Methods | Edit this page View Source Add(ItemValue) Inserts a value into the tree Declaration public void Add(BinaryTree<T, TU>.ItemValue item) Parameters Type Name Description BinaryTree<T, TU>.ItemValue item | Edit this page View Source Add(params ItemValue[]) Inserts a value into the tree Declaration public void Add(params BinaryTree<T, TU>.ItemValue[] items) Parameters Type Name Description ItemValue[] items | Edit this page View Source Between(T, T) Gets and enumerator for the values between min and max in ascending order Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Between(T min, T max) Parameters Type Name Description T min T max Returns Type Description IEnumerable<BinaryTree<T, TU>.ItemValue> Enumerator | Edit this page View Source Find(T) Enumerates all objects with the specified value Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> Find(T value) Parameters Type Name Description T value Value to search for Returns Type Description IEnumerable<BinaryTree<T, TU>.ItemValue> Enumerator | Edit this page View Source StartsWith(string) Enumerates the objects whose string-representation starts with 'str' Declaration public IEnumerable<BinaryTree<T, TU>.ItemValue> StartsWith(string str) Parameters Type Name Description string str Returns Type Description IEnumerable<BinaryTree<T, TU>.ItemValue> Enumerator | Edit this page View Source TraceTree() This is the classic computer science binary tree iteration Declaration public void TraceTree() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.Heuristic.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.Heuristic.html",
    "title": "Struct Heuristic",
    "keywords": "Struct Heuristic Heuristics used for tree generation Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax public struct Heuristic Fields | Edit this page View Source Maxdepth Maximum tree depth Declaration public int Maxdepth Field Value Type Description int | Edit this page View Source Minerror Minimum Error metric – the volume of a box + a unit cube. The unit cube in the metric prevents big boxes that happen to be flat having a zero result and muddling things up. Declaration public int Minerror Field Value Type Description int | Edit this page View Source Mintricnt Minimum object count at node Declaration public int Mintricnt Field Value Type Description int | Edit this page View Source Tartricnt Target object count at node Declaration public int Tartricnt Field Value Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.BoxObjects.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.BoxObjects.html",
    "title": "Struct QuadTree.BoxObjects",
    "keywords": "Struct QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax public struct QuadTree.BoxObjects Fields | Edit this page View Source Box BoundingBox Declaration public MRect Box Field Value Type Description MRect | Edit this page View Source Id Feature ID Declaration public uint Id Field Value Type Description uint Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.ObsoleteFileFormatException.html",
    "title": "Class QuadTree.ObsoleteFileFormatException",
    "keywords": "Class QuadTree.ObsoleteFileFormatException Inheritance object Exception QuadTree.ObsoleteFileFormatException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax public class QuadTree.ObsoleteFileFormatException : Exception, ISerializable Constructors | Edit this page View Source ObsoleteFileFormatException(string) Exception thrown when layer rendering has failed Declaration public ObsoleteFileFormatException(string message) Parameters Type Name Description string message Implements ISerializable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.QuadTree.html",
    "title": "Class QuadTree",
    "keywords": "Class QuadTree Constructs a Quad-tree node from a object list and creates its children recursively Inheritance object QuadTree Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers.Shapefile.Indexing Assembly: Mapsui.Nts.dll Syntax public class QuadTree : IDisposable Constructors | Edit this page View Source QuadTree(List<BoxObjects>, uint, Heuristic) Creates a node and either splits the objects recursively into sub-nodes, or stores them at the node depending on the heuristics. Tree is built top->down Declaration public QuadTree(List<QuadTree.BoxObjects> objList, uint depth, Heuristic heurdata) Parameters Type Name Description List<QuadTree.BoxObjects> objList Geometries to index uint depth Current depth of tree Heuristic heurdata Heuristics data Properties | Edit this page View Source Box Gets/sets the Axis Aligned Bounding Box Declaration public MRect? Box { get; set; } Property Value Type Description MRect | Edit this page View Source Child0 Gets/sets the left child node Declaration public QuadTree? Child0 { get; set; } Property Value Type Description QuadTree | Edit this page View Source Child1 Gets/sets the right child node Declaration public QuadTree? Child1 { get; set; } Property Value Type Description QuadTree | Edit this page View Source Depth Gets the depth of the current node in the tree Declaration public uint Depth { get; } Property Value Type Description uint | Edit this page View Source IsLeaf Determines whether the node is a leaf (if data is stored at the node, we assume the node is a leaf) Declaration public bool IsLeaf { get; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Disposes the node Declaration public virtual void Dispose() | Edit this page View Source ErrorMetric(MRect) Calculate the floating point error metric Declaration public double ErrorMetric(MRect box) Parameters Type Name Description MRect box Returns Type Description double | Edit this page View Source FromFile(string) Loads a quadtree from a file Declaration public static QuadTree FromFile(string filename) Parameters Type Name Description string filename Returns Type Description QuadTree | Edit this page View Source SaveIndex(string) Saves the Quadtree to a file Declaration public void SaveIndex(string filename) Parameters Type Name Description string filename | Edit this page View Source Search(MRect) Searches the tree and looks for intersections with the BoundingBox 'bbox' Declaration public Collection<uint> Search(MRect box) Parameters Type Name Description MRect box BoundingBox to intersect with Returns Type Description Collection<uint> Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.Indexing.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.Indexing.html",
    "title": "Namespace Mapsui.Nts.Providers.Shapefile.Indexing",
    "keywords": "Namespace Mapsui.Nts.Providers.Shapefile.Indexing Classes BinaryTree<T, TU> The BinaryTree class are used for indexing values to enhance the speed of queries QuadTree Constructs a Quad-tree node from a object list and creates its children recursively QuadTree.ObsoleteFileFormatException Structs BinaryTree<T, TU>.ItemValue A value in a BinaryTree<T, TU>. Heuristic Heuristics used for tree generation QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.ShapeFile.FilterMethod.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.ShapeFile.FilterMethod.html",
    "title": "Delegate ShapeFile.FilterMethod",
    "keywords": "Delegate ShapeFile.FilterMethod Filter Delegate Method Namespace: Mapsui.Nts.Providers.Shapefile Assembly: Mapsui.Nts.dll Syntax public delegate bool ShapeFile.FilterMethod(IFeature dr) Parameters Type Name Description IFeature dr Filter Delegate Method Returns Type Description bool true if this feature should be included, false if it should be filtered Remarks The FilterMethod delegate is used for applying a method that filters data from the data set. The method should return 'true' if the feature should be included and false if not. Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.ShapeFile.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.ShapeFile.html",
    "title": "Class ShapeFile",
    "keywords": "Class ShapeFile Shapefile data provider Inheritance object ShapeFile Implements IDisposable IProviderExtended IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Providers.Shapefile Assembly: Mapsui.Nts.dll Syntax public class ShapeFile : IDisposable, IProviderExtended, IProvider Remarks The ShapeFile provider is used for accessing ESRI ShapeFiles. The ShapeFile should at least contain the [filename].shp, [filename].idx, and if feature-data is to be used, also [filename].dbf file. The first time the ShapeFile is accessed, Mapsui will automatically create a spatial index of the shp-file, and save it as [filename].shp.sidx. If you change or update the contents of the .shp file, delete the .sidx file to force Mapsui to rebuilt it. In web applications, the index will automatically be cached to memory for faster access, so to reload the index, you will need to restart the web application as well. M and Z values in a shapefile is ignored by Mapsui. Constructors | Edit this page View Source ShapeFile(string, bool, bool, IProjectionCrs?, bool) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex = false, bool readPrjFile = false, IProjectionCrs? projectionCrs = null, bool calculateBoundingBoxes = false) Parameters Type Name Description string filename Path to shape file bool fileBasedIndex Use file-based spatial index bool readPrjFile Read the proj File and set the correct CRS IProjectionCrs projectionCrs Projection Crs bool calculateBoundingBoxes if true the Bounding Box of Features is calculated instead of being read solves problems in Zooming when the written Bounding Boxes are not correct. Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. Properties | Edit this page View Source CRS Gets or sets the spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Encoding Gets or sets the encoding used for parsing strings from the DBase DBF file. Declaration public Encoding? Encoding { get; set; } Property Value Type Description Encoding Remarks The DBase default encoding is UTF7\"/>. | Edit this page View Source Filename Gets or sets the filename of the shapefile Declaration public string Filename { get; set; } Property Value Type Description string Remarks If the filename changes, indexes will be rebuilt | Edit this page View Source FilterDelegate Filter Delegate Method for limiting the data source Declaration public ShapeFile.FilterMethod? FilterDelegate { get; set; } Property Value Type Description ShapeFile.FilterMethod | Edit this page View Source Id Declaration public int Id { get; } Property Value Type Description int | Edit this page View Source ShapeType Gets the shape geometry type in this shapefile. Declaration public ShapeType ShapeType { get; } Property Value Type Description ShapeType Remarks The property isn't set until the first time the data source has been opened, and will throw an exception if this property has been called since initialization. All the non-Null shapes in a shapefile are required to be of the same shape type. Methods | Edit this page View Source Dispose() Disposes the object Declaration public void Dispose() | Edit this page View Source ~ShapeFile() Finalizes the object Declaration protected ~ShapeFile() | Edit this page View Source GetExtent() Returns the extent of the data source Declaration public MRect? GetExtent() Returns Type Description MRect | Edit this page View Source GetFeature(uint) Gets a data row from the data source at the specified index belonging to the specified data table Declaration public GeometryFeature? GetFeature(uint rowId) Parameters Type Name Description uint rowId Returns Type Description GeometryFeature | Edit this page View Source GetFeatureCount() Returns the total number of features in the data source (without any filter applied) Declaration public int GetFeatureCount() Returns Type Description int | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source GetGeometriesInView(MRect) Returns geometries whose bounding box intersects 'bbox' Declaration public Collection<Geometry> GetGeometriesInView(MRect bbox) Parameters Type Name Description MRect bbox Returns Type Description Collection<Geometry> Remarks Please note that this method doesn't guarantee that the geometries returned actually intersect 'bbox', but only that their BoundingBox intersects 'bbox'. This method is much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their BoundingBox, and using the Spatial Index. | Edit this page View Source GetGeometry(uint) Returns the geometry corresponding to the Object ID Declaration public Geometry? GetGeometry(uint oid) Parameters Type Name Description uint oid Object ID Returns Type Description Geometry geometry | Edit this page View Source GetObjectIDsInView(MRect) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public Collection<uint> GetObjectIDsInView(MRect bbox) Parameters Type Name Description MRect bbox Returns Type Description Collection<uint> | Edit this page View Source RebuildSpatialIndex() Forces a rebuild of the spatial index. If the instance of the ShapeFile provider uses a file-based index the file is rewritten to disk. Declaration public void RebuildSpatialIndex() Implements IDisposable IProviderExtended IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.ShapeType.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.ShapeType.html",
    "title": "Enum ShapeType",
    "keywords": "Enum ShapeType Shapefile geometry type. Namespace: Mapsui.Nts.Providers.Shapefile Assembly: Mapsui.Nts.dll Syntax public enum ShapeType Fields Name Description MultiPatch A MultiPatch consists of a number of surface patches. Each surface patch describes a surface. The surface patches of a MultiPatch are referred to as its parts, and the type of part controls how the order of coordinates of an MultiPatch part is interpreted. Mapsui doesn't support this feature type. MultiPointM A MultiPointM represents a set of PointMs. Mapsui interprets this as NetTopologySuite.Geometries.MultiPoint MultiPointZ A MultiPointZ represents a set of PointZs. Mapsui interprets this as NetTopologySuite.Geometries.MultiPoint Multipoint A MultiPoint represents a set of points. Mapsui interprets this as NetTopologySuite.Geometries.MultiPoint Null Null shape with no geometric data Point A point consists of a pair of double-precision coordinates. Mapsui interprets this as Point PointM A PointM consists of a pair of double-precision coordinates in the order X, Y, plus a measure M. Mapsui interprets this as Point PointZ A PointZ consists of a triplet of double-precision coordinates plus a measure. Mapsui interprets this as Point PolyLine PolyLine is an ordered set of coordinates that consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as either NetTopologySuite.Geometries.LineString or NetTopologySuite.Geometries.MultiLineString PolyLineM A shapefile PolyLineM consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as NetTopologySuite.Geometries.LineString or NetTopologySuite.Geometries.MultiLineString PolyLineZ A PolyLineZ consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. Mapsui interprets this as NetTopologySuite.Geometries.LineString or NetTopologySuite.Geometries.MultiLineString Polygon A polygon consists of one or more rings. A ring is a connected sequence of four or more points that form a closed, non-self-intersecting loop. A polygon may contain multiple outer rings. The order of coordinates or orientation for a ring indicates which side of the ring is the interior of the polygon. The neighborhood to the right of an observer walking along the ring in vertex order is the neighborhood inside the polygon. Coordinates of rings defining holes in polygons are in a counterclockwise direction. Vertices for a single, ringed polygon are, therefore, always in clockwise order. The rings of a polygon are referred to as its parts. Mapsui interprets this as either Polygon or NetTopologySuite.Geometries.MultiPolygon PolygonM A PolygonM consists of a number of rings. A ring is a closed, non-self-intersecting loop. Mapsui interprets this as either Polygon or NetTopologySuite.Geometries.MultiPolygon PolygonZ A PolygonZ consists of a number of rings. A ring is a closed, non-self-intersecting loop. A PolygonZ may contain multiple outer rings. The rings of a PolygonZ are referred to as its parts. Mapsui interprets this as either Polygon or NetTopologySuite.Geometries.MultiPolygon Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Nts.Providers.Shapefile.html": {
    "href": "pages/Mapsui.Nts.Providers.Shapefile.html",
    "title": "Namespace Mapsui.Nts.Providers.Shapefile",
    "keywords": "Namespace Mapsui.Nts.Providers.Shapefile Classes ShapeFile Shapefile data provider Enums ShapeType Shapefile geometry type. Delegates ShapeFile.FilterMethod Filter Delegate Method"
  },
  "pages/Mapsui.Nts.Providers.html": {
    "href": "pages/Mapsui.Nts.Providers.html",
    "title": "Namespace Mapsui.Nts.Providers",
    "keywords": "Namespace Mapsui.Nts.Providers Classes GeoJsonProvider GeometryIntersectionProvider GeometrySimplifyProvider IndexedMemoryProvider ObservableCollectionProvider<T>"
  },
  "pages/Mapsui.Nts.Widgets.EditingWidget.html": {
    "href": "pages/Mapsui.Nts.Widgets.EditingWidget.html",
    "title": "Class EditingWidget",
    "keywords": "Class EditingWidget Inheritance object BaseWidget InputOnlyWidget EditingWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Nts.Widgets Assembly: Mapsui.Nts.dll Syntax public class EditingWidget : InputOnlyWidget, IWidget Constructors | Edit this page View Source EditingWidget(EditManager) Declaration public EditingWidget(EditManager editManager) Parameters Type Name Description EditManager editManager Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs) Function, which handles the widget pointer moved event Declaration public override void OnPointerMoved(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerMoved(WidgetEventArgs) | Edit this page View Source OnPointerPressed(WidgetEventArgs) Function, which handles the widget pointer pressed event Declaration public override void OnPointerPressed(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerPressed(WidgetEventArgs) | Edit this page View Source OnPointerReleased(WidgetEventArgs) Function, which handles the widget pointer released event Declaration public override void OnPointerReleased(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerReleased(WidgetEventArgs) | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration public override void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnTapped(WidgetEventArgs) Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Nts.Widgets.html": {
    "href": "pages/Mapsui.Nts.Widgets.html",
    "title": "Namespace Mapsui.Nts.Widgets",
    "keywords": "Namespace Mapsui.Nts.Widgets Classes EditingWidget"
  },
  "pages/Mapsui.Nts.html": {
    "href": "pages/Mapsui.Nts.html",
    "title": "Namespace Mapsui.Nts",
    "keywords": "Namespace Mapsui.Nts Classes GeometryFeature Feature representing a NTS geometry on the map./>"
  },
  "pages/Mapsui.Projections.CrsAxisOrderRegistry.html": {
    "href": "pages/Mapsui.Projections.CrsAxisOrderRegistry.html",
    "title": "Class CrsAxisOrderRegistry",
    "keywords": "Class CrsAxisOrderRegistry A class that provides axis orders for EPSG coordinate reference systems with an identifier less that 32787 Inheritance object CrsAxisOrderRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public class CrsAxisOrderRegistry Properties | Edit this page View Source this[CrsIdentifier] Gets the axis order for all EPSG defined coordinate reference systems with an srid less than 32768 Declaration public int[] this[CrsIdentifier identifier] { get; } Parameters Type Name Description CrsIdentifier identifier The identifier Property Value Type Description int[] The axis order | Edit this page View Source this[string] Gets the axis order for all EPSG defined coordinate reference systems with an srid less than 32768 Declaration public int[] this[string crs] { get; } Parameters Type Name Description string crs The crs for which we want to axis order. Property Value Type Description int[] The axis order Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.CrsHelper.html": {
    "href": "pages/Mapsui.Projections.CrsHelper.html",
    "title": "Class CrsHelper",
    "keywords": "Class CrsHelper Inheritance object CrsHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public static class CrsHelper Fields | Edit this page View Source EpsgPrefix Declaration public const string EpsgPrefix = \"EPSG:\" Field Value Type Description string | Edit this page View Source EsriStringPrefix Declaration public const string EsriStringPrefix = \"ESRISTRING:\" Field Value Type Description string | Edit this page View Source Proj4StringPrefix Declaration public const string Proj4StringPrefix = \"PROJ4STRING:\" Field Value Type Description string Methods | Edit this page View Source GetCrsType(string) Declaration public static CrsType GetCrsType(string crs) Parameters Type Name Description string crs Returns Type Description CrsType | Edit this page View Source IsCrsProvided(string?, string?) Declaration public static bool IsCrsProvided(string? fromCRS, string? toCRS) Parameters Type Name Description string fromCRS string toCRS Returns Type Description bool | Edit this page View Source IsProjectionNeeded(string?, string?) Declaration public static bool IsProjectionNeeded(string? fromCRS, string? toCRS) Parameters Type Name Description string fromCRS string toCRS Returns Type Description bool | Edit this page View Source ToEpsgCode(string) Declaration public static int ToEpsgCode(string crs) Parameters Type Name Description string crs Returns Type Description int | Edit this page View Source ToStandardizedCRS(string?) Declaration public static string? ToStandardizedCRS(string? crs) Parameters Type Name Description string crs Returns Type Description string"
  },
  "pages/Mapsui.Projections.CrsIdentifier.html": {
    "href": "pages/Mapsui.Projections.CrsIdentifier.html",
    "title": "Struct CrsIdentifier",
    "keywords": "Struct CrsIdentifier An identifier for the crs Implements IEquatable<CrsIdentifier> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public readonly struct CrsIdentifier : IEquatable<CrsIdentifier> Properties | Edit this page View Source Authority The authority Declaration public string Authority { get; } Property Value Type Description string | Edit this page View Source Identifier The identifier Declaration public string Identifier { get; } Property Value Type Description string | Edit this page View Source Version The version Declaration public string Version { get; } Property Value Type Description string Methods | Edit this page View Source Equals(CrsIdentifier) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(CrsIdentifier other) Parameters Type Name Description CrsIdentifier other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Edit this page View Source Equals(object?) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() | Edit this page View Source TryParse(string, out CrsIdentifier) Declaration public static bool TryParse(string urnOgcDefCRS, out CrsIdentifier crs) Parameters Type Name Description string urnOgcDefCRS CrsIdentifier crs Returns Type Description bool Operators | Edit this page View Source operator ==(CrsIdentifier, CrsIdentifier) Declaration public static bool operator ==(CrsIdentifier left, CrsIdentifier right) Parameters Type Name Description CrsIdentifier left CrsIdentifier right Returns Type Description bool | Edit this page View Source operator !=(CrsIdentifier, CrsIdentifier) Declaration public static bool operator !=(CrsIdentifier left, CrsIdentifier right) Parameters Type Name Description CrsIdentifier left CrsIdentifier right Returns Type Description bool Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.CrsType.html": {
    "href": "pages/Mapsui.Projections.CrsType.html",
    "title": "Enum CrsType",
    "keywords": "Enum CrsType Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public enum CrsType Fields Name Description Epgs EsriString Proj4String Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Projections.IProjection.html": {
    "href": "pages/Mapsui.Projections.IProjection.html",
    "title": "Interface IProjection",
    "keywords": "Interface IProjection Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public interface IProjection Methods | Edit this page View Source IsProjectionSupported(string?, string?) Declaration bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description string fromCRS string toCRS Returns Type Description bool | Edit this page View Source Project(string, string, IFeature) Declaration void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description string fromCRS string toCRS IFeature feature | Edit this page View Source Project(string, string, MPoint) Declaration void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description string fromCRS string toCRS MPoint point | Edit this page View Source Project(string, string, MRect) Declaration void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description string fromCRS string toCRS MRect rect | Edit this page View Source Project(string, string, IEnumerable<IFeature>) Declaration void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description string fromCRS string toCRS IEnumerable<IFeature> features | Edit this page View Source Project(string, string, double, double) Declaration (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description string fromCRS string toCRS double x double y Returns Type Description (double x, double y) Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.IProjectionCrs.html": {
    "href": "pages/Mapsui.Projections.IProjectionCrs.html",
    "title": "Interface IProjectionCrs",
    "keywords": "Interface IProjectionCrs Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public interface IProjectionCrs Methods | Edit this page View Source CrsFromEsri(string) Get Crs from Esri String Declaration string? CrsFromEsri(string esri) Parameters Type Name Description string esri Returns Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.Mercator.html": {
    "href": "pages/Mapsui.Projections.Mercator.html",
    "title": "Class Mercator",
    "keywords": "Class Mercator Inheritance object Mercator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public class Mercator Methods | Edit this page View Source FromLonLat(MPoint) Declaration public static MPoint FromLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Edit this page View Source FromLonLat(double, double) Declaration public static (double x, double y) FromLonLat(double lon, double lat) Parameters Type Name Description double lon double lat Returns Type Description (double x, double y) | Edit this page View Source ToLonLat(MPoint) Declaration public static MPoint ToLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Edit this page View Source ToLonLat(double, double) Declaration public static (double lon, double lat) ToLonLat(double x, double y) Parameters Type Name Description double x double y Returns Type Description (double x, double y) Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.Projection.html": {
    "href": "pages/Mapsui.Projections.Projection.html",
    "title": "Class Projection",
    "keywords": "Class Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. Inheritance object Projection Implements IProjection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public class Projection : IProjection Constructors | Edit this page View Source Projection() Declaration public Projection() Methods | Edit this page View Source IsProjectionSupported(string?, string?) Declaration public bool IsProjectionSupported(string? fromCRS, string? toCRS) Parameters Type Name Description string fromCRS string toCRS Returns Type Description bool | Edit this page View Source Project(string, string, IFeature) Declaration public void Project(string fromCRS, string toCRS, IFeature feature) Parameters Type Name Description string fromCRS string toCRS IFeature feature | Edit this page View Source Project(string, string, MPoint) Declaration public void Project(string fromCRS, string toCRS, MPoint point) Parameters Type Name Description string fromCRS string toCRS MPoint point | Edit this page View Source Project(string, string, MRect) Declaration public void Project(string fromCRS, string toCRS, MRect rect) Parameters Type Name Description string fromCRS string toCRS MRect rect | Edit this page View Source Project(string, string, IEnumerable<IFeature>) Declaration public void Project(string fromCRS, string toCRS, IEnumerable<IFeature> features) Parameters Type Name Description string fromCRS string toCRS IEnumerable<IFeature> features | Edit this page View Source Project(string, string, double, double) Declaration public (double X, double Y) Project(string fromCRS, string toCRS, double x, double y) Parameters Type Name Description string fromCRS string toCRS double x double y Returns Type Description (double x, double y) Implements IProjection Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.ProjectionDefaults.html": {
    "href": "pages/Mapsui.Projections.ProjectionDefaults.html",
    "title": "Class ProjectionDefaults",
    "keywords": "Class ProjectionDefaults Inheritance object ProjectionDefaults Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public class ProjectionDefaults Properties | Edit this page View Source Projection Static property that can be overridden by a user defined IProjection. Declaration public static IProjection Projection { get; set; } Property Value Type Description IProjection Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.SphericalMercator.html": {
    "href": "pages/Mapsui.Projections.SphericalMercator.html",
    "title": "Class SphericalMercator",
    "keywords": "Class SphericalMercator Inheritance object SphericalMercator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Projections Assembly: Mapsui.dll Syntax public class SphericalMercator Methods | Edit this page View Source FromLonLat(MPoint) Declaration public static MPoint FromLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Edit this page View Source FromLonLat(double, double) Declaration public static (double x, double y) FromLonLat(double lon, double lat) Parameters Type Name Description double lon double lat Returns Type Description (double x, double y) | Edit this page View Source ToLonLat(MPoint) Declaration public static MPoint ToLonLat(MPoint point) Parameters Type Name Description MPoint point Returns Type Description MPoint | Edit this page View Source ToLonLat(double, double) Declaration public static (double lon, double lat) ToLonLat(double x, double y) Parameters Type Name Description double x double y Returns Type Description (double x, double y) Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Projections.html": {
    "href": "pages/Mapsui.Projections.html",
    "title": "Namespace Mapsui.Projections",
    "keywords": "Namespace Mapsui.Projections Classes CrsAxisOrderRegistry A class that provides axis orders for EPSG coordinate reference systems with an identifier less that 32787 CrsHelper Mercator Projection A very minimal implementation that is only capable of projecting between SphericalMercator and WGS84. ProjectionDefaults SphericalMercator Structs CrsIdentifier An identifier for the crs Interfaces IProjection IProjectionCrs Enums CrsType"
  },
  "pages/Mapsui.Providers.FilteringProvider.html": {
    "href": "pages/Mapsui.Providers.FilteringProvider.html",
    "title": "Class FilteringProvider",
    "keywords": "Class FilteringProvider Inheritance object FilteringProvider Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public class FilteringProvider : IProvider Constructors | Edit this page View Source FilteringProvider(IProvider, Func<IFeature, bool>) Declaration public FilteringProvider(IProvider provider, Func<IFeature, bool> filter) Parameters Type Name Description IProvider provider Func<IFeature, bool> filter Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.IProjectingProvider.html": {
    "href": "pages/Mapsui.Providers.IProjectingProvider.html",
    "title": "Interface IProjectingProvider",
    "keywords": "Interface IProjectingProvider Inherited Members IProvider.CRS IProvider.GetExtent() IProvider.GetFeaturesAsync(FetchInfo) Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public interface IProjectingProvider : IProvider Methods | Edit this page View Source IsCrsSupported(string) Queries whether a provider supports projection to a certain CRS. Declaration bool? IsCrsSupported(string crs) Parameters Type Name Description string crs The crs to project to Returns Type Description bool? True if is does, false if it does not, null if it is unknown Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.IProvider.html": {
    "href": "pages/Mapsui.Providers.IProvider.html",
    "title": "Interface IProvider",
    "keywords": "Interface IProvider Interface for data providers Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public interface IProvider Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration string? CRS { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.IProviderExtended.html": {
    "href": "pages/Mapsui.Providers.IProviderExtended.html",
    "title": "Interface IProviderExtended",
    "keywords": "Interface IProviderExtended Inherited Members IProvider.CRS IProvider.GetExtent() IProvider.GetFeaturesAsync(FetchInfo) Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public interface IProviderExtended : IProvider Properties | Edit this page View Source Id Declaration int Id { get; } Property Value Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.MemoryProvider.html": {
    "href": "pages/Mapsui.Providers.MemoryProvider.html",
    "title": "Class MemoryProvider",
    "keywords": "Class MemoryProvider Inheritance object MemoryProvider Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public class MemoryProvider : IProvider Constructors | Edit this page View Source MemoryProvider() Gets or sets the geometries this data source contains Declaration public MemoryProvider() | Edit this page View Source MemoryProvider(IFeature) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IFeature feature) Parameters Type Name Description IFeature feature Feature to be in this dataSource | Edit this page View Source MemoryProvider(IEnumerable<IFeature>) Initializes a new instance of the MemoryProvider Declaration public MemoryProvider(IEnumerable<IFeature> features) Parameters Type Name Description IEnumerable<IFeature> features Features to be included in this dataSource Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Features Declaration public IReadOnlyList<IFeature> Features { get; } Property Value Type Description IReadOnlyList<IFeature> | Edit this page View Source SymbolSize Declaration public double SymbolSize { get; set; } Property Value Type Description double Methods | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Find(object?, string) Search for a feature Declaration public IFeature? Find(object? value, string fieldName) Parameters Type Name Description object value Value to search for string fieldName Name of the field to search in. This is the key of the T dictionary Returns Type Description IFeature | Edit this page View Source GetExtent() BoundingBox of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public virtual Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.ProjectingProvider.html": {
    "href": "pages/Mapsui.Providers.ProjectingProvider.html",
    "title": "Class ProjectingProvider",
    "keywords": "Class ProjectingProvider Inheritance object ProjectingProvider Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers Assembly: Mapsui.dll Syntax public class ProjectingProvider : IProvider Constructors | Edit this page View Source ProjectingProvider(IProvider, IProjection?) Declaration public ProjectingProvider(IProvider provider, IProjection? projection = null) Parameters Type Name Description IProvider provider IProjection projection Properties | Edit this page View Source CRS The CRS of the target. The source CRS will be projected to this target CRS. This should be equal to the CRS of the Map and the FetchInfo.CRS. Declaration public string? CRS { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.StackedLabelProvider.html": {
    "href": "pages/Mapsui.Providers.StackedLabelProvider.html",
    "title": "Class StackedLabelProvider",
    "keywords": "Class StackedLabelProvider Inheritance object StackedLabelProvider Implements IProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers Assembly: Mapsui.Nts.dll Syntax public class StackedLabelProvider : IProvider Constructors | Edit this page View Source StackedLabelProvider(IProvider, LabelStyle, Pen?, Brush?) Declaration public StackedLabelProvider(IProvider provider, LabelStyle labelStyle, Pen? rectangleLine = null, Brush? rectangleFill = null) Parameters Type Name Description IProvider provider LabelStyle labelStyle Pen rectangleLine Brush rectangleFill Properties | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string Methods | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source ToViewport(MSection) Declaration public static Viewport ToViewport(MSection section) Parameters Type Name Description MSection section Returns Type Description Viewport Implements IProvider Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.FeatureIdFilter_FE1_1_0.html",
    "title": "Class FeatureIdFilter_FE1_1_0",
    "keywords": "Class FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. Inheritance object OgcFilterBase FeatureIdFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class FeatureIdFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source FeatureIdFilter_FE1_1_0(string) Initializes a new instance of the FeatureIdFilter_FE1_1_0 class. Declaration public FeatureIdFilter_FE1_1_0(string id) Parameters Type Name Description string id Methods | Edit this page View Source Encode() Declaration public string Encode() Returns Type Description string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.GeometryTypeEnum.html",
    "title": "Enum GeometryTypeEnum",
    "keywords": "Enum GeometryTypeEnum Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public enum GeometryTypeEnum Fields Name Description CurvePropertyType LineStringPropertyType MultiCurvePropertyType MultiLineStringPropertyType MultiPointPropertyType MultiPolygonPropertyType MultiSurfacePropertyType PointPropertyType PolygonPropertyType SurfacePropertyType Unknown Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.HttpClientUtil.html",
    "title": "Class HttpClientUtil",
    "keywords": "Class HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. Inheritance object HttpClientUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class HttpClientUtil Constructors | Edit this page View Source HttpClientUtil(IUrlPersistentCache?) This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. Declaration public HttpClientUtil(IUrlPersistentCache? persistentCache = null) Parameters Type Name Description IUrlPersistentCache persistentCache Properties | Edit this page View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source PostData Sets the data of a HTTP POST request as byte array. Declaration public byte[] PostData { set; } Property Value Type Description byte[] | Edit this page View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string? ProxyUrl { get; set; } Property Value Type Description string | Edit this page View Source Url Gets ans sets the Url of the request. Declaration public string? Url { get; set; } Property Value Type Description string Methods | Edit this page View Source AddHeader(string, string) Adds a HTTP header. Declaration public void AddHeader(string name, string value) Parameters Type Name Description string name The name of the header string value The value of the header | Edit this page View Source GetDataStreamAsync() Performs a HTTP-GET or HTTP-POST request and returns a data stream for reading. Declaration public Task<Stream?> GetDataStreamAsync() Returns Type Description Task<Stream> | Edit this page View Source Reset() This method resets all configurations. Declaration public void Reset() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.IFilter.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.IFilter.html",
    "title": "Interface IFilter",
    "keywords": "Interface IFilter Filter interface Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public interface IFilter Methods | Edit this page View Source Encode() Declaration string Encode() Returns Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.IWFS_TextResources.html",
    "title": "Interface IWFS_TextResources",
    "keywords": "Interface IWFS_TextResources Text resources interface Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public interface IWFS_TextResources Properties | Edit this page View Source NSFEATURETYPEPREFIX Declaration string NSFEATURETYPEPREFIX { get; } Property Value Type Description string | Edit this page View Source NSGML Declaration string NSGML { get; } Property Value Type Description string | Edit this page View Source NSGMLPREFIX Declaration string NSGMLPREFIX { get; } Property Value Type Description string | Edit this page View Source NSOGC Declaration string NSOGC { get; } Property Value Type Description string | Edit this page View Source NSOGCPREFIX Declaration string NSOGCPREFIX { get; } Property Value Type Description string | Edit this page View Source NSOWS Declaration string NSOWS { get; } Property Value Type Description string | Edit this page View Source NSOWSPREFIX Declaration string NSOWSPREFIX { get; } Property Value Type Description string | Edit this page View Source NSSCHEMA Declaration string NSSCHEMA { get; } Property Value Type Description string | Edit this page View Source NSSCHEMAPREFIX Declaration string NSSCHEMAPREFIX { get; } Property Value Type Description string | Edit this page View Source NSWFS Declaration string NSWFS { get; } Property Value Type Description string | Edit this page View Source NSWFSPREFIX Declaration string NSWFSPREFIX { get; } Property Value Type Description string | Edit this page View Source NSXLINK Declaration string NSXLINK { get; } Property Value Type Description string | Edit this page View Source NSXLINKPREFIX Declaration string NSXLINKPREFIX { get; } Property Value Type Description string | Edit this page View Source XPATH_BBOX Declaration string XPATH_BBOX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXX Declaration string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXY Declaration string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINX Declaration string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINY Declaration string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description string | Edit this page View Source XPATH_DESCRIBEFEATURETYPERESOURCE Declaration string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Declaration string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Declaration string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Declaration string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GETFEATURERESOURCE Declaration string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_NAMEATTRIBUTEQUERY Declaration string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_SRS Declaration string XPATH_SRS { get; } Property Value Type Description string | Edit this page View Source XPATH_TARGETNS Declaration string XPATH_TARGETNS { get; } Property Value Type Description string | Edit this page View Source XPATH_TYPEATTRIBUTEQUERY Declaration string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description string Methods | Edit this page View Source DescribeFeatureTypeRequest(string) Declaration string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description string featureTypeName Returns Type Description string | Edit this page View Source GetCapabilitiesRequest() Declaration string GetCapabilitiesRequest() Returns Type Description string | Edit this page View Source GetFeatureGETRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) Declaration string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo List<string> labelProperties MRect boundingBox IFilter filter Returns Type Description string | Edit this page View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) Declaration byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo List<string> labelProperties MRect boundingBox IFilter filter Returns Type Description byte[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.JunctorEnum.html",
    "title": "Enum OGCFilterCollection.JunctorEnum",
    "keywords": "Enum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators. Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public enum OGCFilterCollection.JunctorEnum Fields Name Description And Or Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.OGCFilterCollection.html",
    "title": "Class OGCFilterCollection",
    "keywords": "Class OGCFilterCollection This class hosts a collection of instances implementing IFilter. Inheritance object OGCFilterCollection Implements IFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class OGCFilterCollection : IFilter Constructors | Edit this page View Source OGCFilterCollection() Initializes a new instance of the OGCFilterCollection class. Declaration public OGCFilterCollection() Properties | Edit this page View Source Filters Gets and sets a collection of instances implementing IFilter. Declaration public List<IFilter> Filters { get; set; } Property Value Type Description List<IFilter> | Edit this page View Source Junctor Gets and sets the operator for combining the filters. Declaration public OGCFilterCollection.JunctorEnum Junctor { get; set; } Property Value Type Description OGCFilterCollection.JunctorEnum Methods | Edit this page View Source AddFilter(IFilter) This method adds an instance implementing IFilter. Declaration public void AddFilter(IFilter filter) Parameters Type Name Description IFilter filter | Edit this page View Source AddFilterCollection(OGCFilterCollection) This method adds an instance of OGCFilterCollection. Declaration public void AddFilterCollection(OGCFilterCollection filterCollection) Parameters Type Name Description OGCFilterCollection filterCollection | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.OgcFilterBase.html",
    "title": "Class OgcFilterBase",
    "keywords": "Class OgcFilterBase This class is the base class of all filters. It stores the filter arguments. Inheritance object OgcFilterBase FeatureIdFilter_FE1_1_0 PropertyIsBetweenFilter_FE1_1_0 PropertyIsEqualToFilter_FE1_1_0 PropertyIsGreaterThanFilter_FE1_1_0 PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 PropertyIsLessThanFilter_FE1_1_0 PropertyIsLessThanOrEqualToFilter_FE1_1_0 PropertyIsLikeFilter_FE1_1_0 PropertyIsNotEqualToFilter_FE1_1_0 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public abstract class OgcFilterBase Constructors | Edit this page View Source OgcFilterBase(string[]) Protected constructor for the abstract class. Declaration protected OgcFilterBase(string[] args) Parameters Type Name Description string[] args An array of arguments for the filter Fields | Edit this page View Source Args Declaration protected string[] Args Field Value Type Description string[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsBetweenFilter_FE1_1_0.html",
    "title": "Class PropertyIsBetweenFilter_FE1_1_0",
    "keywords": "Class PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsBetweenFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsBetweenFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsBetweenFilter_FE1_1_0(string, string, string) Initializes a new instance of the PropertyIsBetweenFilter_FE1_1_0 class. Declaration public PropertyIsBetweenFilter_FE1_1_0(string propertyName, string lowerBoundary, string upperBoundary) Parameters Type Name Description string propertyName string lowerBoundary string upperBoundary Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsEqualToFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsEqualToFilter_FE1_1_0 class. Declaration public PropertyIsEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsGreaterThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsGreaterThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsGreaterThanFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsGreaterThanFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsLessThanFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsLessThanFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsLessThanFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsLessThanFilter_FE1_1_0 class. Declaration public PropertyIsLessThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsLessThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsLessThanOrEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsLessThanOrEqualToFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsLessThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsLessThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsLikeFilter_FE1_1_0.html",
    "title": "Class PropertyIsLikeFilter_FE1_1_0",
    "keywords": "Class PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsLikeFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsLikeFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsLikeFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsLikeFilter_FE1_1_0 class. Declaration public PropertyIsLikeFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.PropertyIsNotEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsNotEqualToFilter_FE1_1_0",
    "keywords": "Class PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. Inheritance object OgcFilterBase PropertyIsNotEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OgcFilterBase.Args object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class PropertyIsNotEqualToFilter_FE1_1_0 : OgcFilterBase, IFilter Constructors | Edit this page View Source PropertyIsNotEqualToFilter_FE1_1_0(string, string) Initializes a new instance of the PropertyIsNotEqualToFilter_FE1_1_0 class. Declaration public PropertyIsNotEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description string propertyName string arg Methods | Edit this page View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description string An XML string Implements IFilter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.UrlQueryHelper.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.UrlQueryHelper.html",
    "title": "Class UrlQueryHelper",
    "keywords": "Class UrlQueryHelper Inheritance object UrlQueryHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public static class UrlQueryHelper Methods | Edit this page View Source AppendQuery(string, string) Append Query Declaration public static string AppendQuery(this string url, string query) Parameters Type Name Description string url url string query query Returns Type Description string uri with query"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_TextResources.html",
    "title": "Class WFS_1_0_0_TextResources",
    "keywords": "Class WFS_1_0_0_TextResources Inheritance object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_0_0_XPathTextResources.XPATH_SRS WFS_1_0_0_XPathTextResources.XPATH_BBOX WFS_1_0_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_0_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_1_0_0_TextResources : WFS_1_0_0_XPathTextResources, IWFS_TextResources Methods | Edit this page View Source DescribeFeatureTypeRequest(string) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description string featureTypeName The name of the featuretype to query Returns Type Description string | Edit this page View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description string | Edit this page View Source GetFeatureGETRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description string | Edit this page View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description byte[] Implements IWFS_TextResources Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_0_0_XPathTextResources.html",
    "title": "Class WFS_1_0_0_XPathTextResources",
    "keywords": "Class WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). Inheritance object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_1_0_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Edit this page View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the 'maxx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the 'maxy'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the 'minx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the 'miny'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description string | Edit this page View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_SRS Gets an XPath string addressing the SRID of a FeatureType in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_TextResources.html",
    "title": "Class WFS_1_1_0_TextResources",
    "keywords": "Class WFS_1_1_0_TextResources Inheritance object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_1_0_XPathTextResources.XPATH_SRS WFS_1_1_0_XPathTextResources.XPATH_BBOX WFS_1_1_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_1_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_1_1_0_TextResources : WFS_1_1_0_XPathTextResources, IWFS_TextResources Methods | Edit this page View Source DescribeFeatureTypeRequest(string) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description string featureTypeName The name of the featuretype to query Returns Type Description string | Edit this page View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description string | Edit this page View Source GetFeatureGETRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description string | Edit this page View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description byte[] Implements IWFS_TextResources Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_1_1_0_XPathTextResources.html",
    "title": "Class WFS_1_1_0_XPathTextResources",
    "keywords": "Class WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. Inheritance object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_1_1_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Edit this page View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description string | Edit this page View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_2_0_0_TextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_2_0_0_TextResources.html",
    "title": "Class WFS_2_0_0_TextResources",
    "keywords": "Class WFS_2_0_0_TextResources Inheritance object WFS_XPathTextResourcesBase WFS_2_0_0_XPathTextResources WFS_2_0_0_TextResources Implements IWFS_TextResources Inherited Members WFS_2_0_0_XPathTextResources.NSWFS WFS_2_0_0_XPathTextResources.NSOWS WFS_2_0_0_XPathTextResources.NSGML WFS_2_0_0_XPathTextResources.XPATH_SRS WFS_2_0_0_XPathTextResources.XPATH_BBOX WFS_2_0_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_2_0_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_2_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_2_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_2_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_2_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_2_0_0_TextResources : WFS_2_0_0_XPathTextResources, IWFS_TextResources Methods | Edit this page View Source DescribeFeatureTypeRequest(string) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description string featureTypeName The name of the featuretype to query Returns Type Description string | Edit this page View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description string | Edit this page View Source GetFeatureGETRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description string | Edit this page View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, List<string>?, MRect?, IFilter?) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, List<string>? labelProperties, MRect? boundingBox, IFilter? filter) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query List<string> labelProperties A list of properties necessary for label rendering MRect boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Returns Type Description byte[] Implements IWFS_TextResources Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_2_0_0_XPathTextResources.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_2_0_0_XPathTextResources.html",
    "title": "Class WFS_2_0_0_XPathTextResources",
    "keywords": "Class WFS_2_0_0_XPathTextResources This class provides text resources specific for WFS 2.0.0. Inheritance object WFS_XPathTextResourcesBase WFS_2_0_0_XPathTextResources WFS_2_0_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_2_0_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Edit this page View Source NSGML GML namespace URI Declaration public override string NSGML { get; } Property Value Type Description string Overrides WFS_XPathTextResourcesBase.NSGML | Edit this page View Source NSOWS OWS namespace URI Declaration public override string NSOWS { get; } Property Value Type Description string Overrides WFS_XPathTextResourcesBase.NSOWS | Edit this page View Source NSWFS WFS namespace URI Declaration public override string NSWFS { get; } Property Value Type Description string Overrides WFS_XPathTextResourcesBase.NSWFS | Edit this page View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description string | Edit this page View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description string | Edit this page View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description string | Edit this page View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WFS_XPathTextResourcesBase.html",
    "title": "Class WFS_XPathTextResourcesBase",
    "keywords": "Class WFS_XPathTextResourcesBase Inheritance object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_1_0_XPathTextResources WFS_2_0_0_XPathTextResources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WFS_XPathTextResourcesBase Properties | Edit this page View Source NSFEATURETYPEPREFIX Prefix used for feature namespace Declaration public string NSFEATURETYPEPREFIX { get; } Property Value Type Description string | Edit this page View Source NSGML GML namespace URI Declaration public virtual string NSGML { get; } Property Value Type Description string | Edit this page View Source NSGMLPREFIX Prefix used for GML namespace Declaration public string NSGMLPREFIX { get; } Property Value Type Description string | Edit this page View Source NSOGC OGC namespace URI Declaration public string NSOGC { get; } Property Value Type Description string | Edit this page View Source NSOGCPREFIX Prefix used for OGC namespace Declaration public string NSOGCPREFIX { get; } Property Value Type Description string | Edit this page View Source NSOWS OWS namespace URI Declaration public virtual string NSOWS { get; } Property Value Type Description string | Edit this page View Source NSOWSPREFIX Prefix used for OWS namespace Declaration public string NSOWSPREFIX { get; } Property Value Type Description string | Edit this page View Source NSSCHEMA XML schema namespace URI Declaration public string NSSCHEMA { get; } Property Value Type Description string | Edit this page View Source NSSCHEMAPREFIX Prefix used for XML schema namespace Declaration public string NSSCHEMAPREFIX { get; } Property Value Type Description string | Edit this page View Source NSWFS WFS namespace URI Declaration public virtual string NSWFS { get; } Property Value Type Description string | Edit this page View Source NSWFSPREFIX Prefix used for WFS namespace Declaration public string NSWFSPREFIX { get; } Property Value Type Description string | Edit this page View Source NSXLINK XLink namespace URI Declaration public string NSXLINK { get; } Property Value Type Description string | Edit this page View Source NSXLINKPREFIX Prefix used for XLink namespace Declaration public string NSXLINKPREFIX { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Gets an XPath string addressing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype. Step1: Finding the complex type with a geometry element from GML specification. Declaration public string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Gets an XPath string addressing an element with a 'gml'-prefixed type-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype in the most simple manner. Declaration public string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Gets an XPath string addressing the name of an element having a type-attribute referencing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2: Finding the name of the featuretype's element with a named complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Gets an XPath string addressing the name of an element described by an anonymous complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2Alt: Finding the name of the featuretype's element with an anonymous complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description string | Edit this page View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Gets an XPath string addressing the 'gml'-prefixed ref-attribute of an element. This is for querying the name of the GML geometry element. Declaration public string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_NAMEATTRIBUTEQUERY Gets an XPath string addressing a name-attribute. Declaration public string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description string | Edit this page View Source XPATH_TARGETNS Gets an XPath string addressing the target namespace in 'DescribeFeatureType'. Declaration public string XPATH_TARGETNS { get; } Property Value Type Description string | Edit this page View Source XPATH_TYPEATTRIBUTEQUERY Gets an XPath string addressing a type-attribute. Declaration public string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.BoundingBox.html",
    "title": "Class WfsFeatureTypeInfo.BoundingBox",
    "keywords": "Class WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. Inheritance object WfsFeatureTypeInfo.BoundingBox Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WfsFeatureTypeInfo.BoundingBox Fields | Edit this page View Source MaxLat Declaration public double MaxLat Field Value Type Description double | Edit this page View Source MaxLong Declaration public double MaxLong Field Value Type Description double | Edit this page View Source MinLat Declaration public double MinLat Field Value Type Description double | Edit this page View Source MinLong Declaration public double MinLong Field Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.ElementInfo.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.ElementInfo.html",
    "title": "Class WfsFeatureTypeInfo.ElementInfo",
    "keywords": "Class WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. Inheritance object WfsFeatureTypeInfo.ElementInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax [Serializable] public class WfsFeatureTypeInfo.ElementInfo Constructors | Edit this page View Source ElementInfo(string, string) Declaration public ElementInfo(string name, string dataType) Parameters Type Name Description string name string dataType Properties | Edit this page View Source DataType Gets the type of the element Declaration public string DataType { get; } Property Value Type Description string | Edit this page View Source Name Gets the name of the element Declaration public string Name { get; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.GeometryInfo.html",
    "title": "Class WfsFeatureTypeInfo.GeometryInfo",
    "keywords": "Class WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Inheritance object WfsFeatureTypeInfo.GeometryInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WfsFeatureTypeInfo.GeometryInfo Fields | Edit this page View Source GeometryName Declaration public string GeometryName Field Value Type Description string | Edit this page View Source GeometryType Declaration public string GeometryType Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.WfsFeatureTypeInfo.html",
    "title": "Class WfsFeatureTypeInfo",
    "keywords": "Class WfsFeatureTypeInfo Inheritance object WfsFeatureTypeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Utilities Assembly: Mapsui.Nts.dll Syntax public class WfsFeatureTypeInfo Constructors | Edit this page View Source WfsFeatureTypeInfo() Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo() | Edit this page View Source WfsFeatureTypeInfo(string, string, string, string, string, GeometryTypeEnum, string) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType, string gmlNs) Parameters Type Name Description string serviceUri string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. string featureType string geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. string gmlNs | Edit this page View Source WfsFeatureTypeInfo(string, string, string, string, string, string) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, string gmlNs) Parameters Type Name Description string serviceUri string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. string featureType string geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. string gmlNs Gml Namespace for WFS 1.1 and lower it is \"http://www.opengis.net/gml for WFS 2.0 it is \"http://www.opengis.net/gml/3.2\"\" Properties | Edit this page View Source BBox Gets or sets the spatial extent of the featuretype - defined as minimum bounding rectangle. Declaration public WfsFeatureTypeInfo.BoundingBox BBox { get; set; } Property Value Type Description WfsFeatureTypeInfo.BoundingBox | Edit this page View Source Cs Separator for coordinate values (for gml:coordinates) Declaration public string Cs { get; set; } Property Value Type Description string | Edit this page View Source DecimalDel Decimal separator (for gml:coordinates) Declaration public string DecimalDel { get; set; } Property Value Type Description string | Edit this page View Source Elements Gets the elements associated to the feature. Declaration public List<WfsFeatureTypeInfo.ElementInfo> Elements { get; } Property Value Type Description List<WfsFeatureTypeInfo.ElementInfo> | Edit this page View Source FeatureTypeNamespace Gets or sets the featuretype namespace. This argument is obligatory for data retrieving, except when using the quick geometries option. Declaration public string FeatureTypeNamespace { get; set; } Property Value Type Description string | Edit this page View Source Geometry Gets or sets information about the geometry of the featuretype. Setting at least the geometry name is obligatory for data retrieving. Declaration public WfsFeatureTypeInfo.GeometryInfo Geometry { get; set; } Property Value Type Description WfsFeatureTypeInfo.GeometryInfo | Edit this page View Source GmlNs Declaration public string GmlNs { get; set; } Property Value Type Description string | Edit this page View Source LabelFields Declaration public List<string>? LabelFields { get; set; } Property Value Type Description List<string> | Edit this page View Source Name Gets or sets the name of the featuretype. This argument is obligatory for data retrieving. Declaration public string Name { get; set; } Property Value Type Description string The name. | Edit this page View Source Prefix Gets or sets the prefix of the featuretype and it's nested elements. This argument is obligatory for data retrieving, if the featuretype is declared with a prefix in 'GetCapabilities'. Declaration public string? Prefix { get; set; } Property Value Type Description string The prefix. | Edit this page View Source SRID Gets or sets the spatial reference ID Declaration public string SRID { get; set; } Property Value Type Description string | Edit this page View Source ServiceUri Gets or sets the service URI for WFS 'GetFeature' request. This argument is obligatory for data retrieving. Declaration public string? ServiceUri { get; set; } Property Value Type Description string | Edit this page View Source Ts Tuple separator (for gml:coordinates) Declaration public string Ts { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Utilities.html": {
    "href": "pages/Mapsui.Providers.Wfs.Utilities.html",
    "title": "Namespace Mapsui.Providers.Wfs.Utilities",
    "keywords": "Namespace Mapsui.Providers.Wfs.Utilities Classes FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. OGCFilterCollection This class hosts a collection of instances implementing IFilter. OgcFilterBase This class is the base class of all filters. It stores the filter arguments. PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. UrlQueryHelper WFS_1_0_0_TextResources WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). WFS_1_1_0_TextResources WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. WFS_2_0_0_TextResources WFS_2_0_0_XPathTextResources This class provides text resources specific for WFS 2.0.0. WFS_XPathTextResourcesBase WfsFeatureTypeInfo WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Interfaces IFilter Filter interface IWFS_TextResources Text resources interface Enums GeometryTypeEnum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators."
  },
  "pages/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html": {
    "href": "pages/Mapsui.Providers.Wfs.WFSProvider.WFSVersionEnum.html",
    "title": "Enum WFSProvider.WFSVersionEnum",
    "keywords": "Enum WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions. Namespace: Mapsui.Providers.Wfs Assembly: Mapsui.Nts.dll Syntax public enum WFSProvider.WFSVersionEnum Fields Name Description WFS_1_0_0 Version 1.0.0 WFS_1_1_0 Version 1.1.0 WFS_2_0_0 Version 2.0.0 Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Providers.Wfs.WFSProvider.html": {
    "href": "pages/Mapsui.Providers.Wfs.WFSProvider.html",
    "title": "Class WFSProvider",
    "keywords": "Class WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer (http://geoserver.org). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Inheritance object WFSProvider Implements IProvider IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs Assembly: Mapsui.Nts.dll Syntax public class WFSProvider : IProvider, IDisposable Constructors | Edit this page View Source WFSProvider(WfsFeatureTypeInfo, WFSVersionEnum, IUrlPersistentCache?) Use this constructor for initializing this dataprovider with a WfsFeatureTypeInfo object, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(WfsFeatureTypeInfo featureTypeInfo, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo The featureTypeInfo Instance WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache | Edit this page View Source WFSProvider(IXPathQueryManager, string, string, GeometryTypeEnum, WFSVersionEnum, IUrlPersistentCache?) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureType The name of the feature type GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process, if the geometry type in 'DescribeFeatureType is unprecise. WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache | Edit this page View Source WFSProvider(IXPathQueryManager, string, string, WFSVersionEnum, IUrlPersistentCache?) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFSProvider(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureType The name of the feature type WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache | Edit this page View Source WFSProvider(string, string, string, string, string, GeometryTypeEnum, WFSVersionEnum, IUrlPersistentCache?) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description string serviceUri The service URL string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. string featureType The name of the feature type string geometryName The name of the geometry. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache | Edit this page View Source WFSProvider(string, string, string, string, string, WFSVersionEnum, IUrlPersistentCache?) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFSProvider(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description string serviceUri The service URL string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. string featureType The name of the feature type string geometryName The name of the geometry WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache Persistent Cache Properties | Edit this page View Source AxisOrder Gets or sets a value indicating the axis order Declaration public int[] AxisOrder { get; set; } Property Value Type Description int[] Remarks The axis order is an array of array offsets. It can be either {0, 1} or {1, 0}. If not set explicitly, CrsAxisOrderRegistry is asked for a value based on CRS. | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source DefaultCache Default Cache Declaration public static IUrlPersistentCache? DefaultCache { get; set; } Property Value Type Description IUrlPersistentCache | Edit this page View Source FeatureTypeInfo Gets feature metadata Declaration public WfsFeatureTypeInfo? FeatureTypeInfo { get; } Property Value Type Description WfsFeatureTypeInfo | Edit this page View Source GetCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. Declaration public IXPathQueryManager? GetCapabilitiesCache { get; set; } Property Value Type Description IXPathQueryManager | Edit this page View Source GetFeatureGetRequest Gets or sets a value indicating whether the 'GetFeature' request should be done with HTTP GET. This option can be important when obtaining data from a WFS provided by an UMN MapServer. Declaration public bool GetFeatureGetRequest { get; set; } Property Value Type Description bool | Edit this page View Source Labels Gets or sets the property of the featuretype responsible for labels Declaration public List<string> Labels { get; set; } Property Value Type Description List<string> | Edit this page View Source MultiGeometries Gets or sets a value indicating whether the 'GetFeature' parser should ignore multi-geometries (MultiPoint, MultiLineString, MultiCurve, MultiPolygon, MultiSurface). By default it does not. Ignoring multi-geometries can lead to a better performance. Declaration public bool MultiGeometries { get; set; } Property Value Type Description bool | Edit this page View Source OgcFilter Gets or sets an OGC Filter. Declaration public IFilter? OgcFilter { get; set; } Property Value Type Description IFilter | Edit this page View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string? ProxyUrl { get; set; } Property Value Type Description string | Edit this page View Source QuickGeometries Gets or sets a value indicating whether extracting geometry information from 'GetFeature' response shall be done quickly without paying attention to context validation, polygon boundaries and multi-geometries. This option accelerates the geometry parsing process, but in scarce cases can lead to errors. Declaration public bool QuickGeometries { get; set; } Property Value Type Description bool Methods | Edit this page View Source CreateAsync(string, string, string, GeometryTypeEnum, WFSVersionEnum, IUrlPersistentCache?, string?, ICredentials?) Initializes a new layer, and downloads and parses the service description Declaration public static Task<WFSProvider> CreateAsync(string getCapabilitiesUri, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null, string? proxyUrl = null, ICredentials? credentials = null) Parameters Type Name Description string getCapabilitiesUri Url of WMS server string nsPrefix ns Prefix string featureType feature Type GeometryTypeEnum geometryType geometry Type WFSProvider.WFSVersionEnum wfsVersion Version number of wms leave null to get the default service version IUrlPersistentCache persistentCache persistent Cache string proxyUrl proxy url ICredentials credentials credentials Returns Type Description Task<WFSProvider> | Edit this page View Source CreateAsync(string, string, string, WFSVersionEnum, IUrlPersistentCache?, string?, ICredentials?) Use this Method for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public static Task<WFSProvider> CreateAsync(string getCapabilitiesUri, string nsPrefix, string featureType, WFSProvider.WFSVersionEnum wfsVersion, IUrlPersistentCache? persistentCache = null, string? proxyUrl = null, ICredentials? credentials = null) Parameters Type Name Description string getCapabilitiesUri The URL for the 'GetCapabilities' request. string nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. string featureType The name of the feature type WFSProvider.WFSVersionEnum wfsVersion The desired WFS Server version. IUrlPersistentCache persistentCache persistent Cache Interface string proxyUrl proxy url ICredentials credentials credentials Returns Type Description Task<WFSProvider> | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source ExecuteIntersectionQueryAsync(MRect?) Returns all features whose WfsFeatureTypeInfo.BoundingBox intersects 'bbox'. Declaration public Task<IEnumerable<IFeature>> ExecuteIntersectionQueryAsync(MRect? bbox) Parameters Type Name Description MRect bbox Returns Type Description Task<IEnumerable<IFeature>> Features within the specified WfsFeatureTypeInfo.BoundingBox | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeaturesAsync(FetchInfo) Gets the features within the specified FetchInfo.\"/> Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source InitAsync() Init Async Declaration public Task InitAsync() Returns Type Description Task Implements IProvider IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.IXPathQueryManager.html",
    "title": "Interface IXPathQueryManager",
    "keywords": "Interface IXPathQueryManager XPathQueryManager interface Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public interface IXPathQueryManager Methods | Edit this page View Source AddNamespace(string, string) Declaration void AddNamespace(string prefix, string ns) Parameters Type Name Description string prefix string ns | Edit this page View Source Clone() Declaration IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Edit this page View Source Compile(string) Declaration XPathExpression? Compile(string xPath) Parameters Type Name Description string xPath Returns Type Description XPathExpression | Edit this page View Source GetIterator(XPathExpression?) Declaration XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description XPathExpression xPath Returns Type Description XPathNodeIterator | Edit this page View Source GetIterator(XPathExpression, DictionaryEntry[]) Declaration XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath DictionaryEntry[] queryParameters Returns Type Description XPathNodeIterator | Edit this page View Source GetValueFromNode(XPathExpression?, DictionaryEntry[]?) Declaration string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath DictionaryEntry[] queryParameters Returns Type Description string | Edit this page View Source GetXPathQueryManagerInContext(XPathExpression?, DictionaryEntry[]?) Declaration IXPathQueryManager? GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath DictionaryEntry[] queryParameters Returns Type Description IXPathQueryManager | Edit this page View Source ResetNamespaces() Declaration void ResetNamespaces() | Edit this page View Source SetDocumentToParse(Stream) Declaration void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream | Edit this page View Source SetDocumentToParseAsync(HttpClientUtil) Declaration Task SetDocumentToParseAsync(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil Returns Type Description Task Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.CustomQueryContext.html",
    "title": "Class XPathQueryManager.CustomQueryContext",
    "keywords": "Class XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. Inheritance object XmlNamespaceManager XsltContext XPathQueryManager.CustomQueryContext Implements IEnumerable IXmlNamespaceResolver Inherited Members XmlNamespaceManager.AddNamespace(string, string) XmlNamespaceManager.GetEnumerator() XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope) XmlNamespaceManager.HasNamespace(string) XmlNamespaceManager.LookupNamespace(string) XmlNamespaceManager.LookupPrefix(string) XmlNamespaceManager.PopScope() XmlNamespaceManager.PushScope() XmlNamespaceManager.RemoveNamespace(string, string) XmlNamespaceManager.DefaultNamespace XmlNamespaceManager.NameTable object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManager.CustomQueryContext : XsltContext, IEnumerable, IXmlNamespaceResolver Constructors | Edit this page View Source CustomQueryContext() Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext() | Edit this page View Source CustomQueryContext(NameTable) Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext(NameTable table) Parameters Type Name Description NameTable table A NameTable instance Properties | Edit this page View Source Whitespace Method from XsltContext. Declaration public override bool Whitespace { get; } Property Value Type Description bool Overrides XsltContext.Whitespace Methods | Edit this page View Source AddNamespace(IDictionary<string, string>) This method adds a list of namespaces to use in the custom context. Declaration public void AddNamespace(IDictionary<string, string> namespaces) Parameters Type Name Description IDictionary<string, string> namespaces A list of namespaces | Edit this page View Source AddParam(DictionaryEntry[]) This method adds a list of parameters to the custom context. Declaration public void AddParam(DictionaryEntry[] parameters) Parameters Type Name Description DictionaryEntry[] parameters A list of parameters | Edit this page View Source AddParam(string, object) This method adds a parameter to the custom context. Declaration public void AddParam(string name, object parameter) Parameters Type Name Description string name The name of the parameter object parameter The value of the parameter | Edit this page View Source CompareDocument(string, string) Method from XsltContext. Declaration public override int CompareDocument(string baseUri, string nextbaseUri) Parameters Type Name Description string baseUri string nextbaseUri Returns Type Description int Overrides XsltContext.CompareDocument(string, string) | Edit this page View Source GetParam(string) This method gets a parameter by name. Declaration public object? GetParam(string name) Parameters Type Name Description string name The name of the parameter Returns Type Description object | Edit this page View Source PreserveWhitespace(XPathNavigator) Method from XsltContext. Declaration public override bool PreserveWhitespace(XPathNavigator node) Parameters Type Name Description XPathNavigator node Returns Type Description bool Overrides XsltContext.PreserveWhitespace(XPathNavigator) | Edit this page View Source RemoveParam(string) This method removes a parameter from the inherent parameter list. Declaration public object? RemoveParam(string name) Parameters Type Name Description string name The name of the parameter Returns Type Description object | Edit this page View Source ResetParams() This methods clears the inherent parameter list. Declaration public void ResetParams() | Edit this page View Source ResolveFunction(string, string, XPathResultType[]) This method resolves a function appearing in an XPath expression. Declaration public override IXsltContextFunction ResolveFunction(string prefix, string name, XPathResultType[] argTypes) Parameters Type Name Description string prefix The prefix of the function string name The name of the function XPathResultType[] argTypes A list of argument types of the function Returns Type Description IXsltContextFunction Overrides XsltContext.ResolveFunction(string, string, XPathResultType[]) | Edit this page View Source ResolveVariable(string, string) This method resolves a variable appearing in an XPath expression. Declaration public override IXsltContextVariable ResolveVariable(string prefix, string name) Parameters Type Name Description string prefix The prefix of the variable string name The name of the variable Returns Type Description IXsltContextVariable Overrides XsltContext.ResolveVariable(string, string) Implements IEnumerable IXmlNamespaceResolver Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamBase.html",
    "title": "Class XPathQueryManager.ParamBase",
    "keywords": "Class XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs. Inheritance object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public abstract class XPathQueryManager.ParamBase Remarks Protected constructor for the abstract class. Constructors | Edit this page View Source ParamBase(XPathResultType[], XPathResultType, int, int) This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs. Declaration protected ParamBase(XPathResultType[] argTypes, XPathResultType returnType, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType[] argTypes The argument types of the function XPathResultType returnType The return type of the function int minArgs The minimum number of arguments allowed int maxArgs The maximum number of arguments allowed Remarks Protected constructor for the abstract class. Properties | Edit this page View Source ArgTypes Gets the argument types. Declaration public XPathResultType[] ArgTypes { get; } Property Value Type Description XPathResultType[] | Edit this page View Source Maxargs Gets the maximum number of arguments allowed. Declaration public int Maxargs { get; } Property Value Type Description int | Edit this page View Source Minargs Gets the minimum number of arguments allowed. Declaration public int Minargs { get; } Property Value Type Description int | Edit this page View Source ReturnType Gets the return type. Declaration public XPathResultType ReturnType { get; } Property Value Type Description XPathResultType Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompare.html",
    "title": "Class XPathQueryManager.ParamCompare",
    "keywords": "Class XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. Inheritance object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManager.ParamCompare : XPathQueryManager.ParamBase, IXsltContextFunction Remarks Initializes a new instance of the XPathQueryManager.ParamCompare class. Constructors | Edit this page View Source ParamCompare(XPathResultType[], int, int) This class performs a string comparison in an XPath expression. Declaration public ParamCompare(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType[] argTypes The argument types of the function int minArgs The minimum number of arguments allowed int maxArgs The maximum number of arguments allowed Remarks Initializes a new instance of the XPathQueryManager.ParamCompare class. Fields | Edit this page View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description string Methods | Edit this page View Source Invoke(XsltContext, object[], XPathNavigator) This method performs a string comparison. Declaration public virtual object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context object[] args The arguments of the function XPathNavigator docContext The document context Returns Type Description object A boolean value indicating whether the argument strings are identical | Edit this page View Source ResolveArgument(object) This method creates a string from an object argument. In many cases the argument is an XPathNodeIterator that must be resolved. Declaration protected string? ResolveArgument(object arg) Parameters Type Name Description object arg An argument of the function to be resolved Returns Type Description string Implements IXsltContextFunction Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamCompareWithTargetNs.html",
    "title": "Class XPathQueryManager.ParamCompareWithTargetNs",
    "keywords": "Class XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. Inheritance object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamCompare.ResolveArgument(object) XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManager.ParamCompareWithTargetNs : XPathQueryManager.ParamCompare, IXsltContextFunction Remarks Initializes a new instance of the XPathQueryManager.ParamCompareWithTargetNs class. Constructors | Edit this page View Source ParamCompareWithTargetNs(XPathResultType[], int, int) This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. Declaration public ParamCompareWithTargetNs(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType[] argTypes The argument types of the function int minArgs The minimum number of arguments allowed int maxArgs The maximum number of arguments allowed Remarks Initializes a new instance of the XPathQueryManager.ParamCompareWithTargetNs class. Fields | Edit this page View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description string Methods | Edit this page View Source Invoke(XsltContext, object[], XPathNavigator) This method performs a string comparison. Declaration public override object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context object[] args The arguments of the function XPathNavigator docContext The document context Returns Type Description object A boolean value indicating whether the argument strings are identical Overrides XPathQueryManager.ParamCompare.Invoke(XsltContext, object[], XPathNavigator) Implements IXsltContextFunction Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.ParamFunctionVar.html",
    "title": "Class XPathQueryManager.ParamFunctionVar",
    "keywords": "Class XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. Inheritance object XPathQueryManager.ParamFunctionVar Implements IXsltContextVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManager.ParamFunctionVar : IXsltContextVariable Remarks Initializes a new instance of the XPathQueryManager.ParamFunctionVar class. Constructors | Edit this page View Source ParamFunctionVar(object) This class represents a variable in an XPath expression. Declaration public ParamFunctionVar(object param) Parameters Type Name Description object param The parameter Remarks Initializes a new instance of the XPathQueryManager.ParamFunctionVar class. Properties | Edit this page View Source IsLocal Method implementing IXsltContextVariable Declaration public bool IsLocal { get; } Property Value Type Description bool | Edit this page View Source IsParam Method implementing IXsltContextVariable Declaration public bool IsParam { get; } Property Value Type Description bool | Edit this page View Source VariableType Method implementing IXsltContextVariable Declaration public XPathResultType VariableType { get; } Property Value Type Description XPathResultType Methods | Edit this page View Source Evaluate(XsltContext) Method implementing IXsltContextVariable Declaration public object Evaluate(XsltContext xsltContext) Parameters Type Name Description XsltContext xsltContext Returns Type Description object Implements IXsltContextVariable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManager.html",
    "title": "Class XPathQueryManager",
    "keywords": "Class XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. Inheritance object XPathQueryManager Implements IXPathQueryManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManager : IXPathQueryManager Constructors | Edit this page View Source XPathQueryManager() Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager() | Edit this page View Source XPathQueryManager(HttpClientUtil) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Edit this page View Source XPathQueryManager(byte[]) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(byte[] document) Parameters Type Name Description byte[] document A byte array with XML data | Edit this page View Source XPathQueryManager(Stream) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Edit this page View Source XPathQueryManager(string) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(string fileName) Parameters Type Name Description string fileName | Edit this page View Source XPathQueryManager(XPathDocument?) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(XPathDocument? xPathDoc) Parameters Type Name Description XPathDocument xPathDoc An XmlDocument instance Methods | Edit this page View Source AddNamespace(string, string) This method adds a namespace for XPath queries. Declaration public void AddNamespace(string prefix, string ns) Parameters Type Name Description string prefix The namespace prefix string ns The namespace URI | Edit this page View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XmlDocument instance. Declaration public IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Edit this page View Source Compile(string) This method compiles an XPath string. Declaration public XPathExpression? Compile(string xPath) Parameters Type Name Description string xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression | Edit this page View Source GetIterator(XPathExpression?) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description XPathNodeIterator | Edit this page View Source GetIterator(XPathExpression, DictionaryEntry[]) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description XPathNodeIterator | Edit this page View Source GetValueFromNode(XPathExpression?, DictionaryEntry[]?) This method returns the value of the first node the XPath expression addresses. Declaration public string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description string | Edit this page View Source GetValuesFromNodes(XPathExpression) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description List<string> | Edit this page View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description List<string> | Edit this page View Source GetXPathQueryManagerInContext(XPathExpression?, DictionaryEntry[]?) This method returns an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration public IXPathQueryManager? GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Edit this page View Source InitAsync() Init Async Declaration public Task InitAsync() Returns Type Description Task Task | Edit this page View Source ResetNamespaces() This method deletes the current namespace context. Declaration public void ResetNamespaces() | Edit this page View Source SetDocumentToParse(byte[]) Sets a new XML document. Declaration public void SetDocumentToParse(byte[] document) Parameters Type Name Description byte[] document A byte array with XML data | Edit this page View Source SetDocumentToParse(Stream) Sets a new XML document. Declaration public void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Edit this page View Source SetDocumentToParse(string) Sets a new XmlDocument Declaration public void SetDocumentToParse(string fileName) Parameters Type Name Description string fileName | Edit this page View Source SetDocumentToParseAsync(HttpClientUtil) Sets a new XML document. Declaration public Task SetDocumentToParseAsync(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests Returns Type Description Task Implements IXPathQueryManager Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManagerCompiledExpressionsDecorator.html",
    "title": "Class XPathQueryManagerCompiledExpressionsDecorator",
    "keywords": "Class XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager. It stores compiled XPath expressions for re-use. Inheritance object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Implements IXPathQueryManager Inherited Members XPathQueryManagerDecoratorBase.XPathQueryManager XPathQueryManagerDecoratorBase.AddNamespace(string, string) XPathQueryManagerDecoratorBase.GetIterator(XPathExpression) XPathQueryManagerDecoratorBase.GetIterator(XPathExpression, DictionaryEntry[]) XPathQueryManagerDecoratorBase.GetValueFromNode(XPathExpression, DictionaryEntry[]) XPathQueryManagerDecoratorBase.ResetNamespaces() XPathQueryManagerDecoratorBase.SetDocumentToParse(Stream) XPathQueryManagerDecoratorBase.SetDocumentToParseAsync(HttpClientUtil) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public class XPathQueryManagerCompiledExpressionsDecorator : XPathQueryManagerDecoratorBase, IXPathQueryManager Constructors | Edit this page View Source XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager) Initializes a new instance of the XPathQueryManagerCompiledExpressionsDecorator class. Declaration public XPathQueryManagerCompiledExpressionsDecorator(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Methods | Edit this page View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XPathDocument instance. Declaration public override IXPathQueryManager Clone() Returns Type Description IXPathQueryManager Overrides XPathQueryManagerDecoratorBase.Clone() | Edit this page View Source Compile(string) This method compiles an XPath string, if not already saved. Otherwise it returns the available XPath compilation. Declaration public override XPathExpression? Compile(string xPath) Parameters Type Name Description string xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression Overrides XPathQueryManagerDecoratorBase.Compile(string) | Edit this page View Source GetXPathQueryManagerInContext(XPathExpression?, DictionaryEntry[]?) This method returns an instance of XPathQueryManagerCompiledExpressionsDecorator in the context of the first node the XPath expression addresses. Declaration public override IXPathQueryManager? GetXPathQueryManagerInContext(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager Overrides XPathQueryManagerDecoratorBase.GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]?) Implements IXPathQueryManager Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.XPathQueryManagerDecoratorBase.html",
    "title": "Class XPathQueryManagerDecoratorBase",
    "keywords": "Class XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager. Inheritance object XPathQueryManagerDecoratorBase XPathQueryManagerCompiledExpressionsDecorator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wfs.Xml Assembly: Mapsui.Nts.dll Syntax public abstract class XPathQueryManagerDecoratorBase Constructors | Edit this page View Source XPathQueryManagerDecoratorBase(IXPathQueryManager) Protected constructor for the abstract class. Declaration protected XPathQueryManagerDecoratorBase(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Fields | Edit this page View Source XPathQueryManager Declaration protected IXPathQueryManager XPathQueryManager Field Value Type Description IXPathQueryManager Methods | Edit this page View Source AddNamespace(string, string) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void AddNamespace(string prefix, string ns) Parameters Type Name Description string prefix A namespace prefix string ns A namespace URI | Edit this page View Source Clone() This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Edit this page View Source Compile(string) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathExpression? Compile(string xPath) Parameters Type Name Description string xPath An XPath string Returns Type Description XPathExpression A compiled XPath expression | Edit this page View Source GetIterator(XPathExpression?) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator? GetIterator(XPathExpression? xPath) Parameters Type Name Description XPathExpression xPath A compiled XPath expression Returns Type Description XPathNodeIterator | Edit this page View Source GetIterator(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator? GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description XPathNodeIterator | Edit this page View Source GetValueFromNode(XPathExpression?, DictionaryEntry[]?) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual string? GetValueFromNode(XPathExpression? xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description string | Edit this page View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]?) This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager? GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[]? queryParameters = null) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry[] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Edit this page View Source ResetNamespaces() This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void ResetNamespaces() | Edit this page View Source SetDocumentToParse(Stream) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Edit this page View Source SetDocumentToParseAsync(HttpClientUtil) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual Task SetDocumentToParseAsync(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests Returns Type Description Task Task Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wfs.Xml.html": {
    "href": "pages/Mapsui.Providers.Wfs.Xml.html",
    "title": "Namespace Mapsui.Providers.Wfs.Xml",
    "keywords": "Namespace Mapsui.Providers.Wfs.Xml Classes XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs. XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. XPathQueryManagerCompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager. It stores compiled XPath expressions for re-use. XPathQueryManagerDecoratorBase This class should be the base class of all decorators for classes implementing IXPathQueryManager. Interfaces IXPathQueryManager XPathQueryManager interface"
  },
  "pages/Mapsui.Providers.Wfs.html": {
    "href": "pages/Mapsui.Providers.Wfs.html",
    "title": "Namespace Mapsui.Providers.Wfs",
    "keywords": "Namespace Mapsui.Providers.Wfs Classes WFSProvider WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer (http://geoserver.org). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Enums WFSProvider.WFSVersionEnum This enumeration consists of expressions denoting WFS versions."
  },
  "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html": {
    "href": "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactAddress.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactAddress",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Capabilities.WmsContactInformation.ContactAddress Fields | Edit this page View Source Address Contact address Declaration public string? Address Field Value Type Description string | Edit this page View Source AddressType Type of address (usually \"postal\"). Declaration public string? AddressType Field Value Type Description string | Edit this page View Source City Contact City Declaration public string? City Field Value Type Description string | Edit this page View Source Country Country of contact address Declaration public string? Country Field Value Type Description string | Edit this page View Source PostCode Zipcode of contact Declaration public string? PostCode Field Value Type Description string | Edit this page View Source StateOrProvince State or province of contact Declaration public string? StateOrProvince Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html": {
    "href": "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.ContactPerson.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactPerson",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Capabilities.WmsContactInformation.ContactPerson Fields | Edit this page View Source Organisation Organisation of primary person Declaration public string? Organisation Field Value Type Description string | Edit this page View Source Person Primary contact person Declaration public string? Person Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html": {
    "href": "pages/Mapsui.Providers.Wms.Capabilities.WmsContactInformation.html",
    "title": "Struct Capabilities.WmsContactInformation",
    "keywords": "Struct Capabilities.WmsContactInformation Stores contact metadata about WMS service Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Capabilities.WmsContactInformation Fields | Edit this page View Source Address Address Declaration public Capabilities.WmsContactInformation.ContactAddress Address Field Value Type Description Capabilities.WmsContactInformation.ContactAddress | Edit this page View Source ElectronicMailAddress Email address Declaration public string? ElectronicMailAddress Field Value Type Description string | Edit this page View Source FacsimileTelephone Fax number Declaration public string? FacsimileTelephone Field Value Type Description string | Edit this page View Source PersonPrimary Primary contact person Declaration public Capabilities.WmsContactInformation.ContactPerson PersonPrimary Field Value Type Description Capabilities.WmsContactInformation.ContactPerson | Edit this page View Source Position Position of contact person Declaration public string? Position Field Value Type Description string | Edit this page View Source VoiceTelephone Telephone Declaration public string? VoiceTelephone Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html": {
    "href": "pages/Mapsui.Providers.Wms.Capabilities.WmsServiceDescription.html",
    "title": "Struct Capabilities.WmsServiceDescription",
    "keywords": "Struct Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Capabilities.WmsServiceDescription Fields | Edit this page View Source Abstract Optional narrative description providing additional information Declaration public string? Abstract Field Value Type Description string | Edit this page View Source AccessConstraints The optional element \"AccessConstraints\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no access constraints, as follows: \"none\". When constraints are imposed, no precise syntax has been defined for the text content of these elements, but client applications may display the content for user information and action. Declaration public string? AccessConstraints Field Value Type Description string | Edit this page View Source ContactInformation Optional WMS contact information Declaration public Capabilities.WmsContactInformation ContactInformation Field Value Type Description Capabilities.WmsContactInformation | Edit this page View Source Fees The optional element \"Fees\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no fees, as follows: \"none\". Declaration public string? Fees Field Value Type Description string | Edit this page View Source Keywords Optional list of keywords or keyword phrases describing the server as a whole to help catalog searching Declaration public string[] Keywords Field Value Type Description string[] | Edit this page View Source LayerLimit Maximum number of layers allowed (0=no restrictions) Declaration public uint LayerLimit Field Value Type Description uint | Edit this page View Source MaxHeight Maximum height allowed in pixels (0=no restrictions) Declaration public uint MaxHeight Field Value Type Description uint | Edit this page View Source MaxWidth Maximum width allowed in pixels (0=no restrictions) Declaration public uint MaxWidth Field Value Type Description uint | Edit this page View Source OnlineResource Mandatory Top-level web address of service or service provider. Declaration public string? OnlineResource Field Value Type Description string | Edit this page View Source Title Mandatory Human-readable title for pick lists Declaration public string? Title Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Capabilities.html": {
    "href": "pages/Mapsui.Providers.Wms.Capabilities.html",
    "title": "Class Capabilities",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance object Capabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class Capabilities Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Client.WmsLayerStyle.html": {
    "href": "pages/Mapsui.Providers.Wms.Client.WmsLayerStyle.html",
    "title": "Struct Client.WmsLayerStyle",
    "keywords": "Struct Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Client.WmsLayerStyle Fields | Edit this page View Source Abstract Abstract Declaration public string? Abstract Field Value Type Description string | Edit this page View Source LegendUrl Legend Declaration public Client.WmsStyleLegend LegendUrl Field Value Type Description Client.WmsStyleLegend | Edit this page View Source Name Name Declaration public string? Name Field Value Type Description string | Edit this page View Source StyleSheetUrl Style Sheet Url Declaration public Client.WmsOnlineResource StyleSheetUrl Field Value Type Description Client.WmsOnlineResource | Edit this page View Source Title Title Declaration public string? Title Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Client.WmsOnlineResource.html": {
    "href": "pages/Mapsui.Providers.Wms.Client.WmsOnlineResource.html",
    "title": "Struct Client.WmsOnlineResource",
    "keywords": "Struct Client.WmsOnlineResource Structure for storing info on an Online Resource Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Client.WmsOnlineResource Fields | Edit this page View Source OnlineResource URI of online resource Declaration public string? OnlineResource Field Value Type Description string | Edit this page View Source Type Type of online resource (Ex. request method 'Get' or 'Post') Declaration public string? Type Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Client.WmsServerLayer.html": {
    "href": "pages/Mapsui.Providers.Wms.Client.WmsServerLayer.html",
    "title": "Struct Client.WmsServerLayer",
    "keywords": "Struct Client.WmsServerLayer Structure for holding information about a WMS Layer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Client.WmsServerLayer Fields | Edit this page View Source Abstract Abstract Declaration public string? Abstract Field Value Type Description string | Edit this page View Source BoundingBoxes Coordinate Reference Systems supported by layer Declaration public IDictionary<string, MRect> BoundingBoxes Field Value Type Description IDictionary<string, MRect> | Edit this page View Source CRS Coordinate Reference Systems supported by layer Declaration public string[] CRS Field Value Type Description string[] | Edit this page View Source ChildLayers Collection of child layers Declaration public Client.WmsServerLayer[] ChildLayers Field Value Type Description WmsServerLayer[] | Edit this page View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description string[] | Edit this page View Source LatLonBoundingBox Extent of this layer in latitudinal/longitudinal coordinates Declaration public MRect LatLonBoundingBox Field Value Type Description MRect | Edit this page View Source Name Unique name of this layer used for requesting layer Declaration public string? Name Field Value Type Description string | Edit this page View Source Queryable Specifies whether this layer is queryable using GetFeatureInfo requests Declaration public bool Queryable Field Value Type Description bool | Edit this page View Source Style List of styles supported by layer Declaration public Client.WmsLayerStyle[] Style Field Value Type Description WmsLayerStyle[] | Edit this page View Source Title Layer title Declaration public string? Title Field Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Client.WmsStyleLegend.html": {
    "href": "pages/Mapsui.Providers.Wms.Client.WmsStyleLegend.html",
    "title": "Struct Client.WmsStyleLegend",
    "keywords": "Struct Client.WmsStyleLegend Structure for storing WMS Legend information Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public struct Client.WmsStyleLegend Fields | Edit this page View Source OnlineResource Online resource for legend style Declaration public Client.WmsOnlineResource OnlineResource Field Value Type Description Client.WmsOnlineResource | Edit this page View Source Size Size of legend Declaration public Size Size Field Value Type Description Size Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.Client.html": {
    "href": "pages/Mapsui.Providers.Wms.Client.html",
    "title": "Class Client",
    "keywords": "Class Client Class for requesting and parsing a WMS servers capabilities Inheritance object Client Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax [Serializable] public class Client Constructors | Edit this page View Source Client(XmlDocument, Func<string, Task<byte[]>>?, string?) Declaration public Client(XmlDocument capabilitiesXmlDocument, Func<string, Task<byte[]>>? getBytesAsync = null, string? userAgent = null) Parameters Type Name Description XmlDocument capabilitiesXmlDocument Func<string, Task<byte[]>> getBytesAsync string userAgent Properties | Edit this page View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[]? ExceptionFormats { get; } Property Value Type Description string[] | Edit this page View Source GetFeatureInfoOutputFormats Gets a list of available feature info mime type formats Declaration public Collection<string>? GetFeatureInfoOutputFormats { get; } Property Value Type Description Collection<string> | Edit this page View Source GetFeatureInfoRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[]? GetFeatureInfoRequests { get; } Property Value Type Description WmsOnlineResource[] | Edit this page View Source GetMapOutputFormats Gets a list of available image mime type formats Declaration public Collection<string>? GetMapOutputFormats { get; } Property Value Type Description Collection<string> | Edit this page View Source GetMapRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[]? GetMapRequests { get; } Property Value Type Description WmsOnlineResource[] | Edit this page View Source Layer Gets the hierarchical layer structure Declaration public Client.WmsServerLayer Layer { get; } Property Value Type Description Client.WmsServerLayer | Edit this page View Source ServiceDescription Gets the service description Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Edit this page View Source VendorSpecificCapabilities Exposes the capabilities' VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode? VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Edit this page View Source WmsVersion Gets the version of the WMS server (ex. \"1.3.0\") Declaration public string WmsVersion { get; } Property Value Type Description string Methods | Edit this page View Source CreateAsync(string, string?, Func<string, Task<byte[]>>?, IUrlPersistentCache?, string?) Initializes WMS server and parses the Capabilities request Declaration public static Task<Client> CreateAsync(string url, string? wmsVersion = null, Func<string, Task<byte[]>>? getBytesAsync = null, IUrlPersistentCache? persistentCache = null, string? userAgent = null) Parameters Type Name Description string url URL of wms server string wmsVersion WMS version number, null to get the default from service Func<string, Task<byte[]>> getBytesAsync Download method, leave null for default IUrlPersistentCache persistentCache persistent Cache string userAgent user Agent Returns Type Description Task<Client> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.FeatureInfo.html": {
    "href": "pages/Mapsui.Providers.Wms.FeatureInfo.html",
    "title": "Class FeatureInfo",
    "keywords": "Class FeatureInfo Inheritance object FeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class FeatureInfo Properties | Edit this page View Source FeatureInfos Declaration public List<Dictionary<string, string>>? FeatureInfos { get; set; } Property Value Type Description List<Dictionary<string, string>> | Edit this page View Source LayerName Declaration public string? LayerName { get; set; } Property Value Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.GetFeatureInfo.html": {
    "href": "pages/Mapsui.Providers.Wms.GetFeatureInfo.html",
    "title": "Class GetFeatureInfo",
    "keywords": "Class GetFeatureInfo Inheritance object GetFeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class GetFeatureInfo Constructors | Edit this page View Source GetFeatureInfo(Func<string, Task<byte[]>>?) Declaration public GetFeatureInfo(Func<string, Task<byte[]>>? getBytesAsync = null) Parameters Type Name Description Func<string, Task<byte[]>> getBytesAsync Fields | Edit this page View Source ApplicationVndOGCGml Declaration public const string? ApplicationVndOGCGml = \"application/vnd.ogc.gml\" Field Value Type Description string | Edit this page View Source TextXml Declaration public const string? TextXml = \"text/xml\" Field Value Type Description string | Edit this page View Source TextXmlSubtypeGml Declaration public const string TextXmlSubtypeGml = \"text/xml; subtype=gml/3.1.1\" Field Value Type Description string Properties | Edit this page View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source ExtraParams Declaration public Dictionary<string, string>? ExtraParams { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source TimeOut Timeout of web request in milliseconds. Default is 7 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int | Edit this page View Source UserAgent Declaration public string? UserAgent { get; set; } Property Value Type Description string Methods | Edit this page View Source RequestAsync(string, string, string, string, string, double, double, double, double, int, int, int, int) Request FeatureInfo for a WMS Server Declaration public Task<FeatureInfo?> RequestAsync(string baseUrl, string wmsVersion, string infoFormat, string srs, string layer, double extendXmin, double extendYmin, double extendXmax, double extendYmax, int x, int y, int mapWidth, int mapHeight) Parameters Type Name Description string baseUrl Base URL of the WMS server string wmsVersion WMS Version string infoFormat Format of response (text/xml, text/plain, etc) string srs EPSG Code of the coordinate system string layer Layer to get FeatureInfo From double extendXmin double extendYmin double extendXmax double extendYmax int x Coordinate in pixels x int y Coordinate in pixels y int mapWidth Width of the map int mapHeight Height of the map Returns Type Description Task<FeatureInfo> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html": {
    "href": "pages/Mapsui.Providers.Wms.GmlGetFeatureInfoParser.html",
    "title": "Class GmlGetFeatureInfoParser",
    "keywords": "Class GmlGetFeatureInfoParser Inheritance object GmlGetFeatureInfoParser Implements IGetFeatureInfoParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class GmlGetFeatureInfoParser : IGetFeatureInfoParser Methods | Edit this page View Source ParseWMSResult(string?, Stream) Declaration public FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description string layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.IGetFeatureInfoParser.html": {
    "href": "pages/Mapsui.Providers.Wms.IGetFeatureInfoParser.html",
    "title": "Interface IGetFeatureInfoParser",
    "keywords": "Interface IGetFeatureInfoParser Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public interface IGetFeatureInfoParser Methods | Edit this page View Source ParseWMSResult(string?, Stream) Declaration FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description string layerName Stream result Returns Type Description FeatureInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.StatusEventHandler.html": {
    "href": "pages/Mapsui.Providers.Wms.StatusEventHandler.html",
    "title": "Delegate StatusEventHandler",
    "keywords": "Delegate StatusEventHandler Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public delegate void StatusEventHandler(object sender, FeatureInfo? featureInfo) Parameters Type Name Description object sender FeatureInfo featureInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.WmsProvider.html": {
    "href": "pages/Mapsui.Providers.Wms.WmsProvider.html",
    "title": "Class WmsProvider",
    "keywords": "Class WmsProvider Web Map Service layer Inheritance object WmsProvider Implements IProjectingProvider IProvider ILayerFeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class WmsProvider : IProjectingProvider, IProvider, ILayerFeatureInfo Remarks The WmsLayer is currently very basic and doesn't support automatic fetching of the WMS Service Description. Instead you would have to add the necessary parameters to the URL, and the WmsLayer will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Constructors | Edit this page View Source WmsProvider(XmlDocument, Func<string, Task<byte[]>>?, IUrlPersistentCache?) Declaration public WmsProvider(XmlDocument capabilities, Func<string, Task<byte[]>>? getBytesAsync = null, IUrlPersistentCache? persistentCache = null) Parameters Type Name Description XmlDocument capabilities Func<string, Task<byte[]>> getBytesAsync IUrlPersistentCache persistentCache Properties | Edit this page View Source AxisOrder Gets or sets a value indicating the axis order Declaration public int[] AxisOrder { get; set; } Property Value Type Description int[] Remarks The axis order is an array of array offsets. It can be either {0, 1} or {1, 0}. If not set explicitly, CrsAxisOrderRegistry is asked for a value based on CRS. | Edit this page View Source CRS The spatial reference ID (CRS) Declaration public string? CRS { get; set; } Property Value Type Description string | Edit this page View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer Declaration public bool ContinueOnError { get; set; } Property Value Type Description bool | Edit this page View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials? Credentials { get; set; } Property Value Type Description ICredentials | Edit this page View Source DefaultCache Declaration public static IUrlPersistentCache? DefaultCache { get; set; } Property Value Type Description IUrlPersistentCache | Edit this page View Source ExtraParams Declaration public Dictionary<string, string>? ExtraParams { get; set; } Property Value Type Description Dictionary<string, string> | Edit this page View Source GetFeatureInfoFormats Gets the list of available FeatureInfo Output Format Declaration public Collection<string> GetFeatureInfoFormats { get; } Property Value Type Description Collection<string> | Edit this page View Source LayerList Gets the list of enabled layers Declaration public Collection<string>? LayerList { get; } Property Value Type Description Collection<string> | Edit this page View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description Collection<string> | Edit this page View Source RootLayer Gets the hierarchical list of available WMS layers from this service Declaration public Client.WmsServerLayer? RootLayer { get; } Property Value Type Description Client.WmsServerLayer? | Edit this page View Source ServiceDescription Gets the service description from this server Declaration public Capabilities.WmsServiceDescription? ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription? | Edit this page View Source StylesList Gets the list of enabled styles Declaration public Collection<string>? StylesList { get; } Property Value Type Description Collection<string> | Edit this page View Source TimeOut Timeout of web request in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description int | Edit this page View Source Transparent If it should set the Wms Image to Transparent Declaration public bool? Transparent { get; set; } Property Value Type Description bool? | Edit this page View Source UserAgent Declaration public string? UserAgent { get; set; } Property Value Type Description string | Edit this page View Source Version Gets the WMS Server version of this service Declaration public string? Version { get; } Property Value Type Description string Methods | Edit this page View Source AddLayer(string) Adds a layer to WMS request Declaration public void AddLayer(string name) Parameters Type Name Description string name Name of layer Remarks Layer names are case sensitive. Exceptions Type Condition ArgumentException Throws an exception is an unknown layer is added | Edit this page View Source AddStyle(string) Adds a style to the style collection Declaration public void AddStyle(string name) Parameters Type Name Description string name Name of style Exceptions Type Condition ArgumentException Throws an exception is an unknown layer is added | Edit this page View Source CreateAsync(string, string?, Func<string, Task<byte[]>>?, IUrlPersistentCache?, string?) Initializes a new layer, and downloads and parses the service description Declaration public static Task<WmsProvider> CreateAsync(string url, string? wmsVersion = null, Func<string, Task<byte[]>>? getBytesAsync = null, IUrlPersistentCache? persistentCache = null, string? userAgent = null) Parameters Type Name Description string url Url of WMS server string wmsVersion Version number of wms leave null to get the default service version Func<string, Task<byte[]>> getBytesAsync Download method, leave null for default IUrlPersistentCache persistentCache string userAgent user Agent Returns Type Description Task<WmsProvider> | Edit this page View Source GetExtent() MRect of data set Declaration public MRect? GetExtent() Returns Type Description MRect BoundingBox | Edit this page View Source GetFeatureInfoAsync(Viewport, ScreenPosition) Declaration public Task<IDictionary<string, IEnumerable<IFeature>>> GetFeatureInfoAsync(Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Returns Type Description Task<IDictionary<string, IEnumerable<IFeature>>> | Edit this page View Source GetFeaturesAsync(FetchInfo) Declaration public Task<IEnumerable<IFeature>> GetFeaturesAsync(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Returns Type Description Task<IEnumerable<IFeature>> | Edit this page View Source GetLayer(string) Get a layer from the WMS Declaration public Client.WmsServerLayer GetLayer(string name) Parameters Type Name Description string name Name of layer Returns Type Description Client.WmsServerLayer Remarks Layer names are case sensitive. Exceptions Type Condition ArgumentException Throws an exception if the layer is not found | Edit this page View Source GetLegendRequestUrls() Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public IEnumerable<string> GetLegendRequestUrls() Returns Type Description IEnumerable<string> URL for WMS request | Edit this page View Source GetLegendsAsync() Declaration public IAsyncEnumerable<MemoryStream> GetLegendsAsync() Returns Type Description IAsyncEnumerable<MemoryStream> | Edit this page View Source GetRequestUrl(MRect?, int, int) Gets the URL for a map request base on current settings, the image size and BoundingBox Declaration public string GetRequestUrl(MRect? box, int width, int height) Parameters Type Name Description MRect box int width int height Returns Type Description string URL for WMS request | Edit this page View Source IsCrsSupported(string) Queries whether a provider supports projection to a certain CRS. Declaration public bool? IsCrsSupported(string crs) Parameters Type Name Description string crs The crs to project to Returns Type Description bool? True if is does, false if it does not, null if it is unknown | Edit this page View Source RemoveAllLayers() Removes all layers Declaration public void RemoveAllLayers() | Edit this page View Source RemoveAllStyles() Removes all styles from the list Declaration public void RemoveAllStyles() | Edit this page View Source RemoveLayer(string) Removes a layer from the layer list Declaration public void RemoveLayer(string name) Parameters Type Name Description string name Name of layer to remove | Edit this page View Source RemoveLayerAt(int) Removes the layer at the specified index Declaration public void RemoveLayerAt(int index) Parameters Type Name Description int index | Edit this page View Source RemoveStyle(string) Removes a style from the collection Declaration public void RemoveStyle(string name) Parameters Type Name Description string name Name of style | Edit this page View Source RemoveStyleAt(int) Removes a style at specified index Declaration public void RemoveStyleAt(int index) Parameters Type Name Description int index Index | Edit this page View Source SetImageFormat(string) Sets the image type to use when requesting images from the WMS server Declaration public void SetImageFormat(string mimeType) Parameters Type Name Description string mimeType Mime type of image format Remarks See the OutputFormats property for a list of available mime types supported by the WMS server Exceptions Type Condition ArgumentException Throws an exception if either the mime type isn't offered by the WMS or GDI+ doesn't support this mime type. | Edit this page View Source TryGetMapAsync(MSection) Declaration public Task<(bool Success, MRaster?)> TryGetMapAsync(MSection section) Parameters Type Name Description MSection section Returns Type Description Task<(bool Success, MRaster)> Implements IProjectingProvider IProvider ILayerFeatureInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html": {
    "href": "pages/Mapsui.Providers.Wms.XmlGetFeatureInfoParser.html",
    "title": "Class XmlGetFeatureInfoParser",
    "keywords": "Class XmlGetFeatureInfoParser Inheritance object XmlGetFeatureInfoParser Implements IGetFeatureInfoParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Providers.Wms Assembly: Mapsui.dll Syntax public class XmlGetFeatureInfoParser : IGetFeatureInfoParser Methods | Edit this page View Source ParseWMSResult(string?, Stream) Declaration public FeatureInfo ParseWMSResult(string? layerName, Stream result) Parameters Type Name Description string layerName Stream result Returns Type Description FeatureInfo Implements IGetFeatureInfoParser Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Providers.Wms.html": {
    "href": "pages/Mapsui.Providers.Wms.html",
    "title": "Namespace Mapsui.Providers.Wms",
    "keywords": "Namespace Mapsui.Providers.Wms Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WMS servers capabilities FeatureInfo GetFeatureInfo GmlGetFeatureInfoParser WmsProvider Web Map Service layer XmlGetFeatureInfoParser Structs Capabilities.WmsContactInformation Stores contact metadata about WMS service Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Client.WmsOnlineResource Structure for storing info on an Online Resource Client.WmsServerLayer Structure for holding information about a WMS Layer Client.WmsStyleLegend Structure for storing WMS Legend information Interfaces IGetFeatureInfoParser Delegates StatusEventHandler"
  },
  "pages/Mapsui.Providers.html": {
    "href": "pages/Mapsui.Providers.html",
    "title": "Namespace Mapsui.Providers",
    "keywords": "Namespace Mapsui.Providers Classes FilteringProvider MemoryProvider ProjectingProvider StackedLabelProvider Interfaces IProjectingProvider IProvider Interface for data providers IProviderExtended"
  },
  "pages/Mapsui.RemoteMapInfoFetcher.html": {
    "href": "pages/Mapsui.RemoteMapInfoFetcher.html",
    "title": "Class RemoteMapInfoFetcher",
    "keywords": "Class RemoteMapInfoFetcher Inheritance object RemoteMapInfoFetcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class RemoteMapInfoFetcher Methods | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration public static Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.CacheHolder-1.html": {
    "href": "pages/Mapsui.Rendering.Caching.CacheHolder-1.html",
    "title": "Class CacheHolder<T>",
    "keywords": "Class CacheHolder<T> Inheritance object CacheHolder<T> Implements ICacheHolder IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public sealed class CacheHolder<T> : ICacheHolder, IDisposable where T : class Type Parameters Name Description T Constructors | Edit this page View Source CacheHolder(T) Declaration public CacheHolder(T instance) Parameters Type Name Description T instance Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Get<TResult>() Declaration public CacheTracker<TResult>? Get<TResult>() where TResult : T? Returns Type Description CacheTracker<TResult>? Type Parameters Name Description TResult | Edit this page View Source SetInstance(T) Declaration public void SetInstance(T instance) Parameters Type Name Description T instance Implements ICacheHolder IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.CacheTracker-1.html": {
    "href": "pages/Mapsui.Rendering.Caching.CacheTracker-1.html",
    "title": "Struct CacheTracker<T>",
    "keywords": "Struct CacheTracker<T> Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public readonly struct CacheTracker<T> : IDisposable Type Parameters Name Description T Constructors | Edit this page View Source CacheTracker(ICacheHolder, T) Declaration public CacheTracker(ICacheHolder holder, T instance) Parameters Type Name Description ICacheHolder holder T instance | Edit this page View Source CacheTracker(T) Declaration public CacheTracker(T instance) Parameters Type Name Description T instance Properties | Edit this page View Source Instance Declaration public T Instance { get; } Property Value Type Description T Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.DrawableImageCache.html": {
    "href": "pages/Mapsui.Rendering.Caching.DrawableImageCache.html",
    "title": "Class DrawableImageCache",
    "keywords": "Class DrawableImageCache Inheritance object DrawableImageCache Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public sealed class DrawableImageCache : IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source GetOrCreate(string, Func<IDrawableImage?>) Declaration public IDrawableImage? GetOrCreate(string key, Func<IDrawableImage?> tryCreateDrawableImage) Parameters Type Name Description string key Func<IDrawableImage> tryCreateDrawableImage Returns Type Description IDrawableImage Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.ICacheHolder.html": {
    "href": "pages/Mapsui.Rendering.Caching.ICacheHolder.html",
    "title": "Interface ICacheHolder",
    "keywords": "Interface ICacheHolder Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public interface ICacheHolder Methods | Edit this page View Source SetInstance(object) Declaration void SetInstance(object instance) Parameters Type Name Description object instance Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.ITileCacheEntry.html": {
    "href": "pages/Mapsui.Rendering.Caching.ITileCacheEntry.html",
    "title": "Interface ITileCacheEntry",
    "keywords": "Interface ITileCacheEntry Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public interface ITileCacheEntry Properties | Edit this page View Source Data Declaration object Data { get; } Property Value Type Description object | Edit this page View Source IterationUsed Declaration long IterationUsed { get; set; } Property Value Type Description long Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.IdentityComparer-1.html": {
    "href": "pages/Mapsui.Rendering.Caching.IdentityComparer-1.html",
    "title": "Class IdentityComparer<T>",
    "keywords": "Class IdentityComparer<T> Inheritance object IdentityComparer<T> Implements IEqualityComparer<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public class IdentityComparer<T> : IEqualityComparer<T> where T : class Type Parameters Name Description T Methods | Edit this page View Source Equals(T?, T?) Determines whether the specified objects are equal. Declaration public bool Equals(T? obj, T? otherObj) Parameters Type Name Description T obj T otherObj Returns Type Description bool true if the specified objects are equal; otherwise, false. | Edit this page View Source GetHashCode(T) Returns a hash code for the specified object. Declaration public int GetHashCode(T obj) Parameters Type Name Description T obj The object for which a hash code is to be returned. Returns Type Description int A hash code for the specified object. Exceptions Type Condition ArgumentNullException The type of obj is a reference type and obj is null. Implements IEqualityComparer<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.TileCache.html": {
    "href": "pages/Mapsui.Rendering.Caching.TileCache.html",
    "title": "Class TileCache",
    "keywords": "Class TileCache Inheritance object TileCache Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public sealed class TileCache : IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source GetOrAdd(MRaster, Func<MRaster, ITileCacheEntry>, long) Declaration public ITileCacheEntry GetOrAdd(MRaster raster, Func<MRaster, ITileCacheEntry> create, long currentIteration) Parameters Type Name Description MRaster raster Func<MRaster, ITileCacheEntry> create long currentIteration Returns Type Description ITileCacheEntry | Edit this page View Source UpdateCache(long) Declaration public void UpdateCache(long iteration) Parameters Type Name Description long iteration Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.VectorCache.html": {
    "href": "pages/Mapsui.Rendering.Caching.VectorCache.html",
    "title": "Class VectorCache",
    "keywords": "Class VectorCache Inheritance object VectorCache Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Caching Assembly: Mapsui.dll Syntax public sealed class VectorCache : IDisposable Constructors | Edit this page View Source VectorCache(RenderService, int) Declaration public VectorCache(RenderService renderService, int capacity) Parameters Type Name Description RenderService renderService int capacity Properties | Edit this page View Source Enabled Declaration public bool Enabled { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source GetOrCreate<TParam, TPaint>(TParam, Func<TParam, RenderService, TPaint>) Declaration public CacheTracker<TPaint> GetOrCreate<TParam, TPaint>(TParam param, Func<TParam, RenderService, TPaint> toPaint) where TParam : notnull where TPaint : class Parameters Type Name Description TParam param Func<TParam, RenderService, TPaint> toPaint Returns Type Description CacheTracker<TPaint> Type Parameters Name Description TParam TPaint | Edit this page View Source GetOrCreate<TParam, TPaint>(TParam, Func<TParam, TPaint>) Declaration public CacheTracker<TPaint> GetOrCreate<TParam, TPaint>(TParam param, Func<TParam, TPaint> toPaint) where TParam : notnull where TPaint : class Parameters Type Name Description TParam param Func<TParam, TPaint> toPaint Returns Type Description CacheTracker<TPaint> Type Parameters Name Description TParam TPaint Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Caching.html": {
    "href": "pages/Mapsui.Rendering.Caching.html",
    "title": "Namespace Mapsui.Rendering.Caching",
    "keywords": "Namespace Mapsui.Rendering.Caching Classes CacheHolder<T> DrawableImageCache IdentityComparer<T> TileCache VectorCache Structs CacheTracker<T> Interfaces ICacheHolder ITileCacheEntry"
  },
  "pages/Mapsui.Rendering.DefaultRendererFactory.html": {
    "href": "pages/Mapsui.Rendering.DefaultRendererFactory.html",
    "title": "Class DefaultRendererFactory",
    "keywords": "Class DefaultRendererFactory Inheritance object DefaultRendererFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public static class DefaultRendererFactory Properties | Edit this page View Source Create Declaration public static Func<IRenderer> Create { get; set; } Property Value Type Description Func<IRenderer> Methods | Edit this page View Source GetRenderer() Declaration public static IRenderer GetRenderer() Returns Type Description IRenderer"
  },
  "pages/Mapsui.Rendering.IDrawableImage.html": {
    "href": "pages/Mapsui.Rendering.IDrawableImage.html",
    "title": "Interface IDrawableImage",
    "keywords": "Interface IDrawableImage Inherited Members IDisposable.Dispose() Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public interface IDrawableImage : IDisposable Properties | Edit this page View Source Height Declaration float Height { get; } Property Value Type Description float | Edit this page View Source Width Declaration float Width { get; } Property Value Type Description float Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.IRenderer.html": {
    "href": "pages/Mapsui.Rendering.IRenderer.html",
    "title": "Interface IRenderer",
    "keywords": "Interface IRenderer Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public interface IRenderer Methods | Edit this page View Source GetMapInfo(ScreenPosition, Viewport, IEnumerable<ILayer>, RenderService, int) Declaration MapInfo GetMapInfo(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, int margin = 0) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers RenderService renderService int margin Returns Type Description MapInfo | Edit this page View Source Render(object, Viewport, IEnumerable<ILayer>, IEnumerable<IWidget>, RenderService, Color?) Declaration void Render(object target, Viewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, RenderService renderService, Color? background = null) Parameters Type Name Description object target Viewport viewport IEnumerable<ILayer> layers IEnumerable<IWidget> widgets RenderService renderService Color? background | Edit this page View Source RenderToBitmapStream(Viewport, IEnumerable<ILayer>, RenderService, Color?, float, IEnumerable<IWidget>?, RenderFormat, int) Declaration MemoryStream RenderToBitmapStream(Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, Color? background = null, float pixelDensity = 1, IEnumerable<IWidget>? widgets = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description Viewport viewport IEnumerable<ILayer> layers RenderService renderService Color? background float pixelDensity IEnumerable<IWidget> widgets RenderFormat renderFormat int quality Returns Type Description MemoryStream | Edit this page View Source TryGetStyleRenderer(Type, out IStyleRenderer?) Declaration bool TryGetStyleRenderer(Type widgetType, out IStyleRenderer? widgetRenderer) Parameters Type Name Description Type widgetType IStyleRenderer widgetRenderer Returns Type Description bool | Edit this page View Source TryGetWidgetRenderer(Type, out IWidgetRenderer?) Declaration bool TryGetWidgetRenderer(Type widgetType, out IWidgetRenderer? widgetRenderer) Parameters Type Name Description Type widgetType IWidgetRenderer widgetRenderer Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.MapInfoRecord.html": {
    "href": "pages/Mapsui.Rendering.MapInfoRecord.html",
    "title": "Class MapInfoRecord",
    "keywords": "Class MapInfoRecord Inheritance object MapInfoRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public class MapInfoRecord Constructors | Edit this page View Source MapInfoRecord(IFeature, IStyle, ILayer) Declaration public MapInfoRecord(IFeature feature, IStyle style, ILayer layer) Parameters Type Name Description IFeature feature IStyle style ILayer layer Properties | Edit this page View Source Feature Declaration public IFeature Feature { get; set; } Property Value Type Description IFeature | Edit this page View Source Layer Declaration public ILayer Layer { get; set; } Property Value Type Description ILayer | Edit this page View Source Style Declaration public IStyle Style { get; set; } Property Value Type Description IStyle Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.RenderController.html": {
    "href": "pages/Mapsui.Rendering.RenderController.html",
    "title": "Class RenderController",
    "keywords": "Class RenderController Inheritance object RenderController Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering Assembly: Mapsui.UI.Android.dll Syntax public sealed class RenderController : IDisposable Constructors | Edit this page View Source RenderController(Func<Map?>, Action) Declaration public RenderController(Func<Map?> getMap, Action InvalidateCanvas) Parameters Type Name Description Func<Map> getMap Action InvalidateCanvas Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source GetMapInfo(ScreenPosition, Viewport, IEnumerable<ILayer>, RenderService, int) Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, int margin = 0) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers RenderService renderService int margin Returns Type Description MapInfo | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Render(object) Declaration public void Render(object canvas) Parameters Type Name Description object canvas | Edit this page View Source RenderToBitmapStream(Viewport, IEnumerable<ILayer>, RenderService, Color?, float, IEnumerable<IWidget>?, RenderFormat, int) Declaration public MemoryStream RenderToBitmapStream(Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, Color? background = null, float pixelDensity = 1, IEnumerable<IWidget>? widgets = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description Viewport viewport IEnumerable<ILayer> layers RenderService renderService Color? background float pixelDensity IEnumerable<IWidget> widgets RenderFormat renderFormat int quality Returns Type Description MemoryStream Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.RenderException.html": {
    "href": "pages/Mapsui.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance object Exception RenderException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public class RenderException : Exception, ISerializable Constructors | Edit this page View Source RenderException(string) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description string message | Edit this page View Source RenderException(string, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description string message Exception inner Implements ISerializable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.RenderFormat.html": {
    "href": "pages/Mapsui.Rendering.RenderFormat.html",
    "title": "Enum RenderFormat",
    "keywords": "Enum RenderFormat Formats the MapRenderer should render to Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public enum RenderFormat Fields Name Description Jpeg Jpeg Lossy Format Png Default Format works everywhere Skp Skia Vector Format WebP 20 - 30% smaller lossless Format Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Rendering.RenderService.html": {
    "href": "pages/Mapsui.Rendering.RenderService.html",
    "title": "Class RenderService",
    "keywords": "Class RenderService Inheritance object RenderService Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public sealed class RenderService : IDisposable Constructors | Edit this page View Source RenderService(int) Declaration public RenderService(int vectorCacheCapacity = 30000) Parameters Type Name Description int vectorCacheCapacity Properties | Edit this page View Source DrawableImageCache Declaration public DrawableImageCache DrawableImageCache { get; } Property Value Type Description DrawableImageCache | Edit this page View Source ImageSourceCache Declaration public ImageSourceCache ImageSourceCache { get; } Property Value Type Description ImageSourceCache | Edit this page View Source TileCache Declaration public TileCache TileCache { get; } Property Value Type Description TileCache | Edit this page View Source VectorCache Declaration public VectorCache VectorCache { get; } Property Value Type Description VectorCache Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Caching.TileCacheEntry.html": {
    "href": "pages/Mapsui.Rendering.Skia.Caching.TileCacheEntry.html",
    "title": "Class TileCacheEntry",
    "keywords": "Class TileCacheEntry Inheritance object TileCacheEntry Implements ITileCacheEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Caching Assembly: Mapsui.Rendering.Skia.dll Syntax public sealed class TileCacheEntry : ITileCacheEntry Constructors | Edit this page View Source TileCacheEntry(SKObject) Declaration public TileCacheEntry(SKObject skObject) Parameters Type Name Description SKObject skObject Properties | Edit this page View Source Data Declaration public object Data { get; } Property Value Type Description object | Edit this page View Source IterationUsed Declaration public long IterationUsed { get; set; } Property Value Type Description long Implements ITileCacheEntry Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Caching.html": {
    "href": "pages/Mapsui.Rendering.Skia.Caching.html",
    "title": "Namespace Mapsui.Rendering.Skia.Caching",
    "keywords": "Namespace Mapsui.Rendering.Skia.Caching Classes TileCacheEntry"
  },
  "pages/Mapsui.Rendering.Skia.CalloutStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.CalloutStyleRenderer.html",
    "title": "Class CalloutStyleRenderer",
    "keywords": "Class CalloutStyleRenderer Inheritance object CalloutStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class CalloutStyleRenderer : ISkiaStyleRenderer, IStyleRenderer Methods | Edit this page View Source CreateCalloutContent(CalloutStyle, RenderService) Update content for single and detail Declaration public static SKPicture CreateCalloutContent(CalloutStyle callout, RenderService renderService) Parameters Type Name Description CalloutStyle callout RenderService renderService Returns Type Description SKPicture | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool Implements ISkiaStyleRenderer IStyleRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.CustomLayerRenderer.RenderHandler.html": {
    "href": "pages/Mapsui.Rendering.Skia.CustomLayerRenderer.RenderHandler.html",
    "title": "Delegate CustomLayerRenderer.RenderHandler",
    "keywords": "Delegate CustomLayerRenderer.RenderHandler Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public delegate void CustomLayerRenderer.RenderHandler(SKCanvas canvas, Viewport viewport, ILayer layer, RenderService renderService) Parameters Type Name Description SKCanvas canvas Viewport viewport ILayer layer RenderService renderService Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.CustomLayerRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.CustomLayerRenderer.html",
    "title": "Class CustomLayerRenderer",
    "keywords": "Class CustomLayerRenderer Inheritance object CustomLayerRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class CustomLayerRenderer Methods | Edit this page View Source RenderLayer(SKCanvas, Viewport, ILayer, RenderService, RenderHandler) Declaration public static void RenderLayer(SKCanvas canvas, Viewport viewport, ILayer layer, RenderService renderService, CustomLayerRenderer.RenderHandler renderHandler) Parameters Type Name Description SKCanvas canvas Viewport viewport ILayer layer RenderService renderService CustomLayerRenderer.RenderHandler renderHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.AlignmentExtensions.html",
    "title": "Class AlignmentExtensions",
    "keywords": "Class AlignmentExtensions Inheritance object AlignmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class AlignmentExtensions Methods | Edit this page View Source ToRichTextKit(Alignment) Declaration public static TextAlignment ToRichTextKit(this Alignment textAlignment) Parameters Type Name Description Alignment textAlignment Returns Type Description TextAlignment"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.ByteExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.ByteExtensions.html",
    "title": "Class ByteExtensions",
    "keywords": "Class ByteExtensions Inheritance object ByteExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class ByteExtensions Methods | Edit this page View Source LoadSvg(byte[]) Load Svg from byte array Declaration public static SKSvg LoadSvg(this byte[] bytes) Parameters Type Name Description byte[] bytes svg data Returns Type Description SKSvg loaded svg image"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.CalloutBalloonDefinitionExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.CalloutBalloonDefinitionExtensions.html",
    "title": "Class CalloutBalloonDefinitionExtensions",
    "keywords": "Class CalloutBalloonDefinitionExtensions Inheritance object CalloutBalloonDefinitionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class CalloutBalloonDefinitionExtensions Methods | Edit this page View Source CreateCallout(CalloutBalloonDefinition, SKPicture) Declaration public static SKPicture CreateCallout(this CalloutBalloonDefinition balloonDefinition, SKPicture content) Parameters Type Name Description CalloutBalloonDefinition balloonDefinition SKPicture content Returns Type Description SKPicture | Edit this page View Source GetBalloonBounds(CalloutBalloonDefinition, Size) Declaration public static CalloutBalloonBounds GetBalloonBounds(this CalloutBalloonDefinition balloonDefinition, Size contentSize) Parameters Type Name Description CalloutBalloonDefinition balloonDefinition Size contentSize Returns Type Description CalloutBalloonBounds"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance object ColorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class ColorExtensions Methods | Edit this page View Source ToSkia(Color, float) Declaration public static SKColor ToSkia(this Color color, float layerOpacity = 1) Parameters Type Name Description Color color float layerOpacity Returns Type Description SKColor | Edit this page View Source ToSkia(Color?, float) Declaration public static SKColor ToSkia(this Color? color, float layerOpacity = 1) Parameters Type Name Description Color? color float layerOpacity Returns Type Description SKColor"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.CoordinateExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.CoordinateExtensions.html",
    "title": "Class CoordinateExtensions",
    "keywords": "Class CoordinateExtensions Inheritance object CoordinateExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class CoordinateExtensions Methods | Edit this page View Source ToSkiaPoint(Coordinate) Declaration public static SKPoint ToSkiaPoint(this Coordinate coordinate) Parameters Type Name Description Coordinate coordinate Returns Type Description SKPoint"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance object MRectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class MRectExtensions Methods | Edit this page View Source ToSkia(MRect) Declaration public static SKRect ToSkia(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description SKRect"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.PenStrokeCapExtensions.html",
    "title": "Class PenStrokeCapExtensions",
    "keywords": "Class PenStrokeCapExtensions Inheritance object PenStrokeCapExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeCapExtensions Methods | Edit this page View Source ToSkia(PenStrokeCap) Declaration public static SKStrokeCap ToSkia(this PenStrokeCap penStrokeCap) Parameters Type Name Description PenStrokeCap penStrokeCap Returns Type Description SKStrokeCap"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.PenStrokeJoinExtensions.html",
    "title": "Class PenStrokeJoinExtensions",
    "keywords": "Class PenStrokeJoinExtensions Inheritance object PenStrokeJoinExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class PenStrokeJoinExtensions Methods | Edit this page View Source ToSkia(StrokeJoin) Declaration public static SKStrokeJoin ToSkia(this StrokeJoin penStrokeJoin) Parameters Type Name Description StrokeJoin penStrokeJoin Returns Type Description SKStrokeJoin"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.PenStyleExtension.html",
    "title": "Class PenStyleExtension",
    "keywords": "Class PenStyleExtension Inheritance object PenStyleExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class PenStyleExtension Methods | Edit this page View Source ToSkia(PenStyle, float, float[]?, float) Declaration public static SKPathEffect ToSkia(this PenStyle penStyle, float width, float[]? dashArray = null, float dashOffset = 0) Parameters Type Name Description PenStyle penStyle float width float[] dashArray float dashOffset Returns Type Description SKPathEffect"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.PointExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance object PointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class PointExtensions Methods | Edit this page View Source ToSkiaPath(Point, Viewport, SKRect, float) Converts a LineString in world coordinates to a Skia path Declaration public static SKPath ToSkiaPath(this Point point, Viewport viewport, SKRect clipRect, float strokeWidth) Parameters Type Name Description Point point List of points in Mapsui world coordinates. Viewport viewport The Viewport that is used for the conversions. SKRect clipRect Rectangle to clip to. All lines outside aren't drawn. float strokeWidth stroke Width Returns Type Description SKPath"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.SKColorExtensions.html",
    "title": "Class SKColorExtensions",
    "keywords": "Class SKColorExtensions Inheritance object SKColorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SKColorExtensions Methods | Edit this page View Source ToMapsui(SKColor) Declaration public static Color ToMapsui(this SKColor color) Parameters Type Name Description SKColor color Returns Type Description Color"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.SKNativeObjectExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.SKNativeObjectExtensions.html",
    "title": "Class SKNativeObjectExtensions",
    "keywords": "Class SKNativeObjectExtensions Inheritance object SKNativeObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SKNativeObjectExtensions Methods | Edit this page View Source IsDisposed(SKNativeObject?) Declaration public static bool IsDisposed(this SKNativeObject? skNativeObject) Parameters Type Name Description SKNativeObject skNativeObject Returns Type Description bool"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.SKPictureExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.SKPictureExtensions.html",
    "title": "Class SKPictureExtensions",
    "keywords": "Class SKPictureExtensions Inheritance object SKPictureExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SKPictureExtensions Methods | Edit this page View Source GetSize(SKPicture) Declaration public static Size GetSize(this SKPicture skPicture) Parameters Type Name Description SKPicture skPicture Returns Type Description Size"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.SkCanvasExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.SkCanvasExtensions.html",
    "title": "Class SkCanvasExtensions",
    "keywords": "Class SkCanvasExtensions Inheritance object SkCanvasExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SkCanvasExtensions Methods | Edit this page View Source DrawPath(SKCanvas, CacheTracker<SKPath>, CacheTracker<SKPaint>) Declaration public static void DrawPath(this SKCanvas canvas, CacheTracker<SKPath> path, CacheTracker<SKPaint> paint) Parameters Type Name Description SKCanvas canvas CacheTracker<SKPath> path CacheTracker<SKPaint> paint | Edit this page View Source DrawRect(SKCanvas, SKRect, CacheTracker<SKPaint>) Declaration public static void DrawRect(this SKCanvas canvas, SKRect rect, CacheTracker<SKPaint> paint) Parameters Type Name Description SKCanvas canvas SKRect rect CacheTracker<SKPaint> paint"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.SkPaintExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.SkPaintExtensions.html",
    "title": "Class SkPaintExtensions",
    "keywords": "Class SkPaintExtensions Inheritance object SkPaintExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SkPaintExtensions Methods | Edit this page View Source IsVisible(SKPaint?) Declaration public static bool IsVisible(this SKPaint? paint) Parameters Type Name Description SKPaint paint Returns Type Description bool"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.StreamExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.StreamExtensions.html",
    "title": "Class StreamExtensions",
    "keywords": "Class StreamExtensions Inheritance object StreamExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class StreamExtensions Methods | Edit this page View Source LoadSvg(Stream) Load Svg from String Declaration public static SKSvg LoadSvg(this Stream str) Parameters Type Name Description Stream str string Returns Type Description SKSvg loaded svg image"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.ViewportExtensions.html",
    "title": "Class ViewportExtensions",
    "keywords": "Class ViewportExtensions Inheritance object ViewportExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Extensions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class ViewportExtensions Methods | Edit this page View Source ToSKMatrix(Viewport) Declaration public static SKMatrix ToSKMatrix(this Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description SKMatrix | Edit this page View Source ToSkiaRect(Viewport) Converts the Extent of the Viewport to a SKRect Declaration public static SKRect ToSkiaRect(this Viewport viewport) Parameters Type Name Description Viewport viewport viewport Returns Type Description SKRect SkRect"
  },
  "pages/Mapsui.Rendering.Skia.Extensions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Extensions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Extensions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Extensions Classes AlignmentExtensions ByteExtensions CalloutBalloonDefinitionExtensions ColorExtensions CoordinateExtensions MRectExtensions PenStrokeCapExtensions PenStrokeJoinExtensions PenStyleExtension PointExtensions SKColorExtensions SKNativeObjectExtensions SKPictureExtensions SkCanvasExtensions SkPaintExtensions StreamExtensions ViewportExtensions"
  },
  "pages/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html": {
    "href": "pages/Mapsui.Rendering.Skia.Functions.ClippingFunctions.Intersection.html",
    "title": "Enum ClippingFunctions.Intersection",
    "keywords": "Enum ClippingFunctions.Intersection Type of intersection Namespace: Mapsui.Rendering.Skia.Functions Assembly: Mapsui.Rendering.Skia.dll Syntax public enum ClippingFunctions.Intersection Fields Name Description Both CompleteInside CompleteOutside FirstInside SecondInside Unknown Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Functions.ClippingFunctions.html",
    "title": "Class ClippingFunctions",
    "keywords": "Class ClippingFunctions Inheritance object ClippingFunctions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Functions Assembly: Mapsui.Rendering.Skia.dll Syntax public static class ClippingFunctions Methods | Edit this page View Source LiangBarskyClip(SKPoint, SKPoint, SKRect, out SKPoint, out SKPoint) A Liang-Barsky implementation to detect the intersection between a line and a rect. With this, all lines, that aren't visible on screen could be sorted out. Found at https://gist.github.com/ChickenProp/3194723 Declaration public static ClippingFunctions.Intersection LiangBarskyClip(SKPoint point1, SKPoint point2, SKRect clipRect, out SKPoint intersectionPoint1, out SKPoint intersectionPoint2) Parameters Type Name Description SKPoint point1 First point of line SKPoint point2 Second point of line SKRect clipRect SKPoint intersectionPoint1 First intersection point SKPoint intersectionPoint2 Second intersection point Returns Type Description ClippingFunctions.Intersection | Edit this page View Source ReducePointsToClipRect(IEnumerable<Coordinate>?, Viewport, SKRect) Reduce list of points, so that all are inside of cliptRect See https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm Declaration public static List<SKPoint> ReducePointsToClipRect(IEnumerable<Coordinate>? points, Viewport viewport, SKRect clipRect) Parameters Type Name Description IEnumerable<Coordinate> points List of points to reduce. Viewport viewport The Viewport that is used for the conversions. SKRect clipRect Rectangle to clip to. All points outside aren't drawn. Returns Type Description List<SKPoint>"
  },
  "pages/Mapsui.Rendering.Skia.Functions.html": {
    "href": "pages/Mapsui.Rendering.Skia.Functions.html",
    "title": "Namespace Mapsui.Rendering.Skia.Functions",
    "keywords": "Namespace Mapsui.Rendering.Skia.Functions Classes ClippingFunctions Enums ClippingFunctions.Intersection Type of intersection"
  },
  "pages/Mapsui.Rendering.Skia.ImageStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.ImageStyleRenderer.html",
    "title": "Class ImageStyleRenderer",
    "keywords": "Class ImageStyleRenderer Inheritance object ImageStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class ImageStyleRenderer : ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Edit this page View Source ConvertPictureToImage(SKPicture, int, int) Declaration public static SKImage ConvertPictureToImage(SKPicture picture, int width, int height) Parameters Type Name Description SKPicture picture int width int height Returns Type Description SKImage | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool | Edit this page View Source DrawSKImage(SKCanvas, SKImage, float) Declaration public static void DrawSKImage(SKCanvas canvas, SKImage bitmap, float opacity) Parameters Type Name Description SKCanvas canvas SKImage bitmap float opacity | Edit this page View Source DrawSKPicture(SKCanvas, SKPicture, float, Color?) Declaration public static void DrawSKPicture(SKCanvas canvas, SKPicture picture, float opacity, Color? blendModeColor) Parameters Type Name Description SKCanvas canvas SKPicture picture float opacity Color? blendModeColor | Edit this page View Source FeatureSize(ImageStyle, RenderService) Declaration public static double FeatureSize(ImageStyle imageStyle, RenderService renderService) Parameters Type Name Description ImageStyle imageStyle RenderService renderService Returns Type Description double | Edit this page View Source TryCreateDrawableImage(Image, ImageSourceCache) Declaration public static IDrawableImage? TryCreateDrawableImage(Image image, ImageSourceCache imageSourceCache) Parameters Type Name Description Image image ImageSourceCache imageSourceCache Returns Type Description IDrawableImage Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Images.BitmapDrawableImage.html": {
    "href": "pages/Mapsui.Rendering.Skia.Images.BitmapDrawableImage.html",
    "title": "Class BitmapDrawableImage",
    "keywords": "Class BitmapDrawableImage Inheritance object BitmapDrawableImage Implements IDrawableImage IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Images Assembly: Mapsui.Rendering.Skia.dll Syntax public sealed class BitmapDrawableImage : IDrawableImage, IDisposable Constructors | Edit this page View Source BitmapDrawableImage(SKImage) Declaration public BitmapDrawableImage(SKImage image) Parameters Type Name Description SKImage image | Edit this page View Source BitmapDrawableImage(byte[]) Declaration public BitmapDrawableImage(byte[] bytes) Parameters Type Name Description byte[] bytes Properties | Edit this page View Source Height Declaration public float Height { get; } Property Value Type Description float | Edit this page View Source Image Declaration public SKImage Image { get; } Property Value Type Description SKImage | Edit this page View Source Width Declaration public float Width { get; } Property Value Type Description float Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDrawableImage IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Images.SvgDrawableImage.html": {
    "href": "pages/Mapsui.Rendering.Skia.Images.SvgDrawableImage.html",
    "title": "Class SvgDrawableImage",
    "keywords": "Class SvgDrawableImage Inheritance object SvgDrawableImage Implements IDrawableImage IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.Images Assembly: Mapsui.Rendering.Skia.dll Syntax public sealed class SvgDrawableImage : IDrawableImage, IDisposable Constructors | Edit this page View Source SvgDrawableImage(SKPicture) Initializes a new instance of the SvgDrawableImage class with the specified SKPicture. Declaration public SvgDrawableImage(SKPicture picture) Parameters Type Name Description SKPicture picture The SKPicture to be used for the image. SvgDrawableImage will dispose it. | Edit this page View Source SvgDrawableImage(SKSvg) Initializes a new instance of the SvgDrawableImage class with the specified SKPicture. Declaration public SvgDrawableImage(SKSvg skSvg) Parameters Type Name Description SKSvg skSvg The SKSvg to be used for the image. SvgDrawableImage will dispose it. | Edit this page View Source SvgDrawableImage(byte[]) Declaration public SvgDrawableImage(byte[] bytes) Parameters Type Name Description byte[] bytes Properties | Edit this page View Source Height Declaration public float Height { get; } Property Value Type Description float | Edit this page View Source OriginalStream Declaration public byte[]? OriginalStream { get; } Property Value Type Description byte[] | Edit this page View Source Picture Declaration public SKPicture Picture { get; } Property Value Type Description SKPicture | Edit this page View Source Width Declaration public float Width { get; } Property Value Type Description float Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements IDrawableImage IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.Images.html": {
    "href": "pages/Mapsui.Rendering.Skia.Images.html",
    "title": "Namespace Mapsui.Rendering.Skia.Images",
    "keywords": "Namespace Mapsui.Rendering.Skia.Images Classes BitmapDrawableImage SvgDrawableImage"
  },
  "pages/Mapsui.Rendering.Skia.LabelStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.LabelStyleRenderer.html",
    "title": "Class LabelStyleRenderer",
    "keywords": "Class LabelStyleRenderer Inheritance object LabelStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class LabelStyleRenderer : ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool | Edit this page View Source DrawAsBitmap(SKCanvas, LabelStyle, IFeature, float, float, float, VectorCache) Declaration public void DrawAsBitmap(SKCanvas canvas, LabelStyle style, IFeature feature, float x, float y, float layerOpacity, VectorCache vectorCache) Parameters Type Name Description SKCanvas canvas LabelStyle style IFeature feature float x float y float layerOpacity VectorCache vectorCache | Edit this page View Source FeatureSize(IFeature, LabelStyle, RenderService) Declaration public static double FeatureSize(IFeature feature, LabelStyle labelStyle, RenderService renderService) Parameters Type Name Description IFeature feature LabelStyle labelStyle RenderService renderService Returns Type Description double Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.LineStringRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.LineStringRenderer.html",
    "title": "Class LineStringRenderer",
    "keywords": "Class LineStringRenderer Inheritance object LineStringRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public static class LineStringRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, VectorStyle?, IFeature, LineString, float, RenderService, int) Declaration public static void Draw(SKCanvas canvas, Viewport viewport, VectorStyle? vectorStyle, IFeature feature, LineString lineString, float opacity, RenderService renderService, int position) Parameters Type Name Description SKCanvas canvas Viewport viewport VectorStyle vectorStyle IFeature feature LineString lineString float opacity RenderService renderService int position"
  },
  "pages/Mapsui.Rendering.Skia.MapRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.MapRenderer.html",
    "title": "Class MapRenderer",
    "keywords": "Class MapRenderer Inheritance object MapRenderer Implements IRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public sealed class MapRenderer : IRenderer Methods | Edit this page View Source GetMapInfo(ScreenPosition, Viewport, IEnumerable<ILayer>, RenderService, int) Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, int margin = 0) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers RenderService renderService int margin Returns Type Description MapInfo | Edit this page View Source RegisterLayerRenderer(string, RenderHandler) Declaration public static void RegisterLayerRenderer(string rendererName, CustomLayerRenderer.RenderHandler rendererHandler) Parameters Type Name Description string rendererName CustomLayerRenderer.RenderHandler rendererHandler | Edit this page View Source RegisterPointStyleRenderer(string, RenderHandler) Declaration public static void RegisterPointStyleRenderer(string rendererName, PointStyleRenderer.RenderHandler rendererHandler) Parameters Type Name Description string rendererName PointStyleRenderer.RenderHandler rendererHandler | Edit this page View Source RegisterStyleRenderer(Type, IStyleRenderer) Declaration public static void RegisterStyleRenderer(Type type, IStyleRenderer renderer) Parameters Type Name Description Type type IStyleRenderer renderer | Edit this page View Source RegisterWidgetRenderer(Type, IWidgetRenderer) Declaration public static void RegisterWidgetRenderer(Type type, IWidgetRenderer renderer) Parameters Type Name Description Type type IWidgetRenderer renderer | Edit this page View Source Render(object, Viewport, IEnumerable<ILayer>, IEnumerable<IWidget>, RenderService, Color?) Declaration public void Render(object target, Viewport viewport, IEnumerable<ILayer> layers, IEnumerable<IWidget> widgets, RenderService renderService, Color? background = null) Parameters Type Name Description object target Viewport viewport IEnumerable<ILayer> layers IEnumerable<IWidget> widgets RenderService renderService Color? background | Edit this page View Source RenderToBitmapStream(Map, float, RenderFormat, int) Declaration public MemoryStream RenderToBitmapStream(Map map, float pixelDensity = 1, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description Map map float pixelDensity RenderFormat renderFormat int quality Returns Type Description MemoryStream | Edit this page View Source RenderToBitmapStream(Viewport, IEnumerable<ILayer>, RenderService, Color?, float, IEnumerable<IWidget>?, RenderFormat, int) Declaration public MemoryStream RenderToBitmapStream(Viewport viewport, IEnumerable<ILayer> layers, RenderService renderService, Color? background = null, float pixelDensity = 1, IEnumerable<IWidget>? widgets = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description Viewport viewport IEnumerable<ILayer> layers RenderService renderService Color? background float pixelDensity IEnumerable<IWidget> widgets RenderFormat renderFormat int quality Returns Type Description MemoryStream | Edit this page View Source TryGetPointStyleRenderer(string, out RenderHandler?) Declaration public static bool TryGetPointStyleRenderer(string rendererName, out PointStyleRenderer.RenderHandler? renderHandler) Parameters Type Name Description string rendererName PointStyleRenderer.RenderHandler renderHandler Returns Type Description bool | Edit this page View Source TryGetStyleRenderer(Type, out IStyleRenderer?) Declaration public bool TryGetStyleRenderer(Type widgetType, out IStyleRenderer? styleRenderer) Parameters Type Name Description Type widgetType IStyleRenderer styleRenderer Returns Type Description bool | Edit this page View Source TryGetWidgetRenderer(Type, out IWidgetRenderer?) Declaration public bool TryGetWidgetRenderer(Type widgetType, out IWidgetRenderer? widgetRenderer) Parameters Type Name Description Type widgetType IWidgetRenderer widgetRenderer Returns Type Description bool Implements IRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.RasterStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.RasterStyleRenderer.html",
    "title": "Class RasterStyleRenderer",
    "keywords": "Class RasterStyleRenderer Inheritance object RasterStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class RasterStyleRenderer : ISkiaStyleRenderer, IStyleRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long currentIteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long currentIteration Returns Type Description bool | Edit this page View Source ToTileCacheEntry(MRaster) Declaration public static ITileCacheEntry ToTileCacheEntry(MRaster raster) Parameters Type Name Description MRaster raster Returns Type Description ITileCacheEntry Implements ISkiaStyleRenderer IStyleRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.CalloutBalloonBounds.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.CalloutBalloonBounds.html",
    "title": "Class CalloutBalloonBounds",
    "keywords": "Class CalloutBalloonBounds Inheritance object CalloutBalloonBounds Implements IEquatable<CalloutBalloonBounds> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaStyles Assembly: Mapsui.Rendering.Skia.dll Syntax public record CalloutBalloonBounds : IEquatable<CalloutBalloonBounds> Constructors | Edit this page View Source CalloutBalloonBounds(double, double, double, double, SKPoint, SKPoint, SKPoint) Declaration public CalloutBalloonBounds(double Bottom, double Left, double Top, double Right, SKPoint TailStart, SKPoint TailEnd, SKPoint TailTip) Parameters Type Name Description double Bottom double Left double Top double Right SKPoint TailStart SKPoint TailEnd SKPoint TailTip Properties | Edit this page View Source Bottom Declaration public double Bottom { get; init; } Property Value Type Description double | Edit this page View Source Left Declaration public double Left { get; init; } Property Value Type Description double | Edit this page View Source Right Declaration public double Right { get; init; } Property Value Type Description double | Edit this page View Source TailEnd Declaration public SKPoint TailEnd { get; init; } Property Value Type Description SKPoint | Edit this page View Source TailStart Declaration public SKPoint TailStart { get; init; } Property Value Type Description SKPoint | Edit this page View Source TailTip Declaration public SKPoint TailTip { get; init; } Property Value Type Description SKPoint | Edit this page View Source Top Declaration public double Top { get; init; } Property Value Type Description double Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.CustomPointStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.CustomPointStyleRenderer.html",
    "title": "Class CustomPointStyleRenderer",
    "keywords": "Class CustomPointStyleRenderer Inheritance object CustomPointStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaStyles Assembly: Mapsui.Rendering.Skia.dll Syntax public class CustomPointStyleRenderer : ISkiaStyleRenderer, IStyleRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool Implements ISkiaStyleRenderer IStyleRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.ISkiaStyleRenderer.html",
    "title": "Interface ISkiaStyleRenderer",
    "keywords": "Interface ISkiaStyleRenderer Namespace: Mapsui.Rendering.Skia.SkiaStyles Assembly: Mapsui.Rendering.Skia.dll Syntax public interface ISkiaStyleRenderer : IStyleRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.PointStyleRenderer.RenderHandler.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.PointStyleRenderer.RenderHandler.html",
    "title": "Delegate PointStyleRenderer.RenderHandler",
    "keywords": "Delegate PointStyleRenderer.RenderHandler Namespace: Mapsui.Rendering.Skia.SkiaStyles Assembly: Mapsui.Rendering.Skia.dll Syntax public delegate void PointStyleRenderer.RenderHandler(SKCanvas canvas, IPointStyle style, RenderService renderService, float opacity) Parameters Type Name Description SKCanvas canvas IPointStyle style RenderService renderService float opacity Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.PointStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.PointStyleRenderer.html",
    "title": "Class PointStyleRenderer",
    "keywords": "Class PointStyleRenderer Inheritance object PointStyleRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaStyles Assembly: Mapsui.Rendering.Skia.dll Syntax public abstract class PointStyleRenderer Methods | Edit this page View Source DrawPointStyle(SKCanvas, Viewport, double, double, IPointStyle, RenderService, float, RenderHandler) Declaration public static void DrawPointStyle(SKCanvas canvas, Viewport viewport, double x, double y, IPointStyle imageStyle, RenderService renderService, float opacity, PointStyleRenderer.RenderHandler renderHandler) Parameters Type Name Description SKCanvas canvas Viewport viewport double x double y IPointStyle imageStyle RenderService renderService float opacity PointStyleRenderer.RenderHandler renderHandler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaStyles.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaStyles.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaStyles",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaStyles Classes CalloutBalloonBounds CustomPointStyleRenderer PointStyleRenderer Interfaces ISkiaStyleRenderer Delegates PointStyleRenderer.RenderHandler"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.BoxWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.BoxWidgetRenderer.html",
    "title": "Class BoxWidgetRenderer",
    "keywords": "Class BoxWidgetRenderer Inheritance object BoxWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class BoxWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.ISkiaWidgetRenderer.html",
    "title": "Interface ISkiaWidgetRenderer",
    "keywords": "Interface ISkiaWidgetRenderer Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public interface ISkiaWidgetRenderer : IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.ImageButtonWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.ImageButtonWidgetRenderer.html",
    "title": "Class ImageButtonWidgetRenderer",
    "keywords": "Class ImageButtonWidgetRenderer Inheritance object ImageButtonWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class ImageButtonWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.InputOnlyWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.InputOnlyWidgetRenderer.html",
    "title": "Class InputOnlyWidgetRenderer",
    "keywords": "Class InputOnlyWidgetRenderer Inheritance object InputOnlyWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class InputOnlyWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.LoggingWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.LoggingWidgetRenderer.html",
    "title": "Class LoggingWidgetRenderer",
    "keywords": "Class LoggingWidgetRenderer Inheritance object LoggingWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class LoggingWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer, IDisposable Constructors | Edit this page View Source LoggingWidgetRenderer() Renderer for LoggingWidget Declaration public LoggingWidgetRenderer() Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public virtual void Dispose() | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.PerformanceWidgetRenderer.html",
    "title": "Class PerformanceWidgetRenderer",
    "keywords": "Class PerformanceWidgetRenderer Inheritance object PerformanceWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class PerformanceWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.RulerWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.RulerWidgetRenderer.html",
    "title": "Class RulerWidgetRenderer",
    "keywords": "Class RulerWidgetRenderer Inheritance object RulerWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class RulerWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity | Edit this page View Source DrawLine(SKCanvas, Viewport, RulerWidget, RenderService, float) Declaration public static void DrawLine(SKCanvas canvas, Viewport viewport, RulerWidget rulerWidget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport RulerWidget rulerWidget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.ScaleBarWidgetRenderer.html",
    "title": "Class ScaleBarWidgetRenderer",
    "keywords": "Class ScaleBarWidgetRenderer Inheritance object ScaleBarWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class ScaleBarWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer, IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.TextBoxWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.TextBoxWidgetRenderer.html",
    "title": "Class TextBoxWidgetRenderer",
    "keywords": "Class TextBoxWidgetRenderer Inheritance object TextBoxWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class TextBoxWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public virtual void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity | Edit this page View Source DrawText(SKCanvas, Viewport, IWidget, float) Declaration public static void DrawText(SKCanvas canvas, Viewport viewport, IWidget widget, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.WidgetRenderer.html",
    "title": "Class WidgetRenderer",
    "keywords": "Class WidgetRenderer Inheritance object WidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public static class WidgetRenderer Methods | Edit this page View Source Render(object, Viewport, IEnumerable<IWidget>, IDictionary<Type, IWidgetRenderer>, RenderService, float) Declaration public static void Render(object target, Viewport viewport, IEnumerable<IWidget> widgets, IDictionary<Type, IWidgetRenderer> renders, RenderService renderService, float layerOpacity) Parameters Type Name Description object target Viewport viewport IEnumerable<IWidget> widgets IDictionary<Type, IWidgetRenderer> renders RenderService renderService float layerOpacity"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.ZoomInOutWidgetRenderer.html",
    "title": "Class ZoomInOutWidgetRenderer",
    "keywords": "Class ZoomInOutWidgetRenderer Inheritance object ZoomInOutWidgetRenderer Implements ISkiaWidgetRenderer IWidgetRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia.SkiaWidgets Assembly: Mapsui.Rendering.Skia.dll Syntax public class ZoomInOutWidgetRenderer : ISkiaWidgetRenderer, IWidgetRenderer Methods | Edit this page View Source Draw(SKCanvas, Viewport, IWidget, RenderService, float) Declaration public void Draw(SKCanvas canvas, Viewport viewport, IWidget widget, RenderService renderService, float layerOpacity) Parameters Type Name Description SKCanvas canvas Viewport viewport IWidget widget RenderService renderService float layerOpacity Implements ISkiaWidgetRenderer IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.SkiaWidgets.html": {
    "href": "pages/Mapsui.Rendering.Skia.SkiaWidgets.html",
    "title": "Namespace Mapsui.Rendering.Skia.SkiaWidgets",
    "keywords": "Namespace Mapsui.Rendering.Skia.SkiaWidgets Classes BoxWidgetRenderer ImageButtonWidgetRenderer InputOnlyWidgetRenderer LoggingWidgetRenderer PerformanceWidgetRenderer RulerWidgetRenderer ScaleBarWidgetRenderer TextBoxWidgetRenderer WidgetRenderer ZoomInOutWidgetRenderer Interfaces ISkiaWidgetRenderer"
  },
  "pages/Mapsui.Rendering.Skia.SymbolStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.SymbolStyleRenderer.html",
    "title": "Class SymbolStyleRenderer",
    "keywords": "Class SymbolStyleRenderer Inheritance object SymbolStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class SymbolStyleRenderer : ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool | Edit this page View Source DrawStatic(SKCanvas, Viewport, ILayer, double, double, IPointStyle, RenderService) Declaration public static void DrawStatic(SKCanvas canvas, Viewport viewport, ILayer layer, double x, double y, IPointStyle pointStyle, RenderService renderService) Parameters Type Name Description SKCanvas canvas Viewport viewport ILayer layer double x double y IPointStyle pointStyle RenderService renderService | Edit this page View Source FeatureSize(SymbolStyle) Declaration public static double FeatureSize(SymbolStyle symbolStyle) Parameters Type Name Description SymbolStyle symbolStyle Returns Type Description double Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.VectorStyleRenderer.html": {
    "href": "pages/Mapsui.Rendering.Skia.VectorStyleRenderer.html",
    "title": "Class VectorStyleRenderer",
    "keywords": "Class VectorStyleRenderer Inheritance object VectorStyleRenderer Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering.Skia Assembly: Mapsui.Rendering.Skia.dll Syntax public class VectorStyleRenderer : ISkiaStyleRenderer, IStyleRenderer, IFeatureSize Methods | Edit this page View Source Draw(SKCanvas, Viewport, ILayer, IFeature, IStyle, RenderService, long) Drawing function for special styles Declaration public bool Draw(SKCanvas canvas, Viewport viewport, ILayer layer, IFeature feature, IStyle style, RenderService renderService, long iteration) Parameters Type Name Description SKCanvas canvas SKCanvas for drawing. Viewport viewport Active viewport for this drawing operation. ILayer layer Layer that contains feature. IFeature feature Feature to draw. IStyle style Style to draw. RenderService renderService RenderService to provide caches and such. long iteration Returns Type Description bool | Edit this page View Source FeatureSize(VectorStyle) Declaration public static double FeatureSize(VectorStyle vectorStyle) Parameters Type Name Description VectorStyle vectorStyle Returns Type Description double Implements ISkiaStyleRenderer IStyleRenderer IFeatureSize Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Rendering.Skia.html": {
    "href": "pages/Mapsui.Rendering.Skia.html",
    "title": "Namespace Mapsui.Rendering.Skia",
    "keywords": "Namespace Mapsui.Rendering.Skia Classes CalloutStyleRenderer CustomLayerRenderer ImageStyleRenderer LabelStyleRenderer LineStringRenderer MapRenderer RasterStyleRenderer SymbolStyleRenderer VectorStyleRenderer Delegates CustomLayerRenderer.RenderHandler"
  },
  "pages/Mapsui.Rendering.VisibleFeatureIterator.html": {
    "href": "pages/Mapsui.Rendering.VisibleFeatureIterator.html",
    "title": "Class VisibleFeatureIterator",
    "keywords": "Class VisibleFeatureIterator Inheritance object VisibleFeatureIterator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Rendering Assembly: Mapsui.dll Syntax public static class VisibleFeatureIterator Methods | Edit this page View Source IterateLayers(Viewport, IEnumerable<ILayer>, long, Action<Viewport, ILayer, IStyle, IFeature, float, long>, Action<ILayer>?) Declaration public static void IterateLayers(Viewport viewport, IEnumerable<ILayer> layers, long iteration, Action<Viewport, ILayer, IStyle, IFeature, float, long> callback, Action<ILayer>? customLayerRendererCallback = null) Parameters Type Name Description Viewport viewport IEnumerable<ILayer> layers long iteration Action<Viewport, ILayer, IStyle, IFeature, float, long> callback Action<ILayer> customLayerRendererCallback"
  },
  "pages/Mapsui.Rendering.html": {
    "href": "pages/Mapsui.Rendering.html",
    "title": "Namespace Mapsui.Rendering",
    "keywords": "Namespace Mapsui.Rendering Classes DefaultRendererFactory MapInfoRecord RenderController RenderException Exception thrown when a layer rendering fails RenderService VisibleFeatureIterator Interfaces IDrawableImage IRenderer Enums RenderFormat Formats the MapRenderer should render to"
  },
  "pages/Mapsui.RotationSnapper.html": {
    "href": "pages/Mapsui.RotationSnapper.html",
    "title": "Class RotationSnapper",
    "keywords": "Class RotationSnapper Inheritance object RotationSnapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public static class RotationSnapper Methods | Edit this page View Source AdjustRotationDeltaForSnapping(double, double, double, double, double) Adjusts te rotation delta in case snapping applies. Declaration public static double AdjustRotationDeltaForSnapping(double rotationDelta, double currentRotation, double virtualRotation, double unSnapRotation, double reSnapRotation) Parameters Type Name Description double rotationDelta double currentRotation double virtualRotation double unSnapRotation double reSnapRotation Returns Type Description double | Edit this page View Source NormalizeRotation(double) Declaration public static double NormalizeRotation(double rotation) Parameters Type Name Description double rotation Returns Type Description double | Edit this page View Source RotationShortestDistance(double, double) Declaration public static double RotationShortestDistance(double rotation1, double rotation2) Parameters Type Name Description double rotation1 double rotation2 Returns Type Description double"
  },
  "pages/Mapsui.Styles.BasePointStyle.html": {
    "href": "pages/Mapsui.Styles.BasePointStyle.html",
    "title": "Class BasePointStyle",
    "keywords": "Class BasePointStyle Inheritance object BaseStyle BasePointStyle CustomPointStyle ImageStyle Implements IPointStyle IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public abstract class BasePointStyle : BaseStyle, IPointStyle, IStyle Properties | Edit this page View Source Offset Gets or sets the offset in pixels of the symbol. Declaration public Offset Offset { get; set; } Property Value Type Description Offset Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset of SymbolScale=1.0. | Edit this page View Source RelativeOffset Offset of the symbol in units relative to the size of the symbol. When X = 0 and Y = 0 it will be centered. Declaration public RelativeOffset RelativeOffset { get; set; } Property Value Type Description RelativeOffset | Edit this page View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. This is useful if you need to symbolize the direction in which a vehicle is moving. When the symbol is false it will retain it's position to the screen. This is useful for pins like symbols. The default is false. This mode is not supported in the WPF renderer. Declaration public bool RotateWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolOffset Declaration [Obsolete(\"Use Offset or RelativeOffset instead\", true)] public Offset SymbolOffset { get; set; } Property Value Type Description Offset | Edit this page View Source SymbolOffsetRotatesWithMap Should SymbolOffset position rotate with map Declaration public bool SymbolOffsetRotatesWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public double SymbolRotation { get; set; } Property Value Type Description double | Edit this page View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public double SymbolScale { get; set; } Property Value Type Description double Remarks Setting the SymbolScale to '2.0' doubles the size of the symbol. A SymbolScale of 0.5 makes the scale half the size. of the original image Implements IPointStyle IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.BaseStyle.html": {
    "href": "pages/Mapsui.Styles.BaseStyle.html",
    "title": "Class BaseStyle",
    "keywords": "Class BaseStyle Defines a style used for rendering vector data Inheritance object BaseStyle BasePointStyle LabelStyle RasterStyle Style StyleCollection GradientTheme ThemeStyle VectorStyle Implements IStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public abstract class BaseStyle : IStyle Constructors | Edit this page View Source BaseStyle() Declaration public BaseStyle() Properties | Edit this page View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration public double MaxVisible { get; set; } Property Value Type Description double | Edit this page View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration public double MinVisible { get; set; } Property Value Type Description double | Edit this page View Source Opacity Gets or sets the objects base opacity Declaration public float Opacity { get; set; } Property Value Type Description float Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.BitmapRegion.html": {
    "href": "pages/Mapsui.Styles.BitmapRegion.html",
    "title": "Class BitmapRegion",
    "keywords": "Class BitmapRegion Defines which section of an image (the atlas) should be used from drawing a symbol (the sprite). Inheritance object BitmapRegion Implements IEquatable<BitmapRegion> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public record BitmapRegion : IEquatable<BitmapRegion> Constructors | Edit this page View Source BitmapRegion(int, int, int, int) Defines which section of an image (the atlas) should be used from drawing a symbol (the sprite). Declaration public BitmapRegion(int X, int Y, int Width, int Height) Parameters Type Name Description int X The X-coordinate of the origin within the atlas. int Y The Y-coordinate of the origin within the atlas. int Width The width of the region. int Height The height of the region. Properties | Edit this page View Source Height The height of the region. Declaration public int Height { get; init; } Property Value Type Description int | Edit this page View Source Width The width of the region. Declaration public int Width { get; init; } Property Value Type Description int | Edit this page View Source X The X-coordinate of the origin within the atlas. Declaration public int X { get; init; } Property Value Type Description int | Edit this page View Source Y The Y-coordinate of the origin within the atlas. Declaration public int Y { get; init; } Property Value Type Description int Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Brush.html": {
    "href": "pages/Mapsui.Styles.Brush.html",
    "title": "Class Brush",
    "keywords": "Class Brush Inheritance object Brush Implements IHasImage Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Brush : IHasImage Constructors | Edit this page View Source Brush() Declaration public Brush() | Edit this page View Source Brush(Brush) Declaration public Brush(Brush brush) Parameters Type Name Description Brush brush | Edit this page View Source Brush(Color) Declaration public Brush(Color color) Parameters Type Name Description Color color Properties | Edit this page View Source Background Declaration public Color? Background { get; set; } Property Value Type Description Color? | Edit this page View Source Color Declaration public Color? Color { get; set; } Property Value Type Description Color? | Edit this page View Source FillStyle This identifies how the brush is applied, works for Color not for bitmaps Declaration public FillStyle FillStyle { get; set; } Property Value Type Description FillStyle | Edit this page View Source Image Declaration public Image? Image { get; set; } Property Value Type Description Image Methods | Edit this page View Source Equals(Brush?) Declaration protected bool Equals(Brush? brush) Parameters Type Name Description Brush brush Returns Type Description bool | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(Brush?, Brush?) Declaration public static bool operator ==(Brush? brush1, Brush? brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description bool | Edit this page View Source operator !=(Brush?, Brush?) Declaration public static bool operator !=(Brush? brush1, Brush? brush2) Parameters Type Name Description Brush brush1 Brush brush2 Returns Type Description bool Implements IHasImage Extension Methods BrushExtensions.IsVisible(Brush?) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.CalloutBalloonDefinition.html": {
    "href": "pages/Mapsui.Styles.CalloutBalloonDefinition.html",
    "title": "Class CalloutBalloonDefinition",
    "keywords": "Class CalloutBalloonDefinition Inheritance object CalloutBalloonDefinition Implements IEquatable<CalloutBalloonDefinition> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public record CalloutBalloonDefinition : IEquatable<CalloutBalloonDefinition> Properties | Edit this page View Source BackgroundColor Declaration public Color BackgroundColor { get; init; } Property Value Type Description Color | Edit this page View Source Color Declaration public Color Color { get; init; } Property Value Type Description Color | Edit this page View Source Offset Declaration public Offset Offset { get; init; } Property Value Type Description Offset | Edit this page View Source Padding Declaration public MRect Padding { get; init; } Property Value Type Description MRect | Edit this page View Source RectRadius Declaration public double RectRadius { get; init; } Property Value Type Description double | Edit this page View Source ShadowWidth Declaration public double ShadowWidth { get; init; } Property Value Type Description double | Edit this page View Source StrokeWidth Declaration public double StrokeWidth { get; init; } Property Value Type Description double | Edit this page View Source TailAlignment Declaration public TailAlignment TailAlignment { get; init; } Property Value Type Description TailAlignment | Edit this page View Source TailHeight Declaration public double TailHeight { get; init; } Property Value Type Description double | Edit this page View Source TailPosition Declaration public double TailPosition { get; init; } Property Value Type Description double | Edit this page View Source TailWidth Declaration public double TailWidth { get; init; } Property Value Type Description double Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.CalloutStyle.html": {
    "href": "pages/Mapsui.Styles.CalloutStyle.html",
    "title": "Class CalloutStyle",
    "keywords": "Class CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps Inheritance object BaseStyle BasePointStyle ImageStyle CalloutStyle Implements IPointStyle IStyle IHasImage Inherited Members ImageStyle.Image BasePointStyle.SymbolRotation BasePointStyle.RotateWithMap BasePointStyle.SymbolScale BasePointStyle.SymbolOffset BasePointStyle.Offset BasePointStyle.RelativeOffset BasePointStyle.SymbolOffsetRotatesWithMap BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class CalloutStyle : ImageStyle, IPointStyle, IStyle, IHasImage Remarks There are three different types of Callouts Type = CalloutType.Single The text in Title will be shown Type = CalloutType.Detail The text in Title and SubTitle will be shown Type = CalloutType.Custom The bitmap with ID in Content will be shown Properties | Edit this page View Source BalloonDefinition Declaration public CalloutBalloonDefinition BalloonDefinition { get; set; } Property Value Type Description CalloutBalloonDefinition | Edit this page View Source ImageIdOfCallout Declaration public string ImageIdOfCallout { get; } Property Value Type Description string | Edit this page View Source ImageIdOfCalloutContent Declaration public string ImageIdOfCalloutContent { get; } Property Value Type Description string | Edit this page View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description double | Edit this page View Source Rotation Gets or sets the rotation of the Callout in degrees (clockwise is positive) Declaration public double Rotation { get; set; } Property Value Type Description double | Edit this page View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description double | Edit this page View Source Subtitle Content of Callout subtitle label Declaration public string? Subtitle { get; set; } Property Value Type Description string | Edit this page View Source SubtitleFont Declaration public Font SubtitleFont { get; set; } Property Value Type Description Font | Edit this page View Source SubtitleFontColor Font color to render subtitle Declaration public Color? SubtitleFontColor { get; set; } Property Value Type Description Color? | Edit this page View Source SubtitleTextAlignment Text alignment of subtitle Declaration public Alignment SubtitleTextAlignment { get; set; } Property Value Type Description Alignment | Edit this page View Source Title Content of Callout title label Declaration public string? Title { get; set; } Property Value Type Description string | Edit this page View Source TitleFont Declaration public Font TitleFont { get; set; } Property Value Type Description Font | Edit this page View Source TitleFontColor Font color to render title Declaration public Color? TitleFontColor { get; set; } Property Value Type Description Color? | Edit this page View Source TitleTextAlignment Text alignment of title Declaration public Alignment TitleTextAlignment { get; set; } Property Value Type Description Alignment | Edit this page View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be Single, Detail or Image. Methods | Edit this page View Source Invalidate() Declaration public void Invalidate() Implements IPointStyle IStyle IHasImage Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.CalloutType.html": {
    "href": "pages/Mapsui.Styles.CalloutType.html",
    "title": "Enum CalloutType",
    "keywords": "Enum CalloutType Type of CalloutStyle Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum CalloutType Fields Name Description Detail Header and detail is shown Image Content is custom, the bitmap given in Content is shown Single Only one line is shown Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.Color.html": {
    "href": "pages/Mapsui.Styles.Color.html",
    "title": "Struct Color",
    "keywords": "Struct Color Implements IEquatable<Color> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public readonly record struct Color : IEquatable<Color> Constructors | Edit this page View Source Color() Declaration public Color() | Edit this page View Source Color(Color) Declaration public Color(Color color) Parameters Type Name Description Color color | Edit this page View Source Color(int, int, int, int) Declaration public Color(int red, int green, int blue, int alpha = 255) Parameters Type Name Description int red int green int blue int alpha Properties | Edit this page View Source A Declaration public int A { get; init; } Property Value Type Description int | Edit this page View Source AliceBlue Declaration public static Color AliceBlue { get; } Property Value Type Description Color | Edit this page View Source AntiqueWhite Declaration public static Color AntiqueWhite { get; } Property Value Type Description Color | Edit this page View Source Aqua Declaration public static Color Aqua { get; } Property Value Type Description Color | Edit this page View Source Aquamarine Declaration public static Color Aquamarine { get; } Property Value Type Description Color | Edit this page View Source Azure Declaration public static Color Azure { get; } Property Value Type Description Color | Edit this page View Source B Declaration public int B { get; init; } Property Value Type Description int | Edit this page View Source Beige Declaration public static Color Beige { get; } Property Value Type Description Color | Edit this page View Source Bisque Declaration public static Color Bisque { get; } Property Value Type Description Color | Edit this page View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Edit this page View Source BlanchedAlmond Declaration public static Color BlanchedAlmond { get; } Property Value Type Description Color | Edit this page View Source Blue Declaration public static Color Blue { get; } Property Value Type Description Color | Edit this page View Source BlueViolet Declaration public static Color BlueViolet { get; } Property Value Type Description Color | Edit this page View Source Brown Declaration public static Color Brown { get; } Property Value Type Description Color | Edit this page View Source BurlyWood Declaration public static Color BurlyWood { get; } Property Value Type Description Color | Edit this page View Source CadetBlue Declaration public static Color CadetBlue { get; } Property Value Type Description Color | Edit this page View Source Chartreuse Declaration public static Color Chartreuse { get; } Property Value Type Description Color | Edit this page View Source Chocolate Declaration public static Color Chocolate { get; } Property Value Type Description Color | Edit this page View Source Coral Declaration public static Color Coral { get; } Property Value Type Description Color | Edit this page View Source CornflowerBlue Declaration public static Color CornflowerBlue { get; } Property Value Type Description Color | Edit this page View Source Cornsilk Declaration public static Color Cornsilk { get; } Property Value Type Description Color | Edit this page View Source Crimson Declaration public static Color Crimson { get; } Property Value Type Description Color | Edit this page View Source Cyan Declaration public static Color Cyan { get; } Property Value Type Description Color | Edit this page View Source DarkBlue Declaration public static Color DarkBlue { get; } Property Value Type Description Color | Edit this page View Source DarkCyan Declaration public static Color DarkCyan { get; } Property Value Type Description Color | Edit this page View Source DarkGoldenRod Declaration public static Color DarkGoldenRod { get; } Property Value Type Description Color | Edit this page View Source DarkGray Declaration public static Color DarkGray { get; } Property Value Type Description Color | Edit this page View Source DarkGreen Declaration public static Color DarkGreen { get; } Property Value Type Description Color | Edit this page View Source DarkGrey Declaration public static Color DarkGrey { get; } Property Value Type Description Color | Edit this page View Source DarkKhaki Declaration public static Color DarkKhaki { get; } Property Value Type Description Color | Edit this page View Source DarkMagenta Declaration public static Color DarkMagenta { get; } Property Value Type Description Color | Edit this page View Source DarkOliveGreen Declaration public static Color DarkOliveGreen { get; } Property Value Type Description Color | Edit this page View Source DarkOrange Declaration public static Color DarkOrange { get; } Property Value Type Description Color | Edit this page View Source DarkOrchid Declaration public static Color DarkOrchid { get; } Property Value Type Description Color | Edit this page View Source DarkRed Declaration public static Color DarkRed { get; } Property Value Type Description Color | Edit this page View Source DarkSalmon Declaration public static Color DarkSalmon { get; } Property Value Type Description Color | Edit this page View Source DarkSeaGreen Declaration public static Color DarkSeaGreen { get; } Property Value Type Description Color | Edit this page View Source DarkSlateBlue Declaration public static Color DarkSlateBlue { get; } Property Value Type Description Color | Edit this page View Source DarkSlateGray Declaration public static Color DarkSlateGray { get; } Property Value Type Description Color | Edit this page View Source DarkSlateGrey Declaration public static Color DarkSlateGrey { get; } Property Value Type Description Color | Edit this page View Source DarkTurquoise Declaration public static Color DarkTurquoise { get; } Property Value Type Description Color | Edit this page View Source DarkViolet Declaration public static Color DarkViolet { get; } Property Value Type Description Color | Edit this page View Source DeepPink Declaration public static Color DeepPink { get; } Property Value Type Description Color | Edit this page View Source DeepSkyBlue Declaration public static Color DeepSkyBlue { get; } Property Value Type Description Color | Edit this page View Source DimGray Declaration public static Color DimGray { get; } Property Value Type Description Color | Edit this page View Source DimGrey Declaration public static Color DimGrey { get; } Property Value Type Description Color | Edit this page View Source DodgerBlue Declaration public static Color DodgerBlue { get; } Property Value Type Description Color | Edit this page View Source FireBrick Declaration public static Color FireBrick { get; } Property Value Type Description Color | Edit this page View Source FloralWhite Declaration public static Color FloralWhite { get; } Property Value Type Description Color | Edit this page View Source ForestGreen Declaration public static Color ForestGreen { get; } Property Value Type Description Color | Edit this page View Source Fuchsia Declaration public static Color Fuchsia { get; } Property Value Type Description Color | Edit this page View Source G Declaration public int G { get; init; } Property Value Type Description int | Edit this page View Source Gainsboro Declaration public static Color Gainsboro { get; } Property Value Type Description Color | Edit this page View Source GhostWhite Declaration public static Color GhostWhite { get; } Property Value Type Description Color | Edit this page View Source Gold Declaration public static Color Gold { get; } Property Value Type Description Color | Edit this page View Source GoldenRod Declaration public static Color GoldenRod { get; } Property Value Type Description Color | Edit this page View Source Gray Declaration public static Color Gray { get; } Property Value Type Description Color | Edit this page View Source Green Declaration public static Color Green { get; } Property Value Type Description Color | Edit this page View Source GreenYellow Declaration public static Color GreenYellow { get; } Property Value Type Description Color | Edit this page View Source Grey Declaration public static Color Grey { get; } Property Value Type Description Color | Edit this page View Source HoneyDew Declaration public static Color HoneyDew { get; } Property Value Type Description Color | Edit this page View Source HotPink Declaration public static Color HotPink { get; } Property Value Type Description Color | Edit this page View Source IndianRed Declaration public static Color IndianRed { get; } Property Value Type Description Color | Edit this page View Source Indigo Declaration public static Color Indigo { get; } Property Value Type Description Color | Edit this page View Source Ivory Declaration public static Color Ivory { get; } Property Value Type Description Color | Edit this page View Source Khaki Declaration public static Color Khaki { get; } Property Value Type Description Color | Edit this page View Source Lavender Declaration public static Color Lavender { get; } Property Value Type Description Color | Edit this page View Source LavenderBlush Declaration public static Color LavenderBlush { get; } Property Value Type Description Color | Edit this page View Source LawnGreen Declaration public static Color LawnGreen { get; } Property Value Type Description Color | Edit this page View Source LemonChiffon Declaration public static Color LemonChiffon { get; } Property Value Type Description Color | Edit this page View Source LightBlue Declaration public static Color LightBlue { get; } Property Value Type Description Color | Edit this page View Source LightCoral Declaration public static Color LightCoral { get; } Property Value Type Description Color | Edit this page View Source LightCyan Declaration public static Color LightCyan { get; } Property Value Type Description Color | Edit this page View Source LightGoldenRodYellow Declaration public static Color LightGoldenRodYellow { get; } Property Value Type Description Color | Edit this page View Source LightGray Declaration public static Color LightGray { get; } Property Value Type Description Color | Edit this page View Source LightGreen Declaration public static Color LightGreen { get; } Property Value Type Description Color | Edit this page View Source LightGrey Declaration public static Color LightGrey { get; } Property Value Type Description Color | Edit this page View Source LightPink Declaration public static Color LightPink { get; } Property Value Type Description Color | Edit this page View Source LightSalmon Declaration public static Color LightSalmon { get; } Property Value Type Description Color | Edit this page View Source LightSeaGreen Declaration public static Color LightSeaGreen { get; } Property Value Type Description Color | Edit this page View Source LightSkyBlue Declaration public static Color LightSkyBlue { get; } Property Value Type Description Color | Edit this page View Source LightSlateGray Declaration public static Color LightSlateGray { get; } Property Value Type Description Color | Edit this page View Source LightSlateGrey Declaration public static Color LightSlateGrey { get; } Property Value Type Description Color | Edit this page View Source LightSteelBlue Declaration public static Color LightSteelBlue { get; } Property Value Type Description Color | Edit this page View Source LightYellow Declaration public static Color LightYellow { get; } Property Value Type Description Color | Edit this page View Source Lime Declaration public static Color Lime { get; } Property Value Type Description Color | Edit this page View Source LimeGreen Declaration public static Color LimeGreen { get; } Property Value Type Description Color | Edit this page View Source Linen Declaration public static Color Linen { get; } Property Value Type Description Color | Edit this page View Source Magenta Declaration public static Color Magenta { get; } Property Value Type Description Color | Edit this page View Source Maroon Declaration public static Color Maroon { get; } Property Value Type Description Color | Edit this page View Source MediumAquaMarine Declaration public static Color MediumAquaMarine { get; } Property Value Type Description Color | Edit this page View Source MediumBlue Declaration public static Color MediumBlue { get; } Property Value Type Description Color | Edit this page View Source MediumOrchid Declaration public static Color MediumOrchid { get; } Property Value Type Description Color | Edit this page View Source MediumPurple Declaration public static Color MediumPurple { get; } Property Value Type Description Color | Edit this page View Source MediumSeaGreen Declaration public static Color MediumSeaGreen { get; } Property Value Type Description Color | Edit this page View Source MediumSlateBlue Declaration public static Color MediumSlateBlue { get; } Property Value Type Description Color | Edit this page View Source MediumSpringGreen Declaration public static Color MediumSpringGreen { get; } Property Value Type Description Color | Edit this page View Source MediumTurquoise Declaration public static Color MediumTurquoise { get; } Property Value Type Description Color | Edit this page View Source MediumVioletRed Declaration public static Color MediumVioletRed { get; } Property Value Type Description Color | Edit this page View Source MidnightBlue Declaration public static Color MidnightBlue { get; } Property Value Type Description Color | Edit this page View Source MintCream Declaration public static Color MintCream { get; } Property Value Type Description Color | Edit this page View Source MistyRose Declaration public static Color MistyRose { get; } Property Value Type Description Color | Edit this page View Source Moccasin Declaration public static Color Moccasin { get; } Property Value Type Description Color | Edit this page View Source NavajoWhite Declaration public static Color NavajoWhite { get; } Property Value Type Description Color | Edit this page View Source Navy Declaration public static Color Navy { get; } Property Value Type Description Color | Edit this page View Source OldLace Declaration public static Color OldLace { get; } Property Value Type Description Color | Edit this page View Source Olive Declaration public static Color Olive { get; } Property Value Type Description Color | Edit this page View Source OliveDrab Declaration public static Color OliveDrab { get; } Property Value Type Description Color | Edit this page View Source Orange Declaration public static Color Orange { get; } Property Value Type Description Color | Edit this page View Source OrangeRed Declaration public static Color OrangeRed { get; } Property Value Type Description Color | Edit this page View Source Orchid Declaration public static Color Orchid { get; } Property Value Type Description Color | Edit this page View Source PaleGoldenRod Declaration public static Color PaleGoldenRod { get; } Property Value Type Description Color | Edit this page View Source PaleGreen Declaration public static Color PaleGreen { get; } Property Value Type Description Color | Edit this page View Source PaleTurquoise Declaration public static Color PaleTurquoise { get; } Property Value Type Description Color | Edit this page View Source PaleVioletRed Declaration public static Color PaleVioletRed { get; } Property Value Type Description Color | Edit this page View Source PapayaWhip Declaration public static Color PapayaWhip { get; } Property Value Type Description Color | Edit this page View Source PeachPuff Declaration public static Color PeachPuff { get; } Property Value Type Description Color | Edit this page View Source Peru Declaration public static Color Peru { get; } Property Value Type Description Color | Edit this page View Source Pink Declaration public static Color Pink { get; } Property Value Type Description Color | Edit this page View Source Plum Declaration public static Color Plum { get; } Property Value Type Description Color | Edit this page View Source PowderBlue Declaration public static Color PowderBlue { get; } Property Value Type Description Color | Edit this page View Source Purple Declaration public static Color Purple { get; } Property Value Type Description Color | Edit this page View Source R Declaration public int R { get; init; } Property Value Type Description int | Edit this page View Source RebeccaPurple Declaration public static Color RebeccaPurple { get; } Property Value Type Description Color | Edit this page View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Edit this page View Source RosyBrown Declaration public static Color RosyBrown { get; } Property Value Type Description Color | Edit this page View Source RoyalBlue Declaration public static Color RoyalBlue { get; } Property Value Type Description Color | Edit this page View Source SaddleBrown Declaration public static Color SaddleBrown { get; } Property Value Type Description Color | Edit this page View Source Salmon Declaration public static Color Salmon { get; } Property Value Type Description Color | Edit this page View Source SandyBrown Declaration public static Color SandyBrown { get; } Property Value Type Description Color | Edit this page View Source SeaGreen Declaration public static Color SeaGreen { get; } Property Value Type Description Color | Edit this page View Source SeaShell Declaration public static Color SeaShell { get; } Property Value Type Description Color | Edit this page View Source Sienna Declaration public static Color Sienna { get; } Property Value Type Description Color | Edit this page View Source Silver Declaration public static Color Silver { get; } Property Value Type Description Color | Edit this page View Source SkyBlue Declaration public static Color SkyBlue { get; } Property Value Type Description Color | Edit this page View Source SlateBlue Declaration public static Color SlateBlue { get; } Property Value Type Description Color | Edit this page View Source SlateGray Declaration public static Color SlateGray { get; } Property Value Type Description Color | Edit this page View Source SlateGrey Declaration public static Color SlateGrey { get; } Property Value Type Description Color | Edit this page View Source Snow Declaration public static Color Snow { get; } Property Value Type Description Color | Edit this page View Source SpringGreen Declaration public static Color SpringGreen { get; } Property Value Type Description Color | Edit this page View Source SteelBlue Declaration public static Color SteelBlue { get; } Property Value Type Description Color | Edit this page View Source Tan Declaration public static Color Tan { get; } Property Value Type Description Color | Edit this page View Source Teal Declaration public static Color Teal { get; } Property Value Type Description Color | Edit this page View Source Thistle Declaration public static Color Thistle { get; } Property Value Type Description Color | Edit this page View Source Tomato Declaration public static Color Tomato { get; } Property Value Type Description Color | Edit this page View Source Transparent Declaration public static Color Transparent { get; } Property Value Type Description Color | Edit this page View Source Turquoise Declaration public static Color Turquoise { get; } Property Value Type Description Color | Edit this page View Source Violet Declaration public static Color Violet { get; } Property Value Type Description Color | Edit this page View Source Wheat Declaration public static Color Wheat { get; } Property Value Type Description Color | Edit this page View Source White Declaration public static Color White { get; } Property Value Type Description Color | Edit this page View Source WhiteSmoke Declaration public static Color WhiteSmoke { get; } Property Value Type Description Color | Edit this page View Source Yellow Declaration public static Color Yellow { get; } Property Value Type Description Color | Edit this page View Source YellowGreen Declaration public static Color YellowGreen { get; } Property Value Type Description Color Methods | Edit this page View Source FromArgb(int, int, int, int) Declaration public static Color FromArgb(int a, int r, int g, int b) Parameters Type Name Description int a int r int g int b Returns Type Description Color | Edit this page View Source FromHsl(float, float, float, int) Found at http://james-ramsden.com/convert-from-hsl-to-rgb-colour-codes-in-c/ Declaration public static Color FromHsl(float h, float s, float l, int a = 255) Parameters Type Name Description float h float s float l int a Returns Type Description Color | Edit this page View Source FromRgba(int, int, int, int) Declaration public static Color FromRgba(int r, int g, int b, int a) Parameters Type Name Description int r int g int b int a Returns Type Description Color | Edit this page View Source FromString(string) Converts a string in Mapbox GL format to a Mapsui Color This function assumes, that alpha is a float in range from 0.0 to 1.0. It converts this float in Mapsui Color alpha without rounding. The following colors could be converted: Named colors with known Html names Colors as Html color values with leading '#' and 6 or 3 numbers Function rgb(r,g,b) with values for red, green and blue Function rgba(r,g,b,a) with values for red, green, blue and alpha. Here alpha is between 0.0 and 1.0 like opacity. Function hsl(h,s,l) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%) and lightness (0.0% - 100.0%) Function hsla(h,s,l,a) with values hue (0.0 to 360.0), saturation (0.0% - 100.0%), lightness (0.0% - 100.0%) and alpha. Here alpha is between 0.0 and 1.0 like opacity. Declaration public static Color FromString(string from) Parameters Type Name Description string from String with HTML color representation or function like rgb() or hsl() Returns Type Description Color Converted Mapsui Color | Edit this page View Source Opacity(Color, float?) Change alpha channel from given color to respect opacity Declaration public static Color Opacity(Color color, float? opacity) Parameters Type Name Description Color color Mapsui Color to change float? opacity Opacity of the new color Returns Type Description Color New color respecting old alpha and new opacity | Edit this page View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description string The fully qualified type name. Overrides ValueType.ToString() Operators | Edit this page View Source explicit operator Color(Color) Declaration public static explicit operator Color(Color color) Parameters Type Name Description Color color Returns Type Description Color | Edit this page View Source explicit operator Color(Color) Declaration public static explicit operator Color(Color color) Parameters Type Name Description Color color Returns Type Description Color Implements IEquatable<T> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.CustomPointStyle.html": {
    "href": "pages/Mapsui.Styles.CustomPointStyle.html",
    "title": "Class CustomPointStyle",
    "keywords": "Class CustomPointStyle Inheritance object BaseStyle BasePointStyle CustomPointStyle Implements IPointStyle IStyle Inherited Members BasePointStyle.SymbolRotation BasePointStyle.RotateWithMap BasePointStyle.SymbolScale BasePointStyle.SymbolOffset BasePointStyle.Offset BasePointStyle.RelativeOffset BasePointStyle.SymbolOffsetRotatesWithMap BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class CustomPointStyle : BasePointStyle, IPointStyle, IStyle Properties | Edit this page View Source RendererName Declaration public required string RendererName { get; init; } Property Value Type Description string Implements IPointStyle IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.FillStyle.html": {
    "href": "pages/Mapsui.Styles.FillStyle.html",
    "title": "Enum FillStyle",
    "keywords": "Enum FillStyle Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum FillStyle Fields Name Description BackwardDiagonal Bitmap BitmapRotated Cross DiagonalCross Dotted ForwardDiagonal Hollow Horizontal Solid Svg Vertical Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.Font.html": {
    "href": "pages/Mapsui.Styles.Font.html",
    "title": "Class Font",
    "keywords": "Class Font Inheritance object Font Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Font Constructors | Edit this page View Source Font() Declaration public Font() | Edit this page View Source Font(Font) Declaration public Font(Font font) Parameters Type Name Description Font font Properties | Edit this page View Source Bold Declaration public bool Bold { get; set; } Property Value Type Description bool | Edit this page View Source FontFamily Declaration public string? FontFamily { get; set; } Property Value Type Description string | Edit this page View Source Invalidated Declaration [Obsolete(\"There is no need to indicate invalidation\", true)] public bool Invalidated { get; set; } Property Value Type Description bool | Edit this page View Source Italic Declaration public bool Italic { get; set; } Property Value Type Description bool | Edit this page View Source Size Declaration public double Size { get; set; } Property Value Type Description double Methods | Edit this page View Source Equals(Font) Declaration protected bool Equals(Font other) Parameters Type Name Description Font other Returns Type Description bool | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.IFeatureSize.html": {
    "href": "pages/Mapsui.Styles.IFeatureSize.html",
    "title": "Interface IFeatureSize",
    "keywords": "Interface IFeatureSize For Detecting Feature Size is used in Rasterizing Tiling Rendering to determine how much more Features needs to be loaded Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public interface IFeatureSize Properties | Edit this page View Source NeedsFeature True if it needs a feature to determine the Feature Size. For Example Symbols have always the same Size and therefore don't need a Feature. Labels have variable Size depending on the Text and therefore need a feature to determine the size Declaration bool NeedsFeature { get; } Property Value Type Description bool Methods | Edit this page View Source FeatureSize(IStyle, RenderService, IFeature?) The Feature Size is in points of the screen Declaration double FeatureSize(IStyle style, RenderService renderService, IFeature? feature = null) Parameters Type Name Description IStyle style symbol style to detect size RenderService renderService symbol Cache IFeature feature feature to detect size Returns Type Description double size in points Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.IHasImage.html": {
    "href": "pages/Mapsui.Styles.IHasImage.html",
    "title": "Interface IHasImage",
    "keywords": "Interface IHasImage Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public interface IHasImage Properties | Edit this page View Source Image Declaration Image? Image { get; } Property Value Type Description Image Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.IPointStyle.html": {
    "href": "pages/Mapsui.Styles.IPointStyle.html",
    "title": "Interface IPointStyle",
    "keywords": "Interface IPointStyle Inherited Members IStyle.MinVisible IStyle.MaxVisible IStyle.Enabled IStyle.Opacity Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public interface IPointStyle : IStyle Properties | Edit this page View Source Offset Declaration Offset Offset { get; set; } Property Value Type Description Offset | Edit this page View Source RelativeOffset Declaration RelativeOffset RelativeOffset { get; set; } Property Value Type Description RelativeOffset | Edit this page View Source RotateWithMap Declaration bool RotateWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolOffset Declaration Offset SymbolOffset { get; set; } Property Value Type Description Offset | Edit this page View Source SymbolOffsetRotatesWithMap Declaration bool SymbolOffsetRotatesWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolRotation Declaration double SymbolRotation { get; set; } Property Value Type Description double | Edit this page View Source SymbolScale Declaration double SymbolScale { get; set; } Property Value Type Description double Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.IStyle.html": {
    "href": "pages/Mapsui.Styles.IStyle.html",
    "title": "Interface IStyle",
    "keywords": "Interface IStyle Defines an interface for defining layer styles Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public interface IStyle Properties | Edit this page View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration double MaxVisible { get; set; } Property Value Type Description double | Edit this page View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration double MinVisible { get; set; } Property Value Type Description double | Edit this page View Source Opacity Gets or sets the objects overall opacity Declaration float Opacity { get; set; } Property Value Type Description float Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.IStyleRenderer.html": {
    "href": "pages/Mapsui.Styles.IStyleRenderer.html",
    "title": "Interface IStyleRenderer",
    "keywords": "Interface IStyleRenderer Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public interface IStyleRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Image.html": {
    "href": "pages/Mapsui.Styles.Image.html",
    "title": "Class Image",
    "keywords": "Class Image Inheritance object Image Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Image Properties | Edit this page View Source BitmapRegion The BitmapRegion can be used to specific a subregion that will be used as image symbol. This way the Image can be used as an 'atlas' for 'sprites', which is a common mechanism in 2D gaming engines BitmapRegion can not be applied to SVGs. Declaration public BitmapRegion? BitmapRegion { get; set; } Property Value Type Description BitmapRegion | Edit this page View Source BlendModeColor When BlendModeColor is set a BitmapType.Picture (e.g. used for SVG) will be drawn in the BlendModeColor ignoring the colors of the Picture itself. Declaration public Color? BlendModeColor { get; set; } Property Value Type Description Color? | Edit this page View Source Source Declaration public required string Source { get; init; } Property Value Type Description string | Edit this page View Source SourceToSourceId Declaration public static ConcurrentDictionary<string, string> SourceToSourceId { get; } Property Value Type Description ConcurrentDictionary<string, string> | Edit this page View Source SvgFillColor Option to override the fill color of the SVG image. This is useful if you want to change the color of the SVG source image. Note that each different color used will add an new object to the image cache. Declaration public Color? SvgFillColor { get; set; } Property Value Type Description Color? | Edit this page View Source SvgStrokeColor Option to override the stroke color of the SVG image. This is useful if you want to change the color of the SVG source image. Note that each different color used will add an new object to the image cache. Declaration public Color? SvgStrokeColor { get; set; } Property Value Type Description Color? Methods | Edit this page View Source GetSourceIdForBitmapRegion() Declaration public string GetSourceIdForBitmapRegion() Returns Type Description string | Edit this page View Source GetSourceIdForSvgWithCustomColors() Declaration public string GetSourceIdForSvgWithCustomColors() Returns Type Description string Operators | Edit this page View Source implicit operator Image(string) This allows for the automatic conversion of a string to an Image object. This was added to make the creation code simpler. Declaration public static implicit operator Image(string source) Parameters Type Name Description string source Returns Type Description Image Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.ImageFetcher.html": {
    "href": "pages/Mapsui.Styles.ImageFetcher.html",
    "title": "Class ImageFetcher",
    "keywords": "Class ImageFetcher Inheritance object ImageFetcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public static class ImageFetcher Fields | Edit this page View Source Base64ContentScheme Declaration public const string Base64ContentScheme = \"base64-content\" Field Value Type Description string | Edit this page View Source EmbeddedScheme Declaration public const string EmbeddedScheme = \"embedded\" Field Value Type Description string | Edit this page View Source FileScheme Declaration public const string FileScheme = \"file\" Field Value Type Description string | Edit this page View Source HttpScheme Declaration public const string HttpScheme = \"http\" Field Value Type Description string | Edit this page View Source HttpsScheme Declaration public const string HttpsScheme = \"https\" Field Value Type Description string | Edit this page View Source SvgContentScheme Declaration public const string SvgContentScheme = \"svg-content\" Field Value Type Description string Methods | Edit this page View Source FetchBytesFromImageSourceAsync(string) Declaration public static Task<byte[]> FetchBytesFromImageSourceAsync(string imageSource) Parameters Type Name Description string imageSource Returns Type Description Task<byte[]>"
  },
  "pages/Mapsui.Styles.ImageSourceCache.html": {
    "href": "pages/Mapsui.Styles.ImageSourceCache.html",
    "title": "Class ImageSourceCache",
    "keywords": "Class ImageSourceCache Class for managing all bitmaps, which are registered for Mapsui drawing Inheritance object ImageSourceCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public sealed class ImageSourceCache Methods | Edit this page View Source FetchAllImageData(ConcurrentDictionary<string, string>, FetchMachine, Action) Declaration public void FetchAllImageData(ConcurrentDictionary<string, string> sourceToSourceId, FetchMachine fetchMachine, Action refreshGraphics) Parameters Type Name Description ConcurrentDictionary<string, string> sourceToSourceId FetchMachine fetchMachine Action refreshGraphics | Edit this page View Source FetchAllImageDataAsync(ConcurrentDictionary<string, string>) This variant is currently only used in tests. By awaiting the method the user can be sure that the images are loaded. Declaration public Task<bool> FetchAllImageDataAsync(ConcurrentDictionary<string, string> sourceToSourceId) Parameters Type Name Description ConcurrentDictionary<string, string> sourceToSourceId Returns Type Description Task<bool> | Edit this page View Source Get(Image) Get a image from the cache Declaration public byte[]? Get(Image image) Parameters Type Name Description Image image Returns Type Description byte[] | Edit this page View Source TryRegisterAsync(string, string) Register an image for drawing Declaration public Task<bool> TryRegisterAsync(string sourceId, string source) Parameters Type Name Description string sourceId string source Returns Type Description Task<bool> If true a new image was registered and a refresh is needed. If false the image was already registered and no refresh is needed. | Edit this page View Source Unregister(Image) Unregister a image from the cache Declaration public byte[]? Unregister(Image image) Parameters Type Name Description Image image Returns Type Description byte[] Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.ImageStyle.html": {
    "href": "pages/Mapsui.Styles.ImageStyle.html",
    "title": "Class ImageStyle",
    "keywords": "Class ImageStyle Inheritance object BaseStyle BasePointStyle ImageStyle CalloutStyle Implements IPointStyle IStyle IHasImage Inherited Members BasePointStyle.SymbolRotation BasePointStyle.RotateWithMap BasePointStyle.SymbolScale BasePointStyle.SymbolOffset BasePointStyle.Offset BasePointStyle.RelativeOffset BasePointStyle.SymbolOffsetRotatesWithMap BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class ImageStyle : BasePointStyle, IPointStyle, IStyle, IHasImage Properties | Edit this page View Source Image Path to the the image to display during rendering. This can be url, file path or embedded resource. Declaration public Image? Image { get; set; } Property Value Type Description Image Implements IPointStyle IStyle IHasImage Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.ImageStyles.html": {
    "href": "pages/Mapsui.Styles.ImageStyles.html",
    "title": "Class ImageStyles",
    "keywords": "Class ImageStyles Inheritance object ImageStyles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public static class ImageStyles Methods | Edit this page View Source CreatePinStyle(Color?, Color?, double) Declaration public static ImageStyle CreatePinStyle(Color? fillColor = null, Color? strokeColor = null, double symbolScale = 1) Parameters Type Name Description Color? fillColor Color? strokeColor double symbolScale Returns Type Description ImageStyle"
  },
  "pages/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html": {
    "href": "pages/Mapsui.Styles.LabelStyle.HorizontalAlignmentEnum.html",
    "title": "Enum LabelStyle.HorizontalAlignmentEnum",
    "keywords": "Enum LabelStyle.HorizontalAlignmentEnum Label text alignment Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum LabelStyle.HorizontalAlignmentEnum : short Fields Name Description Center Centered Left Left oriented Right Right oriented Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.LabelStyle.LineBreakMode.html": {
    "href": "pages/Mapsui.Styles.LabelStyle.LineBreakMode.html",
    "title": "Enum LabelStyle.LineBreakMode",
    "keywords": "Enum LabelStyle.LineBreakMode Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum LabelStyle.LineBreakMode : short Fields Name Description CharacterWrap Wrap at character boundaries HeadTruncation Truncate the head of text MiddleTruncation Truncate the middle of text. This may be done, for example, by replacing it with an ellipsis NoWrap Do not wrap text TailTruncation Truncate the tail of text WordWrap Wrap at word boundaries Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html": {
    "href": "pages/Mapsui.Styles.LabelStyle.VerticalAlignmentEnum.html",
    "title": "Enum LabelStyle.VerticalAlignmentEnum",
    "keywords": "Enum LabelStyle.VerticalAlignmentEnum Label text alignment Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum LabelStyle.VerticalAlignmentEnum : short Fields Name Description Bottom Left oriented Center Centered Top Right oriented Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.LabelStyle.html": {
    "href": "pages/Mapsui.Styles.LabelStyle.html",
    "title": "Class LabelStyle",
    "keywords": "Class LabelStyle Defines a style used for rendering labels Inheritance object BaseStyle LabelStyle Implements IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class LabelStyle : BaseStyle, IStyle Constructors | Edit this page View Source LabelStyle() Declaration public LabelStyle() | Edit this page View Source LabelStyle(LabelStyle) Declaration public LabelStyle(LabelStyle labelStyle) Parameters Type Name Description LabelStyle labelStyle Properties | Edit this page View Source BackColor The background color of the label. Set to transparent brush or null if background isn't needed Declaration public Brush? BackColor { get; set; } Property Value Type Description Brush | Edit this page View Source BorderColor The color of the border around the background. Declaration public Color BorderColor { get; set; } Property Value Type Description Color | Edit this page View Source BorderThickness The thickness of the border around the background. Declaration public double BorderThickness { get; set; } Property Value Type Description double | Edit this page View Source CollisionDetection Gets or sets whether Collision Detection is enabled for the labels. If set to true, label collision will be tested. Declaration public bool CollisionDetection { get; set; } Property Value Type Description bool | Edit this page View Source CornerRounding The radius of the oval used to round the corners of the background./>. Declaration public int CornerRounding { get; set; } Property Value Type Description int | Edit this page View Source Font Label Font Declaration public Font Font { get; set; } Property Value Type Description Font | Edit this page View Source ForeColor Font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Edit this page View Source Halo Creates a halo around the text Declaration public Pen? Halo { get; set; } Property Value Type Description Pen | Edit this page View Source HorizontalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.HorizontalAlignmentEnum HorizontalAlignment { get; set; } Property Value Type Description LabelStyle.HorizontalAlignmentEnum | Edit this page View Source LabelColumn The column of the feature used by GetLabelText to return the label text. Declaration public string? LabelColumn { get; set; } Property Value Type Description string Remarks Used only when LabelMethod is not set. Overrides use of the Text field. | Edit this page View Source LabelMethod Method used by GetLabelText to return the label text. Declaration public Func<IFeature, string?>? LabelMethod { get; set; } Property Value Type Description Func<IFeature, string> Remarks Overrides use of Text and LabelColumn fields. | Edit this page View Source LineHeight Space from one text line to next text line in em Declaration public double LineHeight { get; set; } Property Value Type Description double | Edit this page View Source MaxWidth Maximum width of text in em. If text is wider than this, text is shorten or word wrapped regarding WordWrap. Declaration public double MaxWidth { get; set; } Property Value Type Description double | Edit this page View Source Offset Specifies the position of labels with respect to objects label point Declaration public Offset Offset { get; set; } Property Value Type Description Offset | Edit this page View Source RelativeOffset Specifies the position of labels with respect to objects label point relative to the size of the label. Where X = 0.0 and Y = 0.0 would center the label and X = 0.5 and Y = 0.5 will have the label on the bottom right. be drawn with the bottom left corner at the label point. Declaration public RelativeOffset RelativeOffset { get; set; } Property Value Type Description RelativeOffset | Edit this page View Source Text The text used for this specific label. Declaration public string? Text { set; } Property Value Type Description string Remarks Used only when LabelColumn and LabelMethod are not set. | Edit this page View Source VerticalAlignment The horizontal alignment of the text in relation to the label point Declaration public LabelStyle.VerticalAlignmentEnum VerticalAlignment { get; set; } Property Value Type Description LabelStyle.VerticalAlignmentEnum | Edit this page View Source WordWrap Line break mode for text, if width is bigger than MaxWidth Declaration public LabelStyle.LineBreakMode WordWrap { get; set; } Property Value Type Description LabelStyle.LineBreakMode Methods | Edit this page View Source GetLabelText(IFeature) The text used for this specific label. Declaration public string? GetLabelText(IFeature feature) Parameters Type Name Description IFeature feature Returns Type Description string Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Offset.html": {
    "href": "pages/Mapsui.Styles.Offset.html",
    "title": "Class Offset",
    "keywords": "Class Offset Inheritance object Offset Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Offset Constructors | Edit this page View Source Offset() Declaration public Offset() | Edit this page View Source Offset(MPoint) Declaration public Offset(MPoint point) Parameters Type Name Description MPoint point | Edit this page View Source Offset(Offset) Declaration public Offset(Offset offset) Parameters Type Name Description Offset offset | Edit this page View Source Offset(double, double) Declaration public Offset(double x, double y) Parameters Type Name Description double x double y Properties | Edit this page View Source X Declaration public double X { get; set; } Property Value Type Description double | Edit this page View Source Y Declaration public double Y { get; set; } Property Value Type Description double Methods | Edit this page View Source Combine(Offset) Declaration public Offset Combine(Offset offset) Parameters Type Name Description Offset offset Returns Type Description Offset | Edit this page View Source Equals(Offset?) Declaration public bool Equals(Offset? offset) Parameters Type Name Description Offset offset Returns Type Description bool | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToPoint() Declaration public MPoint ToPoint() Returns Type Description MPoint Operators | Edit this page View Source operator ==(Offset?, Offset?) Declaration public static bool operator ==(Offset? offset1, Offset? offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description bool | Edit this page View Source operator !=(Offset?, Offset?) Declaration public static bool operator !=(Offset? offset1, Offset? offset2) Parameters Type Name Description Offset offset1 Offset offset2 Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Pen.html": {
    "href": "pages/Mapsui.Styles.Pen.html",
    "title": "Class Pen",
    "keywords": "Class Pen Inheritance object Pen Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Pen Constructors | Edit this page View Source Pen() Declaration public Pen() | Edit this page View Source Pen(Color, double) Declaration public Pen(Color color, double width = 1) Parameters Type Name Description Color color double width | Edit this page View Source Pen(Pen) Declaration public Pen(Pen pen) Parameters Type Name Description Pen pen Properties | Edit this page View Source Color Color of line Declaration public Color Color { get; set; } Property Value Type Description Color | Edit this page View Source DashArray Array for drawing user defined dashes. Should be even and values are multiplied by line width before drawing. Declaration public float[]? DashArray { get; set; } Property Value Type Description float[] | Edit this page View Source DashOffset Offset for drawing user defined dashes Declaration public float DashOffset { get; set; } Property Value Type Description float | Edit this page View Source PenStrokeCap Defines the end of a line Declaration public PenStrokeCap PenStrokeCap { get; set; } Property Value Type Description PenStrokeCap | Edit this page View Source PenStyle Style of the line (solid/dashed), which is drawn Declaration public PenStyle PenStyle { get; set; } Property Value Type Description PenStyle | Edit this page View Source StrokeJoin Defines how line parts are join together Declaration public StrokeJoin StrokeJoin { get; set; } Property Value Type Description StrokeJoin | Edit this page View Source StrokeMiterLimit Defines up to which width of line StrokeJoin is used Declaration public float StrokeMiterLimit { get; set; } Property Value Type Description float | Edit this page View Source Width Width of line Declaration public double Width { get; set; } Property Value Type Description double Methods | Edit this page View Source Equals(Pen?) Declaration protected bool Equals(Pen? pen) Parameters Type Name Description Pen pen Returns Type Description bool | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() Operators | Edit this page View Source operator ==(Pen?, Pen?) Declaration public static bool operator ==(Pen? pen1, Pen? pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description bool | Edit this page View Source operator !=(Pen?, Pen?) Declaration public static bool operator !=(Pen? pen1, Pen? pen2) Parameters Type Name Description Pen pen1 Pen pen2 Returns Type Description bool Extension Methods PenExtensions.IsVisible(Pen?) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.PenStrokeCap.html": {
    "href": "pages/Mapsui.Styles.PenStrokeCap.html",
    "title": "Enum PenStrokeCap",
    "keywords": "Enum PenStrokeCap Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum PenStrokeCap Fields Name Description Butt Round Square Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.PenStyle.html": {
    "href": "pages/Mapsui.Styles.PenStyle.html",
    "title": "Enum PenStyle",
    "keywords": "Enum PenStyle Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum PenStyle Fields Name Description Dash DashDot DashDotDot Dot LongDash LongDashDot ShortDash ShortDashDot ShortDashDotDot ShortDot Solid UserDefined Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.RasterStyle.html": {
    "href": "pages/Mapsui.Styles.RasterStyle.html",
    "title": "Class RasterStyle",
    "keywords": "Class RasterStyle Inheritance object BaseStyle RasterStyle Implements IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class RasterStyle : BaseStyle, IStyle Properties | Edit this page View Source Outline Declaration public Pen? Outline { get; set; } Property Value Type Description Pen Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.RelativeOffset.html": {
    "href": "pages/Mapsui.Styles.RelativeOffset.html",
    "title": "Class RelativeOffset",
    "keywords": "Class RelativeOffset Offset relative to the size of the item to which it applies. The unit of measure is the width or height of an image. A relative offset of X = 0, and Y = 0 will be centered. An offset of (0.5, 0.5) the symbol will be moved half the width of the image to the right and half the height of the image to the top. So the bottom left point of the image will be on the location. Inheritance object RelativeOffset Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class RelativeOffset Constructors | Edit this page View Source RelativeOffset() Declaration public RelativeOffset() | Edit this page View Source RelativeOffset(MPoint) Declaration public RelativeOffset(MPoint point) Parameters Type Name Description MPoint point | Edit this page View Source RelativeOffset(RelativeOffset) Declaration public RelativeOffset(RelativeOffset offset) Parameters Type Name Description RelativeOffset offset | Edit this page View Source RelativeOffset(double, double) Offset relative to the size of the item to which it applies. The unit of measure is the width or height of an image. A relative offset of X = 0, and Y = 0 will be centered. An offset of (0.5, 0.5) the symbol will be moved half the width of the image to the right and half the height of the image to the top. So the bottom left point of the image will be on the location. Declaration public RelativeOffset(double x = 0, double y = 0) Parameters Type Name Description double x double y Properties | Edit this page View Source X Declaration public double X { get; set; } Property Value Type Description double | Edit this page View Source Y Declaration public double Y { get; set; } Property Value Type Description double Methods | Edit this page View Source Equals(RelativeOffset?) Declaration public bool Equals(RelativeOffset? offset) Parameters Type Name Description RelativeOffset offset Returns Type Description bool | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetAbsoluteOffset(double, double) Calculate the real offset respecting width and height Declaration public Offset GetAbsoluteOffset(double width, double height) Parameters Type Name Description double width Width of the symbol double height Height of the symbol Returns Type Description Offset Calculated offset | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source ToPoint() Declaration public MPoint ToPoint() Returns Type Description MPoint Operators | Edit this page View Source operator ==(RelativeOffset?, RelativeOffset?) Declaration public static bool operator ==(RelativeOffset? offset1, RelativeOffset? offset2) Parameters Type Name Description RelativeOffset offset1 RelativeOffset offset2 Returns Type Description bool | Edit this page View Source operator !=(RelativeOffset?, RelativeOffset?) Declaration public static bool operator !=(RelativeOffset? offset1, RelativeOffset? offset2) Parameters Type Name Description RelativeOffset offset1 RelativeOffset offset2 Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Size.html": {
    "href": "pages/Mapsui.Styles.Size.html",
    "title": "Class Size",
    "keywords": "Class Size Inheritance object Size Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class Size Constructors | Edit this page View Source Size() Declaration public Size() | Edit this page View Source Size(Size) Declaration public Size(Size size) Parameters Type Name Description Size size | Edit this page View Source Size(double, double) Declaration public Size(double width, double height) Parameters Type Name Description double width double height Properties | Edit this page View Source Height Declaration public double Height { get; set; } Property Value Type Description double | Edit this page View Source Width Declaration public double Width { get; set; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.StrokeJoin.html": {
    "href": "pages/Mapsui.Styles.StrokeJoin.html",
    "title": "Enum StrokeJoin",
    "keywords": "Enum StrokeJoin Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum StrokeJoin Fields Name Description Bevel Miter Round Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.Style.html": {
    "href": "pages/Mapsui.Styles.Style.html",
    "title": "Class Style",
    "keywords": "Class Style This class is for backward compatibility. You should use BaseStyle instead. It will be obsolete in a future release. Inheritance object BaseStyle Style Implements IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public abstract class Style : BaseStyle, IStyle Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.StyleCollection.html": {
    "href": "pages/Mapsui.Styles.StyleCollection.html",
    "title": "Class StyleCollection",
    "keywords": "Class StyleCollection Inheritance object BaseStyle StyleCollection Implements IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class StyleCollection : BaseStyle, IStyle Properties | Edit this page View Source Styles Declaration public Collection<IStyle> Styles { get; set; } Property Value Type Description Collection<IStyle> Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.SvgColorModifier.html": {
    "href": "pages/Mapsui.Styles.SvgColorModifier.html",
    "title": "Class SvgColorModifier",
    "keywords": "Class SvgColorModifier Inheritance object SvgColorModifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.Rendering.Skia.dll Syntax public static class SvgColorModifier Methods | Edit this page View Source GetAllElements(SvgElementCollection) Declaration public static List<SvgElement> GetAllElements(SvgElementCollection elements) Parameters Type Name Description SvgElementCollection elements Returns Type Description List<SvgElement> | Edit this page View Source GetModifiedSvg(byte[], Color?, Color?) Declaration public static MemoryStream GetModifiedSvg(byte[] bytes, Color? fillColor = null, Color? strokeColor = null) Parameters Type Name Description byte[] bytes Color? fillColor Color? strokeColor Returns Type Description MemoryStream"
  },
  "pages/Mapsui.Styles.SymbolStyle.html": {
    "href": "pages/Mapsui.Styles.SymbolStyle.html",
    "title": "Class SymbolStyle",
    "keywords": "Class SymbolStyle Inheritance object BaseStyle VectorStyle SymbolStyle Implements IPointStyle IStyle Inherited Members VectorStyle.Line VectorStyle.Outline VectorStyle.Fill BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class SymbolStyle : VectorStyle, IPointStyle, IStyle Properties | Edit this page View Source DefaultHeight Declaration public static double DefaultHeight { get; set; } Property Value Type Description double | Edit this page View Source DefaultWidth Declaration public static double DefaultWidth { get; set; } Property Value Type Description double | Edit this page View Source Offset Gets or sets the offset in pixels of the symbol. Declaration public Offset Offset { get; set; } Property Value Type Description Offset Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset of SymbolScale=1.0. | Edit this page View Source RelativeOffset Offset of the symbol in units relative to the size of the symbol. When X = 0 and Y = 0 it will be centered. Declaration public RelativeOffset RelativeOffset { get; set; } Property Value Type Description RelativeOffset | Edit this page View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. This is useful if you need to symbolize the direction in which a vehicle is moving. When the symbol is false it will retain it's position to the screen. This is useful for pins like symbols. The default is false. This mode is not supported in the WPF renderer. Declaration public bool RotateWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolOffset Declaration [Obsolete(\"Use Offset or RelativeOffset instead\", true)] public Offset SymbolOffset { get; set; } Property Value Type Description Offset | Edit this page View Source SymbolOffsetRotatesWithMap Should SymbolOffset position rotate with map Declaration public bool SymbolOffsetRotatesWithMap { get; set; } Property Value Type Description bool | Edit this page View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public double SymbolRotation { get; set; } Property Value Type Description double | Edit this page View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public double SymbolScale { get; set; } Property Value Type Description double Remarks Setting the SymbolScale to '2.0' doubles the size of the symbol. A SymbolScale of 0.5 makes the scale half the size. of the original image | Edit this page View Source SymbolType Declaration public SymbolType SymbolType { get; set; } Property Value Type Description SymbolType | Edit this page View Source UnitType Declaration public UnitType UnitType { get; set; } Property Value Type Description UnitType Implements IPointStyle IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.SymbolType.html": {
    "href": "pages/Mapsui.Styles.SymbolType.html",
    "title": "Enum SymbolType",
    "keywords": "Enum SymbolType Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum SymbolType Fields Name Description Ellipse Rectangle Triangle Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.TailAlignment.html": {
    "href": "pages/Mapsui.Styles.TailAlignment.html",
    "title": "Enum TailAlignment",
    "keywords": "Enum TailAlignment Determines, where the pointer is Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum TailAlignment Fields Name Description Bottom Callout tail is at bottom side of bubble Left Callout tail is at left side of bubble Right Callout tail is at right side of bubble Top Callout tail is at top side of bubble Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.Thematics.ColorBlend.html": {
    "href": "pages/Mapsui.Styles.Thematics.ColorBlend.html",
    "title": "Class ColorBlend",
    "keywords": "Class ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. Inheritance object ColorBlend Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles.Thematics Assembly: Mapsui.dll Syntax public class ColorBlend Constructors | Edit this page View Source ColorBlend(Color[], double[]) Initializes a new instance of the ColorBlend class. Declaration public ColorBlend(Color[] colors, double[] positions) Parameters Type Name Description Color[] colors An array of Color structures that represents the colors to use at corresponding positions along a gradient. double[] positions An array of values that specify percentages of distance along the gradient line. Properties | Edit this page View Source BlackToWhite Gets a linear gradient scale from black to white Declaration public static ColorBlend BlackToWhite { get; } Property Value Type Description ColorBlend | Edit this page View Source BlueToGreen Gets a linear gradient scale from blue to green Declaration public static ColorBlend BlueToGreen { get; } Property Value Type Description ColorBlend | Edit this page View Source BlueToRed Gets a linear gradient scale from blue to red Declaration public static ColorBlend BlueToRed { get; } Property Value Type Description ColorBlend | Edit this page View Source Colors Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient. Declaration public Color[]? Colors { get; set; } Property Value Type Description Color[] | Edit this page View Source GreenToBlue Gets a linear gradient scale from green to blue Declaration public static ColorBlend GreenToBlue { get; } Property Value Type Description ColorBlend | Edit this page View Source GreenToRed Gets a linear gradient scale from green to red Declaration public static ColorBlend GreenToRed { get; } Property Value Type Description ColorBlend | Edit this page View Source Positions Gets or sets the positions along a gradient line. Declaration public double[]? Positions { get; set; } Property Value Type Description double[] An array of values that specify percentages of distance along the gradient line. Remarks The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f, and the first element of the array must be 0.0f and the last element must be 1.0f. Along with the Colors property, this property defines a multicolor gradient. | Edit this page View Source Rainbow5 Gets a linear gradient scale with five colors making a rainbow from red to blue. Declaration public static ColorBlend Rainbow5 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 0.25: { Color.Red, Color.Yellow, Color.Green, Color.Cyan, Color.Blue } | Edit this page View Source Rainbow7 Gets a linear gradient scale with seven colors making a rainbow from red to violet. Declaration public static ColorBlend Rainbow7 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 1/6: { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Violet } | Edit this page View Source RedToBlue Gets a linear gradient scale from red to blue Declaration public static ColorBlend RedToBlue { get; } Property Value Type Description ColorBlend | Edit this page View Source RedToGreen Gets a linear gradient scale from red to green Declaration public static ColorBlend RedToGreen { get; } Property Value Type Description ColorBlend | Edit this page View Source WhiteToBlack Gets a linear gradient scale from white to black Declaration public static ColorBlend WhiteToBlack { get; } Property Value Type Description ColorBlend Methods | Edit this page View Source GetColor(double) Gets the color from the scale at position 'pos'. Declaration public Color GetColor(double pos) Parameters Type Name Description double pos Position on scale between 0.0f and 1.0f Returns Type Description Color Color on scale Remarks If the position is outside the scale [0..1] only the fractional part is used (in other words the scale restarts for each integer-part). | Edit this page View Source ThreeColors(Color, Color, Color) Creates a linear gradient scale from three colors Declaration public static ColorBlend ThreeColors(Color fromColor, Color middleColor, Color toColor) Parameters Type Name Description Color fromColor Color middleColor Color toColor Returns Type Description ColorBlend | Edit this page View Source TwoColors(Color, Color) Creates a linear gradient scale from two colors Declaration public static ColorBlend TwoColors(Color fromColor, Color toColor) Parameters Type Name Description Color fromColor Color toColor Returns Type Description ColorBlend Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Thematics.GradientTheme.html": {
    "href": "pages/Mapsui.Styles.Thematics.GradientTheme.html",
    "title": "Class GradientTheme",
    "keywords": "Class GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. Inheritance object BaseStyle GradientTheme Implements IThemeStyle IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles.Thematics Assembly: Mapsui.dll Syntax public class GradientTheme : BaseStyle, IThemeStyle, IStyle Constructors | Edit this page View Source GradientTheme(string, double, double, IStyle, IStyle) Initializes a new instance of the GradientTheme class Declaration public GradientTheme(string columnName, double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description string columnName Name of column to extract the attribute double minValue Minimum value double maxValue Maximum value IStyle minStyle Color for minimum value IStyle maxStyle Color for maximum value Properties | Edit this page View Source ColumnName Gets or sets the column name from where to get the attribute value Declaration public string ColumnName { get; init; } Property Value Type Description string | Edit this page View Source FillColorBlend Gets or sets the ColorBlend used as Fill Declaration public ColorBlend? FillColorBlend { get; init; } Property Value Type Description ColorBlend | Edit this page View Source LineColorBlend Gets or sets the ColorBlend used on lines Declaration public ColorBlend? LineColorBlend { get; init; } Property Value Type Description ColorBlend | Edit this page View Source Max Gets or sets the maximum value of the gradient Declaration public double Max { get; init; } Property Value Type Description double | Edit this page View Source MaxStyle Gets or sets the style for the maximum value Declaration public IStyle MaxStyle { get; init; } Property Value Type Description IStyle | Edit this page View Source Min Gets or sets the minimum value of the gradient Declaration public double Min { get; init; } Property Value Type Description double | Edit this page View Source MinStyle Gets or sets the style for the minimum value Declaration public IStyle MinStyle { get; init; } Property Value Type Description IStyle | Edit this page View Source TextColorBlend Gets or sets the ColorBlend used on labels Declaration public ColorBlend? TextColorBlend { get; init; } Property Value Type Description ColorBlend Methods | Edit this page View Source GetStyle(IFeature, Viewport) Returns the style based on a numeric DataColumn, where style properties are linearly interpolated between max and min values. Declaration public IStyle? GetStyle(IFeature row, Viewport _) Parameters Type Name Description IFeature row Feature Viewport _ Returns Type Description IStyle A Style calculated by a linear interpolation between the min/max styles Implements IThemeStyle IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Thematics.IThemeStyle.html": {
    "href": "pages/Mapsui.Styles.Thematics.IThemeStyle.html",
    "title": "Interface IThemeStyle",
    "keywords": "Interface IThemeStyle Interface for rendering a thematic layer Inherited Members IStyle.MinVisible IStyle.MaxVisible IStyle.Enabled IStyle.Opacity Namespace: Mapsui.Styles.Thematics Assembly: Mapsui.dll Syntax public interface IThemeStyle : IStyle Methods | Edit this page View Source GetStyle(IFeature, Viewport) Returns the style based on a feature Declaration IStyle? GetStyle(IFeature feature, Viewport viewport) Parameters Type Name Description IFeature feature Feature to calculate color from Viewport viewport Returns Type Description IStyle Color Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Thematics.ThemeStyle.html": {
    "href": "pages/Mapsui.Styles.Thematics.ThemeStyle.html",
    "title": "Class ThemeStyle",
    "keywords": "Class ThemeStyle Inheritance object BaseStyle ThemeStyle Implements IThemeStyle IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Styles.Thematics Assembly: Mapsui.dll Syntax public class ThemeStyle : BaseStyle, IThemeStyle, IStyle Constructors | Edit this page View Source ThemeStyle(Func<IFeature, IStyle?>) Declaration public ThemeStyle(Func<IFeature, IStyle?> method) Parameters Type Name Description Func<IFeature, IStyle> method | Edit this page View Source ThemeStyle(Func<IFeature, Viewport, IStyle?>) Declaration public ThemeStyle(Func<IFeature, Viewport, IStyle?> method) Parameters Type Name Description Func<IFeature, Viewport, IStyle> method Methods | Edit this page View Source GetStyle(IFeature, Viewport) Returns the style based on a feature Declaration public IStyle? GetStyle(IFeature attribute, Viewport viewport) Parameters Type Name Description IFeature attribute Viewport viewport Returns Type Description IStyle Color | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements IThemeStyle IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.Thematics.html": {
    "href": "pages/Mapsui.Styles.Thematics.html",
    "title": "Namespace Mapsui.Styles.Thematics",
    "keywords": "Namespace Mapsui.Styles.Thematics Classes ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. ThemeStyle Interfaces IThemeStyle Interface for rendering a thematic layer"
  },
  "pages/Mapsui.Styles.UnitType.html": {
    "href": "pages/Mapsui.Styles.UnitType.html",
    "title": "Enum UnitType",
    "keywords": "Enum UnitType Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public enum UnitType Fields Name Description Pixel WorldUnit Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Styles.VectorStyle.html": {
    "href": "pages/Mapsui.Styles.VectorStyle.html",
    "title": "Class VectorStyle",
    "keywords": "Class VectorStyle Inheritance object BaseStyle VectorStyle SymbolStyle Implements IStyle Inherited Members BaseStyle.MinVisible BaseStyle.MaxVisible BaseStyle.Enabled BaseStyle.Opacity object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Styles Assembly: Mapsui.dll Syntax public class VectorStyle : BaseStyle, IStyle Constructors | Edit this page View Source VectorStyle() Declaration public VectorStyle() Properties | Edit this page View Source Fill Fill style for Polygon geometries Declaration public Brush? Fill { get; set; } Property Value Type Description Brush | Edit this page View Source Line Line style for line geometries Declaration public Pen? Line { get; set; } Property Value Type Description Pen | Edit this page View Source Outline Outline style for line and polygon geometries Declaration public Pen? Outline { get; set; } Property Value Type Description Pen Implements IStyle Extension Methods StyleExtensions.GetStylesToApply(IStyle?, double) StyleExtensions.ShouldBeApplied(IStyle?, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Styles.html": {
    "href": "pages/Mapsui.Styles.html",
    "title": "Namespace Mapsui.Styles",
    "keywords": "Namespace Mapsui.Styles Classes BasePointStyle BaseStyle Defines a style used for rendering vector data BitmapRegion Defines which section of an image (the atlas) should be used from drawing a symbol (the sprite). Brush CalloutBalloonDefinition CalloutStyle A CalloutStyle shows a callout or InfoWindow in Google Maps CustomPointStyle Font Image ImageFetcher ImageSourceCache Class for managing all bitmaps, which are registered for Mapsui drawing ImageStyle ImageStyles LabelStyle Defines a style used for rendering labels Offset Pen RasterStyle RelativeOffset Offset relative to the size of the item to which it applies. The unit of measure is the width or height of an image. A relative offset of X = 0, and Y = 0 will be centered. An offset of (0.5, 0.5) the symbol will be moved half the width of the image to the right and half the height of the image to the top. So the bottom left point of the image will be on the location. Size Style This class is for backward compatibility. You should use BaseStyle instead. It will be obsolete in a future release. StyleCollection SvgColorModifier SymbolStyle VectorStyle Structs Color Interfaces IFeatureSize For Detecting Feature Size is used in Rasterizing Tiling Rendering to determine how much more Features needs to be loaded IHasImage IPointStyle IStyle Defines an interface for defining layer styles IStyleRenderer Enums CalloutType Type of CalloutStyle FillStyle LabelStyle.HorizontalAlignmentEnum Label text alignment LabelStyle.LineBreakMode LabelStyle.VerticalAlignmentEnum Label text alignment PenStrokeCap PenStyle StrokeJoin SymbolType TailAlignment Determines, where the pointer is UnitType"
  },
  "pages/Mapsui.Tiling.Extensions.ExtentExtensions.html": {
    "href": "pages/Mapsui.Tiling.Extensions.ExtentExtensions.html",
    "title": "Class ExtentExtensions",
    "keywords": "Class ExtentExtensions Inheritance object ExtentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Extensions Assembly: Mapsui.Tiling.dll Syntax public static class ExtentExtensions Methods | Edit this page View Source ToMRect(Extent) Declaration public static MRect ToMRect(this Extent extent) Parameters Type Name Description Extent extent Returns Type Description MRect"
  },
  "pages/Mapsui.Tiling.Extensions.MRectExtensions.html": {
    "href": "pages/Mapsui.Tiling.Extensions.MRectExtensions.html",
    "title": "Class MRectExtensions",
    "keywords": "Class MRectExtensions Inheritance object MRectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Extensions Assembly: Mapsui.Tiling.dll Syntax public static class MRectExtensions Methods | Edit this page View Source ToExtent(MRect) Declaration public static Extent ToExtent(this MRect rect) Parameters Type Name Description MRect rect Returns Type Description Extent"
  },
  "pages/Mapsui.Tiling.Extensions.MapBuilderExtensions.ConfigureScaleBarWidget.html": {
    "href": "pages/Mapsui.Tiling.Extensions.MapBuilderExtensions.ConfigureScaleBarWidget.html",
    "title": "Delegate MapBuilderExtensions.ConfigureScaleBarWidget",
    "keywords": "Delegate MapBuilderExtensions.ConfigureScaleBarWidget Namespace: Mapsui.Tiling.Extensions Assembly: Mapsui.Tiling.dll Syntax public delegate void MapBuilderExtensions.ConfigureScaleBarWidget(ScaleBarWidget widget) Parameters Type Name Description ScaleBarWidget widget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Extensions.MapBuilderExtensions.html": {
    "href": "pages/Mapsui.Tiling.Extensions.MapBuilderExtensions.html",
    "title": "Class MapBuilderExtensions",
    "keywords": "Class MapBuilderExtensions Inheritance object MapBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Extensions Assembly: Mapsui.Tiling.dll Syntax public static class MapBuilderExtensions Methods | Edit this page View Source WithOpenStreetMapLayer(MapBuilder, ConfigureLayer) Declaration public static MapBuilder WithOpenStreetMapLayer(this MapBuilder mapBuilder, MapBuilder.ConfigureLayer configureLayer) Parameters Type Name Description MapBuilder mapBuilder MapBuilder.ConfigureLayer configureLayer Returns Type Description MapBuilder | Edit this page View Source WithScaleBarWidget(MapBuilder) This method is here to test extended methods for widgets. It should be in the MapBuilder instead (because it can be, unlike those for the TileLayer) Declaration public static MapBuilder WithScaleBarWidget(this MapBuilder mapBuilder) Parameters Type Name Description MapBuilder mapBuilder Returns Type Description MapBuilder | Edit this page View Source WithScaleBarWidget(MapBuilder, ConfigureScaleBarWidget) This method is here to test extended methods for widgets. It should be in the MapBuilder instead (because it can be, unlike those for the TileLayer) Declaration public static MapBuilder WithScaleBarWidget(this MapBuilder mapBuilder, MapBuilderExtensions.ConfigureScaleBarWidget configureScaleBarWidget) Parameters Type Name Description MapBuilder mapBuilder MapBuilderExtensions.ConfigureScaleBarWidget configureScaleBarWidget Returns Type Description MapBuilder"
  },
  "pages/Mapsui.Tiling.Extensions.html": {
    "href": "pages/Mapsui.Tiling.Extensions.html",
    "title": "Namespace Mapsui.Tiling.Extensions",
    "keywords": "Namespace Mapsui.Tiling.Extensions Classes ExtentExtensions MRectExtensions MapBuilderExtensions Delegates MapBuilderExtensions.ConfigureScaleBarWidget"
  },
  "pages/Mapsui.Tiling.Fetcher.DataFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.DataFetchStrategy.html",
    "title": "Class DataFetchStrategy",
    "keywords": "Class DataFetchStrategy Inheritance object DataFetchStrategy Implements IDataFetchStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Fetcher Assembly: Mapsui.Tiling.dll Syntax public class DataFetchStrategy : IDataFetchStrategy Constructors | Edit this page View Source DataFetchStrategy(int) Declaration public DataFetchStrategy(int maxLevelsUp = 2147483647) Parameters Type Name Description int maxLevelsUp Methods | Edit this page View Source Get(ITileSchema, Extent, int) Fetches the tiles from the data source to put them into the cache. A strategy could pre-fetch certain tiles to anticipate future use. Declaration public IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent int level Returns Type Description IList<TileInfo> Implements IDataFetchStrategy Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Fetcher.FetchTracker.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.FetchTracker.html",
    "title": "Class FetchTracker",
    "keywords": "Class FetchTracker Inheritance object FetchTracker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Fetcher Assembly: Mapsui.Tiling.dll Syntax public class FetchTracker Properties | Edit this page View Source MaxTilesInOneRequest Declaration public static int MaxTilesInOneRequest { get; set; } Property Value Type Description int Methods | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source FetchDone(TileIndex) Declaration public void FetchDone(TileIndex index) Parameters Type Name Description TileIndex index | Edit this page View Source FetchFailed(TileIndex) Declaration public void FetchFailed(TileIndex index) Parameters Type Name Description TileIndex index | Edit this page View Source IsDone() Declaration public bool IsDone() Returns Type Description bool | Edit this page View Source TryTake(out TileInfo?, int) Declaration public bool TryTake(out TileInfo? tileInfo, int maxInProgress) Parameters Type Name Description TileInfo tileInfo int maxInProgress Returns Type Description bool | Edit this page View Source Update(FetchInfo, ITileSchema, IDataFetchStrategy, ITileCache<IFeature?>) Declaration public int Update(FetchInfo fetchInfo, ITileSchema tileSchema, IDataFetchStrategy dataFetchStrategy, ITileCache<IFeature?> tileCache) Parameters Type Name Description FetchInfo fetchInfo ITileSchema tileSchema IDataFetchStrategy dataFetchStrategy ITileCache<IFeature> tileCache Returns Type Description int Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Fetcher.IDataFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.IDataFetchStrategy.html",
    "title": "Interface IDataFetchStrategy",
    "keywords": "Interface IDataFetchStrategy Namespace: Mapsui.Tiling.Fetcher Assembly: Mapsui.Tiling.dll Syntax public interface IDataFetchStrategy Methods | Edit this page View Source Get(ITileSchema, Extent, int) Fetches the tiles from the data source to put them into the cache. A strategy could pre-fetch certain tiles to anticipate future use. Declaration IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent int level Returns Type Description IList<TileInfo> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Fetcher.MinimalDataFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.MinimalDataFetchStrategy.html",
    "title": "Class MinimalDataFetchStrategy",
    "keywords": "Class MinimalDataFetchStrategy Inheritance object MinimalDataFetchStrategy Implements IDataFetchStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Fetcher Assembly: Mapsui.Tiling.dll Syntax public class MinimalDataFetchStrategy : IDataFetchStrategy Methods | Edit this page View Source Get(ITileSchema, Extent, int) Fetches the tiles from the data source to put them into the cache. A strategy could pre-fetch certain tiles to anticipate future use. Declaration public IList<TileInfo> Get(ITileSchema schema, Extent extent, int level) Parameters Type Name Description ITileSchema schema Extent extent int level Returns Type Description IList<TileInfo> Implements IDataFetchStrategy Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Fetcher.TileFetchPlanner.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.TileFetchPlanner.html",
    "title": "Class TileFetchPlanner",
    "keywords": "Class TileFetchPlanner Inheritance object TileFetchPlanner Implements INotifyPropertyChanged IFetchableSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Fetcher Assembly: Mapsui.Tiling.dll Syntax public class TileFetchPlanner : INotifyPropertyChanged, IFetchableSource Constructors | Edit this page View Source TileFetchPlanner(ITileCache<IFeature?>, ITileSchema, Func<TileInfo, Task<IFeature?>>, IDataFetchStrategy, ILayer) Declaration public TileFetchPlanner(ITileCache<IFeature?> tileCache, ITileSchema tileSchema, Func<TileInfo, Task<IFeature?>> fetchTileAsFeature, IDataFetchStrategy dataFetchStrategy, ILayer layer) Parameters Type Name Description ITileCache<IFeature> tileCache ITileSchema tileSchema Func<TileInfo, Task<IFeature>> fetchTileAsFeature IDataFetchStrategy dataFetchStrategy ILayer layer Properties | Edit this page View Source Busy Declaration public bool Busy { get; } Property Value Type Description bool | Edit this page View Source DefaultNumberOfSimultaneousFetches Declaration public static int DefaultNumberOfSimultaneousFetches { get; set; } Property Value Type Description int | Edit this page View Source Id The layer identifier. Declaration public int Id { get; } Property Value Type Description int | Edit this page View Source NumberTilesNeeded Declaration public int NumberTilesNeeded { get; } Property Value Type Description int Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration public void ClearCache() | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration public FetchJob[] GetFetchJobs(int activeFetches, int availableFetchSlots) Parameters Type Name Description int activeFetches int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source DataChanged Declaration public event EventHandler<Exception?>? DataChanged Event Type Type Description EventHandler<Exception> | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> | Edit this page View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged IFetchableSource Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Fetcher.html": {
    "href": "pages/Mapsui.Tiling.Fetcher.html",
    "title": "Namespace Mapsui.Tiling.Fetcher",
    "keywords": "Namespace Mapsui.Tiling.Fetcher Classes DataFetchStrategy FetchTracker MinimalDataFetchStrategy TileFetchPlanner Interfaces IDataFetchStrategy"
  },
  "pages/Mapsui.Tiling.Layers.RasterizingTileLayer.html": {
    "href": "pages/Mapsui.Tiling.Layers.RasterizingTileLayer.html",
    "title": "Class RasterizingTileLayer",
    "keywords": "Class RasterizingTileLayer Rasterizing Tile Layer. A Layer that Rasterizes and Tiles the Layer. For Faster Performance. It recreates the Tiles if Data is changed. Inheritance object BaseLayer TileLayer RasterizingTileLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable ISourceLayer IFetchableSource ILayerFeatureInfo Inherited Members TileLayer.FetchRequested TileLayer.TileSource TileLayer.Resolutions TileLayer.Extent TileLayer.GetFeatures(MRect, double) TileLayer.ClearCache() TileLayer.GetFetchJobs(int, int) TileLayer.Dispose(bool) TileLayer.OnFetchRequested() BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Tiling.Layers Assembly: Mapsui.Tiling.dll Syntax public class RasterizingTileLayer : TileLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable, ISourceLayer, IFetchableSource, ILayerFeatureInfo Constructors | Edit this page View Source RasterizingTileLayer(ILayer, float, int, int, IDataFetchStrategy?, IRenderFetchStrategy?, int, int, IPersistentCache<byte[]>?, IProjection?, RenderFormat) Creates a RasterizingTileLayer which rasterizes a layer for performance Declaration public RasterizingTileLayer(ILayer layer, float pixelDensity = 1, int minTiles = 200, int maxTiles = 300, IDataFetchStrategy? dataFetchStrategy = null, IRenderFetchStrategy? renderFetchStrategy = null, int minExtraTiles = -1, int maxExtraTiles = -1, IPersistentCache<byte[]>? persistentCache = null, IProjection? projection = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description ILayer layer The Layer to be rasterized float pixelDensity int minTiles Minimum number of tiles to cache int maxTiles Maximum number of tiles to cache IDataFetchStrategy dataFetchStrategy Strategy to get list of tiles for given extent IRenderFetchStrategy renderFetchStrategy int minExtraTiles Number of minimum extra tiles for memory cache int maxExtraTiles Number of maximum extra tiles for memory cache IPersistentCache<byte[]> persistentCache Persistent Cache IProjection projection Projection RenderFormat renderFormat Format to Render To Properties | Edit this page View Source SourceLayer Declaration public ILayer SourceLayer { get; } Property Value Type Description ILayer Methods | Edit this page View Source GetFeatureInfoAsync(Viewport, ScreenPosition) Declaration public Task<IDictionary<string, IEnumerable<IFeature>>> GetFeatureInfoAsync(Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Returns Type Description Task<IDictionary<string, IEnumerable<IFeature>>> | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public override void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Overrides TileLayer.ViewportChanged(FetchInfo) Implements ILayer IAnimatable INotifyPropertyChanged IDisposable ISourceLayer IFetchableSource ILayerFeatureInfo Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Layers.TileLayer.html": {
    "href": "pages/Mapsui.Tiling.Layers.TileLayer.html",
    "title": "Class TileLayer",
    "keywords": "Class TileLayer Layer, which displays a map consisting of individual tiles Inheritance object BaseLayer TileLayer RasterizingTileLayer Implements ILayer IAnimatable INotifyPropertyChanged IFetchableSource IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Attribution BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose() BaseLayer.UpdateAnimations() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Tiling.Layers Assembly: Mapsui.Tiling.dll Syntax public class TileLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IFetchableSource, IDisposable Constructors | Edit this page View Source TileLayer(ITileSource, int, int, IDataFetchStrategy?, IRenderFetchStrategy?, int, int, Func<TileInfo, Task<IFeature?>>?) Create tile layer for given tile source Declaration public TileLayer(ITileSource tileSource, int minTiles = 200, int maxTiles = 300, IDataFetchStrategy? dataFetchStrategy = null, IRenderFetchStrategy? renderFetchStrategy = null, int minExtraTiles = -1, int maxExtraTiles = -1, Func<TileInfo, Task<IFeature?>>? fetchTileAsFeature = null) Parameters Type Name Description ITileSource tileSource Tile source to use for this layer int minTiles Minimum number of tiles to cache int maxTiles Maximum number of tiles to cache IDataFetchStrategy dataFetchStrategy Strategy to get list of tiles for given extent IRenderFetchStrategy renderFetchStrategy int minExtraTiles Number of minimum extra tiles for memory cache int maxExtraTiles Number of maximum extra tiles for memory cache Func<TileInfo, Task<IFeature>> fetchTileAsFeature Fetch tile as feature Properties | Edit this page View Source Extent Returns the envelope of all available data in the layer Declaration public override MRect? Extent { get; } Property Value Type Description MRect Overrides BaseLayer.Extent | Edit this page View Source Resolutions List of native resolutions Declaration public override IReadOnlyList<double> Resolutions { get; } Property Value Type Description IReadOnlyList<double> Overrides BaseLayer.Resolutions | Edit this page View Source TileSource TileSource Declaration public ITileSource TileSource { get; } Property Value Type Description ITileSource Methods | Edit this page View Source ClearCache() Clears the cache of this layer. Call this if source data has was invalidated or the layer is removed. Declaration public void ClearCache() | Edit this page View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides BaseLayer.Dispose(bool) | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect extent, double resolution) Parameters Type Name Description MRect extent Bounding box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source GetFetchJobs(int, int) Gets the fetch requests for this layer. The requests are based on the viewport stored within the layer. Declaration public FetchJob[] GetFetchJobs(int activeFetches, int availableFetchSlots) Parameters Type Name Description int activeFetches int availableFetchSlots Number of available fetch slots in the caller. It is the maximum number of fetch jobs the method should return. Returns Type Description FetchJob[] | Edit this page View Source OnFetchRequested() Declaration protected virtual void OnFetchRequested() | Edit this page View Source ViewportChanged(FetchInfo) Informs the layer that the viewport has changed and it should update its data accordingly. Declaration public virtual void ViewportChanged(FetchInfo fetchInfo) Parameters Type Name Description FetchInfo fetchInfo Events | Edit this page View Source FetchRequested Indicates to the listener that it should fetch data again. This event is raised when there was a change in source data, so only relevant for dynamic data. The fetches triggered by viewport changes do not depend on it. Declaration public event EventHandler<FetchRequestedEventArgs>? FetchRequested Event Type Type Description EventHandler<FetchRequestedEventArgs> Implements ILayer IAnimatable INotifyPropertyChanged IFetchableSource IDisposable Extension Methods LayerExtensions.WaitForLoadingAsync(ILayer) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Layers.TmsTileSourceBuilder.html": {
    "href": "pages/Mapsui.Tiling.Layers.TmsTileSourceBuilder.html",
    "title": "Class TmsTileSourceBuilder",
    "keywords": "Class TmsTileSourceBuilder Inheritance object TmsTileSourceBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Layers Assembly: Mapsui.Tiling.dll Syntax public static class TmsTileSourceBuilder Methods | Edit this page View Source BuildAsync(string, bool, IPersistentCache<byte[]>?) Declaration public static Task<ITileSource> BuildAsync(string urlToTileMapXml, bool overrideTmsUrlWithUrlToTileMapXml, IPersistentCache<byte[]>? persistentCache = null) Parameters Type Name Description string urlToTileMapXml bool overrideTmsUrlWithUrlToTileMapXml IPersistentCache<byte[]> persistentCache Returns Type Description Task<ITileSource>"
  },
  "pages/Mapsui.Tiling.Layers.html": {
    "href": "pages/Mapsui.Tiling.Layers.html",
    "title": "Namespace Mapsui.Tiling.Layers",
    "keywords": "Namespace Mapsui.Tiling.Layers Classes RasterizingTileLayer Rasterizing Tile Layer. A Layer that Rasterizes and Tiles the Layer. For Faster Performance. It recreates the Tiles if Data is changed. TileLayer Layer, which displays a map consisting of individual tiles TmsTileSourceBuilder"
  },
  "pages/Mapsui.Tiling.OpenStreetMap.html": {
    "href": "pages/Mapsui.Tiling.OpenStreetMap.html",
    "title": "Class OpenStreetMap",
    "keywords": "Class OpenStreetMap Inheritance object OpenStreetMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling Assembly: Mapsui.Tiling.dll Syntax public static class OpenStreetMap Fields | Edit this page View Source DefaultCache Declaration public static IPersistentCache<byte[]>? DefaultCache Field Value Type Description IPersistentCache<byte[]> Methods | Edit this page View Source CreateTileLayer(string?) Declaration public static TileLayer CreateTileLayer(string? userAgent = null) Parameters Type Name Description string userAgent Returns Type Description TileLayer"
  },
  "pages/Mapsui.Tiling.Provider.RasterizingTileSource.html": {
    "href": "pages/Mapsui.Tiling.Provider.RasterizingTileSource.html",
    "title": "Class RasterizingTileSource",
    "keywords": "Class RasterizingTileSource The rasterizing tile provider. Tiles the Layer for faster Rasterizing on Zoom and Move. Inheritance object RasterizingTileSource Implements ILocalTileSource ITileSource ILayerFeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Provider Assembly: Mapsui.Tiling.dll Syntax public class RasterizingTileSource : ILocalTileSource, ITileSource, ILayerFeatureInfo Constructors | Edit this page View Source RasterizingTileSource(ILayer, float, IPersistentCache<byte[]>?, IProjection?, RenderFormat) Declaration public RasterizingTileSource(ILayer layer, float pixelDensity = 1, IPersistentCache<byte[]>? persistentCache = null, IProjection? projection = null, RenderFormat renderFormat = RenderFormat.Png) Parameters Type Name Description ILayer layer float pixelDensity IPersistentCache<byte[]> persistentCache IProjection projection RenderFormat renderFormat Properties | Edit this page View Source Attribution Declaration public Attribution Attribution { get; } Property Value Type Description Attribution | Edit this page View Source Name Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source PersistentCache Declaration public IPersistentCache<byte[]> PersistentCache { get; set; } Property Value Type Description IPersistentCache<byte[]> | Edit this page View Source Schema Declaration public ITileSchema Schema { get; } Property Value Type Description ITileSchema Methods | Edit this page View Source GetFeatureInfoAsync(Viewport, ScreenPosition) Declaration public Task<IDictionary<string, IEnumerable<IFeature>>> GetFeatureInfoAsync(Viewport viewport, ScreenPosition screenPosition) Parameters Type Name Description Viewport viewport ScreenPosition screenPosition Returns Type Description Task<IDictionary<string, IEnumerable<IFeature>>> | Edit this page View Source GetTileAsync(TileInfo) Declaration public Task<byte[]?> GetTileAsync(TileInfo tileInfo) Parameters Type Name Description TileInfo tileInfo Returns Type Description Task<byte[]> | Edit this page View Source ToViewport(MSection) Declaration public static Viewport ToViewport(MSection section) Parameters Type Name Description MSection section Returns Type Description Viewport Implements BruTile.ILocalTileSource BruTile.ITileSource ILayerFeatureInfo Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Provider.html": {
    "href": "pages/Mapsui.Tiling.Provider.html",
    "title": "Namespace Mapsui.Tiling.Provider",
    "keywords": "Namespace Mapsui.Tiling.Provider Classes RasterizingTileSource The rasterizing tile provider. Tiles the Layer for faster Rasterizing on Zoom and Move."
  },
  "pages/Mapsui.Tiling.Rendering.IRenderFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Rendering.IRenderFetchStrategy.html",
    "title": "Interface IRenderFetchStrategy",
    "keywords": "Interface IRenderFetchStrategy Namespace: Mapsui.Tiling.Rendering Assembly: Mapsui.Tiling.dll Syntax public interface IRenderFetchStrategy Methods | Edit this page View Source Get(MRect, double, ITileSchema, ITileCache<IFeature?>) Given the current extent and resolution it determines which tiles should be returned from the memory cache Declaration IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature?> memoryCache) Parameters Type Name Description MRect extent The extent of the target area double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache<IFeature> memoryCache The cached features from which to select Returns Type Description IList<IFeature> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Rendering.MinimalRenderFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Rendering.MinimalRenderFetchStrategy.html",
    "title": "Class MinimalRenderFetchStrategy",
    "keywords": "Class MinimalRenderFetchStrategy Inheritance object MinimalRenderFetchStrategy Implements IRenderFetchStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Rendering Assembly: Mapsui.Tiling.dll Syntax public class MinimalRenderFetchStrategy : IRenderFetchStrategy Methods | Edit this page View Source Get(MRect?, double, ITileSchema, ITileCache<IFeature?>) Given the current extent and resolution it determines which tiles should be returned from the memory cache Declaration public IList<IFeature> Get(MRect? extent, double resolution, ITileSchema schema, ITileCache<IFeature?> memoryCache) Parameters Type Name Description MRect extent The extent of the target area double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache<IFeature> memoryCache The cached features from which to select Returns Type Description IList<IFeature> Implements IRenderFetchStrategy Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Rendering.RenderException.html": {
    "href": "pages/Mapsui.Tiling.Rendering.RenderException.html",
    "title": "Class RenderException",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance object Exception RenderException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.Tiling.Rendering Assembly: Mapsui.Tiling.dll Syntax public class RenderException : Exception, ISerializable Constructors | Edit this page View Source RenderException(string) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description string message | Edit this page View Source RenderException(string, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description string message Exception inner Implements ISerializable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Rendering.RenderFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Rendering.RenderFetchStrategy.html",
    "title": "Class RenderFetchStrategy",
    "keywords": "Class RenderFetchStrategy Inheritance object RenderFetchStrategy Implements IRenderFetchStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Rendering Assembly: Mapsui.Tiling.dll Syntax public class RenderFetchStrategy : IRenderFetchStrategy Methods | Edit this page View Source Get(MRect, double, ITileSchema, ITileCache<IFeature?>) Given the current extent and resolution it determines which tiles should be returned from the memory cache Declaration public IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature?> memoryCache) Parameters Type Name Description MRect extent The extent of the target area double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache<IFeature> memoryCache The cached features from which to select Returns Type Description IList<IFeature> | Edit this page View Source GetRecursive(IDictionary<TileIndex, IFeature>, ITileSchema, ITileCache<IFeature?>, Extent, int) Declaration public static void GetRecursive(IDictionary<TileIndex, IFeature> resultTiles, ITileSchema schema, ITileCache<IFeature?> cache, Extent extent, int level) Parameters Type Name Description IDictionary<TileIndex, IFeature> resultTiles ITileSchema schema ITileCache<IFeature> cache Extent extent int level Implements IRenderFetchStrategy Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Rendering.TilingRenderFetchStrategy.html": {
    "href": "pages/Mapsui.Tiling.Rendering.TilingRenderFetchStrategy.html",
    "title": "Class TilingRenderFetchStrategy",
    "keywords": "Class TilingRenderFetchStrategy Inheritance object TilingRenderFetchStrategy Implements IRenderFetchStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Rendering Assembly: Mapsui.Tiling.dll Syntax public class TilingRenderFetchStrategy : IRenderFetchStrategy Constructors | Edit this page View Source TilingRenderFetchStrategy(IRenderFetchStrategy?) Declaration public TilingRenderFetchStrategy(IRenderFetchStrategy? renderFetchStrategy) Parameters Type Name Description IRenderFetchStrategy renderFetchStrategy Methods | Edit this page View Source Get(MRect, double, ITileSchema, ITileCache<IFeature?>) Given the current extent and resolution it determines which tiles should be returned from the memory cache Declaration public IList<IFeature> Get(MRect extent, double resolution, ITileSchema schema, ITileCache<IFeature?> memoryCache) Parameters Type Name Description MRect extent The extent of the target area double resolution The resolution of the target area ITileSchema schema The tile schema of the tile source ITileCache<IFeature> memoryCache The cached features from which to select Returns Type Description IList<IFeature> Implements IRenderFetchStrategy Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Tiling.Rendering.html": {
    "href": "pages/Mapsui.Tiling.Rendering.html",
    "title": "Namespace Mapsui.Tiling.Rendering",
    "keywords": "Namespace Mapsui.Tiling.Rendering Classes MinimalRenderFetchStrategy RenderException Exception thrown when a layer rendering fails RenderFetchStrategy TilingRenderFetchStrategy Interfaces IRenderFetchStrategy"
  },
  "pages/Mapsui.Tiling.Utilities.HttpClientTools.html": {
    "href": "pages/Mapsui.Tiling.Utilities.HttpClientTools.html",
    "title": "Class HttpClientTools",
    "keywords": "Class HttpClientTools Inheritance object HttpClientTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Tiling.Utilities Assembly: Mapsui.Tiling.dll Syntax public static class HttpClientTools Methods | Edit this page View Source GetDefaultApplicationUserAgent() Declaration public static string GetDefaultApplicationUserAgent() Returns Type Description string"
  },
  "pages/Mapsui.Tiling.Utilities.html": {
    "href": "pages/Mapsui.Tiling.Utilities.html",
    "title": "Namespace Mapsui.Tiling.Utilities",
    "keywords": "Namespace Mapsui.Tiling.Utilities Classes HttpClientTools"
  },
  "pages/Mapsui.Tiling.html": {
    "href": "pages/Mapsui.Tiling.html",
    "title": "Namespace Mapsui.Tiling",
    "keywords": "Namespace Mapsui.Tiling Classes OpenStreetMap"
  },
  "pages/Mapsui.UI.Android.Extensions.PointExtensions.html": {
    "href": "pages/Mapsui.UI.Android.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance object PointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Android.Extensions Assembly: Mapsui.UI.Android.dll Syntax public static class PointExtensions Methods | Edit this page View Source ToDeviceIndependentUnits(ScreenPosition, double) Declaration public static ScreenPosition ToDeviceIndependentUnits(this ScreenPosition point, double pixelDensity) Parameters Type Name Description ScreenPosition point double pixelDensity Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.Android.Extensions.html": {
    "href": "pages/Mapsui.UI.Android.Extensions.html",
    "title": "Namespace Mapsui.UI.Android.Extensions",
    "keywords": "Namespace Mapsui.UI.Android.Extensions Classes PointExtensions"
  },
  "pages/Mapsui.UI.Android.MapControl.html": {
    "href": "pages/Mapsui.UI.Android.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object Object View ViewGroup MapControl Implements Drawable.ICallback IAccessibilityEventSource KeyEvent.ICallback IViewManager IViewParent IJavaObject IJavaPeerable IMapControl INotifyPropertyChanged IDisposable Inherited Members ViewGroup.ClipToPaddingMask ViewGroup.LayoutModeClipBounds ViewGroup.LayoutModeOpticalBounds ViewGroup.AddStatesFromChildren() ViewGroup.AddView(View, ViewGroup.LayoutParams) ViewGroup.AddView(View, int, ViewGroup.LayoutParams) ViewGroup.AddView(View, int, int) ViewGroup.AddView(View, int) ViewGroup.AddView(View) ViewGroup.AddViewInLayout(View, int, ViewGroup.LayoutParams, bool) ViewGroup.AddViewInLayout(View, int, ViewGroup.LayoutParams) ViewGroup.AttachLayoutAnimationParameters(View, ViewGroup.LayoutParams, int, int) ViewGroup.AttachViewToParent(View, int, ViewGroup.LayoutParams) ViewGroup.BringChildToFront(View) ViewGroup.CanAnimate() ViewGroup.CheckLayoutParams(ViewGroup.LayoutParams) ViewGroup.ChildDrawableStateChanged(View) ViewGroup.ChildHasTransientStateChanged(View, bool) ViewGroup.CleanupLayoutState(View) ViewGroup.ClearChildFocus(View) ViewGroup.ClearDisappearingChildren() ViewGroup.Debug(int) ViewGroup.DetachAllViewsFromParent() ViewGroup.DetachViewFromParent(View) ViewGroup.DetachViewFromParent(int) ViewGroup.DetachViewsFromParent(int, int) ViewGroup.DispatchFreezeSelfOnly(SparseArray) ViewGroup.DispatchSetActivated(bool) ViewGroup.DispatchSetSelected(bool) ViewGroup.DispatchThawSelfOnly(SparseArray) ViewGroup.DrawChild(Canvas, View, long) ViewGroup.EndViewTransition(View) ViewGroup.FindOnBackInvokedDispatcherForChild(View, View) ViewGroup.FocusableViewAvailable(View) ViewGroup.FocusSearch(View, FocusSearchDirection) ViewGroup.GatherTransparentRegion(Region) ViewGroup.GenerateDefaultLayoutParams() ViewGroup.GenerateLayoutParams(IAttributeSet) ViewGroup.GenerateLayoutParams(ViewGroup.LayoutParams) ViewGroup.GetChildAt(int) ViewGroup.GetChildDrawingOrder(int, int) ViewGroup.GetChildDrawingOrder(int) ViewGroup.GetChildMeasureSpec(int, int, int) ViewGroup.GetChildStaticTransformation(View, Transformation) ViewGroup.GetChildVisibleRect(View, Rect, Point) ViewGroup.IndexOfChild(View) ViewGroup.InvalidateChild(View, Rect) ViewGroup.InvalidateChildInParent(int[], Rect) ViewGroup.Layout(int, int, int, int) ViewGroup.MeasureChild(View, int, int) ViewGroup.MeasureChildren(int, int) ViewGroup.MeasureChildWithMargins(View, int, int, int, int) ViewGroup.NotifySubtreeAccessibilityStateChanged(View, View, ContentChangeTypes) ViewGroup.OffsetDescendantRectToMyCoords(View, Rect) ViewGroup.OffsetRectIntoDescendantCoords(View, Rect) ViewGroup.OnDescendantInvalidated(View, View) ViewGroup.OnInterceptHoverEvent(MotionEvent) ViewGroup.OnInterceptTouchEvent(MotionEvent) ViewGroup.OnNestedFling(View, float, float, bool) ViewGroup.OnNestedPreFling(View, float, float) ViewGroup.OnNestedPrePerformAccessibilityAction(View, Action, Bundle) ViewGroup.OnNestedPreScroll(View, int, int, int[]) ViewGroup.OnNestedScroll(View, int, int, int, int) ViewGroup.OnNestedScrollAccepted(View, View, ScrollAxis) ViewGroup.OnRequestFocusInDescendants(int, Rect) ViewGroup.OnRequestSendAccessibilityEvent(View, AccessibilityEvent) ViewGroup.OnStartNestedScroll(View, View, ScrollAxis) ViewGroup.OnStopNestedScroll(View) ViewGroup.OnViewAdded(View) ViewGroup.OnViewRemoved(View) ViewGroup.RecomputeViewAttributes(View) ViewGroup.RemoveAllViews() ViewGroup.RemoveAllViewsInLayout() ViewGroup.RemoveDetachedView(View, bool) ViewGroup.RemoveView(View) ViewGroup.RemoveViewAt(int) ViewGroup.RemoveViewInLayout(View) ViewGroup.RemoveViews(int, int) ViewGroup.RemoveViewsInLayout(int, int) ViewGroup.RequestChildFocus(View, View) ViewGroup.RequestChildRectangleOnScreen(View, Rect, bool) ViewGroup.RequestDisallowInterceptTouchEvent(bool) ViewGroup.RequestSendAccessibilityEvent(View, AccessibilityEvent) ViewGroup.RequestTransparentRegion(View) ViewGroup.ResetResolvedLayoutDirection() ViewGroup.ResetResolvedTextDirection() ViewGroup.ScheduleLayoutAnimation() ViewGroup.SetAddStatesFromChildren(bool) ViewGroup.SetChildrenDrawingCacheEnabled(bool) ViewGroup.SetClipChildren(bool) ViewGroup.SetClipToPadding(bool) ViewGroup.SetOnHierarchyChangeListener(ViewGroup.IOnHierarchyChangeListener) ViewGroup.SetStaticTransformationsEnabled(bool) ViewGroup.ShouldDelayChildPressedState() ViewGroup.ShowContextMenuForChild(View, float, float) ViewGroup.ShowContextMenuForChild(View) ViewGroup.StartActionModeForChild(View, ActionMode.ICallback, ActionModeType) ViewGroup.StartActionModeForChild(View, ActionMode.ICallback) ViewGroup.StartLayoutAnimation() ViewGroup.StartViewTransition(View) ViewGroup.SuppressLayout(bool) ViewGroup.UpdateViewLayout(View, ViewGroup.LayoutParams) ViewGroup.AlwaysDrawnWithCacheEnabled ViewGroup.AnimationCacheEnabled ViewGroup.ChildCount ViewGroup.ChildrenDrawingOrderEnabled ViewGroup.ChildrenDrawnWithCacheEnabled ViewGroup.ClipChildren ViewGroup.ClipToPadding ViewGroup.DescendantFocusability ViewGroup.FocusedChild ViewGroup.IsLayoutSuppressed ViewGroup.LayoutAnimation ViewGroup.LayoutAnimationListener ViewGroup.LayoutMode ViewGroup.LayoutTransition ViewGroup.MotionEventSplittingEnabled ViewGroup.NestedScrollAxes ViewGroup.PersistentDrawingCache ViewGroup.TouchscreenBlocksFocus ViewGroup.TransitionGroup ViewGroup.ChildViewAdded ViewGroup.ChildViewRemoved ViewGroup.AnimationEnd ViewGroup.AnimationRepeat ViewGroup.AnimationStart View.AccessibilityDataSensitiveAuto View.AccessibilityDataSensitiveNo View.AccessibilityDataSensitiveYes View.AccessibilityLiveRegionAssertive View.AccessibilityLiveRegionNone View.AccessibilityLiveRegionPolite View.AutofillFlagIncludeNotImportantViews View.AutofillHintCreditCardExpirationDate View.AutofillHintCreditCardExpirationDay View.AutofillHintCreditCardExpirationMonth View.AutofillHintCreditCardExpirationYear View.AutofillHintCreditCardNumber View.AutofillHintCreditCardSecurityCode View.AutofillHintEmailAddress View.AutofillHintName View.AutofillHintPassword View.AutofillHintPhone View.AutofillHintPostalAddress View.AutofillHintPostalCode View.AutofillHintUsername View.AutofillTypeDate View.AutofillTypeList View.AutofillTypeNone View.AutofillTypeText View.AutofillTypeToggle View.DragFlagAccessibilityAction View.DragFlagGlobal View.DragFlagGlobalPersistableUriPermission View.DragFlagGlobalPrefixUriPermission View.DragFlagGlobalUriRead View.DragFlagGlobalUriWrite View.DragFlagOpaque View.FindViewsWithContentDescription View.FocusableAuto View.ImportantForAccessibilityAuto View.ImportantForAccessibilityNo View.ImportantForAccessibilityNoHideDescendants View.ImportantForAccessibilityYes View.ImportantForAutofillAuto View.ImportantForAutofillNo View.ImportantForAutofillNoExcludeDescendants View.ImportantForAutofillYes View.ImportantForAutofillYesExcludeDescendants View.ImportantForContentCaptureAuto View.ImportantForContentCaptureNo View.ImportantForContentCaptureNoExcludeDescendants View.ImportantForContentCaptureYes View.ImportantForContentCaptureYesExcludeDescendants View.LayoutDirectionInherit View.LayoutDirectionLocale View.LayoutDirectionLtr View.LayoutDirectionRtl View.MeasuredHeightStateShift View.MeasuredSizeMask View.MeasuredStateMask View.MeasuredStateTooSmall View.NoId View.NotFocusable View.OverScrollAlways View.OverScrollIfContentScrolls View.OverScrollNever View.ScreenStateOff View.ScreenStateOn View.ScrollAxisHorizontal View.ScrollAxisNone View.ScrollAxisVertical View.ScrollCaptureHintAuto View.ScrollCaptureHintExclude View.ScrollCaptureHintExcludeDescendants View.ScrollCaptureHintInclude View.SystemUiFlagFullscreen View.SystemUiFlagHideNavigation View.SystemUiFlagImmersive View.SystemUiFlagImmersiveSticky View.SystemUiFlagLayoutFullscreen View.SystemUiFlagLayoutHideNavigation View.SystemUiFlagLayoutStable View.SystemUiFlagLightNavigationBar View.SystemUiFlagLightStatusBar View.SystemUiFlagLowProfile View.SystemUiFlagVisible View.SystemUiLayoutFlags View.TextAlignmentCenter View.TextAlignmentGravity View.TextAlignmentInherit View.TextAlignmentResolvedDefault View.TextAlignmentTextEnd View.TextAlignmentTextStart View.TextAlignmentViewEnd View.TextAlignmentViewStart View.TextDirectionAnyRtl View.TextDirectionFirstStrong View.TextDirectionFirstStrongLtr View.TextDirectionFirstStrongRtl View.TextDirectionInherit View.TextDirectionLocale View.TextDirectionLtr View.TextDirectionRtl View.ViewLogTag View.AddChildrenForAccessibility(IList<View>) View.AddExtraDataToAccessibilityNodeInfo(AccessibilityNodeInfo, string, Bundle) View.AddFocusables(IList<View>, FocusSearchDirection, FocusablesFlags) View.AddFocusables(IList<View>, FocusSearchDirection) View.AddKeyboardNavigationClusters(ICollection<View>, FocusSearchDirection) View.AddOnAttachStateChangeListener(View.IOnAttachStateChangeListener) View.AddOnLayoutChangeListener(View.IOnLayoutChangeListener) View.AddOnUnhandledKeyEventListener(View.IOnUnhandledKeyEventListener) View.AddTouchables(IList<View>) View.Animate() View.AnnounceForAccessibility(ICharSequence) View.AnnounceForAccessibility(string) View.Autofill(SparseArray) View.Autofill(AutofillValue) View.AwakenScrollBars() View.AwakenScrollBars(int, bool) View.AwakenScrollBars(int) View.BringToFront() View.BuildDrawingCache() View.BuildDrawingCache(bool) View.BuildLayer() View.CallOnClick() View.CancelDragAndDrop() View.CancelLongPress() View.CancelPendingInputEvents() View.CanResolveLayoutDirection() View.CanResolveTextAlignment() View.CanResolveTextDirection() View.CanScrollHorizontally(int) View.CanScrollVertically(int) View.CheckInputConnectionProxy(View) View.ClearAnimation() View.ClearFocus() View.ClearViewTranslationCallback() View.CombineMeasuredStates(int, int) View.ComputeHorizontalScrollExtent() View.ComputeHorizontalScrollOffset() View.ComputeHorizontalScrollRange() View.ComputeScroll() View.ComputeSystemWindowInsets(WindowInsets, Rect) View.ComputeVerticalScrollExtent() View.ComputeVerticalScrollOffset() View.ComputeVerticalScrollRange() View.CreateAccessibilityNodeInfo() View.CreateContextMenu(IContextMenu) View.DestroyDrawingCache() View.DispatchApplyWindowInsets(WindowInsets) View.DispatchCapturedPointerEvent(MotionEvent) View.DispatchConfigurationChanged(Configuration) View.DispatchCreateViewTranslationRequest(IDictionary<AutofillId, long[]>, int[], TranslationCapability, IList<ViewTranslationRequest>) View.DispatchDisplayHint(ViewStates) View.DispatchDragEvent(DragEvent) View.DispatchDraw(Canvas) View.DispatchDrawableHotspotChanged(float, float) View.DispatchFinishTemporaryDetach() View.DispatchGenericFocusedEvent(MotionEvent) View.DispatchGenericMotionEvent(MotionEvent) View.DispatchGenericPointerEvent(MotionEvent) View.DispatchHoverEvent(MotionEvent) View.DispatchKeyEvent(KeyEvent) View.DispatchKeyEventPreIme(KeyEvent) View.DispatchKeyShortcutEvent(KeyEvent) View.DispatchNestedFling(float, float, bool) View.DispatchNestedPreFling(float, float) View.DispatchNestedPrePerformAccessibilityAction(Action, Bundle) View.DispatchNestedPreScroll(int, int, int[], int[]) View.DispatchNestedScroll(int, int, int, int, int[]) View.DispatchPointerCaptureChanged(bool) View.DispatchPopulateAccessibilityEvent(AccessibilityEvent) View.DispatchProvideAutofillStructure(ViewStructure, AutofillFlags) View.DispatchProvideStructure(ViewStructure) View.DispatchRestoreInstanceState(SparseArray) View.DispatchSaveInstanceState(SparseArray) View.DispatchScrollCaptureSearch(Rect, Point, IConsumer) View.DispatchSetPressed(bool) View.DispatchStartTemporaryDetach() View.DispatchSystemUiVisibilityChanged(SystemUiFlags) View.DispatchTouchEvent(MotionEvent) View.DispatchTrackballEvent(MotionEvent) View.DispatchUnhandledMove(View, FocusSearchDirection) View.DispatchVisibilityChanged(View, ViewStates) View.DispatchWindowFocusChanged(bool) View.DispatchWindowInsetsAnimationEnd(WindowInsetsAnimation) View.DispatchWindowInsetsAnimationPrepare(WindowInsetsAnimation) View.DispatchWindowInsetsAnimationProgress(WindowInsets, IList<WindowInsetsAnimation>) View.DispatchWindowInsetsAnimationStart(WindowInsetsAnimation, WindowInsetsAnimation.Bounds) View.DispatchWindowSystemUiVisiblityChanged(SystemUiFlags) View.DispatchWindowVisibilityChanged(ViewStates) View.Draw(Canvas) View.DrawableHotspotChanged(float, float) View.DrawableStateChanged() View.FindFocus() View.FindOnBackInvokedDispatcher() View.FindViewById(int) View.FindViewsWithText(IList<View>, ICharSequence, FindViewsWith) View.FindViewsWithText(IList<View>, string, FindViewsWith) View.FindViewWithTag(Object) View.InvokeFitsSystemWindows() View.FitSystemWindows(Rect) View.FocusSearch(FocusSearchDirection) View.ForceHasOverlappingRendering(bool) View.ForceLayout() View.GenerateDisplayHash(string, Rect, IExecutor, IDisplayHashResultCallback) View.GenerateViewId() View.GetAccessibilityDelegate() View.GetAttributeResolutionStack(int) View.GetAutofillHints() View.GetClipBounds(Rect) View.GetDefaultSize(int, int) View.GetDrawableState() View.GetDrawingCache(bool) View.GetDrawingRect(Rect) View.GetFocusable() View.GetFocusables(FocusSearchDirection) View.GetFocusedRect(Rect) View.GetGlobalVisibleRect(Rect, Point) View.GetGlobalVisibleRect(Rect) View.GetHitRect(Rect) View.GetLocalVisibleRect(Rect) View.GetLocationInSurface(int[]) View.GetLocationInWindow(int[]) View.GetLocationOnScreen(int[]) View.GetReceiveContentMimeTypes() View.GetTag(int) View.GetWindowVisibleDisplayFrame(Rect) View.GetX() View.GetY() View.GetZ() View.GetHasOverlappingRendering() View.Inflate(Context, int, ViewGroup) View.InitializeFadingEdge(TypedArray) View.InitializeScrollbars(TypedArray) View.Invalidate() View.Invalidate(Rect) View.Invalidate(int, int, int, int) View.InvalidateDrawable(Drawable) View.InvalidateOutline() View.IsVisibleToUserForAutofill(int) View.JumpDrawablesToCurrentState() View.KeyboardNavigationClusterSearch(View, FocusSearchDirection) View.Measure(int, int) View.MergeDrawableStates(int[], int[]) View.OffsetLeftAndRight(int) View.OffsetTopAndBottom(int) View.OnAnimationEnd() View.OnAnimationStart() View.OnApplyWindowInsets(WindowInsets) View.OnAttachedToWindow() View.OnCancelPendingInputEvents() View.OnCapturedPointerEvent(MotionEvent) View.OnCheckIsTextEditor() View.OnConfigurationChanged(Configuration) View.OnCreateContextMenu(IContextMenu) View.OnCreateDrawableState(int) View.OnCreateInputConnection(EditorInfo) View.OnCreateViewTranslationRequest(int[], IConsumer) View.OnCreateVirtualViewTranslationRequests(long[], int[], IConsumer) View.OnDetachedFromWindow() View.OnDisplayHint(int) View.OnDragEvent(DragEvent) View.OnDraw(Canvas) View.OnDrawForeground(Canvas) View.OnDrawScrollBars(Canvas) View.OnFilterTouchEventForSecurity(MotionEvent) View.OnFinishInflate() View.OnFinishTemporaryDetach() View.OnFocusChanged(bool, FocusSearchDirection, Rect) View.OnGenericMotionEvent(MotionEvent) View.OnHoverChanged(bool) View.OnHoverEvent(MotionEvent) View.OnInitializeAccessibilityEvent(AccessibilityEvent) View.OnInitializeAccessibilityNodeInfo(AccessibilityNodeInfo) View.OnKeyDown(Keycode, KeyEvent) View.OnKeyLongPress(Keycode, KeyEvent) View.OnKeyMultiple(Keycode, int, KeyEvent) View.OnKeyPreIme(Keycode, KeyEvent) View.OnKeyShortcut(Keycode, KeyEvent) View.OnKeyUp(Keycode, KeyEvent) View.OnMeasure(int, int) View.OnOverScrolled(int, int, bool, bool) View.OnPointerCaptureChange(bool) View.OnPopulateAccessibilityEvent(AccessibilityEvent) View.OnProvideAutofillStructure(ViewStructure, AutofillFlags) View.OnProvideAutofillVirtualStructure(ViewStructure, AutofillFlags) View.OnProvideContentCaptureStructure(ViewStructure, int) View.OnProvideStructure(ViewStructure) View.OnProvideVirtualStructure(ViewStructure) View.OnReceiveContent(ContentInfo) View.OnResolvePointerIcon(MotionEvent, int) View.OnRestoreInstanceState(IParcelable) View.OnRtlPropertiesChanged(LayoutDirection) View.OnSaveInstanceState() View.OnScreenStateChanged(ScreenState) View.OnScrollCaptureSearch(Rect, Point, IConsumer) View.OnScrollChanged(int, int, int, int) View.OnSetAlpha(int) View.OnStartTemporaryDetach() View.OnTouchEvent(MotionEvent) View.OnTrackballEvent(MotionEvent) View.OnViewTranslationResponse(ViewTranslationResponse) View.OnVirtualViewTranslationResponses(LongSparseArray) View.OnVisibilityAggregated(bool) View.OnVisibilityChanged(View, ViewStates) View.OnWindowFocusChanged(bool) View.OnWindowSystemUiVisibilityChanged(SystemUiFlags) View.OnWindowVisibilityChanged(ViewStates) View.OverScrollBy(int, int, int, int, int, int, int, int, bool) View.PerformAccessibilityAction(Action, Bundle) View.PerformClick() View.PerformContextClick() View.PerformContextClick(float, float) View.PerformHapticFeedback(FeedbackConstants, FeedbackFlags) View.PerformHapticFeedback(FeedbackConstants) View.PerformLongClick() View.PerformLongClick(float, float) View.PerformReceiveContent(ContentInfo) View.PlaySoundEffect(SoundEffects) View.Post(IRunnable) View.PostDelayed(IRunnable, long) View.PostInvalidate() View.PostInvalidate(int, int, int, int) View.PostInvalidateDelayed(long, int, int, int, int) View.PostInvalidateDelayed(long) View.PostInvalidateOnAnimation() View.PostInvalidateOnAnimation(int, int, int, int) View.PostOnAnimation(IRunnable) View.PostOnAnimationDelayed(IRunnable, long) View.RefreshDrawableState() View.ReleasePointerCapture() View.RemoveCallbacks(IRunnable) View.RemoveOnAttachStateChangeListener(View.IOnAttachStateChangeListener) View.RemoveOnLayoutChangeListener(View.IOnLayoutChangeListener) View.RemoveOnUnhandledKeyEventListener(View.IOnUnhandledKeyEventListener) View.RequestApplyInsets() View.RequestFitSystemWindows() View.RequestFocus() View.RequestFocus(FocusSearchDirection, Rect) View.RequestFocus(FocusSearchDirection) View.RequestFocusFromTouch() View.RequestLayout() View.RequestPointerCapture() View.RequestRectangleOnScreen(Rect, bool) View.RequestRectangleOnScreen(Rect) View.RequestUnbufferedDispatch(MotionEvent) View.RequestUnbufferedDispatch(int) View.RequireViewById(int) View.ResetPivot() View.ResolveSize(int, int) View.ResolveSizeAndState(int, int, int) View.RestoreDefaultFocus() View.RestoreHierarchyState(SparseArray) View.SaveAttributeDataForStyleable(Context, int[], IAttributeSet, TypedArray, int, int) View.SaveHierarchyState(SparseArray) View.ScheduleDrawable(Drawable, IRunnable, long) View.ScrollBy(int, int) View.ScrollTo(int, int) View.SendAccessibilityEvent(EventTypes) View.SendAccessibilityEventUnchecked(AccessibilityEvent) View.SetAccessibilityDataSensitive(AccessibilityDataSensitive) View.SetAccessibilityDelegate(View.AccessibilityDelegate) View.SetAllowClickWhenDisabled(bool) View.SetAllowedHandwritingDelegatePackage(string) View.SetAllowedHandwritingDelegatorPackage(string) View.SetAutofillHints(params string[]) View.SetBackgroundColor(Color) View.SetBackgroundDrawable(Drawable) View.SetBackgroundResource(int) View.SetCameraDistance(float) View.SetFadingEdgeLength(int) View.SetFitsSystemWindows(bool) View.SetFocusable(ViewFocusability) View.SetForegroundGravity(GravityFlags) View.SetHandwritingBoundsOffsets(float, float, float, float) View.SetLayerPaint(Paint) View.SetLayerType(LayerType, Paint) View.SetLeftTopRightBottom(int, int, int, int) View.SetMeasuredDimension(int, int) View.SetMinimumHeight(int) View.SetMinimumWidth(int) View.SetOnApplyWindowInsetsListener(View.IOnApplyWindowInsetsListener) View.SetOnCapturedPointerListener(View.IOnCapturedPointerListener) View.SetOnClickListener(View.IOnClickListener) View.SetOnContextClickListener(View.IOnContextClickListener) View.SetOnCreateContextMenuListener(View.IOnCreateContextMenuListener) View.SetOnDragListener(View.IOnDragListener) View.SetOnGenericMotionListener(View.IOnGenericMotionListener) View.SetOnHoverListener(View.IOnHoverListener) View.SetOnKeyListener(View.IOnKeyListener) View.SetOnLongClickListener(View.IOnLongClickListener) View.SetOnReceiveContentListener(string[], IOnReceiveContentListener) View.SetOnScrollChangeListener(View.IOnScrollChangeListener) View.SetOnSystemUiVisibilityChangeListener(View.IOnSystemUiVisibilityChangeListener) View.SetOnTouchListener(View.IOnTouchListener) View.SetOutlineAmbientShadowColor(Color) View.SetOutlineSpotShadowColor(Color) View.SetPadding(int, int, int, int) View.SetPaddingRelative(int, int, int, int) View.SetRenderEffect(RenderEffect) View.SetScrollCaptureCallback(IScrollCaptureCallback) View.SetScrollContainer(bool) View.SetScrollIndicators(int, int) View.SetScrollIndicators(int) View.SetTag(int, Object) View.SetTransitionVisibility(ViewStates) View.SetViewTranslationCallback(IViewTranslationCallback) View.SetWillNotCacheDrawing(bool) View.SetWillNotDraw(bool) View.SetWindowInsetsAnimationCallback(WindowInsetsAnimation.Callback) View.SetX(float) View.SetY(float) View.SetZ(float) View.ShowContextMenu() View.ShowContextMenu(float, float) View.StartActionMode(ActionMode.ICallback, ActionModeType) View.StartActionMode(ActionMode.ICallback) View.StartAnimation(Animation) View.StartDrag(ClipData, View.DragShadowBuilder, Object, int) View.StartDragAndDrop(ClipData, View.DragShadowBuilder, Object, int) View.StartNestedScroll(ScrollAxis) View.StopNestedScroll() View.TransformMatrixToGlobal(Matrix) View.TransformMatrixToLocal(Matrix) View.UnscheduleDrawable(Drawable, IRunnable) View.UnscheduleDrawable(Drawable) View.UpdateDragShadow(View.DragShadowBuilder) View.VerifyDrawable(Drawable) View.WillNotCacheDrawing() View.WillNotDraw() View.PerformAccessibilityAction(GlobalAction, Bundle) View.FindViewById<T>(int) View.RequireViewById<T>(int) View.Post(Action) View.PostDelayed(Action, long) View.RemoveCallbacks(Action) View.ScheduleDrawable(Drawable, Action, long) View.UnscheduleDrawable(Drawable, Action) View.DispatchSystemUiVisibilityChanged(int) View.EmptyStateSet View.EnabledFocusedSelectedStateSet View.EnabledFocusedSelectedWindowFocusedStateSet View.EnabledFocusedStateSet View.EnabledFocusedWindowFocusedStateSet View.EnabledSelectedStateSet View.EnabledSelectedWindowFocusedStateSet View.EnabledStateSet View.EnabledWindowFocusedStateSet View.FocusedSelectedStateSet View.FocusedSelectedWindowFocusedStateSet View.FocusedStateSet View.FocusedWindowFocusedStateSet View.PressedEnabledFocusedSelectedStateSet View.PressedEnabledFocusedSelectedWindowFocusedStateSet View.PressedEnabledFocusedStateSet View.PressedEnabledFocusedWindowFocusedStateSet View.PressedEnabledSelectedStateSet View.PressedEnabledSelectedWindowFocusedStateSet View.PressedEnabledStateSet View.PressedEnabledWindowFocusedStateSet View.PressedFocusedSelectedStateSet View.PressedFocusedSelectedWindowFocusedStateSet View.PressedFocusedStateSet View.PressedFocusedWindowFocusedStateSet View.PressedSelectedStateSet View.PressedSelectedWindowFocusedStateSet View.PressedStateSet View.PressedWindowFocusedStateSet View.ScaleXs View.ScaleYs View.SelectedStateSet View.SelectedWindowFocusedStateSet View.WindowFocusedStateSet View.X View.Y View.Z View.AccessibilityClassNameFormatted View.AccessibilityClassName View.AccessibilityHeading View.AccessibilityLiveRegion View.AccessibilityNodeProvider View.AccessibilityPaneTitleFormatted View.AccessibilityPaneTitle View.AccessibilityTraversalAfter View.AccessibilityTraversalBefore View.Activated View.AllowedHandwritingDelegatePackageName View.AllowedHandwritingDelegatorPackageName View.Alpha View.Animation View.AnimationMatrix View.ApplicationWindowToken View.AttributeSourceResourceMap View.AutoHandwritingEnabled View.AutofillId View.AutofillType View.AutofillValue View.Background View.BackgroundTintBlendMode View.BackgroundTintList View.BackgroundTintMode View.Baseline View.Bottom View.BottomFadingEdgeStrength View.BottomPaddingOffset View.CameraDistance View.Clickable View.ClipBounds View.ClipToOutline View.ContentCaptureSession View.ContentDescriptionFormatted View.ContentDescription View.Context View.ContextClickable View.ContextMenuInfo View.DefaultFocusHighlightEnabled View.Display View.DrawingCache View.DrawingCacheBackgroundColor View.DrawingCacheEnabled View.DrawingCacheQuality View.DrawingTime View.DuplicateParentStateEnabled View.Elevation View.Enabled View.ExplicitStyle View.FilterTouchesWhenObscured View.FitsSystemWindows View.Focusable View.FocusableInTouchMode View.FocusedByDefault View.ForceDarkAllowed View.Foreground View.ForegroundGravity View.ForegroundTintBlendMode View.ForegroundTintList View.ForegroundTintMode View.Handler View.HandwritingBoundsOffsetBottom View.HandwritingBoundsOffsetLeft View.HandwritingBoundsOffsetRight View.HandwritingBoundsOffsetTop View.HandwritingDelegatorCallback View.HapticFeedbackEnabled View.HasExplicitFocusable View.HasFocus View.HasFocusable View.HasNestedScrollingParent View.HasOnClickListeners View.HasOnLongClickListeners View.HasOverlappingRendering View.HasPointerCapture View.HasTransientState View.HasWindowFocus View.Height View.HorizontalFadingEdgeEnabled View.HorizontalFadingEdgeLength View.HorizontalScrollBarEnabled View.HorizontalScrollbarHeight View.HorizontalScrollbarThumbDrawable View.HorizontalScrollbarTrackDrawable View.Hovered View.Id View.ImportantForAccessibility View.ImportantForAutofill View.ImportantForContentCapture View.IsAccessibilityDataSensitive View.IsAccessibilityFocused View.IsAttachedToWindow View.IsCredential View.IsDirty View.IsFocused View.IsHandwritingDelegate View.IsHardwareAccelerated View.IsImportantForAccessibility View.IsImportantForAutofill View.IsImportantForContentCapture View.IsInEditMode View.IsInLayout View.IsInTouchMode View.IsLaidOut View.IsLayoutDirectionResolved View.IsLayoutRequested View.IsOpaque View.IsPaddingOffsetRequired View.IsPaddingRelative View.IsPivotSet View.IsScrollContainer View.IsShowingLayoutBounds View.IsShown View.IsTemporarilyDetached View.IsTextAlignmentResolved View.IsTextDirectionResolved View.KeepScreenOn View.KeyDispatcherState View.KeyboardNavigationCluster View.LabelFor View.LayerType View.LayoutDirection View.LayoutParameters View.Left View.LeftFadingEdgeStrength View.LeftPaddingOffset View.LongClickable View.Matrix View.MeasuredHeight View.MeasuredHeightAndState View.MeasuredState View.MeasuredWidth View.MeasuredWidthAndState View.MinimumHeight View.MinimumWidth View.NestedScrollingEnabled View.NextClusterForwardId View.NextFocusDownId View.NextFocusForwardId View.NextFocusLeftId View.NextFocusRightId View.NextFocusUpId View.OnFocusChangeListener View.OutlineAmbientShadowColor View.OutlineProvider View.OutlineSpotShadowColor View.OverScrollMode View.Overlay View.PaddingBottom View.PaddingEnd View.PaddingLeft View.PaddingRight View.PaddingStart View.PaddingTop View.Parent View.ParentForAccessibility View.PivotX View.PivotY View.PointerIcon View.PreferKeepClear View.PreferKeepClearRects View.Pressed View.Resources View.RevealOnFocusHint View.Right View.RightFadingEdgeStrength View.RightPaddingOffset View.RootSurfaceControl View.RootView View.RootWindowInsets View.Rotation View.RotationX View.RotationY View.SaveEnabled View.SaveFromParentEnabled View.ScaleX View.ScaleY View.ScreenReaderFocusable View.ScrollBarDefaultDelayBeforeFade View.ScrollBarFadeDuration View.ScrollBarSize View.ScrollBarStyle View.ScrollCaptureHint View.ScrollIndicators View.ScrollX View.ScrollY View.ScrollbarFadingEnabled View.Selected View.SolidColor View.SoundEffectsEnabled View.SourceLayoutResId View.StateDescriptionFormatted View.StateDescription View.StateListAnimator View.SuggestedMinimumHeight View.SuggestedMinimumWidth View.SystemGestureExclusionRects View.SystemUiVisibility View.Tag View.TextAlignment View.TextDirection View.TooltipTextFormatted View.TooltipText View.Top View.TopFadingEdgeStrength View.TopPaddingOffset View.TouchDelegate View.Touchables View.TransitionAlpha View.TransitionName View.TranslationX View.TranslationY View.TranslationZ View.UniqueDrawingId View.VerticalFadingEdgeEnabled View.VerticalFadingEdgeLength View.VerticalScrollBarEnabled View.VerticalScrollbarPosition View.VerticalScrollbarThumbDrawable View.VerticalScrollbarTrackDrawable View.VerticalScrollbarWidth View.ViewTranslationResponse View.ViewTreeObserver View.Visibility View.Width View.WindowAttachCount View.WindowId View.WindowInsetsController View.WindowSystemUiVisibility View.WindowToken View.WindowVisibility View.ApplyWindowInsets View.SystemUiFlags View.ViewAttachedToWindow View.ViewDetachedFromWindow View.LayoutChange View.UnhandledKeyEvent View.CapturedPointer View.Click View.ContextClick View.ContextMenuCreated View.Drag View.GenericMotion View.Hover View.KeyPress View.LongClick View.LongClickUseDefaultHapticFeedback View.ScrollChange View.SystemUiVisibilityChange View.Touch View.FocusChange Object.Clone() Object.Equals(Object) Object.JavaFinalize() Object.GetHashCode() Object.Notify() Object.NotifyAll() Object.ToString() Object.Wait() Object.Wait(long, int) Object.Wait(long) Object.Dispose() Object.GetObject<T>(nint, nint, JniHandleOwnership) Object.GetObject<T>(nint, JniHandleOwnership) Object.FromArray<T>(T[]) Object.Class object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.Android Assembly: Mapsui.UI.Android.dll Syntax public class MapControl : ViewGroup, Drawable.ICallback, IAccessibilityEventSource, KeyEvent.ICallback, IViewManager, IViewParent, IJavaObject, IJavaPeerable, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Edit this page View Source MapControl(Context, IAttributeSet) Declaration public MapControl(Context context, IAttributeSet attrs) Parameters Type Name Description Context context IAttributeSet attrs | Edit this page View Source MapControl(Context, IAttributeSet, int) Declaration public MapControl(Context context, IAttributeSet attrs, int defStyle) Parameters Type Name Description Context context IAttributeSet attrs int defStyle Properties | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source RenderMode Declaration public SkiaRenderMode RenderMode { get; set; } Property Value Type Description SkiaRenderMode | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) To be added. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing To be added. Overrides Object.Dispose(bool) Remarks Portions of this page are modifications based on work created and shared by the Android Open Source Project and used according to terms described in the Creative Commons 2.5 Attribution License. | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source MapControl_Touch(object?, TouchEventArgs) Declaration public void MapControl_Touch(object? sender, View.TouchEventArgs args) Parameters Type Name Description object sender View.TouchEventArgs args | Edit this page View Source OnLayout(bool, int, int, int, int) Called from layout when this view should assign a size and position to each of its children. Declaration protected override void OnLayout(bool changed, int l, int t, int r, int b) Parameters Type Name Description bool changed This is a new size or position for this view int l Left position, relative to parent int t Top position, relative to parent int r Right position, relative to parent int b Bottom position, relative to parent Overrides ViewGroup.OnLayout(bool, int, int, int, int) Remarks Portions of this page are modifications based on work created and shared by the Android Open Source Project and used according to terms described in the Creative Commons 2.5 Attribution License. | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OnSizeChanged(int, int, int, int) This is called during layout when the size of this view has changed. Declaration protected override void OnSizeChanged(int width, int height, int oldWidth, int oldHeight) Parameters Type Name Description int width int height int oldWidth int oldHeight Overrides View.OnSizeChanged(int, int, int, int) Remarks Java documentation for android.view.View.onSizeChanged(int, int, int, int) . Portions of this page are modifications based on work created and shared by the Android Open Source Project and used according to terms described in the Creative Commons 2.5 Attribution License. | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements Drawable.ICallback IAccessibilityEventSource KeyEvent.ICallback IViewManager IViewParent IJavaObject IJavaPeerable IMapControl INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Android.Resource.html": {
    "href": "pages/Mapsui.UI.Android.Resource.html",
    "title": "Class Resource",
    "keywords": "Class Resource Inheritance object Resource Resource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Android Assembly: Mapsui.UI.Android.dll Syntax public class Resource : Resource Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Android.SkiaRenderMode.html": {
    "href": "pages/Mapsui.UI.Android.SkiaRenderMode.html",
    "title": "Enum SkiaRenderMode",
    "keywords": "Enum SkiaRenderMode Namespace: Mapsui.UI.Android Assembly: Mapsui.UI.Android.dll Syntax public enum SkiaRenderMode Fields Name Description Hardware Software Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.UI.Android.html": {
    "href": "pages/Mapsui.UI.Android.html",
    "title": "Namespace Mapsui.UI.Android",
    "keywords": "Namespace Mapsui.UI.Android Classes MapControl Resource Enums SkiaRenderMode"
  },
  "pages/Mapsui.UI.Avalonia.Extensions.PointExtensions.html": {
    "href": "pages/Mapsui.UI.Avalonia.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance object PointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Avalonia.Extensions Assembly: Mapsui.UI.Avalonia.dll Syntax public static class PointExtensions Methods | Edit this page View Source ToScreenPosition(Point) Declaration public static ScreenPosition ToScreenPosition(this Point point) Parameters Type Name Description Point point Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.Avalonia.Extensions.html": {
    "href": "pages/Mapsui.UI.Avalonia.Extensions.html",
    "title": "Namespace Mapsui.UI.Avalonia.Extensions",
    "keywords": "Namespace Mapsui.UI.Avalonia.Extensions Classes PointExtensions"
  },
  "pages/Mapsui.UI.Avalonia.MapControl.html": {
    "href": "pages/Mapsui.UI.Avalonia.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object AvaloniaObject Animatable StyledElement Visual Layoutable Interactive InputElement Control TemplatedControl ContentControl UserControl MapControl Implements IDataContextProvider ILogical IThemeVariantHost IResourceHost IResourceNode IStyleHost ISetLogicalParent ISetInheritanceParent ISupportInitialize IStyleable INamed IInputElement IDataTemplateHost ISetterValue IMapControl IDisposable INotifyPropertyChanged Inherited Members UserControl.OnCreateAutomationPeer() ContentControl.ContentProperty ContentControl.ContentTemplateProperty ContentControl.HorizontalContentAlignmentProperty ContentControl.VerticalContentAlignmentProperty ContentControl.RegisterContentPresenter(ContentPresenter) ContentControl.Content ContentControl.ContentTemplate ContentControl.Presenter ContentControl.HorizontalContentAlignment ContentControl.VerticalContentAlignment TemplatedControl.BackgroundProperty TemplatedControl.BackgroundSizingProperty TemplatedControl.BorderBrushProperty TemplatedControl.BorderThicknessProperty TemplatedControl.CornerRadiusProperty TemplatedControl.FontFamilyProperty TemplatedControl.FontFeaturesProperty TemplatedControl.FontSizeProperty TemplatedControl.FontStyleProperty TemplatedControl.FontWeightProperty TemplatedControl.FontStretchProperty TemplatedControl.ForegroundProperty TemplatedControl.PaddingProperty TemplatedControl.TemplateProperty TemplatedControl.IsTemplateFocusTargetProperty TemplatedControl.TemplateAppliedEvent TemplatedControl.GetIsTemplateFocusTarget(Control) TemplatedControl.SetIsTemplateFocusTarget(Control, bool) TemplatedControl.ApplyTemplate() TemplatedControl.GetTemplateFocusTarget() TemplatedControl.OnAttachedToLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnDetachedFromLogicalTree(LogicalTreeAttachmentEventArgs) TemplatedControl.OnApplyTemplate(TemplateAppliedEventArgs) TemplatedControl.OnTemplateChanged(AvaloniaPropertyChangedEventArgs) TemplatedControl.Background TemplatedControl.BackgroundSizing TemplatedControl.BorderBrush TemplatedControl.BorderThickness TemplatedControl.CornerRadius TemplatedControl.FontFamily TemplatedControl.FontFeatures TemplatedControl.FontSize TemplatedControl.FontStyle TemplatedControl.FontWeight TemplatedControl.FontStretch TemplatedControl.Foreground TemplatedControl.Padding TemplatedControl.Template TemplatedControl.TemplateApplied Control.FocusAdornerProperty Control.TagProperty Control.ContextMenuProperty Control.ContextFlyoutProperty Control.RequestBringIntoViewEvent Control.ContextRequestedEvent Control.LoadedEvent Control.UnloadedEvent Control.SizeChangedEvent Control.OnLoaded(RoutedEventArgs) Control.OnUnloaded(RoutedEventArgs) Control.OnSizeChanged(SizeChangedEventArgs) Control.OnAttachedToVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnDetachedFromVisualTreeCore(VisualTreeAttachmentEventArgs) Control.OnGotFocus(GotFocusEventArgs) Control.OnLostFocus(RoutedEventArgs) Control.OnPointerReleased(PointerReleasedEventArgs) Control.OnKeyUp(KeyEventArgs) Control.FocusAdorner Control.DataTemplates Control.ContextMenu Control.ContextFlyout Control.IsLoaded Control.Tag Control.ContextRequested Control.Loaded Control.Unloaded Control.SizeChanged InputElement.FocusableProperty InputElement.IsEnabledProperty InputElement.IsEffectivelyEnabledProperty InputElement.CursorProperty InputElement.IsKeyboardFocusWithinProperty InputElement.IsFocusedProperty InputElement.IsHitTestVisibleProperty InputElement.IsPointerOverProperty InputElement.IsTabStopProperty InputElement.GotFocusEvent InputElement.LostFocusEvent InputElement.KeyDownEvent InputElement.KeyUpEvent InputElement.TabIndexProperty InputElement.TextInputEvent InputElement.TextInputMethodClientRequestedEvent InputElement.PointerEnteredEvent InputElement.PointerExitedEvent InputElement.PointerMovedEvent InputElement.PointerPressedEvent InputElement.PointerReleasedEvent InputElement.PointerCaptureLostEvent InputElement.PointerWheelChangedEvent InputElement.TappedEvent InputElement.HoldingEvent InputElement.DoubleTappedEvent InputElement.Focus(NavigationMethod, KeyModifiers) InputElement.OnAccessKey(RoutedEventArgs) InputElement.OnKeyDown(KeyEventArgs) InputElement.OnTextInput(TextInputEventArgs) InputElement.OnPointerEntered(PointerEventArgs) InputElement.OnPointerExited(PointerEventArgs) InputElement.OnPointerMoved(PointerEventArgs) InputElement.OnPointerPressed(PointerPressedEventArgs) InputElement.OnPointerCaptureLost(PointerCaptureLostEventArgs) InputElement.OnPointerWheelChanged(PointerWheelEventArgs) InputElement.UpdateIsEffectivelyEnabled() InputElement.Focusable InputElement.IsEnabled InputElement.Cursor InputElement.IsKeyboardFocusWithin InputElement.IsFocused InputElement.IsHitTestVisible InputElement.IsPointerOver InputElement.IsTabStop InputElement.IsEffectivelyEnabled InputElement.TabIndex InputElement.KeyBindings InputElement.IsEnabledCore InputElement.GestureRecognizers InputElement.GotFocus InputElement.LostFocus InputElement.KeyDown InputElement.KeyUp InputElement.TextInput InputElement.TextInputMethodClientRequested InputElement.PointerEntered InputElement.PointerExited InputElement.PointerMoved InputElement.PointerPressed InputElement.PointerReleased InputElement.PointerCaptureLost InputElement.PointerWheelChanged InputElement.Tapped InputElement.Holding InputElement.DoubleTapped Interactive.AddHandler(RoutedEvent, Delegate, RoutingStrategies, bool) Interactive.AddHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>, RoutingStrategies, bool) Interactive.RemoveHandler(RoutedEvent, Delegate) Interactive.RemoveHandler<TEventArgs>(RoutedEvent<TEventArgs>, EventHandler<TEventArgs>) Interactive.RaiseEvent(RoutedEventArgs) Interactive.BuildEventRoute(RoutedEvent) Layoutable.DesiredSizeProperty Layoutable.WidthProperty Layoutable.HeightProperty Layoutable.MinWidthProperty Layoutable.MaxWidthProperty Layoutable.MinHeightProperty Layoutable.MaxHeightProperty Layoutable.MarginProperty Layoutable.HorizontalAlignmentProperty Layoutable.VerticalAlignmentProperty Layoutable.UseLayoutRoundingProperty Layoutable.UpdateLayout() Layoutable.Measure(Size) Layoutable.Arrange(Rect) Layoutable.InvalidateMeasure() Layoutable.InvalidateArrange() Layoutable.AffectsMeasure<T>(params AvaloniaProperty[]) Layoutable.AffectsArrange<T>(params AvaloniaProperty[]) Layoutable.MeasureCore(Size) Layoutable.MeasureOverride(Size) Layoutable.ArrangeCore(Rect) Layoutable.ArrangeOverride(Size) Layoutable.OnMeasureInvalidated() Layoutable.OnVisualParentChanged(Visual, Visual) Layoutable.Width Layoutable.Height Layoutable.MinWidth Layoutable.MaxWidth Layoutable.MinHeight Layoutable.MaxHeight Layoutable.Margin Layoutable.HorizontalAlignment Layoutable.VerticalAlignment Layoutable.DesiredSize Layoutable.IsMeasureValid Layoutable.IsArrangeValid Layoutable.UseLayoutRounding Layoutable.EffectiveViewportChanged Layoutable.LayoutUpdated Visual.BoundsProperty Visual.ClipToBoundsProperty Visual.ClipProperty Visual.IsVisibleProperty Visual.OpacityProperty Visual.OpacityMaskProperty Visual.EffectProperty Visual.HasMirrorTransformProperty Visual.RenderTransformProperty Visual.RenderTransformOriginProperty Visual.FlowDirectionProperty Visual.VisualParentProperty Visual.ZIndexProperty Visual.GetFlowDirection(Visual) Visual.SetFlowDirection(Visual, FlowDirection) Visual.InvalidateVisual() Visual.AffectsRender<T>(params AvaloniaProperty[]) Visual.LogicalChildrenCollectionChanged(object, NotifyCollectionChangedEventArgs) Visual.OnAttachedToVisualTree(VisualTreeAttachmentEventArgs) Visual.OnDetachedFromVisualTree(VisualTreeAttachmentEventArgs) Visual.InvalidateMirrorTransform() Visual.Bounds Visual.ClipToBounds Visual.Clip Visual.IsEffectivelyVisible Visual.IsVisible Visual.Opacity Visual.OpacityMask Visual.Effect Visual.HasMirrorTransform Visual.RenderTransform Visual.RenderTransformOrigin Visual.FlowDirection Visual.ZIndex Visual.VisualChildren Visual.VisualRoot Visual.BypassFlowDirectionPolicies Visual.AttachedToVisualTree Visual.DetachedFromVisualTree StyledElement.DataContextProperty StyledElement.NameProperty StyledElement.ParentProperty StyledElement.TemplatedParentProperty StyledElement.ThemeProperty StyledElement.BeginInit() StyledElement.EndInit() StyledElement.ApplyStyling() StyledElement.InitializeIfNeeded() StyledElement.TryGetResource(object, ThemeVariant, out object) StyledElement.OnDataContextChanged(EventArgs) StyledElement.OnDataContextBeginUpdate() StyledElement.OnDataContextEndUpdate() StyledElement.OnInitialized() StyledElement.Name StyledElement.Classes StyledElement.DataContext StyledElement.IsInitialized StyledElement.Styles StyledElement.StyleKey StyledElement.Resources StyledElement.TemplatedParent StyledElement.Theme StyledElement.LogicalChildren StyledElement.PseudoClasses StyledElement.StyleKeyOverride StyledElement.Parent StyledElement.ActualThemeVariant StyledElement.AttachedToLogicalTree StyledElement.DetachedFromLogicalTree StyledElement.DataContextChanged StyledElement.Initialized StyledElement.ResourcesChanged StyledElement.ActualThemeVariantChanged Animatable.TransitionsProperty Animatable.OnPropertyChangedCore(AvaloniaPropertyChangedEventArgs) Animatable.Transitions AvaloniaObject.CheckAccess() AvaloniaObject.VerifyAccess() AvaloniaObject.ClearValue(AvaloniaProperty) AvaloniaObject.ClearValue<T>(AvaloniaProperty<T>) AvaloniaObject.ClearValue<T>(StyledProperty<T>) AvaloniaObject.ClearValue<T>(DirectPropertyBase<T>) AvaloniaObject.Equals(object) AvaloniaObject.GetHashCode() AvaloniaObject.GetValue(AvaloniaProperty) AvaloniaObject.GetValue<T>(StyledProperty<T>) AvaloniaObject.GetValue<T>(DirectPropertyBase<T>) AvaloniaObject.GetBaseValue<T>(StyledProperty<T>) AvaloniaObject.IsAnimating(AvaloniaProperty) AvaloniaObject.IsSet(AvaloniaProperty) AvaloniaObject.SetValue(AvaloniaProperty, object, BindingPriority) AvaloniaObject.SetValue<T>(StyledProperty<T>, T, BindingPriority) AvaloniaObject.SetValue<T>(DirectPropertyBase<T>, T) AvaloniaObject.SetCurrentValue(AvaloniaProperty, object) AvaloniaObject.SetCurrentValue<T>(StyledProperty<T>, T) AvaloniaObject.Bind(AvaloniaProperty, IBinding) AvaloniaObject.Bind(AvaloniaProperty, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<object>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<T>, BindingPriority) AvaloniaObject.Bind<T>(StyledProperty<T>, IObservable<BindingValue<T>>, BindingPriority) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<object>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<T>) AvaloniaObject.Bind<T>(DirectPropertyBase<T>, IObservable<BindingValue<T>>) AvaloniaObject.CoerceValue(AvaloniaProperty) AvaloniaObject.UpdateDataValidation(AvaloniaProperty, BindingValueType, Exception) AvaloniaObject.RaisePropertyChanged<T>(DirectPropertyBase<T>, T, T) AvaloniaObject.SetAndRaise<T>(DirectPropertyBase<T>, ref T, T) AvaloniaObject.InheritanceParent AvaloniaObject.this[AvaloniaProperty] AvaloniaObject.this[IndexerDescriptor] object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Avalonia Assembly: Mapsui.UI.Avalonia.dll Syntax public class MapControl : UserControl, IDataContextProvider, ILogical, IThemeVariantHost, IResourceHost, IResourceNode, IStyleHost, ISetLogicalParent, ISetInheritanceParent, ISupportInitialize, IStyleable, INamed, IInputElement, IDataTemplateHost, ISetterValue, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Edit this page View Source MapControl() Declaration public MapControl() Fields | Edit this page View Source MapProperty Declaration public static readonly DirectProperty<MapControl, Map> MapProperty Field Value Type Description DirectProperty<MapControl, Map> Properties | Edit this page View Source ContinuousMouseWheelZoomStepSize The size of the mouse wheel steps used when UseContinuousMouseWheelZoom = true. The default is 0.1. A step size of 1 would doubling or halving the scale of the map on each event. Declaration public double ContinuousMouseWheelZoomStepSize { get; set; } Property Value Type Description double | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseContinuousMouseWheelZoom This enables an alternative mouse wheel method where the step size on each mouse wheel event can be configured by setting the ContinuousMouseWheelZoomStepSize. Declaration public bool UseContinuousMouseWheelZoom { get; set; } Property Value Type Description bool | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source ClearTouchState() Clears the Touch State. Should only be called if the touch state seems out of sync in a certain situation. Declaration public void ClearTouchState() | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public virtual void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(AvaloniaPropertyChangedEventArgs) Called when a avalonia property changes on the object. Declaration protected override void OnPropertyChanged(AvaloniaPropertyChangedEventArgs e) Parameters Type Name Description AvaloniaPropertyChangedEventArgs e Overrides Avalonia.Controls.ContentControl.OnPropertyChanged(Avalonia.AvaloniaPropertyChangedEventArgs) | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Render(DrawingContext) Renders the visual to a Avalonia.Media.DrawingContext. Declaration public override void Render(DrawingContext context) Parameters Type Name Description DrawingContext context The drawing context. Overrides Avalonia.Visual.Render(Avalonia.Media.DrawingContext) | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements Avalonia.IDataContextProvider Avalonia.LogicalTree.ILogical Avalonia.Styling.IThemeVariantHost Avalonia.Controls.IResourceHost Avalonia.Controls.IResourceNode Avalonia.Styling.IStyleHost Avalonia.Controls.ISetLogicalParent Avalonia.Controls.ISetInheritanceParent ISupportInitialize Avalonia.Styling.IStyleable Avalonia.INamed Avalonia.Input.IInputElement Avalonia.Controls.Templates.IDataTemplateHost Avalonia.Styling.ISetterValue IMapControl IDisposable INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Avalonia.html": {
    "href": "pages/Mapsui.UI.Avalonia.html",
    "title": "Namespace Mapsui.UI.Avalonia",
    "keywords": "Namespace Mapsui.UI.Avalonia Classes MapControl"
  },
  "pages/Mapsui.UI.Blazor.Extensions.BoundingClientRect.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.BoundingClientRect.html",
    "title": "Class BoundingClientRect",
    "keywords": "Class BoundingClientRect Inheritance object BoundingClientRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public class BoundingClientRect Properties | Edit this page View Source Bottom Declaration public double Bottom { get; set; } Property Value Type Description double | Edit this page View Source Height Declaration public double Height { get; set; } Property Value Type Description double | Edit this page View Source Left Declaration public double Left { get; set; } Property Value Type Description double | Edit this page View Source Right Declaration public double Right { get; set; } Property Value Type Description double | Edit this page View Source Top Declaration public double Top { get; set; } Property Value Type Description double | Edit this page View Source Width Declaration public double Width { get; set; } Property Value Type Description double | Edit this page View Source X Declaration public double X { get; set; } Property Value Type Description double | Edit this page View Source Y Declaration public double Y { get; set; } Property Value Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Blazor.Extensions.Cursors.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.Cursors.html",
    "title": "Class Cursors",
    "keywords": "Class Cursors Inheritance object Cursors Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public static class Cursors Fields | Edit this page View Source Default Declaration public const string Default = \"default\" Field Value Type Description string | Edit this page View Source Move Declaration public const string Move = \"move\" Field Value Type Description string"
  },
  "pages/Mapsui.UI.Blazor.Extensions.Keys.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.Keys.html",
    "title": "Class Keys",
    "keywords": "Class Keys Inheritance object Keys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public static class Keys Fields | Edit this page View Source Alt Declaration public const int Alt = 18 Field Value Type Description int | Edit this page View Source AltLeft Declaration public const int AltLeft = 18 Field Value Type Description int | Edit this page View Source AltRight Declaration public const int AltRight = 18 Field Value Type Description int | Edit this page View Source ArrowDown Declaration public const int ArrowDown = 40 Field Value Type Description int | Edit this page View Source ArrowLeft Declaration public const int ArrowLeft = 37 Field Value Type Description int | Edit this page View Source ArrowRight Declaration public const int ArrowRight = 39 Field Value Type Description int | Edit this page View Source ArrowUp Declaration public const int ArrowUp = 38 Field Value Type Description int | Edit this page View Source AudioVolumeDown Declaration public const int AudioVolumeDown = 174 Field Value Type Description int | Edit this page View Source AudioVolumeMute Declaration public const int AudioVolumeMute = 173 Field Value Type Description int | Edit this page View Source AudioVolumeUp Declaration public const int AudioVolumeUp = 175 Field Value Type Description int | Edit this page View Source Backquote Declaration public const int Backquote = 192 Field Value Type Description int | Edit this page View Source Backslash Declaration public const int Backslash = 220 Field Value Type Description int | Edit this page View Source Backspace Declaration public const int Backspace = 8 Field Value Type Description int | Edit this page View Source BracketLeft Declaration public const int BracketLeft = 219 Field Value Type Description int | Edit this page View Source BracketRight Declaration public const int BracketRight = 221 Field Value Type Description int | Edit this page View Source CapsLock Declaration public const int CapsLock = 20 Field Value Type Description int | Edit this page View Source Comma Declaration public const int Comma = 188 Field Value Type Description int | Edit this page View Source ContextMenu Declaration public const int ContextMenu = 93 Field Value Type Description int | Edit this page View Source Control Declaration public const int Control = 17 Field Value Type Description int | Edit this page View Source ControlLeft Declaration public const int ControlLeft = 17 Field Value Type Description int | Edit this page View Source ControlRight Declaration public const int ControlRight = 17 Field Value Type Description int | Edit this page View Source Delete Declaration public const int Delete = 46 Field Value Type Description int | Edit this page View Source Digit0 Declaration public const int Digit0 = 48 Field Value Type Description int | Edit this page View Source Digit1 Declaration public const int Digit1 = 49 Field Value Type Description int | Edit this page View Source Digit2 Declaration public const int Digit2 = 50 Field Value Type Description int | Edit this page View Source Digit3 Declaration public const int Digit3 = 51 Field Value Type Description int | Edit this page View Source Digit4 Declaration public const int Digit4 = 52 Field Value Type Description int | Edit this page View Source Digit5 Declaration public const int Digit5 = 53 Field Value Type Description int | Edit this page View Source Digit6 Declaration public const int Digit6 = 54 Field Value Type Description int | Edit this page View Source Digit7 Declaration public const int Digit7 = 55 Field Value Type Description int | Edit this page View Source Digit8 Declaration public const int Digit8 = 56 Field Value Type Description int | Edit this page View Source Digit9 Declaration public const int Digit9 = 57 Field Value Type Description int | Edit this page View Source End Declaration public const int End = 35 Field Value Type Description int | Edit this page View Source Enter Declaration public const int Enter = 13 Field Value Type Description int | Edit this page View Source Equal Declaration public const int Equal = 187 Field Value Type Description int | Edit this page View Source Escape Declaration public const int Escape = 27 Field Value Type Description int | Edit this page View Source F1 Declaration public const int F1 = 112 Field Value Type Description int | Edit this page View Source F10 Declaration public const int F10 = 121 Field Value Type Description int | Edit this page View Source F11 Declaration public const int F11 = 122 Field Value Type Description int | Edit this page View Source F12 Declaration public const int F12 = 123 Field Value Type Description int | Edit this page View Source F2 Declaration public const int F2 = 113 Field Value Type Description int | Edit this page View Source F3 Declaration public const int F3 = 114 Field Value Type Description int | Edit this page View Source F4 Declaration public const int F4 = 115 Field Value Type Description int | Edit this page View Source F5 Declaration public const int F5 = 116 Field Value Type Description int | Edit this page View Source F6 Declaration public const int F6 = 117 Field Value Type Description int | Edit this page View Source F7 Declaration public const int F7 = 118 Field Value Type Description int | Edit this page View Source F8 Declaration public const int F8 = 119 Field Value Type Description int | Edit this page View Source F9 Declaration public const int F9 = 120 Field Value Type Description int | Edit this page View Source Home Declaration public const int Home = 36 Field Value Type Description int | Edit this page View Source Insert Declaration public const int Insert = 45 Field Value Type Description int | Edit this page View Source KeyA Declaration public const int KeyA = 65 Field Value Type Description int | Edit this page View Source KeyB Declaration public const int KeyB = 66 Field Value Type Description int | Edit this page View Source KeyC Declaration public const int KeyC = 67 Field Value Type Description int | Edit this page View Source KeyD Declaration public const int KeyD = 68 Field Value Type Description int | Edit this page View Source KeyE Declaration public const int KeyE = 69 Field Value Type Description int | Edit this page View Source KeyF Declaration public const int KeyF = 70 Field Value Type Description int | Edit this page View Source KeyG Declaration public const int KeyG = 71 Field Value Type Description int | Edit this page View Source KeyH Declaration public const int KeyH = 72 Field Value Type Description int | Edit this page View Source KeyI Declaration public const int KeyI = 73 Field Value Type Description int | Edit this page View Source KeyJ Declaration public const int KeyJ = 74 Field Value Type Description int | Edit this page View Source KeyK Declaration public const int KeyK = 75 Field Value Type Description int | Edit this page View Source KeyL Declaration public const int KeyL = 76 Field Value Type Description int | Edit this page View Source KeyM Declaration public const int KeyM = 77 Field Value Type Description int | Edit this page View Source KeyN Declaration public const int KeyN = 78 Field Value Type Description int | Edit this page View Source KeyO Declaration public const int KeyO = 79 Field Value Type Description int | Edit this page View Source KeyP Declaration public const int KeyP = 80 Field Value Type Description int | Edit this page View Source KeyQ Declaration public const int KeyQ = 81 Field Value Type Description int | Edit this page View Source KeyR Declaration public const int KeyR = 82 Field Value Type Description int | Edit this page View Source KeyS Declaration public const int KeyS = 83 Field Value Type Description int | Edit this page View Source KeyT Declaration public const int KeyT = 84 Field Value Type Description int | Edit this page View Source KeyU Declaration public const int KeyU = 85 Field Value Type Description int | Edit this page View Source KeyV Declaration public const int KeyV = 86 Field Value Type Description int | Edit this page View Source KeyW Declaration public const int KeyW = 87 Field Value Type Description int | Edit this page View Source KeyX Declaration public const int KeyX = 88 Field Value Type Description int | Edit this page View Source KeyY Declaration public const int KeyY = 89 Field Value Type Description int | Edit this page View Source KeyZ Declaration public const int KeyZ = 90 Field Value Type Description int | Edit this page View Source LaunchApplication1 Declaration public const int LaunchApplication1 = 182 Field Value Type Description int | Edit this page View Source LaunchApplication2 Declaration public const int LaunchApplication2 = 183 Field Value Type Description int | Edit this page View Source LaunchMediaPlayer Declaration public const int LaunchMediaPlayer = 181 Field Value Type Description int | Edit this page View Source MetaLeft Declaration public const int MetaLeft = 91 Field Value Type Description int | Edit this page View Source MetaRight Declaration public const int MetaRight = 92 Field Value Type Description int | Edit this page View Source Minus Declaration public const int Minus = 189 Field Value Type Description int | Edit this page View Source None Declaration public const int None = 0 Field Value Type Description int | Edit this page View Source NumLock Declaration public const int NumLock = 144 Field Value Type Description int | Edit this page View Source Numpad0 Declaration public const int Numpad0 = 96 Field Value Type Description int | Edit this page View Source Numpad1 Declaration public const int Numpad1 = 97 Field Value Type Description int | Edit this page View Source Numpad2 Declaration public const int Numpad2 = 98 Field Value Type Description int | Edit this page View Source Numpad3 Declaration public const int Numpad3 = 99 Field Value Type Description int | Edit this page View Source Numpad4 Declaration public const int Numpad4 = 100 Field Value Type Description int | Edit this page View Source Numpad5 Declaration public const int Numpad5 = 101 Field Value Type Description int | Edit this page View Source Numpad6 Declaration public const int Numpad6 = 102 Field Value Type Description int | Edit this page View Source Numpad7 Declaration public const int Numpad7 = 103 Field Value Type Description int | Edit this page View Source Numpad8 Declaration public const int Numpad8 = 104 Field Value Type Description int | Edit this page View Source Numpad9 Declaration public const int Numpad9 = 105 Field Value Type Description int | Edit this page View Source NumpadAdd Declaration public const int NumpadAdd = 107 Field Value Type Description int | Edit this page View Source NumpadDecimal Declaration public const int NumpadDecimal = 110 Field Value Type Description int | Edit this page View Source NumpadDivide Declaration public const int NumpadDivide = 111 Field Value Type Description int | Edit this page View Source NumpadMultiply Declaration public const int NumpadMultiply = 106 Field Value Type Description int | Edit this page View Source NumpadSubtract Declaration public const int NumpadSubtract = 109 Field Value Type Description int | Edit this page View Source PageDown Declaration public const int PageDown = 34 Field Value Type Description int | Edit this page View Source PageUp Declaration public const int PageUp = 33 Field Value Type Description int | Edit this page View Source Pause Declaration public const int Pause = 19 Field Value Type Description int | Edit this page View Source Period Declaration public const int Period = 190 Field Value Type Description int | Edit this page View Source PrintScreen Declaration public const int PrintScreen = 44 Field Value Type Description int | Edit this page View Source Quote Declaration public const int Quote = 222 Field Value Type Description int | Edit this page View Source ScrollLock Declaration public const int ScrollLock = 145 Field Value Type Description int | Edit this page View Source Semicolon Declaration public const int Semicolon = 186 Field Value Type Description int | Edit this page View Source ShiftLeft Declaration public const int ShiftLeft = 16 Field Value Type Description int | Edit this page View Source ShiftRight Declaration public const int ShiftRight = 16 Field Value Type Description int | Edit this page View Source Slash Declaration public const int Slash = 191 Field Value Type Description int | Edit this page View Source Space Declaration public const int Space = 32 Field Value Type Description int | Edit this page View Source Tab Declaration public const int Tab = 9 Field Value Type Description int"
  },
  "pages/Mapsui.UI.Blazor.Extensions.MapsuiJsInterop.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.MapsuiJsInterop.html",
    "title": "Class MapsuiJsInterop",
    "keywords": "Class MapsuiJsInterop Inheritance object MapsuiJsInterop Implements IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public sealed class MapsuiJsInterop : IAsyncDisposable Constructors | Edit this page View Source MapsuiJsInterop(IJSRuntime) Declaration public MapsuiJsInterop(IJSRuntime jsRuntime) Parameters Type Name Description IJSRuntime jsRuntime Methods | Edit this page View Source BoundingClientRectAsync(string) Declaration public Task<BoundingClientRect> BoundingClientRectAsync(string elementId) Parameters Type Name Description string elementId Returns Type Description Task<BoundingClientRect> | Edit this page View Source DisableMouseWheelAsync(string) Declaration public ValueTask DisableMouseWheelAsync(string elementId) Parameters Type Name Description string elementId Returns Type Description ValueTask | Edit this page View Source DisableTouchAsync(string) Declaration public ValueTask DisableTouchAsync(string elementId) Parameters Type Name Description string elementId Returns Type Description ValueTask | Edit this page View Source DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask A task that represents the asynchronous dispose operation. | Edit this page View Source GetPixelDensityAsync() Declaration public ValueTask<double> GetPixelDensityAsync() Returns Type Description ValueTask<double> Implements IAsyncDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Blazor.Extensions.MouseButtons.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.MouseButtons.html",
    "title": "Class MouseButtons",
    "keywords": "Class MouseButtons Inheritance object MouseButtons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public static class MouseButtons Fields | Edit this page View Source Left Declaration public const int Left = 0 Field Value Type Description int | Edit this page View Source Middle Declaration public const int Middle = 1 Field Value Type Description int | Edit this page View Source Primary Declaration public const int Primary = 0 Field Value Type Description int | Edit this page View Source Right Declaration public const int Right = 2 Field Value Type Description int"
  },
  "pages/Mapsui.UI.Blazor.Extensions.TouchPointExtensions.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.TouchPointExtensions.html",
    "title": "Class TouchPointExtensions",
    "keywords": "Class TouchPointExtensions Inheritance object TouchPointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor.Extensions Assembly: Mapsui.UI.Blazor.dll Syntax public static class TouchPointExtensions Methods | Edit this page View Source ToScreenPosition(TouchPoint, BoundingClientRect) Declaration public static ScreenPosition ToScreenPosition(this TouchPoint touchPoint, BoundingClientRect clientRect) Parameters Type Name Description TouchPoint touchPoint BoundingClientRect clientRect Returns Type Description ScreenPosition | Edit this page View Source ToScreenPositions(IEnumerable<TouchPoint>, BoundingClientRect) Declaration public static ReadOnlySpan<ScreenPosition> ToScreenPositions(this IEnumerable<TouchPoint> touchPoints, BoundingClientRect clientRect) Parameters Type Name Description IEnumerable<TouchPoint> touchPoints BoundingClientRect clientRect Returns Type Description ReadOnlySpan<ScreenPosition>"
  },
  "pages/Mapsui.UI.Blazor.Extensions.html": {
    "href": "pages/Mapsui.UI.Blazor.Extensions.html",
    "title": "Namespace Mapsui.UI.Blazor.Extensions",
    "keywords": "Namespace Mapsui.UI.Blazor.Extensions Classes BoundingClientRect Cursors Keys MapsuiJsInterop MouseButtons TouchPointExtensions"
  },
  "pages/Mapsui.UI.Blazor.MapControl.html": {
    "href": "pages/Mapsui.UI.Blazor.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object ComponentBase MapControl Implements IComponent IHandleEvent IHandleAfterRender IMapControl INotifyPropertyChanged IDisposable Inherited Members ComponentBase.BuildRenderTree(RenderTreeBuilder) ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Blazor Assembly: Mapsui.UI.Blazor.dll Syntax public class MapControl : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Edit this page View Source MapControl() Declaration public MapControl() Fields | Edit this page View Source _elementId Declaration protected readonly string _elementId Field Value Type Description string | Edit this page View Source _lastMovePosition Declaration public ScreenPosition? _lastMovePosition Field Value Type Description ScreenPosition? | Edit this page View Source _viewCpu Declaration protected SKCanvasView? _viewCpu Field Value Type Description SKCanvasView | Edit this page View Source _viewGpu Declaration protected SKGLView? _viewGpu Field Value Type Description SKGLView Properties | Edit this page View Source ContinuousMouseWheelZoomStepSize The size of the mouse wheel steps used when UseContinuousMouseWheelZoom = true. The default is 0.1. A step size of 1 would doubling or halving the scale of the map on each event. Declaration public double ContinuousMouseWheelZoomStepSize { get; set; } Property Value Type Description double | Edit this page View Source Cursor Declaration public string? Cursor { get; set; } Property Value Type Description string | Edit this page View Source ElementId Declaration public string ElementId { get; } Property Value Type Description string | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration [Parameter] public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source MoveButton Declaration public int MoveButton { get; set; } Property Value Type Description int | Edit this page View Source MoveCursor Declaration public string MoveCursor { get; set; } Property Value Type Description string | Edit this page View Source MoveModifier Declaration public int MoveModifier { get; set; } Property Value Type Description int | Edit this page View Source UseContinuousMouseWheelZoom This enables an alternative mouse wheel method where the step size on each mouse wheel event can be configured by setting the ContinuousMouseWheelZoomStepSize. Declaration public bool UseContinuousMouseWheelZoom { get; set; } Property Value Type Description bool | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool | Edit this page View Source UseGPU Declaration public static bool UseGPU { get; set; } Property Value Type Description bool | Edit this page View Source ZoomButton Declaration public int ZoomButton { get; set; } Property Value Type Description int | Edit this page View Source ZoomModifier Declaration public int ZoomModifier { get; set; } Property Value Type Description int Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnAfterRenderAsync(bool) Method invoked after each time the component has been rendered interactively and the UI has finished updating (for example, after elements have been added to the browser DOM). Any ElementReference fields will be populated by the time this runs. This method is not invoked during prerendering or server-side rendering, because those processes are not attached to any live browser DOM and are already complete before the DOM is updated. Note that the component does not automatically re-render after the completion of any returned Task, because that would cause an infinite render loop. Declaration protected override Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description bool firstRender Set to true if this is the first time OnAfterRender(bool) has been invoked on this component instance; otherwise false. Returns Type Description Task A Task representing any asynchronous operation. Overrides ComponentBase.OnAfterRenderAsync(bool) Remarks The OnAfterRender(bool) and OnAfterRenderAsync(bool) lifecycle methods are useful for performing interop, or interacting with values received from @ref. Use the firstRender parameter to ensure that initialization work is only performed once. | Edit this page View Source OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override void OnInitialized() Overrides ComponentBase.OnInitialized() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMouseDown(MouseEventArgs) Declaration protected void OnMouseDown(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Edit this page View Source OnMouseMove(MouseEventArgs) Declaration protected void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Edit this page View Source OnMouseUp(MouseEventArgs) Declaration protected void OnMouseUp(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e | Edit this page View Source OnMouseWheel(WheelEventArgs) Declaration protected void OnMouseWheel(WheelEventArgs e) Parameters Type Name Description WheelEventArgs e | Edit this page View Source OnPaintSurface(SKCanvas, SKImageInfo) Declaration protected void OnPaintSurface(SKCanvas canvas, SKImageInfo info) Parameters Type Name Description SKCanvas canvas SKImageInfo info | Edit this page View Source OnPaintSurfaceCPU(SKPaintSurfaceEventArgs) Declaration protected void OnPaintSurfaceCPU(SKPaintSurfaceEventArgs e) Parameters Type Name Description SKPaintSurfaceEventArgs e | Edit this page View Source OnPaintSurfaceGPU(SKPaintGLSurfaceEventArgs) Declaration protected void OnPaintSurfaceGPU(SKPaintGLSurfaceEventArgs e) Parameters Type Name Description SKPaintGLSurfaceEventArgs e | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OnTouchEnd(TouchEventArgs) Declaration public void OnTouchEnd(TouchEventArgs _) Parameters Type Name Description TouchEventArgs _ | Edit this page View Source OnTouchMove(TouchEventArgs) Declaration public void OnTouchMove(TouchEventArgs e) Parameters Type Name Description TouchEventArgs e | Edit this page View Source OnTouchStart(TouchEventArgs) Declaration public void OnTouchStart(TouchEventArgs e) Parameters Type Name Description TouchEventArgs e | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IComponent IHandleEvent IHandleAfterRender IMapControl INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Blazor.html": {
    "href": "pages/Mapsui.UI.Blazor.html",
    "title": "Namespace Mapsui.UI.Blazor",
    "keywords": "Namespace Mapsui.UI.Blazor Classes MapControl"
  },
  "pages/Mapsui.UI.DataChangedWeakEventManager.html": {
    "href": "pages/Mapsui.UI.DataChangedWeakEventManager.html",
    "title": "Class DataChangedWeakEventManager",
    "keywords": "Class DataChangedWeakEventManager Inheritance object MWeakEventManager DataChangedWeakEventManager Inherited Members MWeakEventManager.EventHandlers MWeakEventManager.AddListener(object, Delegate) MWeakEventManager.RemoveListener(object, Delegate) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI Assembly: Mapsui.dll Syntax public class DataChangedWeakEventManager : MWeakEventManager Methods | Edit this page View Source RaiseEvent(object, DataChangedEventArgs) Declaration public void RaiseEvent(object source, DataChangedEventArgs e) Parameters Type Name Description object source DataChangedEventArgs e Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Eto.Extensions.Extensions.html": {
    "href": "pages/Mapsui.UI.Eto.Extensions.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Eto.Extensions Assembly: Mapsui.UI.Eto.dll Syntax public static class Extensions Methods | Edit this page View Source ToScreenPosition(PointF) Declaration public static ScreenPosition ToScreenPosition(this PointF point) Parameters Type Name Description PointF point Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.Eto.Extensions.html": {
    "href": "pages/Mapsui.UI.Eto.Extensions.html",
    "title": "Namespace Mapsui.UI.Eto.Extensions",
    "keywords": "Namespace Mapsui.UI.Eto.Extensions Classes Extensions"
  },
  "pages/Mapsui.UI.Eto.MapControl.html": {
    "href": "pages/Mapsui.UI.Eto.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object Widget BindableWidget Control Container Panel Drawable SkiaDrawable MapControl Implements IHandlerSource IBindable IMouseInputSource IKeyboardInputSource ICallbackSource IBindableWidgetContainer IMapControl INotifyPropertyChanged IDisposable Inherited Members SkiaDrawable.OnPaint(PaintEventArgs) SkiaDrawable.Paint Drawable.CreateGraphics() Drawable.Update(Rectangle) Drawable.GetCallback() Drawable.SupportsCreateGraphics Drawable.CanFocus Panel.Remove(Control) Panel.Controls Panel.Padding Panel.MinimumSize Panel.ContextMenu Panel.Content Container.ApplyStyles(object, string) Container.OnStyleChanged(EventArgs) Container.OnPreLoad(EventArgs) Container.OnLoad(EventArgs) Container.OnUnLoad(EventArgs) Container.Remove(IEnumerable<Control>) Container.RemoveAll() Container.RemoveParent(Control) Container.SetLogicalParent(Control) Container.RemoveLogicalParent(Control) Container.SetParent(Control, Action, Control) Container.FindChild<T>(string) Container.FindChild(Type, string) Container.FindChild(string) Container.ClientSize Container.Children Container.VisualChildren Container.StyleProvider Container.Styles Control.SizeChangedEvent Control.KeyDownEvent Control.KeyUpEvent Control.TextInputEvent Control.MouseDownEvent Control.MouseUpEvent Control.MouseMoveEvent Control.MouseLeaveEvent Control.MouseEnterEvent Control.MouseDoubleClickEvent Control.MouseWheelEvent Control.GotFocusEvent Control.LostFocusEvent Control.ShownEvent Control.DragDropEvent Control.DragOverEvent Control.DragEnterEvent Control.DragLeaveEvent Control.DragEndEvent Control.EnabledChangedEvent Control.OnTextInput(TextInputEventArgs) Control.OnMouseLeave(MouseEventArgs) Control.OnMouseEnter(MouseEventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnGotFocus(EventArgs) Control.OnLostFocus(EventArgs) Control.OnShown(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragLeave(DragEventArgs) Control.OnDragEnd(DragEventArgs) Control.OnEnabledChanged(EventArgs) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.UpdateLayout() Control.GetPreferredSize() Control.GetPreferredSize(SizeF) Control.FindParent(Type, string) Control.FindParent(string) Control.Detach() Control.AttachNative() Control.DetachNative() Control.Focus() Control.SuspendLayout() Control.ResumeLayout() Control.MapPlatformCommand(string, Command) Control.PointFromScreen(PointF) Control.PointToScreen(PointF) Control.RectangleToScreen(RectangleF) Control.RectangleFromScreen(RectangleF) Control.DoDragDrop(DataObject, DragEffects) Control.DoDragDrop(DataObject, DragEffects, Image, PointF) Control.TriggerStyleChanged() Control.OnApplyCascadingStyles() Control.Print() Control.Handler Control.Loaded Control.VisualControls Control.Tag Control.LogicalParent Control.IsVisualControl Control.Size Control.Width Control.Height Control.Enabled Control.Visible Control.Parent Control.VisualParent Control.IsAttached Control.BackgroundColor Control.HasFocus Control.IsSuspended Control.ParentWindow Control.SupportedPlatformCommands Control.Bounds Control.Location Control.Cursor Control.ToolTip Control.TabIndex Control.AllowDrop Control.SizeChanged Control.KeyDown Control.KeyUp Control.TextInput Control.MouseDown Control.MouseUp Control.MouseMove Control.MouseLeave Control.MouseEnter Control.MouseDoubleClick Control.MouseWheel Control.GotFocus Control.LostFocus Control.Shown Control.PreLoad Control.Load Control.LoadComplete Control.UnLoad Control.DragDrop Control.DragOver Control.DragEnter Control.DragLeave Control.DragEnd Control.EnabledChanged BindableWidget.OnDataContextChanged(EventArgs) BindableWidget.FindParent<T>(string) BindableWidget.Unbind() BindableWidget.UpdateBindings(BindingUpdateMode) BindableWidget.Parents BindableWidget.DataContext BindableWidget.Bindings BindableWidget.IsDataContextChanging BindableWidget.DataContextChanged Widget.RegisterEvent<T>(Expression<Action<T>>, string) Widget.Initialize() Widget.Dispose() Widget.ToString() Widget.Platform Widget.NativeHandle Widget.Properties Widget.ID Widget.Style Widget.ControlObject Widget.IsDisposed Widget.StyleChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.Eto Assembly: Mapsui.UI.Eto.dll Syntax public class MapControl : SkiaDrawable, IHandlerSource, IBindable, IMouseInputSource, IKeyboardInputSource, ICallbackSource, IBindableWidgetContainer, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Edit this page View Source MapControl() Declaration public MapControl() Properties | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source MoveButton Declaration public MouseButtons MoveButton { get; set; } Property Value Type Description MouseButtons | Edit this page View Source MoveCursor Declaration public Cursor MoveCursor { get; set; } Property Value Type Description Cursor | Edit this page View Source MoveModifier Declaration public Keys MoveModifier { get; set; } Property Value Type Description Keys | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool | Edit this page View Source ZoomButton Declaration public MouseButtons ZoomButton { get; set; } Property Value Type Description MouseButtons | Edit this page View Source ZoomModifier Declaration public Keys ZoomModifier { get; set; } Property Value Type Description Keys Methods | Edit this page View Source Dispose(bool) Handles the disposal of this control Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing True if the caller called Eto.Widget.Dispose() manually, false if being called from a finalizer Overrides Control.Dispose(bool) | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnKeyDown(KeyEventArgs) Raises the Eto.Forms.Control.KeyDown event. Declaration protected override void OnKeyDown(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Key event arguments Overrides Eto.Forms.Control.OnKeyDown(Eto.Forms.KeyEventArgs) | Edit this page View Source OnKeyUp(KeyEventArgs) Raises the Eto.Forms.Control.KeyUp event. Declaration protected override void OnKeyUp(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Key event arguments Overrides Eto.Forms.Control.OnKeyUp(Eto.Forms.KeyEventArgs) | Edit this page View Source OnLoadComplete(EventArgs) Raises the Eto.Forms.Control.LoadComplete event, and recurses to this container's children Declaration protected override void OnLoadComplete(EventArgs e) Parameters Type Name Description EventArgs e Event arguments Overrides Container.OnLoadComplete(EventArgs) | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMouseDown(MouseEventArgs) Raises the Eto.Forms.Control.MouseDown event. Declaration protected override void OnMouseDown(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Event arguments Overrides Eto.Forms.Control.OnMouseDown(Eto.Forms.MouseEventArgs) Remarks To override default behaviour of the control, set Eto.Forms.MouseEventArgs.Handled property to true. | Edit this page View Source OnMouseMove(MouseEventArgs) Raises the Eto.Forms.Control.MouseMove event. Declaration protected override void OnMouseMove(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Mouse event args Overrides Eto.Forms.Control.OnMouseMove(Eto.Forms.MouseEventArgs) | Edit this page View Source OnMouseUp(MouseEventArgs) Raises the Eto.Forms.Control.MouseUp event. Declaration protected override void OnMouseUp(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Event arguments Overrides Eto.Forms.Control.OnMouseUp(Eto.Forms.MouseEventArgs) | Edit this page View Source OnMouseWheel(MouseEventArgs) Raises the Eto.Forms.Control.MouseWheel event. Declaration protected override void OnMouseWheel(MouseEventArgs e) Parameters Type Name Description MouseEventArgs e Event arguments Overrides Eto.Forms.Control.OnMouseWheel(Eto.Forms.MouseEventArgs) | Edit this page View Source OnPaint(SKPaintEventArgs) Declaration protected override void OnPaint(SKPaintEventArgs e) Parameters Type Name Description SKPaintEventArgs e Overrides Eto.SkiaDraw.SkiaDrawable.OnPaint(Eto.SkiaDraw.SKPaintEventArgs) | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OnSizeChanged(EventArgs) Raises the Eto.Forms.Control.SizeChanged event. Declaration protected override void OnSizeChanged(EventArgs e) Parameters Type Name Description EventArgs e Event arguments Overrides Control.OnSizeChanged(EventArgs) | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements Eto.IHandlerSource Eto.Forms.IBindable Eto.Forms.IMouseInputSource Eto.Forms.IKeyboardInputSource Eto.ICallbackSource Eto.Forms.IBindableWidgetContainer IMapControl INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Eto.html": {
    "href": "pages/Mapsui.UI.Eto.html",
    "title": "Namespace Mapsui.UI.Eto",
    "keywords": "Namespace Mapsui.UI.Eto Classes MapControl"
  },
  "pages/Mapsui.UI.IMapControl.html": {
    "href": "pages/Mapsui.UI.IMapControl.html",
    "title": "Interface IMapControl",
    "keywords": "Interface IMapControl Inherited Members IDisposable.Dispose() Namespace: Mapsui.UI Assembly: Mapsui.dll Syntax public interface IMapControl : IDisposable Properties | Edit this page View Source Map Declaration Map Map { get; set; } Property Value Type Description Map Methods | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration void InvalidateCanvas() | Edit this page View Source OpenInBrowser(string) Declaration void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Declaration void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration void RefreshGraphics() | Edit this page View Source ToCoordinateInDeviceIndependentUnits(MPoint) Converts coordinates in raw pixels to device independent units (or DIP or DP). Declaration MPoint ToCoordinateInDeviceIndependentUnits(MPoint coordinateInPixels) Parameters Type Name Description MPoint coordinateInPixels Coordinate in pixels Returns Type Description MPoint Coordinate in device independent units (or DIP or DP) | Edit this page View Source ToCoordinateInRawPixels(MPoint) Converts coordinates in device independent units (or DIP or DP) to raw pixels. Declaration MPoint ToCoordinateInRawPixels(MPoint coordinateInDeviceIndependentUnits) Parameters Type Name Description MPoint coordinateInDeviceIndependentUnits Coordinate in device independent units (or DIP or DP) Returns Type Description MPoint Coordinate in raw pixels | Edit this page View Source Unsubscribe() Declaration void Unsubscribe() Events | Edit this page View Source Info Declaration event EventHandler<MapInfoEventArgs> Info Event Type Type Description EventHandler<MapInfoEventArgs> Extension Methods MapControlExtensions.WaitForLoadingAsync(IMapControl) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.MWeakEventManager.html": {
    "href": "pages/Mapsui.UI.MWeakEventManager.html",
    "title": "Class MWeakEventManager",
    "keywords": "Class MWeakEventManager Inheritance object MWeakEventManager DataChangedWeakEventManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI Assembly: Mapsui.dll Syntax public abstract class MWeakEventManager Fields | Edit this page View Source EventHandlers Declaration protected readonly Dictionary<object, List<WeakReference>> EventHandlers Field Value Type Description Dictionary<object, List<WeakReference>> Methods | Edit this page View Source AddListener(object, Delegate?) Declaration public void AddListener(object source, Delegate? handler) Parameters Type Name Description object source Delegate handler | Edit this page View Source RemoveListener(object, Delegate?) Declaration public void RemoveListener(object source, Delegate? handler) Parameters Type Name Description object source Delegate handler Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Callout.html": {
    "href": "pages/Mapsui.UI.Maui.Callout.html",
    "title": "Class Callout",
    "keywords": "Class Callout Inheritance object Callout Implements IFeatureProvider INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class Callout : IFeatureProvider, INotifyPropertyChanged Constructors | Edit this page View Source Callout(Pin) Declaration public Callout(Pin pin) Parameters Type Name Description Pin pin Fields | Edit this page View Source DefaultSubtitleFontAttributes Declaration public static FontAttributes DefaultSubtitleFontAttributes Field Value Type Description FontAttributes | Edit this page View Source DefaultSubtitleFontColor Declaration public static Color DefaultSubtitleFontColor Field Value Type Description Color | Edit this page View Source DefaultSubtitleFontName Declaration public static string? DefaultSubtitleFontName Field Value Type Description string | Edit this page View Source DefaultSubtitleFontSize Declaration public static double DefaultSubtitleFontSize Field Value Type Description double | Edit this page View Source DefaultSubtitleTextAlignment Declaration public static TextAlignment DefaultSubtitleTextAlignment Field Value Type Description TextAlignment | Edit this page View Source DefaultTitleFontAttributes Declaration public static FontAttributes DefaultTitleFontAttributes Field Value Type Description FontAttributes | Edit this page View Source DefaultTitleFontColor Declaration public static Color DefaultTitleFontColor Field Value Type Description Color | Edit this page View Source DefaultTitleFontName Declaration public static string? DefaultTitleFontName Field Value Type Description string | Edit this page View Source DefaultTitleFontSize Declaration public static double DefaultTitleFontSize Field Value Type Description double | Edit this page View Source DefaultTitleTextAlignment Declaration public static TextAlignment DefaultTitleTextAlignment Field Value Type Description TextAlignment Properties | Edit this page View Source Anchor Anchor position of Callout Declaration public Point Anchor { get; set; } Property Value Type Description Point | Edit this page View Source BackgroundColor BackgroundColor of Callout Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color | Edit this page View Source Color Color of stroke around Callout Declaration public Color Color { get; set; } Property Value Type Description Color | Edit this page View Source ContentId Content of Callout Declaration public string? ContentId { get; set; } Property Value Type Description string | Edit this page View Source Feature Feature, which belongs to callout. Should be the same as for the pin to which this callout belongs. Declaration public GeometryFeature Feature { get; } Property Value Type Description GeometryFeature | Edit this page View Source IsClosableByClick Is Callout closable by a click on the callout Declaration public bool IsClosableByClick { get; set; } Property Value Type Description bool | Edit this page View Source IsVisible Is Callout visible on map Declaration public bool IsVisible { get; } Property Value Type Description bool | Edit this page View Source MaxWidth MaxWidth for Title and Subtitle of Callout Declaration public double MaxWidth { get; set; } Property Value Type Description double | Edit this page View Source Padding Padding around content of Callout Declaration public Thickness Padding { get; set; } Property Value Type Description Thickness | Edit this page View Source Pin Pin to which this callout belongs Declaration public Pin Pin { get; } Property Value Type Description Pin | Edit this page View Source RectRadius Radius of rounded corners of Callout Declaration public double RectRadius { get; set; } Property Value Type Description double | Edit this page View Source RotateWithMap Rotate Callout with map Declaration public bool RotateWithMap { get; set; } Property Value Type Description bool | Edit this page View Source Rotation Rotation of Callout around the anchor Declaration public double Rotation { get; set; } Property Value Type Description double | Edit this page View Source ShadowWidth Shadow width around Callout Declaration public double ShadowWidth { get; set; } Property Value Type Description double | Edit this page View Source Spacing Space between Title and Subtitle of Callout Declaration public double Spacing { get; set; } Property Value Type Description double | Edit this page View Source StrokeWidth Stroke width of frame around Callout Declaration public double StrokeWidth { get; set; } Property Value Type Description double | Edit this page View Source Subtitle Content of Callout detail label Declaration public string? Subtitle { get; set; } Property Value Type Description string | Edit this page View Source SubtitleFontAttributes Font attributes to render subtitle Declaration public FontAttributes SubtitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Edit this page View Source SubtitleFontColor Font color to render subtitle Declaration public Color SubtitleFontColor { get; set; } Property Value Type Description Color | Edit this page View Source SubtitleFontName Font name to use rendering subtitle Declaration public string? SubtitleFontName { get; set; } Property Value Type Description string | Edit this page View Source SubtitleFontSize Font size to rendering subtitle Declaration public double SubtitleFontSize { get; set; } Property Value Type Description double | Edit this page View Source SubtitleTextAlignment Text alignment of title Declaration public TextAlignment SubtitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Edit this page View Source TailAlignment Tail alignment of Callout Declaration public TailAlignment TailAlignment { get; set; } Property Value Type Description TailAlignment | Edit this page View Source TailHeight Height from arrow of Callout Declaration public double TailHeight { get; set; } Property Value Type Description double | Edit this page View Source TailPosition Relative position of anchor of Callout on the side given by TailAlignment Declaration public double TailPosition { get; set; } Property Value Type Description double | Edit this page View Source TailWidth Width from arrow of Callout Declaration public double TailWidth { get; set; } Property Value Type Description double | Edit this page View Source Title Content of Callout title label Declaration public string? Title { get; set; } Property Value Type Description string | Edit this page View Source TitleFontAttributes Font attributes to render title Declaration public FontAttributes TitleFontAttributes { get; set; } Property Value Type Description FontAttributes | Edit this page View Source TitleFontColor Font color to render title Declaration public Color TitleFontColor { get; set; } Property Value Type Description Color | Edit this page View Source TitleFontName Font name to use rendering title Declaration public string? TitleFontName { get; set; } Property Value Type Description string | Edit this page View Source TitleFontSize Font size to rendering title Declaration public double TitleFontSize { get; set; } Property Value Type Description double | Edit this page View Source TitleTextAlignment Text alignment of title Declaration public TextAlignment TitleTextAlignment { get; set; } Property Value Type Description TextAlignment | Edit this page View Source Type Type of Callout Declaration public CalloutType Type { get; set; } Property Value Type Description CalloutType Remarks Could be single, detail or custom. The last is a bitmap id for an owner drawn image. Methods | Edit this page View Source OnPropertyChanged(string?) Declaration protected virtual void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName | Edit this page View Source SetField<T>(ref T, T, string?) Declaration protected bool SetField<T>(ref T field, T value, string? propertyName = null) Parameters Type Name Description T field T value string propertyName Returns Type Description bool Type Parameters Name Description T Events | Edit this page View Source CalloutClicked Declaration public event EventHandler<CalloutClickedEventArgs>? CalloutClicked Event Type Type Description EventHandler<CalloutClickedEventArgs> | Edit this page View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.CalloutClickedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.CalloutClickedEventArgs.html",
    "title": "Class CalloutClickedEventArgs",
    "keywords": "Class CalloutClickedEventArgs Inheritance object EventArgs CalloutClickedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class CalloutClickedEventArgs : EventArgs Properties | Edit this page View Source Callout Callout that is clicked Declaration public Callout? Callout { get; } Property Value Type Description Callout | Edit this page View Source GestureType Number of taps Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description bool true if handled; otherwise, false. | Edit this page View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Edit this page View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Circle.html": {
    "href": "pages/Mapsui.UI.Maui.Circle.html",
    "title": "Class Circle",
    "keywords": "Class Circle Inheritance object Drawable Circle Implements IFeatureProvider INotifyPropertyChanged Inherited Members Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Drawable.PropertyChanged Drawable.SetField<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class Circle : Drawable, IFeatureProvider, INotifyPropertyChanged Constructors | Edit this page View Source Circle() Declaration public Circle() Properties | Edit this page View Source Center Center of circle Declaration public Position Center { get; set; } Property Value Type Description Position | Edit this page View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Color | Edit this page View Source Quality Quality for circle. Determines, how many points used to draw circle. 3 is poorest, 360 best quality. Declaration public double Quality { get; set; } Property Value Type Description double | Edit this page View Source Radius Radius of circle in meters Declaration public Distance Radius { get; set; } Property Value Type Description Distance Methods | Edit this page View Source OnPropertyChanged(string?) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName Overrides Drawable.OnPropertyChanged(string?) Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Distance.html": {
    "href": "pages/Mapsui.UI.Maui.Distance.html",
    "title": "Struct Distance",
    "keywords": "Struct Distance Distance between to positions Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public struct Distance Constructors | Edit this page View Source Distance(double) Constructor for Mapsui.UI.Forms.Distance object. Declaration public Distance(double meters) Parameters Type Name Description double meters Meters. Properties | Edit this page View Source Kilometers Distance in kilometers Declaration public double Kilometers { get; } Property Value Type Description double Distance in kilometers | Edit this page View Source Meters Distance in meters Declaration public readonly double Meters { get; } Property Value Type Description double Distance in meters | Edit this page View Source Miles Distance in miles Declaration public double Miles { get; } Property Value Type Description double Distance im miles | Edit this page View Source NauticalMiles Distance in nautic miles Declaration public double NauticalMiles { get; } Property Value Type Description double Distance in nautical miles Methods | Edit this page View Source Equals(Distance) Determines whether the specified Distance is equal to the current Mapsui.UI.Forms.Distance. Declaration public bool Equals(Distance other) Parameters Type Name Description Distance other The Distance to compare with the current Mapsui.UI.Forms.Distance Returns Type Description bool True if the specified Distance is equal to the current Mapsui.UI.Forms.Distance; otherwise, false. | Edit this page View Source Equals(object?) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source FromKilometers(double) Create distance object for distance in kilometers Declaration public static Distance FromKilometers(double kilometers) Parameters Type Name Description double kilometers Distance in kilometers Returns Type Description Distance Distance object | Edit this page View Source FromMeters(double) Create distance object for distance in meters Declaration public static Distance FromMeters(double meters) Parameters Type Name Description double meters Distance in meters Returns Type Description Distance Distance object | Edit this page View Source FromMiles(double) Create distance object for distance in miles Declaration public static Distance FromMiles(double miles) Parameters Type Name Description double miles Distance in miles Returns Type Description Distance Distance object | Edit this page View Source FromNauticalMiles(double) Create distance object for distance in nautic miles Declaration public static Distance FromNauticalMiles(double nauticMiles) Parameters Type Name Description double nauticMiles Distance in nautic miles Returns Type Description Distance Distance object | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() Operators | Edit this page View Source operator ==(Distance, Distance) Declaration public static bool operator ==(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description bool | Edit this page View Source operator !=(Distance, Distance) Declaration public static bool operator !=(Distance left, Distance right) Parameters Type Name Description Distance left Distance right Returns Type Description bool"
  },
  "pages/Mapsui.UI.Maui.DrawableClickedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.DrawableClickedEventArgs.html",
    "title": "Class DrawableClickedEventArgs",
    "keywords": "Class DrawableClickedEventArgs Inheritance object EventArgs DrawableClickedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class DrawableClickedEventArgs : EventArgs Properties | Edit this page View Source GestureType Number of taps Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description bool true if handled; otherwise, false. | Edit this page View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position | Edit this page View Source ScreenPoint Point of click in screen coordinates Declaration public Point ScreenPoint { get; } Property Value Type Description Point Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Extensions.ColorExtensions.html": {
    "href": "pages/Mapsui.UI.Maui.Extensions.ColorExtensions.html",
    "title": "Class ColorExtensions",
    "keywords": "Class ColorExtensions Inheritance object ColorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui.Extensions Assembly: Mapsui.UI.Maui.dll Syntax public static class ColorExtensions Methods | Edit this page View Source ToMapsui(Color) Convert Microsoft.Maui.Graphics.Color to Mapsui.Style.Color Declaration public static Color ToMapsui(this Color color) Parameters Type Name Description Color color Color in Microsoft.Maui.Graphics.Color format Returns Type Description Color Color in Mapsui.Styles.Color format | Edit this page View Source ToMaui(Color) Convert Mapsui.Styles.Color to Microsoft.Maui.Graphics.Color Declaration public static Color ToMaui(this Color color) Parameters Type Name Description Color color Color in Mapsui format Returns Type Description Color Color in Microsoft.Maui.Graphics format | Edit this page View Source ToNative(Color) Declaration [Obsolete(\"Use ToMaui instead\", true)] public static Color ToNative(this Color color) Parameters Type Name Description Color color Returns Type Description Color"
  },
  "pages/Mapsui.UI.Maui.Extensions.PositionExtensions.html": {
    "href": "pages/Mapsui.UI.Maui.Extensions.PositionExtensions.html",
    "title": "Class PositionExtensions",
    "keywords": "Class PositionExtensions Inheritance object PositionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui.Extensions Assembly: Mapsui.UI.Maui.dll Syntax public static class PositionExtensions Methods | Edit this page View Source ToMaui(MPoint) Convert Mapsui.Geometries.Point to Mapsui.UI.Maui.Position Declaration public static Position ToMaui(this MPoint point) Parameters Type Name Description MPoint point Point in Mapsui format Returns Type Description Position Return a Position type | Edit this page View Source ToNative(MPoint) Declaration public static Position ToNative(this MPoint point) Parameters Type Name Description MPoint point Returns Type Description Position"
  },
  "pages/Mapsui.UI.Maui.Extensions.TextAlignmentExtensions.html": {
    "href": "pages/Mapsui.UI.Maui.Extensions.TextAlignmentExtensions.html",
    "title": "Class TextAlignmentExtensions",
    "keywords": "Class TextAlignmentExtensions Inheritance object TextAlignmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui.Extensions Assembly: Mapsui.UI.Maui.dll Syntax public static class TextAlignmentExtensions Methods | Edit this page View Source ToMapsui(TextAlignment) Convert Microsoft.Maui.TextAlignment to Mapsui/RichTextKit.Styles.Color Declaration public static Alignment ToMapsui(this TextAlignment textAlignment) Parameters Type Name Description TextAlignment textAlignment TextAlignment in Microsoft.Maui format Returns Type Description Alignment TextAlignment in Mapsui/RichTextKit format"
  },
  "pages/Mapsui.UI.Maui.Extensions.ZoomLevelExtensions.html": {
    "href": "pages/Mapsui.UI.Maui.Extensions.ZoomLevelExtensions.html",
    "title": "Class ZoomLevelExtensions",
    "keywords": "Class ZoomLevelExtensions Inheritance object ZoomLevelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui.Extensions Assembly: Mapsui.UI.Maui.dll Syntax public static class ZoomLevelExtensions Methods | Edit this page View Source ToMapsuiResolution(double) Convert zoom level (as described at https://wiki.openstreetmap.org/wiki/Zoom_levels) into a Mapsui resolution Declaration public static double ToMapsuiResolution(this double zoomLevel) Parameters Type Name Description double zoomLevel Zoom level Returns Type Description double Resolution in Mapsui format"
  },
  "pages/Mapsui.UI.Maui.Extensions.html": {
    "href": "pages/Mapsui.UI.Maui.Extensions.html",
    "title": "Namespace Mapsui.UI.Maui.Extensions",
    "keywords": "Namespace Mapsui.UI.Maui.Extensions Classes ColorExtensions PositionExtensions TextAlignmentExtensions ZoomLevelExtensions"
  },
  "pages/Mapsui.UI.Maui.KnownColor.html": {
    "href": "pages/Mapsui.UI.Maui.KnownColor.html",
    "title": "Class KnownColor",
    "keywords": "Class KnownColor Known Color Helper for Maui Inheritance object KnownColor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public static class KnownColor Properties | Edit this page View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Edit this page View Source DarkGray Declaration public static Color DarkGray { get; } Property Value Type Description Color | Edit this page View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Edit this page View Source White Declaration public static Color White { get; } Property Value Type Description Color"
  },
  "pages/Mapsui.UI.Maui.MapClickedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.MapClickedEventArgs.html",
    "title": "Class MapClickedEventArgs",
    "keywords": "Class MapClickedEventArgs Inheritance object EventArgs MapClickedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class MapClickedEventArgs : EventArgs Constructors | Edit this page View Source MapClickedEventArgs(Position, GestureType) Declaration public MapClickedEventArgs(Position point, GestureType gestureType) Parameters Type Name Description Position point GestureType gestureType Properties | Edit this page View Source GestureType Number of taps Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description bool true if handled; otherwise, false. | Edit this page View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.MapControl.html": {
    "href": "pages/Mapsui.UI.Maui.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl UI component that displays an interactive map Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView ContentView MapControl MapView Implements IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout IMapControl IDisposable INotifyPropertyChanged Inherited Members ContentView.ContentProperty ContentView.OnBindingContextChanged() ContentView.Content TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(double, double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.InvalidateMeasureOverride() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class MapControl : ContentView, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Edit this page View Source MapControl() Declaration public MapControl() Fields | Edit this page View Source MapProperty Declaration public static readonly BindableProperty MapProperty Field Value Type Description BindableProperty | Edit this page View Source UseGPU Declaration public static bool UseGPU Field Value Type Description bool Properties | Edit this page View Source IsStaleTimeSpan If finger position is not updated during the IsStaleTimeSpan period, the touch event is considered stale and is removed. Touch input is not always reliable. This could be because of bugs in SkiaSharp, WinUI, iOS or Android, MAUI, in hardware drivers, or hardware. To work around this we remove the touch events if they did not change after some period. Making this period too short could remove valid events, making it too long would result in a longer period of dangling ghost touches. You might want to tweak this value to your needs. Declaration public TimeSpan IsStaleTimeSpan { get; set; } Property Value Type Description TimeSpan | Edit this page View Source Map Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source ClearTouchState() Clears the Touch State Declaration public void ClearTouchState() | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ~MapControl() Declaration protected ~MapControl() | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnParentSet() Raises the (internal) ParentSet event. Declaration protected override void OnParentSet() Overrides NavigableElement.OnParentSet() Remarks Will set the NavigationProxy's inner navigation object to closest topmost element capable of handling navigation calls. See Also OnParentSet() | Edit this page View Source OnPropertyChanged(string) Method that is called when a bound property is changed. Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName The name of the bound property that changed. Overrides Element.OnPropertyChanged(string) | Edit this page View Source OpenInBrowser(string) Public functions Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source RunOnUIThread(Action) Declaration protected void RunOnUIThread(Action action) Parameters Type Name Description Action action | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout IMapControl IDisposable INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.MapLongClickedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.MapLongClickedEventArgs.html",
    "title": "Class MapLongClickedEventArgs",
    "keywords": "Class MapLongClickedEventArgs Inheritance object EventArgs MapLongClickedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class MapLongClickedEventArgs : EventArgs Properties | Edit this page View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description bool true if handled; otherwise, false. | Edit this page View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.MapSpan.html": {
    "href": "pages/Mapsui.UI.Maui.MapSpan.html",
    "title": "Class MapSpan",
    "keywords": "Class MapSpan MapSpan represents an area of the earth Inheritance object MapSpan Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class MapSpan Constructors | Edit this page View Source MapSpan(Position, double, double) Initializes a new instance of the Mapsui.UI.Forms.MapSpan class. Declaration public MapSpan(Position center, double latitudeDegrees, double longitudeDegrees) Parameters Type Name Description Position center Center of the MapSpan double latitudeDegrees Extend of MapSpan in latitude direction in degrees double longitudeDegrees Extend of MapSpan in longitude direction in degrees Properties | Edit this page View Source Center Center of MapSpan Declaration public Position Center { get; } Property Value Type Description Position Center of MapSpan | Edit this page View Source LatitudeDegrees Extend of MapSpan in latitude degrees Declaration public double LatitudeDegrees { get; } Property Value Type Description double Extend in latitude degrees | Edit this page View Source LongitudeDegrees Extend of MapSpan in longitude degrees Declaration public double LongitudeDegrees { get; } Property Value Type Description double Extend in longitude degrees | Edit this page View Source Radius Radius of smallest circle thats fit into MapSpan Declaration public Distance Radius { get; } Property Value Type Description Distance The radius. Methods | Edit this page View Source ClampLatitude(double, double) Clamp latitude between north and south Declaration public MapSpan ClampLatitude(double north, double south) Parameters Type Name Description double north Maximal latitude degrees for north double south Maximal latitude degrees for south Returns Type Description MapSpan MapSpan with center clamped between north and south | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current Mapsui.UI.Forms.MapSpan Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with current Mapsui.UI.Forms.MapSpan Returns Type Description bool true if the specified object is equal to the current Mapsui.UI.Forms.MapSpan; otherwise, false. Overrides object.Equals(object) | Edit this page View Source FromCenterAndRadius(Position, Distance) Create a new MapSpan from center and radius Declaration public static MapSpan FromCenterAndRadius(Position center, Distance radius) Parameters Type Name Description Position center Center for new MapSpan Distance radius Radius for new MapSpan Returns Type Description MapSpan New MapSpan | Edit this page View Source FromPositions(IEnumerable<Position>) Create a new MapSpan from multiple positions Declaration public static MapSpan FromPositions(IEnumerable<Position> positions) Parameters Type Name Description IEnumerable<Position> positions List of positions to get the new MapSpan Returns Type Description MapSpan New MapSpan | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source WithZoom(double) Create a new MapSPan with given zoom factor Declaration public MapSpan WithZoom(double zoomFactor) Parameters Type Name Description double zoomFactor Zoom factor Returns Type Description MapSpan New MapSpan Operators | Edit this page View Source operator ==(MapSpan, MapSpan) Declaration public static bool operator ==(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description bool | Edit this page View Source operator !=(MapSpan, MapSpan) Declaration public static bool operator !=(MapSpan left, MapSpan right) Parameters Type Name Description MapSpan left MapSpan right Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.MapView.html": {
    "href": "pages/Mapsui.UI.Maui.MapView.html",
    "title": "Class MapView",
    "keywords": "Class MapView Class, that uses the API of the original Xamarin.Forms MapView Inheritance object BindableObject Element StyleableElement NavigableElement VisualElement View Layout TemplatedView ContentView MapControl MapView Implements IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout IMapControl IDisposable INotifyPropertyChanged IEnumerable<Pin> IEnumerable Inherited Members MapControl.UseGPU MapControl.IsStaleTimeSpan MapControl.InvalidateCanvas() MapControl.OpenInBrowser(string) MapControl.ClearTouchState() MapControl.RunOnUIThread(Action) MapControl.Dispose() MapControl.GetPixelDensity() MapControl.OnParentSet() MapControl.MaxTapGestureMovement MapControl.UseFling MapControl.Info MapControl.MapTapped MapControl.MapPointerPressed MapControl.MapPointerMoved MapControl.MapPointerReleased MapControl.ForceUpdate() MapControl.PropertyChanged MapControl.Unsubscribe() MapControl.Refresh(ChangeType) MapControl.RefreshGraphics() MapControl.MapProperty MapControl.Map MapControl.RefreshData(ChangeType) MapControl.OnMapInfo(MapInfoEventArgs) MapControl.GetSnapshot(IEnumerable<ILayer>, RenderFormat, int) MapControl.GetMapInfo(ScreenPosition, IEnumerable<ILayer>) MapControl.GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) MapControl.OnMapPointerPressed(ScreenPosition, MPoint) MapControl.OnMapPointerMoved(ScreenPosition, MPoint, GestureType) MapControl.OnMapPointerReleased(ScreenPosition, MPoint) ContentView.ContentProperty ContentView.OnBindingContextChanged() ContentView.Content TemplatedView.ControlTemplateProperty TemplatedView.LayoutChildren(double, double, double, double) TemplatedView.OnMeasure(double, double) TemplatedView.OnApplyTemplate() TemplatedView.OnChildRemoved(Element, int) TemplatedView.GetTemplateChild(string) TemplatedView.ResolveControlTemplate() TemplatedView.MeasureOverride(double, double) TemplatedView.ArrangeOverride(Rect) TemplatedView.ControlTemplate Layout.IsClippedToBoundsProperty Layout.CascadeInputTransparentProperty Layout.PaddingProperty Layout.ForceLayout() Layout.Measure(double, double, MeasureFlags) Layout.LayoutChildIntoBoundingRegion(VisualElement, Rect) Layout.LowerChild(View) Layout.RaiseChild(View) Layout.InvalidateLayout() Layout.OnChildMeasureInvalidated(object, EventArgs) Layout.OnChildMeasureInvalidated() Layout.OnSizeAllocated(double, double) Layout.ShouldInvalidateOnChildAdded(View) Layout.ShouldInvalidateOnChildRemoved(View) Layout.UpdateChildrenLayout() Layout.InvalidateMeasureOverride() Layout.CrossPlatformMeasure(double, double) Layout.CrossPlatformArrange(Rect) Layout.IsClippedToBounds Layout.Padding Layout.CascadeInputTransparent Layout.LayoutChanged View.VerticalOptionsProperty View.HorizontalOptionsProperty View.MarginProperty View.propertyMapper View.ChangeVisualState() View.GetChildElements(Point) View.GetRendererOverrides<T>() View.GestureController View.GestureRecognizers View.HorizontalOptions View.Margin View.VerticalOptions VisualElement.NavigationProperty VisualElement.StyleProperty VisualElement.InputTransparentProperty VisualElement.IsEnabledProperty VisualElement.XProperty VisualElement.YProperty VisualElement.AnchorXProperty VisualElement.AnchorYProperty VisualElement.TranslationXProperty VisualElement.TranslationYProperty VisualElement.WidthProperty VisualElement.HeightProperty VisualElement.RotationProperty VisualElement.RotationXProperty VisualElement.RotationYProperty VisualElement.ScaleProperty VisualElement.ScaleXProperty VisualElement.ScaleYProperty VisualElement.ClipProperty VisualElement.VisualProperty VisualElement.IsVisibleProperty VisualElement.OpacityProperty VisualElement.BackgroundColorProperty VisualElement.BackgroundProperty VisualElement.BehaviorsProperty VisualElement.TriggersProperty VisualElement.WidthRequestProperty VisualElement.HeightRequestProperty VisualElement.MinimumWidthRequestProperty VisualElement.MinimumHeightRequestProperty VisualElement.MaximumWidthRequestProperty VisualElement.MaximumHeightRequestProperty VisualElement.IsFocusedProperty VisualElement.FlowDirectionProperty VisualElement.WindowProperty VisualElement.ShadowProperty VisualElement.ZIndexProperty VisualElement.BatchBegin() VisualElement.BatchCommit() VisualElement.Focus() VisualElement.Measure(double, double) VisualElement.Unfocus() VisualElement.InvalidateMeasure() VisualElement.OnChildAdded(Element) VisualElement.OnChildrenReordered() VisualElement.SizeAllocated(double, double) VisualElement.RefreshIsEnabledProperty() VisualElement.Arrange(Rect) VisualElement.Layout(Rect) VisualElement.MapBackgroundColor(IViewHandler, IView) VisualElement.MapBackgroundImageSource(IViewHandler, IView) VisualElement.Visual VisualElement.FlowDirection VisualElement.Window VisualElement.AnchorX VisualElement.AnchorY VisualElement.BackgroundColor VisualElement.Background VisualElement.Behaviors VisualElement.Bounds VisualElement.Height VisualElement.HeightRequest VisualElement.InputTransparent VisualElement.IsEnabled VisualElement.IsEnabledCore VisualElement.IsFocused VisualElement.IsVisible VisualElement.MinimumHeightRequest VisualElement.MinimumWidthRequest VisualElement.MaximumHeightRequest VisualElement.MaximumWidthRequest VisualElement.Opacity VisualElement.Rotation VisualElement.RotationX VisualElement.RotationY VisualElement.Scale VisualElement.ScaleX VisualElement.ScaleY VisualElement.TranslationX VisualElement.TranslationY VisualElement.Triggers VisualElement.Width VisualElement.WidthRequest VisualElement.X VisualElement.Y VisualElement.Clip VisualElement.Resources VisualElement.Frame VisualElement.Handler VisualElement.Shadow VisualElement.ZIndex VisualElement.DesiredSize VisualElement.IsLoaded VisualElement.ChildrenReordered VisualElement.Focused VisualElement.MeasureInvalidated VisualElement.SizeChanged VisualElement.Unfocused VisualElement.Loaded VisualElement.Unloaded NavigableElement.Navigation StyleableElement.Style StyleableElement.StyleClass StyleableElement.class Element.AutomationIdProperty Element.ClassIdProperty Element.InsertLogicalChild(int, Element) Element.AddLogicalChild(Element) Element.RemoveLogicalChild(Element) Element.ClearLogicalChildren() Element.FindByName(string) Element.RemoveDynamicResource(BindableProperty) Element.SetDynamicResource(BindableProperty, string) Element.OnParentChanging(ParentChangingEventArgs) Element.OnParentChanged() Element.OnHandlerChanging(HandlerChangingEventArgs) Element.OnHandlerChanged() Element.MapAutomationPropertiesIsInAccessibleTree(IElementHandler, Element) Element.MapAutomationPropertiesExcludedWithChildren(IElementHandler, Element) Element.AutomationId Element.ClassId Element.Effects Element.Id Element.StyleId Element.Parent Element.ChildAdded Element.ChildRemoved Element.DescendantAdded Element.DescendantRemoved Element.ParentChanging Element.ParentChanged Element.HandlerChanging Element.HandlerChanged BindableObject.BindingContextProperty BindableObject.ClearValue(BindableProperty) BindableObject.ClearValue(BindablePropertyKey) BindableObject.GetValue(BindableProperty) BindableObject.IsSet(BindableProperty) BindableObject.RemoveBinding(BindableProperty) BindableObject.SetBinding(BindableProperty, BindingBase) BindableObject.ApplyBindings() BindableObject.OnPropertyChanging(string) BindableObject.UnapplyBindings() BindableObject.SetValue(BindableProperty, object) BindableObject.SetValue(BindablePropertyKey, object) BindableObject.CoerceValue(BindableProperty) BindableObject.CoerceValue(BindablePropertyKey) BindableObject.Dispatcher BindableObject.BindingContext BindableObject.PropertyChanging BindableObject.BindingContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class MapView : MapControl, IEffectControlProvider, IToolTipElement, IContextFlyoutElement, IAnimatable, IViewController, IVisualElementController, IElementController, IGestureController, IGestureRecognizers, IPropertyMapperView, IHotReloadableView, IReplaceableView, ILayout, ILayoutController, IVisualTreeElement, IContentView, IView, IElement, ITransform, IPadding, ICrossPlatformLayout, IMapControl, IDisposable, INotifyPropertyChanged, IEnumerable<Pin>, IEnumerable Constructors | Edit this page View Source MapView() Declaration public MapView() Fields | Edit this page View Source ButtonMarginProperty Declaration public static readonly BindableProperty ButtonMarginProperty Field Value Type Description BindableProperty | Edit this page View Source ButtonSizeProperty Declaration public static readonly BindableProperty ButtonSizeProperty Field Value Type Description BindableProperty | Edit this page View Source ButtonSpacingProperty Declaration public static readonly BindableProperty ButtonSpacingProperty Field Value Type Description BindableProperty | Edit this page View Source IsMyLocationButtonVisibleProperty Declaration public static readonly BindableProperty IsMyLocationButtonVisibleProperty Field Value Type Description BindableProperty | Edit this page View Source IsNorthingButtonVisibleProperty Declaration public static readonly BindableProperty IsNorthingButtonVisibleProperty Field Value Type Description BindableProperty | Edit this page View Source IsZoomButtonVisibleProperty Declaration public static readonly BindableProperty IsZoomButtonVisibleProperty Field Value Type Description BindableProperty | Edit this page View Source MyLocationEnabledProperty Declaration public static readonly BindableProperty MyLocationEnabledProperty Field Value Type Description BindableProperty | Edit this page View Source MyLocationFollowProperty Declaration public static readonly BindableProperty MyLocationFollowProperty Field Value Type Description BindableProperty | Edit this page View Source PanLockProperty Declaration public static readonly BindableProperty PanLockProperty Field Value Type Description BindableProperty | Edit this page View Source ReSnapRotationDegreesProperty Declaration public static readonly BindableProperty ReSnapRotationDegreesProperty Field Value Type Description BindableProperty | Edit this page View Source RotationLockProperty Declaration public static readonly BindableProperty RotationLockProperty Field Value Type Description BindableProperty | Edit this page View Source SelectedPinProperty Declaration public static readonly BindableProperty SelectedPinProperty Field Value Type Description BindableProperty | Edit this page View Source UnSnapRotationDegreesProperty Declaration public static readonly BindableProperty UnSnapRotationDegreesProperty Field Value Type Description BindableProperty | Edit this page View Source UniqueCalloutProperty Declaration public static readonly BindableProperty UniqueCalloutProperty Field Value Type Description BindableProperty | Edit this page View Source UseDoubleTapProperty Declaration public static readonly BindableProperty UseDoubleTapProperty Field Value Type Description BindableProperty | Edit this page View Source UseFlingProperty Declaration public static readonly BindableProperty UseFlingProperty Field Value Type Description BindableProperty | Edit this page View Source ZoomLockProperty Declaration public static readonly BindableProperty ZoomLockProperty Field Value Type Description BindableProperty Properties | Edit this page View Source ButtonMargin Margin for buttons Declaration public Thickness ButtonMargin { get; set; } Property Value Type Description Thickness | Edit this page View Source ButtonSize Size of buttons in x- and y-direction Declaration public double ButtonSize { get; set; } Property Value Type Description double | Edit this page View Source ButtonSpacing Spacing between buttons Declaration public double ButtonSpacing { get; set; } Property Value Type Description double | Edit this page View Source Drawables List of drawables like polyline and polygon Declaration public IList<Drawable> Drawables { get; } Property Value Type Description IList<Drawable> | Edit this page View Source IsMyLocationButtonVisible Enable My Location button Declaration public bool IsMyLocationButtonVisible { get; set; } Property Value Type Description bool | Edit this page View Source IsNorthingButtonVisible Enable Northing button Declaration public bool IsNorthingButtonVisible { get; set; } Property Value Type Description bool | Edit this page View Source IsZoomButtonVisible Enable zoom buttons Declaration public bool IsZoomButtonVisible { get; set; } Property Value Type Description bool | Edit this page View Source MapInfoLayers Declaration public IEnumerable<ILayer> MapInfoLayers { get; } Property Value Type Description IEnumerable<ILayer> | Edit this page View Source MyLocationEnabled Should my location be visible on map Declaration public bool MyLocationEnabled { get; set; } Property Value Type Description bool Remarks Needs a BeginInvokeOnMainThread to change MyLocationLayer.Enabled | Edit this page View Source MyLocationFollow Should center of map follow my location Declaration public bool MyLocationFollow { get; set; } Property Value Type Description bool | Edit this page View Source MyLocationLayer MyLocation layer Declaration public MyLocationLayer MyLocationLayer { get; } Property Value Type Description MyLocationLayer | Edit this page View Source PanLock Enable panning Declaration public bool PanLock { get; set; } Property Value Type Description bool | Edit this page View Source Pins Pins on map Declaration public IList<Pin> Pins { get; } Property Value Type Description IList<Pin> | Edit this page View Source RotationLock Enable rotation with pinch gesture Declaration public bool RotationLock { get; set; } Property Value Type Description bool | Edit this page View Source SelectedPin Selected pin Declaration public Pin? SelectedPin { get; set; } Property Value Type Description Pin | Edit this page View Source UniqueCallout Single or multiple callouts possible Declaration public bool UniqueCallout { get; set; } Property Value Type Description bool | Edit this page View Source ZoomLock Enable zooming Declaration public bool ZoomLock { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides MapControl.Dispose(bool) | Edit this page View Source GetCallouts() Get callouts on map (those that are currently visible). Declaration public IReadOnlyList<Callout> GetCallouts() Returns Type Description IReadOnlyList<Callout> | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<Pin> GetEnumerator() Returns Type Description IEnumerator<Pin> An enumerator that can be used to iterate through the collection. | Edit this page View Source HideCallouts() Hide all visible callouts Declaration public void HideCallouts() | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected override bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool Overrides MapControl.OnMapTapped(ScreenPosition, MPoint, GestureType) | Edit this page View Source OnPropertyChanged(string) Method that is called when a bound property is changed. Declaration protected override void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName The name of the bound property that changed. Overrides MapControl.OnPropertyChanged(string) | Edit this page View Source Reset() Declaration public void Reset() Events | Edit this page View Source MapClicked Occurs when map clicked Declaration public event EventHandler<MapClickedEventArgs>? MapClicked Event Type Type Description EventHandler<MapClickedEventArgs> | Edit this page View Source PinClicked Occurs when a pin clicked Declaration public event EventHandler<PinClickedEventArgs>? PinClicked Event Type Type Description EventHandler<PinClickedEventArgs> | Edit this page View Source SelectedPinChanged Occurs when selected pin changed Declaration public event EventHandler<SelectedPinChangedEventArgs>? SelectedPinChanged Event Type Type Description EventHandler<SelectedPinChangedEventArgs> Implements IEffectControlProvider IToolTipElement IContextFlyoutElement IAnimatable IViewController IVisualElementController IElementController IGestureController IGestureRecognizers IPropertyMapperView IHotReloadableView IReplaceableView ILayout ILayoutController IVisualTreeElement IContentView IView IElement ITransform IPadding ICrossPlatformLayout IMapControl IDisposable INotifyPropertyChanged IEnumerable<T> IEnumerable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Pin.html": {
    "href": "pages/Mapsui.UI.Maui.Pin.html",
    "title": "Class Pin",
    "keywords": "Class Pin Inheritance object Pin Implements IFeatureProvider INotifyPropertyChanged Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class Pin : IFeatureProvider, INotifyPropertyChanged Constructors | Edit this page View Source Pin() Initializes a new instance of the Mapsui.UI.Forms.Pin class Declaration public Pin() | Edit this page View Source Pin(MapView) Initializes a new instance of the Mapsui.UI.Forms.Pin class Declaration public Pin(MapView mapView) Parameters Type Name Description MapView mapView MapView to which this pin belongs Properties | Edit this page View Source Address Adress (like street) of pin Declaration public string? Address { get; set; } Property Value Type Description string | Edit this page View Source Anchor Anchor of bitmap in pixel Declaration public Point Anchor { get; set; } Property Value Type Description Point | Edit this page View Source Callout Gets the callout Declaration public Callout Callout { get; } Property Value Type Description Callout Callout for this pin | Edit this page View Source Color Color of pin Declaration public Color Color { get; set; } Property Value Type Description Color | Edit this page View Source Feature Mapsui feature for this pin Declaration public GeometryFeature? Feature { get; } Property Value Type Description GeometryFeature Mapsui feature | Edit this page View Source Height Height of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Height { get; set; } Property Value Type Description double | Edit this page View Source ImageSource Gets or sets an ImageSource for the Pin Declaration public string? ImageSource { get; set; } Property Value Type Description string | Edit this page View Source IsVisible Determins, if the pin is drawn on map Declaration public bool IsVisible { get; set; } Property Value Type Description bool | Edit this page View Source Label Label of pin Declaration public string? Label { get; set; } Property Value Type Description string | Edit this page View Source MaxVisible MaxVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description double | Edit this page View Source MinVisible MinVisible for pin in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description double | Edit this page View Source Position Position of pin, place where anchor is Declaration public Position Position { get; set; } Property Value Type Description Position | Edit this page View Source RotateWithMap When true a symbol will rotate along with the rotation of the map. The default is false. Declaration public bool RotateWithMap { get; set; } Property Value Type Description bool | Edit this page View Source Rotation Rotation in degrees around the anchor point Declaration public float Rotation { get; set; } Property Value Type Description float | Edit this page View Source Scale Scaling of pin Declaration public float Scale { get; set; } Property Value Type Description float | Edit this page View Source Tag Tag holding free data Declaration public object? Tag { get; set; } Property Value Type Description object | Edit this page View Source Transparency Transparency of pin Declaration public float Transparency { get; set; } Property Value Type Description float | Edit this page View Source Type Type of pin. There are some predefined pins. Declaration public PinType Type { get; set; } Property Value Type Description PinType | Edit this page View Source Width Width of the bitmap after scaling, if there is one, if not, than -1 Declaration public double Width { get; set; } Property Value Type Description double Methods | Edit this page View Source Equals(object?) Determines whether the specified object is equal to the current Mapsui.UI.Forms.Pin. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current Mapsui.UI.Forms.Pin. Returns Type Description bool true if the specified object is equal to the current Mapsui.UI.Forms.Pin; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Edit this page View Source HideCallout() Hide corresponding callout Declaration public void HideCallout() | Edit this page View Source IsCalloutVisible() Check visibility for corresponding callout Declaration public bool IsCalloutVisible() Returns Type Description bool True, if callout is visible on map | Edit this page View Source OnPropertyChanged(string?) Declaration protected virtual void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName | Edit this page View Source SetField<T>(ref T, T, string?) Declaration protected bool SetField<T>(ref T field, T value, string? propertyName = null) Parameters Type Name Description T field T value string propertyName Returns Type Description bool Type Parameters Name Description T | Edit this page View Source ShowCallout() Show corresponding callout Declaration public void ShowCallout() Events | Edit this page View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Operators | Edit this page View Source operator ==(Pin?, Pin?) Declaration public static bool operator ==(Pin? left, Pin? right) Parameters Type Name Description Pin left Pin right Returns Type Description bool | Edit this page View Source operator !=(Pin?, Pin?) Declaration public static bool operator !=(Pin? left, Pin? right) Parameters Type Name Description Pin left Pin right Returns Type Description bool Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.PinClickedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.PinClickedEventArgs.html",
    "title": "Class PinClickedEventArgs",
    "keywords": "Class PinClickedEventArgs Inheritance object EventArgs PinClickedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class PinClickedEventArgs : EventArgs Properties | Edit this page View Source GestureType Number of taps Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source Handled Flag, if this event was handled Declaration public bool Handled { get; set; } Property Value Type Description bool true if handled; otherwise, false. | Edit this page View Source Pin Pin that was clicked Declaration public Pin Pin { get; } Property Value Type Description Pin | Edit this page View Source Point Point of click in EPSG:4326 coordinates Declaration public Position Point { get; } Property Value Type Description Position Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.PinType.html": {
    "href": "pages/Mapsui.UI.Maui.PinType.html",
    "title": "Enum PinType",
    "keywords": "Enum PinType Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public enum PinType Fields Name Description ImageSource Pin as ImageSource Pin Pin with image, which could change color"
  },
  "pages/Mapsui.UI.Maui.Polygon.html": {
    "href": "pages/Mapsui.UI.Maui.Polygon.html",
    "title": "Class Polygon",
    "keywords": "Class Polygon Inheritance object Drawable Polygon Implements IFeatureProvider INotifyPropertyChanged Inherited Members Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Drawable.PropertyChanged Drawable.SetField<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class Polygon : Drawable, IFeatureProvider, INotifyPropertyChanged Constructors | Edit this page View Source Polygon() Initializes a new instance of the Mapsui.UI.Forms.Polygon class. Declaration public Polygon() Properties | Edit this page View Source FillColor Color to fill circle with Declaration public Color FillColor { get; set; } Property Value Type Description Color | Edit this page View Source Holes Holes contained by polygon Declaration public IList<Position[]> Holes { get; } Property Value Type Description IList<Position[]> | Edit this page View Source Positions Outer contour of polygon Declaration public IList<Position> Positions { get; } Property Value Type Description IList<Position> Methods | Edit this page View Source OnPropertyChanged(string?) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName Overrides Drawable.OnPropertyChanged(string?) Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Polyline.html": {
    "href": "pages/Mapsui.UI.Maui.Polyline.html",
    "title": "Class Polyline",
    "keywords": "Class Polyline Inheritance object Drawable Polyline Implements IFeatureProvider INotifyPropertyChanged Inherited Members Drawable.Label Drawable.StrokeWidth Drawable.StrokeColor Drawable.MinVisible Drawable.MaxVisible Drawable.ZIndex Drawable.IsClickable Drawable.Tag Drawable.Feature Drawable.Clicked Drawable.PropertyChanged Drawable.SetField<T>(ref T, T, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public class Polyline : Drawable, IFeatureProvider, INotifyPropertyChanged Constructors | Edit this page View Source Polyline() Initializes a new instance of the Mapsui.UI.Forms.Polyline class. Declaration public Polyline() | Edit this page View Source Polyline(string) Initializes a new instance of the Mapsui.UI.Forms.Polyline class from encoded string as described here https://developers.google.com/maps/documentation/utilities/polylinealgorithm Declaration public Polyline(string encodedPolyline) Parameters Type Name Description string encodedPolyline Encoded polyline Properties | Edit this page View Source Positions Positions of line Declaration public IList<Position> Positions { get; } Property Value Type Description IList<Position> Methods | Edit this page View Source OnPropertyChanged(string?) Declaration protected override void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName Overrides Drawable.OnPropertyChanged(string?) Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Position.html": {
    "href": "pages/Mapsui.UI.Maui.Position.html",
    "title": "Struct Position",
    "keywords": "Struct Position Structure holding latitude and longitude of a position in spherical coordinate system Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public struct Position Constructors | Edit this page View Source Position(Position) Initializes a new instance of the Mapsui.UI.Forms.Position from position Declaration public Position(Position point) Parameters Type Name Description Position point Position to use | Edit this page View Source Position(double, double) Initializes a new instance of the Mapsui.UI.Forms.Position from latitude and longitude Declaration public Position(double latitude, double longitude) Parameters Type Name Description double latitude Latitude of position double longitude Longitude of position Fields | Edit this page View Source DecimalDegrees Format for coordinates with decimal degrees Declaration public const string DecimalDegrees = \"P DD.ddd°|P DDD.ddd°|N|S|E|W\" Field Value Type Description string | Edit this page View Source DecimalMinutes Format for coordinates with decimal minutes Declaration public const string DecimalMinutes = \"P DD° MM.MMM'|P DDD° MM.MMM'|N|S|E|W\" Field Value Type Description string | Edit this page View Source DecimalSeconds Format for coordinates with decimal seconds Declaration public const string DecimalSeconds = \"P DD° MM' SS.sss\\\"|P DDD° MM' SS.sss\\\"|N|S|E|W\" Field Value Type Description string Properties | Edit this page View Source Latitude Latitude of position Declaration public readonly double Latitude { get; } Property Value Type Description double | Edit this page View Source Longitude Longitude of position Declaration public readonly double Longitude { get; } Property Value Type Description double Methods | Edit this page View Source Equals(object?) Indicates whether this instance and a specified object are equal. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with the current instance. Returns Type Description bool true if obj and this instance are the same type and represent the same value; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A 32-bit signed integer that is the hash code for this instance. Overrides ValueType.GetHashCode() | Edit this page View Source ToCoordinate() Declaration public Coordinate ToCoordinate() Returns Type Description Coordinate | Edit this page View Source ToMapsui() Convert Xamarin.Forms.Maps.Position to Mapsui.Geometries.Point Declaration public MPoint ToMapsui() Returns Type Description MPoint Position in Mapsui format | Edit this page View Source ToPoint() Declaration public Point ToPoint() Returns Type Description Point | Edit this page View Source ToString() Returns a string that represents the current Mapsui.UI.Forms.Position Declaration public override string ToString() Returns Type Description string A string that represents the current Mapsui.UI.Forms.Position Overrides ValueType.ToString() | Edit this page View Source ToString(string) Returns a string that represents the current Mapsui.UI.Forms.Position in a given format Declaration public string ToString(string format) Parameters Type Name Description string format Format string Returns Type Description string Position as string Remarks Format string has 6 parts. This are separated by a \"|\" character. The first part is the format for the latitude, the second the format for the longitude part. Than follow shortcuts for the orientations: north, south, east, west. The parameters for the format for latitude and longitude are - P: Cardinal direction like north or east - D: Degrees as integer number. If there are more D than numbers, than there are trailing zeros. E.g. \"DDD\" and 13 is replaced as \"013\" - d: Decimal degrees as numbers. Each d is replaced with a number, e.g. \"ddd\" and 13.5467 degrees gives \"546\" - M: Minutes as integer number. If there are more M than numbers, than there are trailing zeros. E.g. \"MM\" and 5 is replaced as \"05\" - m: Decimal minutes as numbers. Each m is replaced with a number, e.g. \"mmm\" and 13.5467 minutes gives \"546\" - S: Seconds as integer number. If there are more S than numbers, than there are trailing zeros. E.g. \"SS\" and 5 is replaced as \"05\" - s: Decimal seconds as numbers. Each s is replaced with a number, e.g. \"sss\" and 13.5467 minutes gives \"546\" Examples All following examples are for the position 38.959390°, -95.265483°. - The format string \"P DD° MM.mmm'|P DDD° MM.mmm'|N|S|E|W\" gives \"N 38° 57.563' W 095° 15.928'\". - The format string \"PDD° MM.mmm'|PDDD° MM.mmm'||-||-\" gives \"38° 57.563' -095° 15.928'\". - The format string \"DD° MM' SS.sss\" P|DDD° MM' SS.sss\" P|North|South|East|West\" gives \"38° 57' 33.804\" North 095° 15' 55.739\" West\". Operators | Edit this page View Source operator ==(Position, Position) Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description bool | Edit this page View Source operator !=(Position, Position) Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description bool"
  },
  "pages/Mapsui.UI.Maui.SelectedPinChangedEventArgs.html": {
    "href": "pages/Mapsui.UI.Maui.SelectedPinChangedEventArgs.html",
    "title": "Class SelectedPinChangedEventArgs",
    "keywords": "Class SelectedPinChangedEventArgs Inheritance object EventArgs SelectedPinChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui Assembly: Mapsui.UI.Maui.dll Syntax public sealed class SelectedPinChangedEventArgs : EventArgs Properties | Edit this page View Source SelectedPin Pin that was selected Declaration public Pin SelectedPin { get; } Property Value Type Description Pin Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Maui.Utils.PolylineConverter.html": {
    "href": "pages/Mapsui.UI.Maui.Utils.PolylineConverter.html",
    "title": "Class PolylineConverter",
    "keywords": "Class PolylineConverter Polyline helper class Inheritance object PolylineConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Maui.Utils Assembly: Mapsui.UI.Maui.dll Syntax public static class PolylineConverter Methods | Edit this page View Source DecodePolyline(string) Decode Declaration public static List<Position>? DecodePolyline(string encodedPolyline) Parameters Type Name Description string encodedPolyline Returns Type Description List<Position>"
  },
  "pages/Mapsui.UI.Maui.Utils.html": {
    "href": "pages/Mapsui.UI.Maui.Utils.html",
    "title": "Namespace Mapsui.UI.Maui.Utils",
    "keywords": "Namespace Mapsui.UI.Maui.Utils Classes PolylineConverter Polyline helper class"
  },
  "pages/Mapsui.UI.Maui.html": {
    "href": "pages/Mapsui.UI.Maui.html",
    "title": "Namespace Mapsui.UI.Maui",
    "keywords": "Namespace Mapsui.UI.Maui Classes Callout CalloutClickedEventArgs Circle DrawableClickedEventArgs KnownColor Known Color Helper for Maui MapClickedEventArgs MapControl UI component that displays an interactive map MapLongClickedEventArgs MapSpan MapSpan represents an area of the earth MapView Class, that uses the API of the original Xamarin.Forms MapView Pin PinClickedEventArgs Polygon Polyline SelectedPinChangedEventArgs Structs Distance Distance between to positions Position Structure holding latitude and longitude of a position in spherical coordinate system Enums PinType"
  },
  "pages/Mapsui.UI.Objects.Drawable.html": {
    "href": "pages/Mapsui.UI.Objects.Drawable.html",
    "title": "Class Drawable",
    "keywords": "Class Drawable Base class for all drawables like polyline, polygon and circle Inheritance object Drawable Circle Polygon Polyline Implements IFeatureProvider INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Objects Assembly: Mapsui.UI.Maui.dll Syntax public class Drawable : IFeatureProvider, INotifyPropertyChanged Properties | Edit this page View Source Feature Mapsui Feature belonging to this drawable Declaration public GeometryFeature? Feature { get; set; } Property Value Type Description GeometryFeature | Edit this page View Source IsClickable Is this drawable clickable Declaration public bool IsClickable { get; set; } Property Value Type Description bool | Edit this page View Source Label Label of drawable Declaration public string? Label { get; set; } Property Value Type Description string | Edit this page View Source MaxVisible MaxVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MaxVisible { get; set; } Property Value Type Description double | Edit this page View Source MinVisible MinVisible for drawable in resolution of Mapsui (smaller values are higher zoom levels) Declaration public double MinVisible { get; set; } Property Value Type Description double | Edit this page View Source StrokeColor StrokeColor for drawable Declaration public Color StrokeColor { get; set; } Property Value Type Description Color | Edit this page View Source StrokeWidth StrokeWidth of drawable in pixel Declaration public float StrokeWidth { get; set; } Property Value Type Description float | Edit this page View Source Tag Object for free use Declaration public object? Tag { get; set; } Property Value Type Description object | Edit this page View Source ZIndex ZIndex of this drawable Declaration public int ZIndex { get; set; } Property Value Type Description int Methods | Edit this page View Source OnPropertyChanged(string?) Declaration protected virtual void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description string propertyName | Edit this page View Source SetField<T>(ref T, T, string?) Declaration protected bool SetField<T>(ref T field, T value, string? propertyName = null) Parameters Type Name Description T field T value string propertyName Returns Type Description bool Type Parameters Name Description T Events | Edit this page View Source Clicked Event called, if this drawable is clicked an IsClickable is true Declaration public event EventHandler<DrawableClickedEventArgs>? Clicked Event Type Type Description EventHandler<DrawableClickedEventArgs> | Edit this page View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IFeatureProvider INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Objects.IFeatureProvider.html": {
    "href": "pages/Mapsui.UI.Objects.IFeatureProvider.html",
    "title": "Interface IFeatureProvider",
    "keywords": "Interface IFeatureProvider Namespace: Mapsui.UI.Objects Assembly: Mapsui.Nts.dll Syntax public interface IFeatureProvider Properties | Edit this page View Source Feature Declaration GeometryFeature? Feature { get; } Property Value Type Description GeometryFeature Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Objects.MyLocationLayer.html": {
    "href": "pages/Mapsui.UI.Objects.MyLocationLayer.html",
    "title": "Class MyLocationLayer",
    "keywords": "Class MyLocationLayer A layer to display a symbol for own location Inheritance object BaseLayer MyLocationLayer Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Inherited Members BaseLayer.NextId() BaseLayer.PropertyChanged BaseLayer.DataChanged BaseLayer.Id BaseLayer.Tag BaseLayer.MinVisible BaseLayer.MaxVisible BaseLayer.Enabled BaseLayer.Name BaseLayer.Opacity BaseLayer.Busy BaseLayer.Style BaseLayer.Extent BaseLayer.Attribution BaseLayer.Resolutions BaseLayer.SortFeatures BaseLayer.CustomLayerRendererName BaseLayer.DataHasChanged() BaseLayer.ToString() BaseLayer.OnPropertyChanged(string) BaseLayer.OnDataChanged(DataChangedEventArgs) BaseLayer.Dispose(bool) BaseLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.Objects Assembly: Mapsui.UI.Maui.dll Syntax public class MyLocationLayer : BaseLayer, ILayer, IAnimatable, INotifyPropertyChanged, IDisposable Remarks There are two different symbols for own location: one is used when there isn't a change in position (still), and one is used, if the position changes (moving). Constructors | Edit this page View Source MyLocationLayer(MapView) Initializes a new instance of the MyLocationLayer class. Declaration public MyLocationLayer(MapView view) Parameters Type Name Description MapView view MapView, to which this layer belongs | Edit this page View Source MyLocationLayer(MapView, Position) Initializes a new instance of the MyLocationLayer class with a starting location. Declaration public MyLocationLayer(MapView view, Position position) Parameters Type Name Description MapView view MapView, to which this layer belongs Position position Position, where to start Properties | Edit this page View Source CalloutText The text that is displayed in the MyLocation callout (can contain line breaks). Declaration public string CalloutText { get; set; } Property Value Type Description string | Edit this page View Source Direction Movement direction of device at location Declaration public double Direction { get; } Property Value Type Description double Direction at location | Edit this page View Source IsMoving Should be moving arrow or round circle displayed Declaration public bool IsMoving { get; set; } Property Value Type Description bool | Edit this page View Source MyLocation Position of location, that is displayed Declaration public Position MyLocation { get; } Property Value Type Description Position Position of location | Edit this page View Source Scale Scale of symbol Declaration public double Scale { get; set; } Property Value Type Description double Scale of symbol | Edit this page View Source ShowCallout Show or hide a callout with further infos next to the MyLocation symbol. Declaration public bool ShowCallout { get; set; } Property Value Type Description bool | Edit this page View Source ViewingDirection Viewing direction of device (in degrees wrt. north direction) Declaration public double ViewingDirection { get; } Property Value Type Description double Direction at location Methods | Edit this page View Source GetFeatures(MRect, double) Get all features in a given MRect for a given resolution Declaration public override IEnumerable<IFeature> GetFeatures(MRect box, double resolution) Parameters Type Name Description MRect box double resolution Resolution of viewport Returns Type Description IEnumerable<IFeature> Overrides BaseLayer.GetFeatures(MRect, double) | Edit this page View Source UpdateAnimations() Declaration public override bool UpdateAnimations() Returns Type Description bool Returns true if animations are running and a graphics update is needed. Overrides BaseLayer.UpdateAnimations() | Edit this page View Source UpdateMyDirection(double, double, bool) Updates my movement direction Declaration public void UpdateMyDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description double newDirection New direction double newViewportRotation New viewport rotation bool animated true if animated | Edit this page View Source UpdateMyLocation(Position, bool) Updates my location Declaration public void UpdateMyLocation(Position newLocation, bool animated = false) Parameters Type Name Description Position newLocation New location bool animated true if there is an animation from the old to the new location. | Edit this page View Source UpdateMySpeed(double) Updates my speed Declaration public void UpdateMySpeed(double newSpeed) Parameters Type Name Description double newSpeed New speed | Edit this page View Source UpdateMyViewDirection(double, double, bool) Updates my view direction Declaration public void UpdateMyViewDirection(double newDirection, double newViewportRotation, bool animated = false) Parameters Type Name Description double newDirection New direction double newViewportRotation New viewport rotation bool animated true if animated Events | Edit this page View Source Clicked This event is triggered whenever the MyLocation symbol or label is clicked. Declaration public event EventHandler<DrawableClickedEventArgs>? Clicked Event Type Type Description EventHandler<DrawableClickedEventArgs> Implements ILayer IAnimatable INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Objects.html": {
    "href": "pages/Mapsui.UI.Objects.html",
    "title": "Namespace Mapsui.UI.Objects",
    "keywords": "Namespace Mapsui.UI.Objects Classes Drawable Base class for all drawables like polyline, polygon and circle MyLocationLayer A layer to display a symbol for own location Interfaces IFeatureProvider"
  },
  "pages/Mapsui.UI.TappedEventArgs.html": {
    "href": "pages/Mapsui.UI.TappedEventArgs.html",
    "title": "Class TappedEventArgs",
    "keywords": "Class TappedEventArgs Inheritance object EventArgs TappedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI Assembly: Mapsui.UI.Maui.dll Syntax public class TappedEventArgs : EventArgs Constructors | Edit this page View Source TappedEventArgs(ScreenPosition, GestureType) Declaration public TappedEventArgs(ScreenPosition screenPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition GestureType gestureType Properties | Edit this page View Source GestureType Declaration public GestureType GestureType { get; } Property Value Type Description GestureType | Edit this page View Source Handled Declaration public bool Handled { get; set; } Property Value Type Description bool | Edit this page View Source ScreenPosition Declaration public ScreenPosition ScreenPosition { get; } Property Value Type Description ScreenPosition Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.WinUI.Extensions.PointExtensions.html": {
    "href": "pages/Mapsui.UI.WinUI.Extensions.PointExtensions.html",
    "title": "Class PointExtensions",
    "keywords": "Class PointExtensions Inheritance object PointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.WinUI.Extensions Assembly: Mapsui.UI.Uno.WinUI.dll Syntax public static class PointExtensions Methods | Edit this page View Source ToScreenPosition(Point) Declaration public static ScreenPosition ToScreenPosition(this Point point) Parameters Type Name Description Point point Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.WinUI.Extensions.PointerPointExtensions.html": {
    "href": "pages/Mapsui.UI.WinUI.Extensions.PointerPointExtensions.html",
    "title": "Class PointerPointExtensions",
    "keywords": "Class PointerPointExtensions Inheritance object PointerPointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.WinUI.Extensions Assembly: Mapsui.UI.Uno.WinUI.dll Syntax public static class PointerPointExtensions Methods | Edit this page View Source ToScreenPosition(PointerPoint) Declaration public static ScreenPosition ToScreenPosition(this PointerPoint pointerPoint) Parameters Type Name Description PointerPoint pointerPoint Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.WinUI.Extensions.html": {
    "href": "pages/Mapsui.UI.WinUI.Extensions.html",
    "title": "Namespace Mapsui.UI.WinUI.Extensions",
    "keywords": "Namespace Mapsui.UI.WinUI.Extensions Classes PointExtensions PointerPointExtensions"
  },
  "pages/Mapsui.UI.WinUI.GlobalStaticResources.html": {
    "href": "pages/Mapsui.UI.WinUI.GlobalStaticResources.html",
    "title": "Class GlobalStaticResources",
    "keywords": "Class GlobalStaticResources Contains all the static resources defined for the application Inheritance object GlobalStaticResources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.WinUI Assembly: Mapsui.UI.Uno.WinUI.dll Syntax public sealed class GlobalStaticResources Methods Initialize() Declaration public static void Initialize() RegisterDefaultStyles() Declaration public static void RegisterDefaultStyles() RegisterResourceDictionariesBySource() Declaration public static void RegisterResourceDictionariesBySource() Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.WinUI.MapControl.html": {
    "href": "pages/Mapsui.UI.WinUI.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object UIElement FrameworkElement Panel Grid MapControl Implements IAnimationObject IVisualElement IVisualElement2 IDependencyObjectStoreProvider IWeakReferenceProvider IEnumerable IDataContextProvider DependencyObject ILayoutConstraints IMapControl IDisposable INotifyPropertyChanged Inherited Members Grid.MeasureOverride(Size) Grid.ArrangeOverride(Size) Grid.GetRow(UIElement) Grid.SetRow(UIElement, int) Grid.GetColumn(UIElement) Grid.SetColumn(UIElement, int) Grid.GetRowSpan(UIElement) Grid.SetRowSpan(UIElement, int) Grid.GetColumnSpan(UIElement) Grid.SetColumnSpan(UIElement, int) Grid.RowDefinitions Grid.ColumnDefinitions Grid.BackgroundSizingProperty Grid.BackgroundSizing Grid.BorderBrush Grid.BorderBrushProperty Grid.BorderThickness Grid.BorderThicknessProperty Grid.Padding Grid.PaddingProperty Grid.CornerRadius Grid.CornerRadiusProperty Grid.RowProperty Grid.ColumnProperty Grid.RowSpanProperty Grid.ColumnSpanProperty Grid.RowSpacing Grid.RowSpacingProperty Grid.ColumnSpacing Grid.ColumnSpacingProperty Panel.OnChildrenChanged() Panel.OnCornerRadiusChanged(CornerRadius, CornerRadius) Panel.OnPaddingChanged(Thickness, Thickness) Panel.OnBorderThicknessChanged(Thickness, Thickness) Panel.OnBorderBrushChanged(Brush, Brush) Panel.OnBackgroundChanged(DependencyPropertyChangedEventArgs) Panel.Add(UIElement) Panel.BackgroundTransition Panel.Children Panel.ChildrenTransitions Panel.ChildrenTransitionsProperty Panel.IsItemsHostProperty Panel.IsItemsHost FrameworkElement.DeferTree(DependencyObject) FrameworkElement.ToString() FrameworkElement.MeasureElement(UIElement, Size) FrameworkElement.ArrangeElement(UIElement, Rect) FrameworkElement.GetElementDesiredSize(UIElement) FrameworkElement.OnApplyTemplate() FrameworkElement.IsWidthConstrainedInner(UIElement) FrameworkElement.IsHeightConstrainedInner(UIElement) FrameworkElement.GoToElementStateCore(string, bool) FrameworkElement.OnCreateAutomationPeer() FrameworkElement.GetAccessibilityInnerText() FrameworkElement.GetAutomationPeer() FrameworkElement.InvalidateViewport() FrameworkElement.FindFirstParent<T>() FrameworkElement.FindFirstParent<T>(bool) FrameworkElement.AdjustArrange(Size) FrameworkElement.FindName(string) FrameworkElement.ApplyBindingPhase(int) FrameworkElement.GetStringFromObject(object) FrameworkElement.GetEnumerator() FrameworkElement.Language FrameworkElement.Triggers FrameworkElement.ActualHeightProperty FrameworkElement.ActualThemeProperty FrameworkElement.ActualWidthProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.HorizontalAlignmentProperty FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignmentProperty FrameworkElement.VerticalAlignment FrameworkElement.WidthProperty FrameworkElement.Width FrameworkElement.HeightProperty FrameworkElement.Height FrameworkElement.MinWidthProperty FrameworkElement.MinWidth FrameworkElement.MinHeightProperty FrameworkElement.MinHeight FrameworkElement.MaxWidthProperty FrameworkElement.MaxWidth FrameworkElement.MaxHeightProperty FrameworkElement.MaxHeight FrameworkElement.MarginProperty FrameworkElement.Margin FrameworkElement.IsLoaded FrameworkElement.UseConstraintOptimizations FrameworkElement.AreDimensionsConstrained FrameworkElement.IsSimpleLayout FrameworkElement.Tag FrameworkElement.TagProperty FrameworkElement.FlowDirection FrameworkElement.FlowDirectionProperty FrameworkElement.Resources FrameworkElement.Parent FrameworkElement.BaseUri FrameworkElement.Style FrameworkElement.StyleProperty FrameworkElement.RequestedTheme FrameworkElement.RequestedThemeProperty FrameworkElement.ActualTheme FrameworkElement.FocusVisualSecondaryThicknessProperty FrameworkElement.FocusVisualSecondaryThickness FrameworkElement.FocusVisualSecondaryBrushProperty FrameworkElement.FocusVisualSecondaryBrush FrameworkElement.FocusVisualPrimaryThicknessProperty FrameworkElement.FocusVisualPrimaryThickness FrameworkElement.FocusVisualPrimaryBrush FrameworkElement.FocusVisualPrimaryBrushProperty FrameworkElement.FocusVisualMargin FrameworkElement.FocusVisualMarginProperty FrameworkElement.AllowFocusWhenDisabled FrameworkElement.AllowFocusWhenDisabledProperty FrameworkElement.AllowFocusOnInteraction FrameworkElement.AllowFocusOnInteractionProperty FrameworkElement.TransitionsProperty FrameworkElement.Transitions FrameworkElement.Background FrameworkElement.BackgroundProperty FrameworkElement.RenderPhase FrameworkElement.Name FrameworkElement.SizeChanged FrameworkElement.ActualThemeChanged FrameworkElement.LayoutUpdated FrameworkElement.EffectiveViewportChanged FrameworkElement.Loading FrameworkElement.Loaded FrameworkElement.Unloaded UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.StartAnimation(ICompositionAnimationBase) UIElement.StopAnimation(ICompositionAnimationBase) UIElement.OnDisconnectVisualChildren() UIElement.FindSubElementsForTouchTargeting(Point, Rect) UIElement.PopulatePropertyInfoOverride(string, AnimationPropertyInfo) UIElement.PopulatePropertyInfo(string, AnimationPropertyInfo) UIElement.GetVisualInternal() UIElement.TryStartDirectManipulation(Pointer) UIElement.OnBringIntoViewRequested(BringIntoViewRequestedEventArgs) UIElement.StartBringIntoView() UIElement.StartBringIntoView(BringIntoViewOptions) UIElement.RegisterAsScrollPort(UIElement) UIElement.Focus(FocusState) UIElement.TransformToVisual(UIElement) UIElement.OnVisibilityChanged(Visibility, Visibility) UIElement.OnIsHitTestVisibleChanged(bool, bool) UIElement.UpdateLayout() UIElement.OnKeyboardAcceleratorInvoked(KeyboardAcceleratorInvokedEventArgs) UIElement.GetChildrenInTabFocusOrder() UIElement.OnProcessKeyboardAccelerators(ProcessKeyboardAcceleratorEventArgs) UIElement.TryInvokeKeyboardAccelerator(ProcessKeyboardAcceleratorEventArgs) UIElement.CancelDirectManipulations() UIElement.StartDragAsync(PointerPoint) UIElement.CapturePointer(Pointer) UIElement.ReleasePointerCapture(Pointer) UIElement.ReleasePointerCaptures() UIElement.AddHandler(RoutedEvent, object, bool) UIElement.RemoveHandler(RoutedEvent, object) UIElement.GetValue(DependencyProperty) UIElement.SetValue(DependencyProperty, object) UIElement.ClearValue(DependencyProperty) UIElement.ReadLocalValue(DependencyProperty) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RegisterPropertyChangedCallback(DependencyProperty, DependencyPropertyChangedCallback) UIElement.UnregisterPropertyChangedCallback(DependencyProperty, long) UIElement.OnDataContextChanged(DependencyPropertyChangedEventArgs) UIElement.SetBinding(object, string, BindingBase) UIElement.SetBinding(string, BindingBase) UIElement.SetBinding(DependencyProperty, BindingBase) UIElement.SetBindingValue(object, string) UIElement.GetBindingExpression(DependencyProperty) UIElement.ResumeBindings() UIElement.SuspendBindings() UIElement.RotationTransition UIElement.KeyTipTarget UIElement.KeyTipPlacementMode UIElement.KeyTipHorizontalOffset UIElement.IsTapEnabled UIElement.IsRightTapEnabled UIElement.IsHoldingEnabled UIElement.IsDoubleTapEnabled UIElement.AccessKey UIElement.HighContrastAdjustment UIElement.ExitDisplayModeOnAccessKeyInvoked UIElement.OpacityTransition UIElement.CompositeMode UIElement.CanBeScrollAnchor UIElement.CacheMode UIElement.AccessKeyScopeOwner UIElement.IsAccessKeyScope UIElement.KeyTipVerticalOffset UIElement.CenterPoint UIElement.UseLayoutRounding UIElement.TranslationTransition UIElement.TransformMatrix UIElement.Rotation UIElement.RasterizationScale UIElement.Projection UIElement.ScaleTransition UIElement.Scale UIElement.RotationAxis UIElement.Transform3D UIElement.Lights UIElement.AccessKeyProperty UIElement.AccessKeyScopeOwnerProperty UIElement.CacheModeProperty UIElement.CanBeScrollAnchorProperty UIElement.CharacterReceivedEvent UIElement.CompositeModeProperty UIElement.ContextRequestedEvent UIElement.ExitDisplayModeOnAccessKeyInvokedProperty UIElement.HighContrastAdjustmentProperty UIElement.IsAccessKeyScopeProperty UIElement.IsDoubleTapEnabledProperty UIElement.IsHoldingEnabledProperty UIElement.IsRightTapEnabledProperty UIElement.IsTapEnabledProperty UIElement.KeyTipHorizontalOffsetProperty UIElement.KeyTipPlacementModeProperty UIElement.KeyTipTargetProperty UIElement.KeyTipVerticalOffsetProperty UIElement.LightsProperty UIElement.PreviewKeyDownEvent UIElement.PreviewKeyUpEvent UIElement.ProjectionProperty UIElement.Transform3DProperty UIElement.UseLayoutRoundingProperty UIElement.DesiredSize UIElement.ActualSize UIElement.ActualOffset UIElement.Translation UIElement.Shadow UIElement.ShadowProperty UIElement.Clip UIElement.ClipProperty UIElement.RenderTransform UIElement.RenderTransformProperty UIElement.RenderTransformOrigin UIElement.RenderTransformOriginProperty UIElement.RenderSize UIElement.XYFocusKeyboardNavigation UIElement.XYFocusKeyboardNavigationProperty UIElement.XYFocusDownNavigationStrategy UIElement.XYFocusDownNavigationStrategyProperty UIElement.XYFocusLeftNavigationStrategy UIElement.XYFocusLeftNavigationStrategyProperty UIElement.XYFocusRightNavigationStrategy UIElement.XYFocusRightNavigationStrategyProperty UIElement.XYFocusUpNavigationStrategy UIElement.XYFocusUpNavigationStrategyProperty UIElement.TabFocusNavigation UIElement.TabFocusNavigationProperty UIElement.ProtectedCursor UIElement.FocusState UIElement.FocusStateProperty UIElement.IsTabStop UIElement.IsTabStopProperty UIElement.TabIndex UIElement.TabIndexProperty UIElement.XYFocusUp UIElement.XYFocusUpProperty UIElement.XYFocusDown UIElement.XYFocusDownProperty UIElement.XYFocusLeft UIElement.XYFocusLeftProperty UIElement.XYFocusRight UIElement.XYFocusRightProperty UIElement.UseSystemFocusVisuals UIElement.UseSystemFocusVisualsProperty UIElement.ManipulationModeProperty UIElement.ManipulationMode UIElement.CanDragProperty UIElement.CanDrag UIElement.AllowDropProperty UIElement.AllowDrop UIElement.PointerCapturesProperty UIElement.PointerCaptures UIElement.IsHitTestVisibleProperty UIElement.IsHitTestVisible UIElement.OpacityProperty UIElement.Opacity UIElement.VisibilityProperty UIElement.Visibility UIElement.ContextFlyoutProperty UIElement.ContextFlyout UIElement.KeyboardAccelerators UIElement.KeyboardAcceleratorPlacementMode UIElement.KeyboardAcceleratorPlacementModeProperty UIElement.KeyboardAcceleratorPlacementTarget UIElement.KeyboardAcceleratorPlacementTargetProperty UIElement.Handle UIElement.PointerPressedEvent UIElement.PointerReleasedEvent UIElement.PointerEnteredEvent UIElement.PointerExitedEvent UIElement.PointerMovedEvent UIElement.PointerCanceledEvent UIElement.PointerCaptureLostEvent UIElement.PointerWheelChangedEvent UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationCompletedEvent UIElement.TappedEvent UIElement.DoubleTappedEvent UIElement.RightTappedEvent UIElement.HoldingEvent UIElement.DragEnterEvent UIElement.DragOverEvent UIElement.DragLeaveEvent UIElement.DropEvent UIElement.KeyDownEvent UIElement.KeyUpEvent UIElement.GettingFocusEvent UIElement.LosingFocusEvent UIElement.NoFocusCandidateFoundEvent UIElement.BringIntoViewRequestedEvent UIElement.EventsBubblingInManagedCodeProperty UIElement.EventsBubblingInManagedCode UIElement.XamlRoot UIElement.Dispatcher UIElement.DispatcherQueue UIElement.IsStoreInitialized UIElement.DataContext UIElement.DataContextProperty UIElement.AccessKeyDisplayDismissed UIElement.AccessKeyDisplayRequested UIElement.CharacterReceived UIElement.ContextCanceled UIElement.ContextRequested UIElement.PreviewKeyDown UIElement.PreviewKeyUp UIElement.AccessKeyInvoked UIElement.ProcessKeyboardAccelerators UIElement.LostFocus UIElement.GotFocus UIElement.LosingFocus UIElement.GettingFocus UIElement.NoFocusCandidateFound UIElement.BringIntoViewRequested UIElement.PointerCanceled UIElement.PointerCaptureLost UIElement.PointerEntered UIElement.PointerExited UIElement.PointerMoved UIElement.PointerPressed UIElement.PointerReleased UIElement.PointerWheelChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationCompleted UIElement.Tapped UIElement.DoubleTapped UIElement.RightTapped UIElement.Holding UIElement.DragStarting UIElement.DragEnter UIElement.DragLeave UIElement.DragOver UIElement.Drop UIElement.DropCompleted UIElement.KeyDown UIElement.KeyUp UIElement.DataContextChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.WinUI Assembly: Mapsui.UI.Uno.WinUI.dll Syntax public class MapControl : Grid, IAnimationObject, IVisualElement, IVisualElement2, IDependencyObjectStoreProvider, IWeakReferenceProvider, IEnumerable, IDataContextProvider, DependencyObject, ILayoutConstraints, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Edit this page View Source MapControl() Declaration public MapControl() Properties | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IAnimationObject IVisualElement IVisualElement2 Microsoft.UI.Xaml.IDependencyObjectStoreProvider Uno.UI.DataBinding.IWeakReferenceProvider IEnumerable Microsoft.UI.Xaml.IDataContextProvider DependencyObject Microsoft.UI.Xaml.ILayoutConstraints IMapControl IDisposable INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.WinUI.html": {
    "href": "pages/Mapsui.UI.WinUI.html",
    "title": "Namespace Mapsui.UI.WinUI",
    "keywords": "Namespace Mapsui.UI.WinUI Classes GlobalStaticResources Contains all the static resources defined for the application MapControl"
  },
  "pages/Mapsui.UI.WindowsForms.MapControl.html": {
    "href": "pages/Mapsui.UI.WindowsForms.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl UserControl MapControl Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IContainerControl IMapControl IDisposable INotifyPropertyChanged Inherited Members UserControl.ValidateChildren() UserControl.ValidateChildren(ValidationConstraints) UserControl.OnCreateControl() UserControl.OnLoad(EventArgs) UserControl.OnResize(EventArgs) UserControl.OnMouseDown(MouseEventArgs) UserControl.WndProc(ref Message) UserControl.AutoSize UserControl.AutoSizeMode UserControl.AutoValidate UserControl.BorderStyle UserControl.CreateParams UserControl.DefaultSize UserControl.AutoSizeChanged UserControl.AutoValidateChanged UserControl.Load ContainerControl.AdjustFormScrollbars(bool) ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnFontChanged(EventArgs) ContainerControl.OnLayout(LayoutEventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.ScaleMinMaxSize(float, float, bool) ContainerControl.ProcessDialogChar(char) ContainerControl.ProcessDialogKey(Keys) ContainerControl.ProcessCmdKey(ref Message, Keys) ContainerControl.ProcessMnemonic(char) ContainerControl.ProcessTabKey(bool) ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Select(bool, bool) ContainerControl.UpdateDefaultButton() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.OnVisibleChanged(EventArgs) ScrollableControl.ScaleControl(SizeF, BoundsSpecified) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScroll ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateControlsInstance() Control.CreateGraphics() Control.CreateHandle() Control.CreateControl() Control.DefWndProc(ref Message) Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBackgroundImageChanged(EventArgs) Control.OnBackgroundImageLayoutChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnEnabledChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnTextChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnHandleCreated(EventArgs) Control.OnLocationChanged(EventArgs) Control.OnHandleDestroyed(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.OnEnter(EventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnPaint(PaintEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnStyleChanged(EventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.ProcessKeyPreview(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SetBoundsCore(int, int, int, int, BoundsSpecified) Control.SetClientSizeCore(int, int) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.SetVisibleCore(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackColor Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.ClientSize Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Location Control.Margin Control.MaximumSize Control.MinimumSize Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.Size Control.TabIndex Control.TabStop Control.Tag Control.Text Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.DefaultImeMode Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.ToString() Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.WindowsForms Assembly: Mapsui.UI.WindowsForms.dll Syntax public class MapControl : UserControl, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IContainerControl, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Edit this page View Source MapControl() Declaration public MapControl() Fields | Edit this page View Source UseGPU Declaration public static bool UseGPU Field Value Type Description bool Properties | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration [Browsable(false)] public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose(bool) Releases the unmanaged resources used by the Control and its child controls and optionally releases the managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides ContainerControl.Dispose(bool) | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetScreenPosition(Point) Declaration public ScreenPosition GetScreenPosition(Point position) Parameters Type Name Description Point position Returns Type Description ScreenPosition | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IContainerControl IMapControl IDisposable INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.WindowsForms.html": {
    "href": "pages/Mapsui.UI.WindowsForms.html",
    "title": "Namespace Mapsui.UI.WindowsForms",
    "keywords": "Namespace Mapsui.UI.WindowsForms Classes MapControl"
  },
  "pages/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html": {
    "href": "pages/Mapsui.UI.Wpf.Extensions.WindowsPointExtensions.html",
    "title": "Class WindowsPointExtensions",
    "keywords": "Class WindowsPointExtensions Inheritance object WindowsPointExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Wpf.Extensions Assembly: Mapsui.UI.Wpf.dll Syntax public static class WindowsPointExtensions Methods | Edit this page View Source ToScreenPosition(Point) Declaration public static ScreenPosition ToScreenPosition(this Point point) Parameters Type Name Description Point point Returns Type Description ScreenPosition"
  },
  "pages/Mapsui.UI.Wpf.Extensions.html": {
    "href": "pages/Mapsui.UI.Wpf.Extensions.html",
    "title": "Namespace Mapsui.UI.Wpf.Extensions",
    "keywords": "Namespace Mapsui.UI.Wpf.Extensions Classes WindowsPointExtensions"
  },
  "pages/Mapsui.UI.Wpf.MapControl.html": {
    "href": "pages/Mapsui.UI.Wpf.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Panel Grid MapControl Implements IAnimatable ISupportInitialize IFrameworkInputElement IInputElement IQueryAmbient IAddChild IMapControl IDisposable INotifyPropertyChanged Inherited Members Grid.ColumnProperty Grid.ColumnSpanProperty Grid.IsSharedSizeScopeProperty Grid.RowProperty Grid.RowSpanProperty Grid.ShowGridLinesProperty Grid.ArrangeOverride(Size) Grid.GetColumn(UIElement) Grid.GetColumnSpan(UIElement) Grid.GetIsSharedSizeScope(UIElement) Grid.GetRow(UIElement) Grid.GetRowSpan(UIElement) Grid.GetVisualChild(int) Grid.MeasureOverride(Size) Grid.OnVisualChildrenChanged(DependencyObject, DependencyObject) Grid.SetColumn(UIElement, int) Grid.SetColumnSpan(UIElement, int) Grid.SetIsSharedSizeScope(UIElement, bool) Grid.SetRow(UIElement, int) Grid.SetRowSpan(UIElement, int) Grid.ColumnDefinitions Grid.LogicalChildren Grid.RowDefinitions Grid.ShowGridLines Grid.VisualChildrenCount Panel.BackgroundProperty Panel.IsItemsHostProperty Panel.ZIndexProperty Panel.CreateUIElementCollection(FrameworkElement) Panel.GetZIndex(UIElement) Panel.OnIsItemsHostChanged(bool, bool) Panel.OnRender(DrawingContext) Panel.SetZIndex(UIElement, int) Panel.Background Panel.Children Panel.HasLogicalOrientation Panel.HasLogicalOrientationPublic Panel.InternalChildren Panel.IsItemsHost Panel.LogicalOrientation Panel.LogicalOrientationPublic FrameworkElement.ActualHeightProperty FrameworkElement.ActualWidthProperty FrameworkElement.BindingGroupProperty FrameworkElement.ContextMenuClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuProperty FrameworkElement.CursorProperty FrameworkElement.DataContextProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.FlowDirectionProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.ForceCursorProperty FrameworkElement.HeightProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.InputScopeProperty FrameworkElement.LanguageProperty FrameworkElement.LayoutTransformProperty FrameworkElement.LoadedEvent FrameworkElement.MarginProperty FrameworkElement.MaxHeightProperty FrameworkElement.MaxWidthProperty FrameworkElement.MinHeightProperty FrameworkElement.MinWidthProperty FrameworkElement.NameProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.StyleProperty FrameworkElement.TagProperty FrameworkElement.ToolTipClosingEvent FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipProperty FrameworkElement.UnloadedEvent FrameworkElement.UseLayoutRoundingProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.WidthProperty FrameworkElement.AddLogicalChild(object) FrameworkElement.ApplyTemplate() FrameworkElement.ArrangeCore(Rect) FrameworkElement.BeginInit() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.EndInit() FrameworkElement.FindName(string) FrameworkElement.FindResource(object) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.GetLayoutClip(Size) FrameworkElement.GetTemplateChild(string) FrameworkElement.GetUIParentCore() FrameworkElement.MeasureCore(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.OnApplyTemplate() FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.OnInitialized(EventArgs) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnRenderSizeChanged(SizeChangedInfo) FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.RegisterName(string, object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.TryFindResource(object) FrameworkElement.UnregisterName(string) FrameworkElement.UpdateDefaultStyle() FrameworkElement.ActualHeight FrameworkElement.ActualWidth FrameworkElement.BindingGroup FrameworkElement.ContextMenu FrameworkElement.Cursor FrameworkElement.DataContext FrameworkElement.DefaultStyleKey FrameworkElement.FlowDirection FrameworkElement.FocusVisualStyle FrameworkElement.ForceCursor FrameworkElement.Height FrameworkElement.HorizontalAlignment FrameworkElement.InheritanceBehavior FrameworkElement.InputScope FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.Language FrameworkElement.LayoutTransform FrameworkElement.Margin FrameworkElement.MaxHeight FrameworkElement.MaxWidth FrameworkElement.MinHeight FrameworkElement.MinWidth FrameworkElement.Name FrameworkElement.OverridesDefaultStyle FrameworkElement.Parent FrameworkElement.Resources FrameworkElement.Style FrameworkElement.Tag FrameworkElement.TemplatedParent FrameworkElement.ToolTip FrameworkElement.Triggers FrameworkElement.UseLayoutRounding FrameworkElement.VerticalAlignment FrameworkElement.Width FrameworkElement.ContextMenuClosing FrameworkElement.ContextMenuOpening FrameworkElement.DataContextChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.SourceUpdated FrameworkElement.TargetUpdated FrameworkElement.ToolTipClosing FrameworkElement.ToolTipOpening FrameworkElement.Unloaded UIElement.AllowDropProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.BitmapEffectInputProperty UIElement.BitmapEffectProperty UIElement.CacheModeProperty UIElement.ClipProperty UIElement.ClipToBoundsProperty UIElement.DragEnterEvent UIElement.DragLeaveEvent UIElement.DragOverEvent UIElement.DropEvent UIElement.EffectProperty UIElement.FocusableProperty UIElement.GiveFeedbackEvent UIElement.GotFocusEvent UIElement.GotKeyboardFocusEvent UIElement.GotMouseCaptureEvent UIElement.GotStylusCaptureEvent UIElement.GotTouchCaptureEvent UIElement.IsEnabledProperty UIElement.IsFocusedProperty UIElement.IsHitTestVisibleProperty UIElement.IsKeyboardFocusedProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsManipulationEnabledProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusOverProperty UIElement.IsVisibleProperty UIElement.KeyDownEvent UIElement.KeyUpEvent UIElement.LostFocusEvent UIElement.LostKeyboardFocusEvent UIElement.LostMouseCaptureEvent UIElement.LostStylusCaptureEvent UIElement.LostTouchCaptureEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationStartingEvent UIElement.MouseDownEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.MouseLeftButtonDownEvent UIElement.MouseLeftButtonUpEvent UIElement.MouseMoveEvent UIElement.MouseRightButtonDownEvent UIElement.MouseRightButtonUpEvent UIElement.MouseUpEvent UIElement.MouseWheelEvent UIElement.OpacityMaskProperty UIElement.OpacityProperty UIElement.PreviewDragEnterEvent UIElement.PreviewDragLeaveEvent UIElement.PreviewDragOverEvent UIElement.PreviewDropEvent UIElement.PreviewGiveFeedbackEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.PreviewKeyDownEvent UIElement.PreviewKeyUpEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.PreviewMouseDownEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.PreviewMouseUpEvent UIElement.PreviewMouseWheelEvent UIElement.PreviewQueryContinueDragEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewStylusDownEvent UIElement.PreviewStylusInAirMoveEvent UIElement.PreviewStylusInRangeEvent UIElement.PreviewStylusMoveEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.PreviewStylusUpEvent UIElement.PreviewTextInputEvent UIElement.PreviewTouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.QueryContinueDragEvent UIElement.QueryCursorEvent UIElement.RenderTransformOriginProperty UIElement.RenderTransformProperty UIElement.SnapsToDevicePixelsProperty UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.StylusDownEvent UIElement.StylusEnterEvent UIElement.StylusInAirMoveEvent UIElement.StylusInRangeEvent UIElement.StylusLeaveEvent UIElement.StylusMoveEvent UIElement.StylusOutOfRangeEvent UIElement.StylusSystemGestureEvent UIElement.StylusUpEvent UIElement.TextInputEvent UIElement.TouchDownEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.TouchMoveEvent UIElement.TouchUpEvent UIElement.UidProperty UIElement.VisibilityProperty UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.Arrange(Rect) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.CaptureMouse() UIElement.CaptureStylus() UIElement.CaptureTouch(TouchDevice) UIElement.Focus() UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.HitTestCore(PointHitTestParameters) UIElement.InputHitTest(Point) UIElement.InvalidateArrange() UIElement.InvalidateMeasure() UIElement.InvalidateVisual() UIElement.Measure(Size) UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.OnCreateAutomationPeer() UIElement.OnDragEnter(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.RaiseEvent(RoutedEventArgs) UIElement.ReleaseAllTouchCaptures() UIElement.ReleaseMouseCapture() UIElement.ReleaseStylusCapture() UIElement.ReleaseTouchCapture(TouchDevice) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.TranslatePoint(Point, UIElement) UIElement.UpdateLayout() UIElement.AllowDrop UIElement.AreAnyTouchesCaptured UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesOver UIElement.BitmapEffect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Clip UIElement.ClipToBounds UIElement.CommandBindings UIElement.DesiredSize UIElement.Effect UIElement.Focusable UIElement.HasAnimatedProperties UIElement.HasEffectiveKeyboardFocus UIElement.InputBindings UIElement.IsArrangeValid UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsFocused UIElement.IsHitTestVisible UIElement.IsInputMethodEnabled UIElement.IsKeyboardFocused UIElement.IsKeyboardFocusWithin UIElement.IsManipulationEnabled UIElement.IsMeasureValid UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusOver UIElement.IsVisible UIElement.Opacity UIElement.OpacityMask UIElement.PersistId UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.SnapsToDevicePixels UIElement.StylusPlugIns UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesDirectlyOver UIElement.TouchesOver UIElement.Uid UIElement.Visibility UIElement.DragEnter UIElement.DragLeave UIElement.DragOver UIElement.Drop UIElement.FocusableChanged UIElement.GiveFeedback UIElement.GotFocus UIElement.GotKeyboardFocus UIElement.GotMouseCapture UIElement.GotStylusCapture UIElement.GotTouchCapture UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsKeyboardFocusedChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsMouseDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsVisibleChanged UIElement.KeyDown UIElement.KeyUp UIElement.LayoutUpdated UIElement.LostFocus UIElement.LostKeyboardFocus UIElement.LostMouseCapture UIElement.LostStylusCapture UIElement.LostTouchCapture UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationStarted UIElement.ManipulationStarting UIElement.MouseDown UIElement.MouseEnter UIElement.MouseLeave UIElement.MouseLeftButtonDown UIElement.MouseLeftButtonUp UIElement.MouseMove UIElement.MouseRightButtonDown UIElement.MouseRightButtonUp UIElement.MouseUp UIElement.MouseWheel UIElement.PreviewDragEnter UIElement.PreviewDragLeave UIElement.PreviewDragOver UIElement.PreviewDrop UIElement.PreviewGiveFeedback UIElement.PreviewGotKeyboardFocus UIElement.PreviewKeyDown UIElement.PreviewKeyUp UIElement.PreviewLostKeyboardFocus UIElement.PreviewMouseDown UIElement.PreviewMouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.PreviewMouseMove UIElement.PreviewMouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.PreviewMouseUp UIElement.PreviewMouseWheel UIElement.PreviewQueryContinueDrag UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewStylusDown UIElement.PreviewStylusInAirMove UIElement.PreviewStylusInRange UIElement.PreviewStylusMove UIElement.PreviewStylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.PreviewStylusUp UIElement.PreviewTextInput UIElement.PreviewTouchDown UIElement.PreviewTouchMove UIElement.PreviewTouchUp UIElement.QueryContinueDrag UIElement.QueryCursor UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.StylusDown UIElement.StylusEnter UIElement.StylusInAirMove UIElement.StylusInRange UIElement.StylusLeave UIElement.StylusMove UIElement.StylusOutOfRange UIElement.StylusSystemGesture UIElement.StylusUp UIElement.TextInput UIElement.TouchDown UIElement.TouchEnter UIElement.TouchLeave UIElement.TouchMove UIElement.TouchUp Visual.AddVisualChild(Visual) Visual.FindCommonVisualAncestor(DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.OnDpiChanged(DpiScale, DpiScale) Visual.PointFromScreen(Point) Visual.PointToScreen(Point) Visual.RemoveVisualChild(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToAncestor(Visual) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualBitmapScalingMode Visual.VisualCacheMode Visual.VisualClearTypeHint Visual.VisualClip Visual.VisualEdgeMode Visual.VisualEffect Visual.VisualOffset Visual.VisualOpacity Visual.VisualOpacityMask Visual.VisualParent Visual.VisualScrollableAreaClip Visual.VisualTextHintingMode Visual.VisualTextRenderingMode Visual.VisualTransform Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetLocalValueEnumerator() DependencyObject.GetValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.UI.Wpf Assembly: Mapsui.UI.Wpf.dll Syntax public class MapControl : Grid, IAnimatable, ISupportInitialize, IFrameworkInputElement, IInputElement, IQueryAmbient, IAddChild, IMapControl, IDisposable, INotifyPropertyChanged Constructors | Edit this page View Source MapControl() Declaration public MapControl() Properties | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IAnimatable ISupportInitialize IFrameworkInputElement IInputElement IQueryAmbient IAddChild IMapControl IDisposable INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.Wpf.html": {
    "href": "pages/Mapsui.UI.Wpf.html",
    "title": "Namespace Mapsui.UI.Wpf",
    "keywords": "Namespace Mapsui.UI.Wpf Classes MapControl"
  },
  "pages/Mapsui.UI.html": {
    "href": "pages/Mapsui.UI.html",
    "title": "Namespace Mapsui.UI",
    "keywords": "Namespace Mapsui.UI Classes DataChangedWeakEventManager MWeakEventManager TappedEventArgs Interfaces IMapControl"
  },
  "pages/Mapsui.UI.iOS.MapControl.html": {
    "href": "pages/Mapsui.UI.iOS.MapControl.html",
    "title": "Class MapControl",
    "keywords": "Class MapControl Inheritance object NSObject UIResponder UIView MapControl Implements IEquatable<NSObject> INSObjectProtocol IUIActivityItemsConfigurationProviding IUIPasteConfigurationSupporting IUIResponderStandardEditActions IUIUserActivityRestoring IEnumerable INSCoding IUIAccessibilityIdentification IUIAppearance IUIAppearanceContainer IUICoordinateSpace IUIDynamicItem IUIFocusItem IUIFocusEnvironment IUIFocusItemContainer IUILargeContentViewerItem IUIPopoverPresentationControllerSourceItem IUITraitChangeObservable IUITraitEnvironment ICALayerDelegate INativeObject IMapControl INotifyPropertyChanged IDisposable Inherited Members UIView.Add(UIView) UIView.AddSubviews(params UIView[]) UIView.GetEnumerator() UIView.BeginAnimations(string) UIView.Animate(double, Action, Action) UIView.Animate(double, double, UIViewAnimationOptions, Action, Action) UIView.Transition(UIView, UIView, double, UIViewAnimationOptions, Action) UIView.Transition(UIView, double, UIViewAnimationOptions, Action, Action) UIView.AnimateAsync(double, Action) UIView.Capture(bool) UIView.AccessibilityActivate() UIView.ActionForLayer(CALayer, string) UIView.AddConstraint(NSLayoutConstraint) UIView.AddConstraints(NSLayoutConstraint[]) UIView.AddGestureRecognizer(UIGestureRecognizer) UIView.AddInteraction(IUIInteraction) UIView.AddKeyframeWithRelativeStartTime(double, double, Action) UIView.AddLayoutGuide(UILayoutGuide) UIView.AddMotionEffect(UIMotionEffect) UIView.AddSubview(UIView) UIView.AlignmentRectForFrame(CGRect) UIView.Animate(double, Action) UIView.Animate(double, NFloat, NFloat, double, UIViewAnimationOptions, Action, Action<bool>) UIView.AnimateAsync(double, NFloat, NFloat, double, UIViewAnimationOptions, Action) UIView.AnimateKeyframes(double, double, UIViewKeyframeAnimationOptions, Action, UICompletionHandler) UIView.AnimateKeyframesAsync(double, double, UIViewKeyframeAnimationOptions, Action) UIView.AnimateNotify(double, Action, UICompletionHandler) UIView.AnimateNotifyAsync(double, Action) UIView.AnimateNotify(double, double, UIViewAnimationOptions, Action, UICompletionHandler) UIView.AnimateNotifyAsync(double, double, UIViewAnimationOptions, Action) UIView.AnimateNotify(double, double, NFloat, NFloat, UIViewAnimationOptions, Action, UICompletionHandler) UIView.AnimateNotifyAsync(double, double, NFloat, NFloat, UIViewAnimationOptions, Action) UIView.BeginAnimations(string, nint) UIView.BringSubviewToFront(UIView) UIView.CommitAnimations() UIView.ContentCompressionResistancePriority(UILayoutConstraintAxis) UIView.ContentHuggingPriority(UILayoutConstraintAxis) UIView.ConvertPointFromCoordinateSpace(CGPoint, IUICoordinateSpace) UIView.ConvertPointFromView(CGPoint, UIView) UIView.ConvertPointToCoordinateSpace(CGPoint, IUICoordinateSpace) UIView.ConvertPointToView(CGPoint, UIView) UIView.ConvertRectFromCoordinateSpace(CGRect, IUICoordinateSpace) UIView.ConvertRectFromView(CGRect, UIView) UIView.ConvertRectToCoordinateSpace(CGRect, IUICoordinateSpace) UIView.ConvertRectToView(CGRect, UIView) UIView.DecodeRestorableState(NSCoder) UIView.DidHintFocusMovement(UIFocusMovementHint) UIView.DidUpdateFocus(UIFocusUpdateContext, UIFocusAnimationCoordinator) UIView.DisplayLayer(CALayer) UIView.Draw(CGRect) UIView.DrawLayer(CALayer, CGContext) UIView.DrawRect(CGRect, UIViewPrintFormatter) UIView.DrawViewHierarchy(CGRect, bool) UIView.EncodeRestorableState(NSCoder) UIView.EncodeTo(NSCoder) UIView.ExchangeSubview(nint, nint) UIView.ExerciseAmbiguityInLayout() UIView.FrameForAlignmentRect(CGRect) UIView.GestureRecognizerShouldBegin(UIGestureRecognizer) UIView.GetConstraintsAffectingLayout(UILayoutConstraintAxis) UIView.GetFocusItems(CGRect) UIView.GetFrame(UIView) UIView.GetUserInterfaceLayoutDirection(UISemanticContentAttribute) UIView.GetUserInterfaceLayoutDirection(UISemanticContentAttribute, UIUserInterfaceLayoutDirection) UIView.HitTest(CGPoint, UIEvent) UIView.InsertSubview(UIView, nint) UIView.InsertSubviewAbove(UIView, UIView) UIView.InsertSubviewBelow(UIView, UIView) UIView.InvalidateIntrinsicContentSize() UIView.IsDescendantOfView(UIView) UIView.LayoutIfNeeded() UIView.LayoutSublayersOfLayer(CALayer) UIView.LayoutSubviews() UIView.ModifyAnimations(NFloat, bool, Action) UIView.MovedToSuperview() UIView.MovedToWindow() UIView.NeedsUpdateConstraints() UIView.PerformSystemAnimation(UISystemAnimation, UIView[], UIViewAnimationOptions, Action, UICompletionHandler) UIView.PerformSystemAnimationAsync(UISystemAnimation, UIView[], UIViewAnimationOptions, Action) UIView.PerformWithoutAnimation(Action) UIView.PointInside(CGPoint, UIEvent) UIView.RegisterForTraitChanges(Class[], Action<IUITraitEnvironment, UITraitCollection>) UIView.RegisterForTraitChanges(Class[], NSObject, Selector) UIView.RegisterForTraitChanges(Class[], Selector) UIView.RemoveConstraint(NSLayoutConstraint) UIView.RemoveConstraints(NSLayoutConstraint[]) UIView.RemoveFromSuperview() UIView.RemoveGestureRecognizer(UIGestureRecognizer) UIView.RemoveInteraction(IUIInteraction) UIView.RemoveLayoutGuide(UILayoutGuide) UIView.RemoveMotionEffect(UIMotionEffect) UIView.RequiresConstraintBasedLayout() UIView.ResizableSnapshotView(CGRect, bool, UIEdgeInsets) UIView.SafeAreaInsetsDidChange() UIView.SendSubviewToBack(UIView) UIView.SetAnimationBeginsFromCurrentState(bool) UIView.SetAnimationCurve(UIViewAnimationCurve) UIView.SetAnimationDelay(double) UIView.SetAnimationDelegate(NSObject) UIView.SetAnimationDidStopSelector(Selector) UIView.SetAnimationDuration(double) UIView.SetAnimationRepeatAutoreverses(bool) UIView.SetAnimationRepeatCount(float) UIView.SetAnimationStartDate(NSDate) UIView.SetAnimationTransition(UIViewAnimationTransition, UIView, bool) UIView.SetAnimationWillStartSelector(Selector) UIView.SetContentCompressionResistancePriority(float, UILayoutConstraintAxis) UIView.SetContentHuggingPriority(float, UILayoutConstraintAxis) UIView.SetNeedsDisplay() UIView.SetNeedsDisplayInRect(CGRect) UIView.SetNeedsFocusUpdate() UIView.SetNeedsLayout() UIView.SetNeedsUpdateConstraints() UIView.ShouldUpdateFocus(UIFocusUpdateContext) UIView.SizeThatFits(CGSize) UIView.SizeToFit() UIView.SnapshotView(bool) UIView.SubviewAdded(UIView) UIView.SystemLayoutSizeFittingSize(CGSize) UIView.SystemLayoutSizeFittingSize(CGSize, float, float) UIView.TintColorDidChange() UIView.TraitCollectionDidChange(UITraitCollection) UIView.TransitionNotify(UIView, UIView, double, UIViewAnimationOptions, UICompletionHandler) UIView.TransitionNotifyAsync(UIView, UIView, double, UIViewAnimationOptions) UIView.TransitionNotify(UIView, double, UIViewAnimationOptions, Action, UICompletionHandler) UIView.TransitionNotifyAsync(UIView, double, UIViewAnimationOptions, Action) UIView.UnregisterForTraitChanges(IUITraitChangeRegistration) UIView.UpdateConstraints() UIView.UpdateConstraintsIfNeeded() UIView.UpdateFocusIfNeeded() UIView.UpdateTraitsIfNeeded() UIView.ViewWithTag(nint) UIView.WillDrawLayer(CALayer) UIView.WillMoveToSuperview(UIView) UIView.WillMoveToWindow(UIWindow) UIView.WillRemoveSubview(UIView) UIView.GetAppearance<T>() UIView.AppearanceWhenContainedIn(params Type[]) UIView.GetAppearance(UITraitCollection) UIView.GetAppearance(UITraitCollection, params Type[]) UIView.GetAppearance<T>(UITraitCollection) UIView.GetAppearance<T>(UITraitCollection, params Type[]) UIView.ClassHandle UIView.AccessibilityActivationPoint UIView.AccessibilityAttributedHint UIView.AccessibilityAttributedLabel UIView.AccessibilityAttributedUserInputLabels UIView.AccessibilityAttributedValue UIView.AccessibilityDirectTouchOptions UIView.AccessibilityElementsHidden UIView.AccessibilityExpandedStatus UIView.AccessibilityFrame UIView.AccessibilityHint UIView.AccessibilityIdentifier UIView.AccessibilityIgnoresInvertColors UIView.AccessibilityLabel UIView.AccessibilityLanguage UIView.AccessibilityNavigationStyle UIView.AccessibilityPath UIView.AccessibilityRespondsToUserInteraction UIView.AccessibilityTextualContext UIView.AccessibilityTraits UIView.AccessibilityUserInputLabels UIView.AccessibilityValue UIView.AccessibilityViewIsModal UIView.AlignmentRectInsets UIView.Alpha UIView.AnchorPoint UIView.AnimationsEnabled UIView.AppliedContentSizeCategoryLimitsDescription UIView.AutoresizingMask UIView.AutosizesSubviews UIView.BackgroundColor UIView.BottomAnchor UIView.Bounds UIView.CanBecomeFocused UIView.Center UIView.CenterXAnchor UIView.CenterYAnchor UIView.ClearsContextBeforeDrawing UIView.ClipsToBounds UIView.CollisionBoundingPath UIView.CollisionBoundsType UIView.Constraints UIView.ContentMode UIView.ContentScaleFactor UIView.ContentStretch UIView.CoordinateSpace UIView.DirectionalLayoutMargins UIView.EffectiveUserInterfaceLayoutDirection UIView.ExclusiveTouch UIView.FirstBaselineAnchor UIView.FocusEffect UIView.FocusGroupIdentifier UIView.FocusGroupPriority UIView.FocusItemContainer UIView.FocusItemDeferralMode UIView.Focused UIView.GestureRecognizers UIView.HasAmbiguousLayout UIView.HeightAnchor UIView.Hidden UIView.HoverStyle UIView.InheritedAnimationDuration UIView.InsetsLayoutMarginsFromSafeArea UIView.Interactions UIView.IntrinsicContentSize UIView.IsAccessibilityElement UIView.IsTransparentFocusItem UIView.KeyboardLayoutGuide UIView.LargeContentImage UIView.LargeContentImageInsets UIView.LargeContentTitle UIView.LastBaselineAnchor UIView.Layer UIView.LayoutGuides UIView.LayoutMargins UIView.LayoutMarginsGuide UIView.LeadingAnchor UIView.LeftAnchor UIView.MaskView UIView.MaximumContentSizeCategory UIView.MinimumContentSizeCategory UIView.MotionEffects UIView.MultipleTouchEnabled UIView.Opaque UIView.OverrideUserInterfaceStyle UIView.ParentFocusEnvironment UIView.PreferredFocusEnvironments UIView.PreferredFocusedView UIView.PreservesSuperviewLayoutMargins UIView.ReadableContentGuide UIView.RestorationIdentifier UIView.RightAnchor UIView.SafeAreaInsets UIView.SafeAreaLayoutGuide UIView.ScalesLargeContentImage UIView.SemanticContentAttribute UIView.ShouldGroupAccessibilityChildren UIView.ShowsLargeContentViewer UIView.Subviews UIView.Superview UIView.Tag UIView.TintAdjustmentMode UIView.TintColor UIView.TopAnchor UIView.TrailingAnchor UIView.TraitCollection UIView.TraitOverrides UIView.Transform UIView.Transform3D UIView.TranslatesAutoresizingMaskIntoConstraints UIView.UserInteractionEnabled UIView.ViewForBaselineLayout UIView.ViewForFirstBaselineLayout UIView.ViewForLastBaselineLayout UIView.ViewPrintFormatter UIView.WidthAnchor UIView.Window UIView.AnnouncementDidFinishNotification UIView.AnnouncementNotification UIView.AssistiveTechnologyKey UIView.AssistiveTouchStatusDidChangeNotification UIView.BoldTextStatusDidChangeNotification UIView.ButtonShapesEnabledStatusDidChangeNotification UIView.ClosedCaptioningStatusDidChangeNotification UIView.DarkerSystemColorsStatusDidChangeNotification UIView.ElementFocusedNotification UIView.FocusedElementKey UIView.GrayscaleStatusDidChangeNotification UIView.GuidedAccessStatusDidChangeNotification UIView.HearingDevicePairedEarDidChangeNotification UIView.InvertColorsStatusDidChangeNotification UIView.LayoutChangedNotification UIView.MonoAudioStatusDidChangeNotification UIView.NoIntrinsicMetric UIView.NotificationSwitchControlIdentifier UIView.NotificationVoiceOverIdentifier UIView.OnOffSwitchLabelsDidChangeNotification UIView.PageScrolledNotification UIView.PauseAssistiveTechnologyNotification UIView.PrefersCrossFadeTransitionsStatusDidChangeNotification UIView.ReduceMotionStatusDidChangeNotification UIView.ReduceTransparencyStatusDidChangeNotification UIView.ResumeAssistiveTechnologyNotification UIView.ScreenChangedNotification UIView.ShakeToUndoDidChangeNotification UIView.ShouldDifferentiateWithoutColorDidChangeNotification UIView.SpeakScreenStatusDidChangeNotification UIView.SpeakSelectionStatusDidChangeNotification UIView.SpeechAttributeAnnouncementPriority UIView.SpeechAttributeIpaNotation UIView.SpeechAttributeLanguage UIView.SpeechAttributePitch UIView.SpeechAttributePunctuation UIView.SpeechAttributeQueueAnnouncement UIView.SpeechAttributeSpellOut UIView.SwitchControlStatusDidChangeNotification UIView.TextAttributeContext UIView.TextAttributeCustom UIView.TextAttributeHeadingLevel UIView.UILayoutFittingCompressedSize UIView.UILayoutFittingExpandedSize UIView.UnfocusedElementKey UIView.VideoAutoplayStatusDidChangeNotification UIView.VoiceOverStatusChanged UIView.VoiceOverStatusDidChangeNotification UIView.Appearance UIView.AnimationWillStart UIView.AnimationWillEnd UIResponder.AccessibilityDecrement() UIResponder.AccessibilityElementDidBecomeFocused() UIResponder.AccessibilityElementDidLoseFocus() UIResponder.AccessibilityElementIsFocused() UIResponder.AccessibilityIncrement() UIResponder.AccessibilityPerformEscape() UIResponder.AccessibilityPerformMagicTap() UIResponder.AccessibilityScroll(UIAccessibilityScrollDirection) UIResponder.BecomeFirstResponder() UIResponder.BuildMenu(IUIMenuBuilder) UIResponder.CanPaste(NSItemProvider[]) UIResponder.CanPerform(Selector, NSObject) UIResponder.CaptureTextFromCamera(NSObject) UIResponder.ClearTextInputContextIdentifier(NSString) UIResponder.Copy(NSObject) UIResponder.Cut(NSObject) UIResponder.DecreaseSize(NSObject) UIResponder.Delete(NSObject) UIResponder.Duplicate(NSObject) UIResponder.Export(NSObject) UIResponder.Find(NSObject) UIResponder.FindAndReplace(NSObject) UIResponder.FindNext(NSObject) UIResponder.FindPrevious(NSObject) UIResponder.GetTargetForAction(Selector, NSObject) UIResponder.IncreaseSize(NSObject) UIResponder.MakeTextWritingDirectionLeftToRight(NSObject) UIResponder.MakeTextWritingDirectionRightToLeft(NSObject) UIResponder.MotionBegan(UIEventSubtype, UIEvent) UIResponder.MotionCancelled(UIEventSubtype, UIEvent) UIResponder.MotionEnded(UIEventSubtype, UIEvent) UIResponder.Move(NSObject) UIResponder.Paste(NSObject) UIResponder.Paste(NSItemProvider[]) UIResponder.PasteAndGo(NSObject) UIResponder.PasteAndMatchStyle(NSObject) UIResponder.PasteAndSearch(NSObject) UIResponder.PressesBegan(NSSet<UIPress>, UIPressesEvent) UIResponder.PressesCancelled(NSSet<UIPress>, UIPressesEvent) UIResponder.PressesChanged(NSSet<UIPress>, UIPressesEvent) UIResponder.PressesEnded(NSSet<UIPress>, UIPressesEvent) UIResponder.Print(NSObject) UIResponder.ReloadInputViews() UIResponder.RemoteControlReceived(UIEvent) UIResponder.Rename(NSObject) UIResponder.ResignFirstResponder() UIResponder.RestoreUserActivityState(NSUserActivity) UIResponder.Select(NSObject) UIResponder.SelectAll(NSObject) UIResponder.ToggleBoldface(NSObject) UIResponder.ToggleItalics(NSObject) UIResponder.ToggleUnderline(NSObject) UIResponder.TouchesCancelled(NSSet, UIEvent) UIResponder.TouchesEstimatedPropertiesUpdated(NSSet) UIResponder.UpdateTextAttributes(UITextAttributesConversionHandler) UIResponder.UpdateUserActivityState(NSUserActivity) UIResponder.UseSelectionForFind(NSObject) UIResponder.ValidateCommand(UICommand) UIResponder.AccessibilityAssistiveTechnologyFocusedIdentifiers UIResponder.AccessibilityCustomActions UIResponder.AccessibilityDragSourceDescriptors UIResponder.AccessibilityDropPointDescriptors UIResponder.ActivityItemsConfiguration UIResponder.CanBecomeFirstResponder UIResponder.CanResignFirstResponder UIResponder.EditingInteractionConfiguration UIResponder.InputAccessoryView UIResponder.InputAccessoryViewController UIResponder.InputAssistantItem UIResponder.InputView UIResponder.InputViewController UIResponder.IsFirstResponder UIResponder.KeyCommands UIResponder.NextResponder UIResponder.PasteConfiguration UIResponder.TextInputContextIdentifier UIResponder.TextInputMode UIResponder.UndoManager UIResponder.UserActivity NSObject.PlatformAssembly NSObject.ConformsToProtocol(NativeHandle) NSObject.DangerousRelease() NSObject.DangerousRetain() NSObject.DangerousAutorelease() NSObject.BeginInvokeOnMainThread(Selector, NSObject) NSObject.InvokeOnMainThread(Selector, NSObject) NSObject.BeginInvokeOnMainThread(Action) NSObject.InvokeOnMainThread(Action) NSObject.FromObject(object) NSObject.SetValueForKeyPath(NativeHandle, NSString) NSObject.GetHashCode() NSObject.Equals(object) NSObject.Equals(NSObject) NSObject.ToString() NSObject.Invoke(Action, double) NSObject.Invoke(Action, TimeSpan) NSObject.AddObserver(string, NSKeyValueObservingOptions, Action<NSObservedChange>) NSObject.AddObserver(NSString, NSKeyValueObservingOptions, Action<NSObservedChange>) NSObject.InvokeInBackground(Action) NSObject.AddObserver(NSObject, NSString, NSKeyValueObservingOptions, nint) NSObject.AddObserver(NSObject, string, NSKeyValueObservingOptions, nint) NSObject.AutomaticallyNotifiesObserversForKey(string) NSObject.AwakeFromNib() NSObject.CancelPreviousPerformRequest(NSObject) NSObject.CancelPreviousPerformRequest(NSObject, Selector, NSObject) NSObject.Copy() NSObject.DidChange(NSKeyValueChange, NSIndexSet, NSString) NSObject.DidChange(NSString, NSKeyValueSetMutationKind, NSSet) NSObject.DidChangeValue(string) NSObject.DoesNotRecognizeSelector(Selector) NSObject.GetDictionaryOfValuesFromKeys(NSString[]) NSObject.GetKeyPathsForValuesAffecting(NSString) NSObject.GetMethodForSelector(Selector) NSObject.MutableCopy() NSObject.ObserveValue(NSString, NSObject, NSDictionary, nint) NSObject.PerformSelector(Selector, NSObject, double, NSString[]) NSObject.PerformSelector(Selector, NSObject, double) NSObject.PerformSelector(Selector, NSThread, NSObject, bool) NSObject.PerformSelector(Selector, NSThread, NSObject, bool, NSString[]) NSObject.PerformSelector(Selector) NSObject.PerformSelector(Selector, NSObject) NSObject.PerformSelector(Selector, NSObject, NSObject) NSObject.PrepareForInterfaceBuilder() NSObject.RemoveObserver(NSObject, NSString, nint) NSObject.RemoveObserver(NSObject, string, nint) NSObject.RemoveObserver(NSObject, NSString) NSObject.RemoveObserver(NSObject, string) NSObject.SetNilValueForKey(NSString) NSObject.SetValueForKey(NSObject, NSString) NSObject.SetValueForKeyPath(NSObject, NSString) NSObject.SetValueForUndefinedKey(NSObject, NSString) NSObject.SetValuesForKeysWithDictionary(NSDictionary) NSObject.ValueForKey(NSString) NSObject.ValueForKeyPath(NSString) NSObject.ValueForUndefinedKey(NSString) NSObject.WillChange(NSKeyValueChange, NSIndexSet, NSString) NSObject.WillChange(NSString, NSKeyValueSetMutationKind, NSSet) NSObject.WillChangeValue(string) NSObject.DebugDescription NSObject.Description NSObject.RetainCount NSObject.ChangeIndexesKey NSObject.ChangeKindKey NSObject.ChangeNewKey NSObject.ChangeNotificationIsPriorKey NSObject.ChangeOldKey object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mapsui.UI.iOS Assembly: Mapsui.UI.iOS.dll Syntax [Register(\"MapControl\")] public class MapControl : UIView, IEquatable<NSObject>, INSObjectProtocol, IUIActivityItemsConfigurationProviding, IUIPasteConfigurationSupporting, IUIResponderStandardEditActions, IUIUserActivityRestoring, IEnumerable, INSCoding, IUIAccessibilityIdentification, IUIAppearance, IUIAppearanceContainer, IUICoordinateSpace, IUIDynamicItem, IUIFocusItem, IUIFocusEnvironment, IUIFocusItemContainer, IUILargeContentViewerItem, IUIPopoverPresentationControllerSourceItem, IUITraitChangeObservable, IUITraitEnvironment, ICALayerDelegate, INativeObject, IMapControl, INotifyPropertyChanged, IDisposable Constructors | Edit this page View Source MapControl(CGRect) Declaration public MapControl(CGRect frame) Parameters Type Name Description CGRect frame | Edit this page View Source MapControl(nint) Declaration [Preserve] public MapControl(nint handle) Parameters Type Name Description nint handle Properties | Edit this page View Source Frame Declaration public override CGRect Frame { get; set; } Property Value Type Description CGRect Overrides UIKit.UIView.Frame | Edit this page View Source Map Map holding data for which is shown in this MapControl Declaration public Map Map { get; set; } Property Value Type Description Map | Edit this page View Source MaxTapGestureMovement The movement allowed between a touch down and touch up in a touch gestures in device independent pixels. Declaration public int MaxTapGestureMovement { get; set; } Property Value Type Description int | Edit this page View Source UseFling Use fling gesture to move the map. Default is true. Fling means that the map will continue to move for a short time after the user has lifted the finger. Declaration public bool UseFling { get; set; } Property Value Type Description bool | Edit this page View Source UseGPU Declaration public static bool UseGPU { get; set; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Edit this page View Source ForceUpdate() Force a update of control Declaration public void ForceUpdate() Remarks When this function is called, the control draws itself once | Edit this page View Source GetMapInfo(ScreenPosition, IEnumerable<ILayer>) Check, if a feature at a given screen position is hit. Declaration public MapInfo GetMapInfo(ScreenPosition screenPosition, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Screen position to check for widgets and features. IEnumerable<ILayer> layers The layers to query. Returns Type Description MapInfo | Edit this page View Source GetPixelDensity() Returns the number of pixels per device independent unit Declaration public float? GetPixelDensity() Returns Type Description float? | Edit this page View Source GetRemoteMapInfoAsync(ScreenPosition, Viewport, IEnumerable<ILayer>) Declaration protected Task<MapInfo> GetRemoteMapInfoAsync(ScreenPosition screenPosition, Viewport viewport, IEnumerable<ILayer> layers) Parameters Type Name Description ScreenPosition screenPosition Viewport viewport IEnumerable<ILayer> layers Returns Type Description Task<MapInfo> | Edit this page View Source GetSnapshot(IEnumerable<ILayer>?, RenderFormat, int) Create a snapshot form map as PNG image Declaration public byte[] GetSnapshot(IEnumerable<ILayer>? layers = null, RenderFormat renderFormat = RenderFormat.Png, int quality = 100) Parameters Type Name Description IEnumerable<ILayer> layers Layers that should be included in snapshot RenderFormat renderFormat render format int quality default quality is 90 is applicable for webp and jpg Returns Type Description byte[] Byte array with snapshot in png format. If there are any problems than returns null. | Edit this page View Source InvalidateCanvas() Declaration public void InvalidateCanvas() | Edit this page View Source LayoutMarginsDidChange() Declaration public override void LayoutMarginsDidChange() Overrides UIKit.UIView.LayoutMarginsDidChange() | Edit this page View Source OnMapInfo(MapInfoEventArgs) Declaration protected void OnMapInfo(MapInfoEventArgs mapInfoEventArgs) Parameters Type Name Description MapInfoEventArgs mapInfoEventArgs | Edit this page View Source OnMapPointerMoved(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapPointerMoved(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnMapPointerPressed(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerPressed(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapPointerReleased(ScreenPosition, MPoint) Declaration protected virtual bool OnMapPointerReleased(ScreenPosition screenPosition, MPoint worldPosition) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition Returns Type Description bool | Edit this page View Source OnMapTapped(ScreenPosition, MPoint, GestureType) Declaration protected virtual bool OnMapTapped(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Returns Type Description bool | Edit this page View Source OnPropertyChanged(string) Declaration protected void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description string propertyName | Edit this page View Source OpenInBrowser(string) Declaration public void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source Refresh(ChangeType) Declaration public void Refresh(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshData(ChangeType) Refresh data of Map, but don't paint it Declaration public void RefreshData(ChangeType changeType = ChangeType.Discrete) Parameters Type Name Description ChangeType changeType | Edit this page View Source RefreshGraphics() Declaration public void RefreshGraphics() | Edit this page View Source TouchesBegan(NSSet, UIEvent?) Declaration public override void TouchesBegan(NSSet touches, UIEvent? e) Parameters Type Name Description NSSet touches UIEvent e Overrides UIKit.UIResponder.TouchesBegan(Foundation.NSSet, UIKit.UIEvent) | Edit this page View Source TouchesEnded(NSSet, UIEvent?) Declaration public override void TouchesEnded(NSSet touches, UIEvent? e) Parameters Type Name Description NSSet touches UIEvent e Overrides UIKit.UIResponder.TouchesEnded(Foundation.NSSet, UIKit.UIEvent) | Edit this page View Source TouchesMoved(NSSet, UIEvent?) Declaration public override void TouchesMoved(NSSet touches, UIEvent? e) Parameters Type Name Description NSSet touches UIEvent e Overrides UIKit.UIResponder.TouchesMoved(Foundation.NSSet, UIKit.UIEvent) | Edit this page View Source Unsubscribe() Unsubscribe from map events Declaration public void Unsubscribe() Events | Edit this page View Source Info Called whenever the map is clicked. The MapInfoEventArgs contain the features that were hit in the layers that have IsMapInfoLayer set to true. Declaration public event EventHandler<MapInfoEventArgs>? Info Event Type Type Description EventHandler<MapInfoEventArgs> Remarks The Map.Tapped event is preferred over the Info event. This event is kept for backwards compatibility. | Edit this page View Source MapPointerMoved Event that is triggered when on pointer move. Can be a drag or hover. Declaration public event EventHandler<MapEventArgs>? MapPointerMoved Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerPressed Event that is triggered when on pointer down. Declaration public event EventHandler<MapEventArgs>? MapPointerPressed Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapPointerReleased Event that is triggered when on pointer up. Declaration public event EventHandler<MapEventArgs>? MapPointerReleased Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source MapTapped Event that is triggered when the map is tapped. Can be a single tap, double tap or long press. Declaration public event EventHandler<MapEventArgs>? MapTapped Event Type Type Description EventHandler<MapEventArgs> | Edit this page View Source PropertyChanged Called whenever a property is changed Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements IEquatable<T> Foundation.INSObjectProtocol UIKit.IUIActivityItemsConfigurationProviding UIKit.IUIPasteConfigurationSupporting UIKit.IUIResponderStandardEditActions UIKit.IUIUserActivityRestoring IEnumerable Foundation.INSCoding UIKit.IUIAccessibilityIdentification UIKit.IUIAppearance UIKit.IUIAppearanceContainer UIKit.IUICoordinateSpace UIKit.IUIDynamicItem UIKit.IUIFocusItem UIKit.IUIFocusEnvironment UIKit.IUIFocusItemContainer UIKit.IUILargeContentViewerItem UIKit.IUIPopoverPresentationControllerSourceItem UIKit.IUITraitChangeObservable UIKit.IUITraitEnvironment CoreAnimation.ICALayerDelegate ObjCRuntime.INativeObject IMapControl INotifyPropertyChanged IDisposable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.UI.iOS.html": {
    "href": "pages/Mapsui.UI.iOS.html",
    "title": "Namespace Mapsui.UI.iOS",
    "keywords": "Namespace Mapsui.UI.iOS Classes MapControl"
  },
  "pages/Mapsui.Utilities.Algorithms.html": {
    "href": "pages/Mapsui.Utilities.Algorithms.html",
    "title": "Class Algorithms",
    "keywords": "Class Algorithms Inheritance object Algorithms Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class Algorithms Methods | Edit this page View Source DegreesToRadians(double) Converts the specified angle from degrees to radians Declaration public static double DegreesToRadians(double degrees) Parameters Type Name Description double degrees Angle to convert (degrees) Returns Type Description double Returns the angle in radians | Edit this page View Source Distance(MPoint, MPoint) Declaration public static double Distance(MPoint a, MPoint b) Parameters Type Name Description MPoint a MPoint b Returns Type Description double | Edit this page View Source Distance(double, double, double, double) Gets the Euclidean distance between two points. Declaration public static double Distance(double x1, double y1, double x2, double y2) Parameters Type Name Description double x1 The first point's X coordinate. double y1 The first point's Y coordinate. double x2 The second point's X coordinate. double y2 The second point's Y coordinate. Returns Type Description double | Edit this page View Source DistancePointLine(MPoint, MPoint, MPoint) Computes the distance from a point p to a line segment AB. Note: NON-ROBUST! Declaration public static double DistancePointLine(MPoint p, MPoint a, MPoint b) Parameters Type Name Description MPoint p The point to compute the distance for. MPoint a One point of the line. MPoint b Another point of the line (must be different to A). Returns Type Description double The distance from p to line segment AB. | Edit this page View Source RadiansToDegrees(double) Declaration public static double RadiansToDegrees(double radians) Parameters Type Name Description double radians Returns Type Description double | Edit this page View Source RotateClockwiseDegrees(double, double, double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseDegrees(double x, double y, double degrees) Parameters Type Name Description double x X coordinate to rotate double y Y coordinate to rotate double degrees Angle to rotate (degrees) Returns Type Description MPoint Returns the rotated point | Edit this page View Source RotateClockwiseRadians(double, double, double) Rotates the specified point clockwise about the origin Declaration public static MPoint RotateClockwiseRadians(double x, double y, double radians) Parameters Type Name Description double x X coordinate to rotate double y Y coordinate to rotate double radians Angle to rotate (radians) Returns Type Description MPoint Returns the rotated point"
  },
  "pages/Mapsui.Utilities.AsyncAutoResetEvent.html": {
    "href": "pages/Mapsui.Utilities.AsyncAutoResetEvent.html",
    "title": "Class AsyncAutoResetEvent",
    "keywords": "Class AsyncAutoResetEvent Inheritance object AsyncAutoResetEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class AsyncAutoResetEvent Constructors | Edit this page View Source AsyncAutoResetEvent(bool) Declaration public AsyncAutoResetEvent(bool initialState = false) Parameters Type Name Description bool initialState Methods | Edit this page View Source Set() Declaration public void Set() | Edit this page View Source WaitAsync() Declaration public ValueTask<bool> WaitAsync() Returns Type Description ValueTask<bool> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.Bearings.html": {
    "href": "pages/Mapsui.Utilities.Bearings.html",
    "title": "Class Bearings",
    "keywords": "Class Bearings Inheritance object Bearings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class Bearings Methods | Edit this page View Source CalculateBearing(double, double, double, double) Declaration public static double CalculateBearing(double fromLat, double fromLon, double toLat, double toLon) Parameters Type Name Description double fromLat double fromLon double toLat double toLon Returns Type Description double Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.Caster.html": {
    "href": "pages/Mapsui.Utilities.Caster.html",
    "title": "Class Caster",
    "keywords": "Class Caster Inheritance object Caster Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class Caster Methods | Edit this page View Source TryCastOrThrow<T>(object?) Declaration public static T TryCastOrThrow<T>(object? obj) where T : class Parameters Type Name Description object obj Returns Type Description T Type Parameters Name Description T"
  },
  "pages/Mapsui.Utilities.ConcurrentHashSet-1.html": {
    "href": "pages/Mapsui.Utilities.ConcurrentHashSet-1.html",
    "title": "Class ConcurrentHashSet<T>",
    "keywords": "Class ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection. Inheritance object ConcurrentHashSet<T> Implements IReadOnlyCollection<T> ICollection<T> IEnumerable<T> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class ConcurrentHashSet<T> : IReadOnlyCollection<T>, ICollection<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T The type of the items in the collection. Remarks All public members of ConcurrentHashSet<T> are thread-safe and may be used concurrently from multiple threads. Constructors | Edit this page View Source ConcurrentHashSet() Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet() | Edit this page View Source ConcurrentHashSet(IEnumerable<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified IEnumerable, has the default concurrency level, has the default initial capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The IEnumerable whose elements are copied to the new ConcurrentHashSet<T>. Exceptions Type Condition ArgumentNullException collection is a null reference. | Edit this page View Source ConcurrentHashSet(IEnumerable<T>, IEqualityComparer<T>?) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified IEnumerable, has the default concurrency level, has the default initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T}. Declaration public ConcurrentHashSet(IEnumerable<T> collection, IEqualityComparer<T>? comparer) Parameters Type Name Description IEnumerable<T> collection The IEnumerable whose elements are copied to the new ConcurrentHashSet<T>. IEqualityComparer<T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentNullException collection is a null reference (Nothing in Visual Basic). | Edit this page View Source ConcurrentHashSet(IEqualityComparer<T>?) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T}. Declaration public ConcurrentHashSet(IEqualityComparer<T>? comparer) Parameters Type Name Description IEqualityComparer<T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. | Edit this page View Source ConcurrentHashSet(int, IEnumerable<T>, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that contains elements copied from the specified IEnumerable, has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T}. Declaration public ConcurrentHashSet(int concurrencyLevel, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description int concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. IEnumerable<T> collection The IEnumerable whose elements are copied to the new ConcurrentHashSet<T>. IEqualityComparer<T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentNullException collection is a null reference. ArgumentOutOfRangeException concurrencyLevel is less than 1. | Edit this page View Source ConcurrentHashSet(int, int) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the item type. Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity) Parameters Type Name Description int concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. int capacity The initial number of elements that the ConcurrentHashSet<T> can contain. Exceptions Type Condition ArgumentOutOfRangeException concurrencyLevel is less than 1. ArgumentOutOfRangeException capacity is less than 0. | Edit this page View Source ConcurrentHashSet(int, int, IEqualityComparer<T>) Initializes a new instance of the ConcurrentHashSet<T> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified System.Collections.Generic.IEqualityComparer{T}. Declaration public ConcurrentHashSet(int concurrencyLevel, int capacity, IEqualityComparer<T> comparer) Parameters Type Name Description int concurrencyLevel The estimated number of threads that will update the ConcurrentHashSet<T> concurrently. int capacity The initial number of elements that the ConcurrentHashSet<T> can contain. IEqualityComparer<T> comparer The System.Collections.Generic.IEqualityComparer{T} implementation to use when comparing items. Exceptions Type Condition ArgumentOutOfRangeException concurrencyLevel is less than 1. -or- capacity is less than 0. Properties | Edit this page View Source Count Gets the number of items contained in the ConcurrentHashSet<T>. Declaration public int Count { get; } Property Value Type Description int The number of items contained in the ConcurrentHashSet<T>. Remarks Count has snapshot semantics and represents the number of items in the ConcurrentHashSet<T> at the moment when Count was accessed. | Edit this page View Source IsEmpty Gets a value that indicates whether the ConcurrentHashSet<T> is empty. Declaration public bool IsEmpty { get; } Property Value Type Description bool true if the ConcurrentHashSet<T> is empty; otherwise, false. Methods | Edit this page View Source Add(T) Adds the specified item to the ConcurrentHashSet<T>. Declaration public bool Add(T item) Parameters Type Name Description T item The item to add. Returns Type Description bool true if the items was added to the ConcurrentHashSet<T> successfully; false if it already exists. Exceptions Type Condition OverflowException The ConcurrentHashSet<T> contains too many items. | Edit this page View Source Clear() Removes all items from the ConcurrentHashSet<T>. Declaration public void Clear() | Edit this page View Source Contains(T) Determines whether the ConcurrentHashSet<T> contains the specified item. Declaration public bool Contains(T item) Parameters Type Name Description T item The item to locate in the ConcurrentHashSet<T>. Returns Type Description bool true if the ConcurrentHashSet<T> contains the item; otherwise, false. | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the ConcurrentHashSet<T>. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<T> An enumerator for the ConcurrentHashSet<T>. Remarks The enumerator returned from the collection is safe to use concurrently with reads and writes to the collection, however it does not represent a moment-in-time snapshot of the collection. The contents exposed through the enumerator may contain modifications made to the collection after GetEnumerator() was called. | Edit this page View Source TryRemove(T) Attempts to remove the item from the ConcurrentHashSet<T>. Declaration public bool TryRemove(T item) Parameters Type Name Description T item The item to remove. Returns Type Description bool true if an item was removed successfully; otherwise, false. Implements IReadOnlyCollection<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.Constants.html": {
    "href": "pages/Mapsui.Utilities.Constants.html",
    "title": "Class Constants",
    "keywords": "Class Constants Inheritance object Constants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class Constants Fields | Edit this page View Source DefaultResolution Declaration public const float DefaultResolution = 1 Field Value Type Description float | Edit this page View Source DegreesToRadians Declaration public const float DegreesToRadians = 0.017453292 Field Value Type Description float | Edit this page View Source Epsilon Declaration public const double Epsilon = 1.11022302462516E-16 Field Value Type Description double"
  },
  "pages/Mapsui.Utilities.EmbeddedResourceLoader.html": {
    "href": "pages/Mapsui.Utilities.EmbeddedResourceLoader.html",
    "title": "Class EmbeddedResourceLoader",
    "keywords": "Class EmbeddedResourceLoader Inheritance object EmbeddedResourceLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class EmbeddedResourceLoader Methods | Edit this page View Source GetResourceUri(Type, string) Declaration public static Uri GetResourceUri(Type typeInAssemblyOfEmbeddedResource, string relativePathToEmbeddedResource) Parameters Type Name Description Type typeInAssemblyOfEmbeddedResource string relativePathToEmbeddedResource Returns Type Description Uri | Edit this page View Source Load(string, Type) Declaration public static Stream Load(string relativePathToEmbeddedResource, Type typeInAssemblyOfEmbeddedResource) Parameters Type Name Description string relativePathToEmbeddedResource This is the path of the resource without the assembly path but including possible project folders. So if an image 'myimage.png' is in a project folders 'images' the path is 'images.myimage.png'. Resources always uses '.' as separators. Type typeInAssemblyOfEmbeddedResource This should be a type that is in the same assembly as the EmbeddedResource. It is used to infer the full path and is necessary to load the resource. Returns Type Description Stream"
  },
  "pages/Mapsui.Utilities.Haversine.html": {
    "href": "pages/Mapsui.Utilities.Haversine.html",
    "title": "Class Haversine",
    "keywords": "Class Haversine Inheritance object Haversine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class Haversine Methods | Edit this page View Source Distance(double, double, double, double) Returns the distance in kilometers of any two latitude / longitude points. Declaration public static double Distance(double lon1, double lat1, double lon2, double lat2) Parameters Type Name Description double lon1 double lat1 double lon2 double lat2 Returns Type Description double | Edit this page View Source Distance(Span<MPoint>) Returns the distance in kilometers of any two latitude / longitude points. Declaration public static double Distance(Span<MPoint> coordinates) Parameters Type Name Description Span<MPoint> coordinates Returns Type Description double"
  },
  "pages/Mapsui.Utilities.ObservableRangeCollection-1.html": {
    "href": "pages/Mapsui.Utilities.ObservableRangeCollection-1.html",
    "title": "Class ObservableRangeCollection<T>",
    "keywords": "Class ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed. Inheritance object Collection<T> ObservableCollection<T> ObservableRangeCollection<T> Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable INotifyCollectionChanged INotifyPropertyChanged Inherited Members ObservableCollection<T>.BlockReentrancy() ObservableCollection<T>.CheckReentrancy() ObservableCollection<T>.InsertItem(int, T) ObservableCollection<T>.Move(int, int) ObservableCollection<T>.MoveItem(int, int) ObservableCollection<T>.OnPropertyChanged(PropertyChangedEventArgs) ObservableCollection<T>.RemoveItem(int) ObservableCollection<T>.CollectionChanged ObservableCollection<T>.PropertyChanged Collection<T>.Add(T) Collection<T>.Clear() Collection<T>.Contains(T) Collection<T>.CopyTo(T[], int) Collection<T>.GetEnumerator() Collection<T>.IndexOf(T) Collection<T>.Insert(int, T) Collection<T>.Remove(T) Collection<T>.RemoveAt(int) Collection<T>.Count Collection<T>.this[int] Collection<T>.Items object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class ObservableRangeCollection<T> : ObservableCollection<T>, IList<T>, ICollection<T>, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged Type Parameters Name Description T Constructors | Edit this page View Source ObservableRangeCollection() Initializes a new instance of ObservableCollection that is empty and has default initial capacity. Declaration public ObservableRangeCollection() | Edit this page View Source ObservableRangeCollection(IEnumerable<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied. Declaration public ObservableRangeCollection(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The collection whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the collection. Exceptions Type Condition ArgumentNullException collection is a null reference | Edit this page View Source ObservableRangeCollection(List<T>) Initializes a new instance of the ObservableCollection class that contains elements copied from the specified list Declaration public ObservableRangeCollection(List<T> list) Parameters Type Name Description List<T> list The list whose elements are copied to the new list. Remarks The elements are copied onto the ObservableCollection in the same order they are read by the enumerator of the list. Exceptions Type Condition ArgumentNullException list is a null reference Methods | Edit this page View Source AddRange(IEnumerable<T>) Adds the elements of the specified collection to the end of the ObservableCollection<T>. Declaration public void AddRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The collection whose elements should be added to the end of the ObservableCollection<T>. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. Exceptions Type Condition ArgumentNullException collection is null. | Edit this page View Source ClearItems() Called by base class Collection<T> when the list is being cleared; raises a CollectionChanged event to any listeners. Declaration protected override void ClearItems() Overrides ObservableCollection<T>.ClearItems() | Edit this page View Source DeferEvents() Declaration protected virtual IDisposable DeferEvents() Returns Type Description IDisposable | Edit this page View Source InsertRange(int, IEnumerable<T>) Inserts the elements of a collection into the ObservableCollection<T> at the specified index. Declaration public void InsertRange(int index, IEnumerable<T> collection) Parameters Type Name Description int index The zero-based index at which the new elements should be inserted. IEnumerable<T> collection The collection whose elements should be inserted into the List{T}. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type. Exceptions Type Condition ArgumentNullException collection is null. ArgumentOutOfRangeException index is not in the collection range. | Edit this page View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Raise CollectionChanged event to any listeners. Properties/methods modifying this ObservableCollection will raise a collection changed event through this virtual method. Declaration protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e) Parameters Type Name Description NotifyCollectionChangedEventArgs e Overrides ObservableCollection<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs) Remarks When overriding this method, either call its base implementation or call BlockReentrancy() to guard against reentrant collection changes. | Edit this page View Source RemoveAll(int, int, Predicate<T>) Iterates over the specified range within the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(int index, int count, Predicate<T> match) Parameters Type Name Description int index The index of where to start performing the search. int count The number of items to iterate on. Predicate<T> match Returns Type Description int Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition ArgumentOutOfRangeException index is out of range. ArgumentOutOfRangeException count is out of range. ArgumentNullException match is null. | Edit this page View Source RemoveAll(Predicate<T>) Iterates over the collection and removes all items that satisfy the specified match. Declaration public int RemoveAll(Predicate<T> match) Parameters Type Name Description Predicate<T> match Returns Type Description int Returns the number of elements that where Remarks The complexity is O(n). Exceptions Type Condition ArgumentNullException match is null. | Edit this page View Source RemoveRange(IEnumerable<T>) Removes the first occurrence of each item in the specified collection from the ObservableCollection<T>. Declaration public void RemoveRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The items to remove. Exceptions Type Condition ArgumentNullException collection is null. | Edit this page View Source RemoveRange(int, int) Removes a range of elements from the ObservableCollection<T>>. Declaration public void RemoveRange(int index, int count) Parameters Type Name Description int index The zero-based starting index of the range of elements to remove. int count The number of elements to remove. Exceptions Type Condition ArgumentOutOfRangeException The specified range is exceeding the collection. | Edit this page View Source ReplaceRange(IEnumerable<T>) Clears the current collection and replaces it with the specified collection, using the default EqualityComparer<T>. Declaration public void ReplaceRange(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection The items to fill the collection with, after clearing it. Exceptions Type Condition ArgumentNullException collection is null. | Edit this page View Source ReplaceRange(IEnumerable<T>, IEqualityComparer<T>) Clears the current collection and replaces it with the specified collection, using the specified comparer to skip equal items. Declaration public void ReplaceRange(IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description IEnumerable<T> collection The items to fill the collection with, after clearing it. IEqualityComparer<T> comparer An IEqualityComparer<T> to be used to check whether an item in the same location already existed before, which in case it would not be added to the collection, and no event will be raised for it. Exceptions Type Condition ArgumentNullException collection is null. ArgumentNullException comparer is null. | Edit this page View Source ReplaceRange(int, int, IEnumerable<T>) Removes the specified range and inserts the specified collection, ignoring equal items (using Default). Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection) Parameters Type Name Description int index The index of where to start the replacement. int count The number of items to be replaced. IEnumerable<T> collection The collection to insert in that location. Exceptions Type Condition ArgumentOutOfRangeException index is out of range. ArgumentOutOfRangeException count is out of range. ArgumentNullException collection is null. | Edit this page View Source ReplaceRange(int, int, IEnumerable<T>, IEqualityComparer<T>) Removes the specified range and inserts the specified collection in its position, leaving equal items in equal positions intact. Declaration public void ReplaceRange(int index, int count, IEnumerable<T> collection, IEqualityComparer<T> comparer) Parameters Type Name Description int index The index of where to start the replacement. int count The number of items to be replaced. IEnumerable<T> collection The collection to insert in that location. IEqualityComparer<T> comparer The comparer to use when checking for equal items. Exceptions Type Condition ArgumentOutOfRangeException index is out of range. ArgumentOutOfRangeException count is out of range. ArgumentNullException collection is null. ArgumentNullException comparer is null. | Edit this page View Source SetItem(int, T) Called by base class Collection<T> when an item is set in list; raises a CollectionChanged event to any listeners. Declaration protected override void SetItem(int index, T item) Parameters Type Name Description int index T item Overrides ObservableCollection<T>.SetItem(int, T) Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable INotifyCollectionChanged INotifyPropertyChanged Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.Performance.html": {
    "href": "pages/Mapsui.Utilities.Performance.html",
    "title": "Class Performance",
    "keywords": "Class Performance Inheritance object Performance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class Performance Constructors | Edit this page View Source Performance(int) Declaration public Performance(int maxValues = 20) Parameters Type Name Description int maxValues Properties | Edit this page View Source Count Counter for number of redraws of map Declaration public int Count { get; } Property Value Type Description int | Edit this page View Source DefaultIsActive Declaration public static ActiveMode DefaultIsActive { get; set; } Property Value Type Description ActiveMode | Edit this page View Source DrawingTimes Get list of all drawing times Declaration public List<double> DrawingTimes { get; } Property Value Type Description List<double> Remarks First entry is the newest time | Edit this page View Source FPS Possible frames per second calculated from Mean Declaration public int FPS { get; } Property Value Type Description int | Edit this page View Source IsActive Declaration public ActiveMode IsActive { get; set; } Property Value Type Description ActiveMode | Edit this page View Source LastDrawingTime Time be used for the last drawing Declaration public double LastDrawingTime { get; } Property Value Type Description double | Edit this page View Source Max Maximal drawing time Declaration public double Max { get; } Property Value Type Description double | Edit this page View Source MaxValues MaxValues of drawing times that are saved and used for mean value Declaration public int MaxValues { get; } Property Value Type Description int | Edit this page View Source Mean Mean value of all MaxValues drawing times Declaration public double Mean { get; } Property Value Type Description double | Edit this page View Source Min Minimal drawing time Declaration public double Min { get; } Property Value Type Description double | Edit this page View Source RunningFps Running average of the actual frames per second. Declaration public double RunningFps { get; } Property Value Type Description double Methods | Edit this page View Source Add(double) Add next drawing time Declaration public void Add(double time) Parameters Type Name Description double time | Edit this page View Source Clear() Clear all existing values up to now Declaration public void Clear() | Edit this page View Source GetIsActive() Declaration public bool GetIsActive() Returns Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.PlatformUtilities.html": {
    "href": "pages/Mapsui.Utilities.PlatformUtilities.html",
    "title": "Class PlatformUtilities",
    "keywords": "Class PlatformUtilities Inheritance object PlatformUtilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class PlatformUtilities Methods | Edit this page View Source OpenInBrowser(string) Declaration public static void OpenInBrowser(string url) Parameters Type Name Description string url | Edit this page View Source SetOpenInBrowserFunc(Action<string>) Declaration public static void SetOpenInBrowserFunc(Action<string> openInBrowserMethod) Parameters Type Name Description Action<string> openInBrowserMethod"
  },
  "pages/Mapsui.Utilities.Runtime.html": {
    "href": "pages/Mapsui.Utilities.Runtime.html",
    "title": "Class Runtime",
    "keywords": "Class Runtime Inheritance object Runtime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public class Runtime Properties | Edit this page View Source IsWasm Declaration public static bool IsWasm { get; } Property Value Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Utilities.StreamHelper.html": {
    "href": "pages/Mapsui.Utilities.StreamHelper.html",
    "title": "Class StreamHelper",
    "keywords": "Class StreamHelper Inheritance object StreamHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class StreamHelper Methods | Edit this page View Source ReadFully(Stream) Reads data from a stream until the end is reached. The data is returned as a byte array. An IOException is thrown if any of the underlying IO calls fail. Declaration public static byte[] ReadFully(Stream stream) Parameters Type Name Description Stream stream The stream to read data from Returns Type Description byte[]"
  },
  "pages/Mapsui.Utilities.TransformationAlgorithms.html": {
    "href": "pages/Mapsui.Utilities.TransformationAlgorithms.html",
    "title": "Class TransformationAlgorithms",
    "keywords": "Class TransformationAlgorithms Inheritance object TransformationAlgorithms Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class TransformationAlgorithms Methods | Edit this page View Source CalculateCenterOfMap(double, double, double, double, double, double) Calculates the new CenterOfMap based on the CenterOfZoom and the new resolution. The CenterOfZoom is not the same as the CenterOfMap. CenterOfZoom is the one place in the map that stays on the same location when zooming. In Mapsui is can be equal to the CenterOfMap, for instance when using the +/- buttons. When using mouse wheel zoom the CenterOfZoom is the location of the mouse. Declaration public static (double x, double y) CalculateCenterOfMap(double centerOfZoomX, double centerOfZoomY, double newResolution, double currentCenterX, double currentCenterY, double currentResolution) Parameters Type Name Description double centerOfZoomX double centerOfZoomY double newResolution double currentCenterX double currentCenterY double currentResolution Returns Type Description (double x, double y) The x and y of the center of the map."
  },
  "pages/Mapsui.Utilities.Version.html": {
    "href": "pages/Mapsui.Utilities.Version.html",
    "title": "Class Version",
    "keywords": "Class Version Version information helper class Inheritance object Version Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class Version Methods | Edit this page View Source GetCurrentVersion() Returns the current build version of Mapsui Declaration public static Version? GetCurrentVersion() Returns Type Description Version"
  },
  "pages/Mapsui.Utilities.ZoomHelper.html": {
    "href": "pages/Mapsui.Utilities.ZoomHelper.html",
    "title": "Class ZoomHelper",
    "keywords": "Class ZoomHelper Inheritance object ZoomHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Utilities Assembly: Mapsui.dll Syntax public static class ZoomHelper Methods | Edit this page View Source CalculateResolutionForWorldSize(double, double, double, double, MBoxFit) Declaration public static double CalculateResolutionForWorldSize(double worldWidth, double worldHeight, double screenWidth, double screenHeight, MBoxFit boxFit = MBoxFit.Fit) Parameters Type Name Description double worldWidth double worldHeight double screenWidth double screenHeight MBoxFit boxFit Returns Type Description double | Edit this page View Source GetResolutionToZoomIn(IReadOnlyList<double>?, double) Declaration public static double GetResolutionToZoomIn(IReadOnlyList<double>? resolutions, double resolution) Parameters Type Name Description IReadOnlyList<double> resolutions double resolution Returns Type Description double | Edit this page View Source GetResolutionToZoomOut(IReadOnlyList<double>?, double) Declaration public static double GetResolutionToZoomOut(IReadOnlyList<double>? resolutions, double resolution) Parameters Type Name Description IReadOnlyList<double> resolutions double resolution Returns Type Description double"
  },
  "pages/Mapsui.Utilities.html": {
    "href": "pages/Mapsui.Utilities.html",
    "title": "Namespace Mapsui.Utilities",
    "keywords": "Namespace Mapsui.Utilities Classes Algorithms AsyncAutoResetEvent Bearings Caster ConcurrentHashSet<T> Represents a thread-safe hash-based unique collection. Constants EmbeddedResourceLoader Haversine ObservableRangeCollection<T> Implementation of a dynamic data collection based on generic Collection<T>, implementing INotifyCollectionChanged to notify listeners when items get added, removed or the whole list is refreshed. Performance PlatformUtilities Runtime StreamHelper TransformationAlgorithms Version Version information helper class ZoomHelper"
  },
  "pages/Mapsui.Viewport.html": {
    "href": "pages/Mapsui.Viewport.html",
    "title": "Struct Viewport",
    "keywords": "Struct Viewport Implements IEquatable<Viewport> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui Assembly: Mapsui.dll Syntax public readonly record struct Viewport : IEquatable<Viewport> Constructors | Edit this page View Source Viewport() Declaration public Viewport() | Edit this page View Source Viewport(double, double, double, double, double, double) Declaration public Viewport(double centerX, double centerY, double resolution, double rotation, double width, double height) Parameters Type Name Description double centerX double centerY double resolution double rotation double width double height Properties | Edit this page View Source CenterX The X coordinate of the center of the viewport in world coordinates Declaration public double CenterX { get; init; } Property Value Type Description double | Edit this page View Source CenterY The Y coordinate of the center of the viewport in world coordinates Declaration public double CenterY { get; init; } Property Value Type Description double | Edit this page View Source Height Height of viewport in screen pixels Declaration public double Height { get; init; } Property Value Type Description double | Edit this page View Source Resolution Resolution of the viewport in units per pixel Declaration public double Resolution { get; init; } Property Value Type Description double Remarks The Resolution in Mapsui is what is often called zoom level. Because Mapsui is projection independent, there aren't any zoom levels as other map libraries have. If your map has EPSG:3857 as projection and you want to calculate the zoom, you should use the following equation var zoom = (float)Math.Log(78271.51696401953125 / resolution, 2); | Edit this page View Source Rotation Viewport rotation from True North (clockwise degrees) Declaration public double Rotation { get; init; } Property Value Type Description double | Edit this page View Source Width Width of viewport in screen pixels Declaration public double Width { get; init; } Property Value Type Description double Operators | Edit this page View Source operator +(Viewport, Viewport) Declaration public static Viewport operator +(Viewport a, Viewport b) Parameters Type Name Description Viewport a Viewport b Returns Type Description Viewport | Edit this page View Source operator /(Viewport, double) Declaration public static Viewport operator /(Viewport v, double d) Parameters Type Name Description Viewport v double d Returns Type Description Viewport | Edit this page View Source operator *(Viewport, double) Declaration public static Viewport operator *(Viewport v, double m) Parameters Type Name Description Viewport v double m Returns Type Description Viewport | Edit this page View Source operator -(Viewport, Viewport) Declaration public static Viewport operator -(Viewport a, Viewport b) Parameters Type Name Description Viewport a Viewport b Returns Type Description Viewport Implements IEquatable<T> Extension Methods ViewportExtensions.HasSize(Viewport) ViewportExtensions.IsRotated(Viewport) ViewportExtensions.ScreenToWorld(Viewport, ScreenPosition) ViewportExtensions.ScreenToWorld(Viewport, double, double) ViewportExtensions.ScreenToWorldXY(Viewport, double, double) ViewportExtensions.ToExtent(Viewport) ViewportExtensions.ToSection(Viewport) ViewportExtensions.WorldToScreen(Viewport, MPoint) ViewportExtensions.WorldToScreen(Viewport, MRect) ViewportExtensions.WorldToScreen(Viewport, double, double) ViewportExtensions.WorldToScreenXY(Viewport, double, double) DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.ViewportChangedEventArgs.html": {
    "href": "pages/Mapsui.ViewportChangedEventArgs.html",
    "title": "Class ViewportChangedEventArgs",
    "keywords": "Class ViewportChangedEventArgs Inheritance object EventArgs PropertyChangedEventArgs ViewportChangedEventArgs Inherited Members PropertyChangedEventArgs.PropertyName EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui Assembly: Mapsui.dll Syntax public class ViewportChangedEventArgs : PropertyChangedEventArgs Constructors | Edit this page View Source ViewportChangedEventArgs(Viewport, Viewport) Declaration public ViewportChangedEventArgs(Viewport previousViewport, Viewport viewport) Parameters Type Name Description Viewport previousViewport Viewport viewport Properties | Edit this page View Source OldViewport Declaration [Obsolete(\"Use PreviousViewport\")] public Viewport OldViewport { get; } Property Value Type Description Viewport | Edit this page View Source PreviousViewport Declaration public Viewport PreviousViewport { get; } Property Value Type Description Viewport | Edit this page View Source Viewport Declaration public Viewport Viewport { get; init; } Property Value Type Description Viewport Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ActiveMode.html": {
    "href": "pages/Mapsui.Widgets.ActiveMode.html",
    "title": "Enum ActiveMode",
    "keywords": "Enum ActiveMode Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum ActiveMode Fields Name Description No Never show logging in the map. OnlyInDebugMode Show logging in the map only if the debugger is attached. Note, this is independent of a debug build. You can attach a debugger to a release build and it will show logging, or run a debug build without a debugger attached and it won't show logging. Yes Show logging in the map. Note, this only has effect if LoggingWidget.Enabled == true. Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.Alignment.html": {
    "href": "pages/Mapsui.Widgets.Alignment.html",
    "title": "Enum Alignment",
    "keywords": "Enum Alignment Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum Alignment Fields Name Description Auto Center Left Right Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.BaseWidget.html": {
    "href": "pages/Mapsui.Widgets.BaseWidget.html",
    "title": "Class BaseWidget",
    "keywords": "Class BaseWidget Inheritance object BaseWidget BoxWidget ZoomInOutWidget RulerWidget InputOnlyWidget ScaleBarWidget Implements IWidget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public abstract class BaseWidget : IWidget Properties | Edit this page View Source Enabled Is Widget visible on screen Declaration public bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source Envelope Envelope of Widget Declaration public MRect? Envelope { get; set; } Property Value Type Description MRect | Edit this page View Source Height Height of Widget Declaration public double Height { get; set; } Property Value Type Description double | Edit this page View Source HorizontalAlignment Horizontal alignment of Widget Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Edit this page View Source InputAreaType Type of area to use for touch events. The default is WidgetArea. This needs to be set to 'Map' in the constructor if widget want to receive manipulation events from all over the map. Declaration public InputAreaType InputAreaType { get; init; } Property Value Type Description InputAreaType | Edit this page View Source InputTransparent Declaration public bool InputTransparent { get; init; } Property Value Type Description bool | Edit this page View Source Margin Margin outside of the widget Declaration public MRect Margin { get; set; } Property Value Type Description MRect | Edit this page View Source Position Position for absolute alignment Declaration public MPoint Position { get; set; } Property Value Type Description MPoint | Edit this page View Source VerticalAlignment Vertical alignment of Widget Declaration public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment | Edit this page View Source Width Width of Widget Declaration public double Width { get; set; } Property Value Type Description double | Edit this page View Source WithPointerMovedEvent This is an init only property to allow PointerMoved event initialization within an expression body method. Declaration public EventHandler<WidgetEventArgs>? WithPointerMovedEvent { init; } Property Value Type Description EventHandler<WidgetEventArgs> | Edit this page View Source WithPointerPressedEvent This is an init only property to allow PointerPressed event initialization within an expression body method. Declaration public EventHandler<WidgetEventArgs>? WithPointerPressedEvent { init; } Property Value Type Description EventHandler<WidgetEventArgs> | Edit this page View Source WithPointerReleased This is an init only property to allow PointerReleased event initialization within an expression body method. Declaration public EventHandler<WidgetEventArgs>? WithPointerReleased { init; } Property Value Type Description EventHandler<WidgetEventArgs> | Edit this page View Source WithTappedEvent This is an init only property to allow Tapped event initialization within an expression body method. Declaration public EventHandler<WidgetEventArgs>? WithTappedEvent { init; } Property Value Type Description EventHandler<WidgetEventArgs> Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs) Function, which handles the widget pointer moved event Declaration public virtual void OnPointerMoved(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnPointerPressed(WidgetEventArgs) Function, which handles the widget pointer pressed event Declaration public virtual void OnPointerPressed(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnPointerReleased(WidgetEventArgs) Function, which handles the widget pointer released event Declaration public virtual void OnPointerReleased(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration public virtual void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source UpdateEnvelope(double, double, double, double) Declaration public void UpdateEnvelope(double maxWidth, double maxHeight, double screenWidth, double screenHeight) Parameters Type Name Description double maxWidth double maxHeight double screenWidth double screenHeight Events | Edit this page View Source PointerMoved Event which is called if widget is moved. Declaration public event EventHandler<WidgetEventArgs>? PointerMoved Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source PointerPressed Event which is called if widget is pressed. Declaration public event EventHandler<WidgetEventArgs>? PointerPressed Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source PointerReleased Event which is called if widget is released. Declaration public event EventHandler<WidgetEventArgs>? PointerReleased Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source Tapped Event which is called if widget is tapped. Declaration public event EventHandler<WidgetEventArgs>? Tapped Event Type Type Description EventHandler<WidgetEventArgs> Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.BoxWidgets.BoxWidget.html": {
    "href": "pages/Mapsui.Widgets.BoxWidgets.BoxWidget.html",
    "title": "Class BoxWidget",
    "keywords": "Class BoxWidget Widget displaying a box Inheritance object BaseWidget BoxWidget TextBoxWidget ImageButtonWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.BoxWidgets Assembly: Mapsui.dll Syntax public class BoxWidget : BaseWidget, IWidget Properties | Edit this page View Source BackColor Background color of box Declaration public Color? BackColor { get; set; } Property Value Type Description Color? | Edit this page View Source CornerRadius Corner radius of box Declaration public double CornerRadius { get; set; } Property Value Type Description double | Edit this page View Source Opacity Opacity of background, frame and signs Declaration public double Opacity { get; set; } Property Value Type Description double Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.BoxWidgets.TextBoxWidget.html": {
    "href": "pages/Mapsui.Widgets.BoxWidgets.TextBoxWidget.html",
    "title": "Class TextBoxWidget",
    "keywords": "Class TextBoxWidget Widget displaying text in a box Inheritance object BaseWidget BoxWidget TextBoxWidget ButtonWidget LoggingWidget MapInfoWidget MouseCoordinatesWidget Implements IWidget Inherited Members BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.BoxWidgets Assembly: Mapsui.dll Syntax public class TextBoxWidget : BoxWidget, IWidget Properties | Edit this page View Source Padding Padding for left, top, right and bottom for text inside the Widget Declaration public MRect Padding { get; set; } Property Value Type Description MRect | Edit this page View Source Text Text inside of box Declaration public string? Text { get; set; } Property Value Type Description string | Edit this page View Source TextColor Text color of text inside of box Declaration public Color TextColor { get; set; } Property Value Type Description Color | Edit this page View Source TextSize Font size of text inside of box Declaration public double TextSize { get; set; } Property Value Type Description double Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.BoxWidgets.html": {
    "href": "pages/Mapsui.Widgets.BoxWidgets.html",
    "title": "Namespace Mapsui.Widgets.BoxWidgets",
    "keywords": "Namespace Mapsui.Widgets.BoxWidgets Classes BoxWidget Widget displaying a box TextBoxWidget Widget displaying text in a box"
  },
  "pages/Mapsui.Widgets.ButtonWidgets.ButtonWidget.html": {
    "href": "pages/Mapsui.Widgets.ButtonWidgets.ButtonWidget.html",
    "title": "Class ButtonWidget",
    "keywords": "Class ButtonWidget Inheritance object BaseWidget BoxWidget TextBoxWidget ButtonWidget HyperlinkWidget PerformanceWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ButtonWidgets Assembly: Mapsui.dll Syntax public class ButtonWidget : TextBoxWidget, IWidget Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ButtonWidgets.HyperlinkWidget.html": {
    "href": "pages/Mapsui.Widgets.ButtonWidgets.HyperlinkWidget.html",
    "title": "Class HyperlinkWidget",
    "keywords": "Class HyperlinkWidget Widget displaying a clickable hyperlink Inheritance object BaseWidget BoxWidget TextBoxWidget ButtonWidget HyperlinkWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ButtonWidgets Assembly: Mapsui.dll Syntax public class HyperlinkWidget : ButtonWidget, IWidget Properties | Edit this page View Source Url URL to open when Widget is clicked Declaration public string? Url { get; set; } Property Value Type Description string Methods | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration public override void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnTapped(WidgetEventArgs) Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ButtonWidgets.ImageButtonWidget.html": {
    "href": "pages/Mapsui.Widgets.ButtonWidgets.ImageButtonWidget.html",
    "title": "Class ImageButtonWidget",
    "keywords": "Class ImageButtonWidget Widget that shows a button with an icon Inheritance object BaseWidget BoxWidget ImageButtonWidget Implements IWidget IHasImage Inherited Members BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ButtonWidgets Assembly: Mapsui.dll Syntax public class ImageButtonWidget : BoxWidget, IWidget, IHasImage Constructors | Edit this page View Source ImageButtonWidget() Declaration public ImageButtonWidget() Properties | Edit this page View Source Image The image to show as button Declaration public Image? Image { get; set; } Property Value Type Description Image | Edit this page View Source Padding Padding left and right for icon inside the Widget Declaration public MRect Padding { get; set; } Property Value Type Description MRect | Edit this page View Source Rotation Rotation of the SVG image Declaration public double Rotation { get; set; } Property Value Type Description double Implements IWidget IHasImage Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ButtonWidgets.ZoomInOutWidget.html": {
    "href": "pages/Mapsui.Widgets.ButtonWidgets.ZoomInOutWidget.html",
    "title": "Class ZoomInOutWidget",
    "keywords": "Class ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2; Inheritance object BaseWidget ZoomInOutWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ButtonWidgets Assembly: Mapsui.dll Syntax public class ZoomInOutWidget : BaseWidget, IWidget Properties | Edit this page View Source BackColor Color of background Declaration public Color BackColor { get; set; } Property Value Type Description Color | Edit this page View Source Opacity Opacity of background, frame and signs Declaration public double Opacity { get; set; } Property Value Type Description double | Edit this page View Source Orientation Orientation of buttons Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Edit this page View Source Size Width and height of buttons Declaration public double Size { get; set; } Property Value Type Description double | Edit this page View Source StrokeColor Color of button frames Declaration public Color StrokeColor { get; set; } Property Value Type Description Color | Edit this page View Source TextColor Color of \"+\" and \"-\" sign Declaration public Color TextColor { get; set; } Property Value Type Description Color Methods | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration public override void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnTapped(WidgetEventArgs) Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ButtonWidgets.html": {
    "href": "pages/Mapsui.Widgets.ButtonWidgets.html",
    "title": "Namespace Mapsui.Widgets.ButtonWidgets",
    "keywords": "Namespace Mapsui.Widgets.ButtonWidgets Classes ButtonWidget HyperlinkWidget Widget displaying a clickable hyperlink ImageButtonWidget Widget that shows a button with an icon ZoomInOutWidget Widget which shows two buttons (horizontal or vertical) with a \"+\" and a \"-\" sign. With this, the user could zoom the map in and out. Usage To show a ZoomInOutWidget, add a instance of the ZoomInOutWidget to Map.Widgets by map.Widgets.Add(new ZoomInOutWidget(map)); Customize Size: Height and Width of the buttons Orientation: Orientation of the buttons. Could be Horizontal or Vertical. Vertical is default. StrokeColor: Color of button frames TextColor: Color of \"+\" and \"-\" signs BackColor: Color of button background Opacity: Opacity of buttons ZoomFactor: Factor for changing Resolution. Default is 2;"
  },
  "pages/Mapsui.Widgets.HorizontalAlignment.html": {
    "href": "pages/Mapsui.Widgets.HorizontalAlignment.html",
    "title": "Enum HorizontalAlignment",
    "keywords": "Enum HorizontalAlignment Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum HorizontalAlignment Fields Name Description Absolute Center Left Right Stretch Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.IWidget.html": {
    "href": "pages/Mapsui.Widgets.IWidget.html",
    "title": "Interface IWidget",
    "keywords": "Interface IWidget Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public interface IWidget Properties | Edit this page View Source Enabled Is Widget visible on screen Declaration bool Enabled { get; set; } Property Value Type Description bool | Edit this page View Source Envelope The hit box of the widget. This needs to be updated from the widget renderer. Declaration MRect? Envelope { get; set; } Property Value Type Description MRect | Edit this page View Source Height Height of Widget Declaration double Height { get; set; } Property Value Type Description double | Edit this page View Source HorizontalAlignment Horizontal alignment of Widget Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment | Edit this page View Source InputAreaType Type of area used for manipulation (e.g. touch, mouse) input events. Declaration InputAreaType InputAreaType { get; } Property Value Type Description InputAreaType | Edit this page View Source InputTransparent Declaration bool InputTransparent { get; init; } Property Value Type Description bool | Edit this page View Source Margin Margin outside of the widget Declaration MRect Margin { get; set; } Property Value Type Description MRect | Edit this page View Source Position Position for absolute alignment Declaration MPoint Position { get; set; } Property Value Type Description MPoint | Edit this page View Source VerticalAlignment Vertical alignment of Widget Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment | Edit this page View Source Width Width of Widget Declaration double Width { get; set; } Property Value Type Description double Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs) Function, which handles the widget pointer moved event Declaration void OnPointerMoved(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnPointerPressed(WidgetEventArgs) Function, which handles the widget pointer pressed event Declaration void OnPointerPressed(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnPointerReleased(WidgetEventArgs) Function, which handles the widget pointer released event Declaration void OnPointerReleased(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Events | Edit this page View Source PointerMoved Event which is called if widget is moved. Declaration event EventHandler<WidgetEventArgs>? PointerMoved Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source PointerPressed Event which is called if widget is pressed. Declaration event EventHandler<WidgetEventArgs>? PointerPressed Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source PointerReleased Event which is called if widget is released. Declaration event EventHandler<WidgetEventArgs>? PointerReleased Event Type Type Description EventHandler<WidgetEventArgs> | Edit this page View Source Tapped Event which is called if widget is tapped. Declaration event EventHandler<WidgetEventArgs>? Tapped Event Type Type Description EventHandler<WidgetEventArgs> Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.IWidgetRenderer.html": {
    "href": "pages/Mapsui.Widgets.IWidgetRenderer.html",
    "title": "Interface IWidgetRenderer",
    "keywords": "Interface IWidgetRenderer Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public interface IWidgetRenderer Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.LoggingWidget.LogEntry.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.LoggingWidget.LogEntry.html",
    "title": "Struct LoggingWidget.LogEntry",
    "keywords": "Struct LoggingWidget.LogEntry Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public struct LoggingWidget.LogEntry Fields | Edit this page View Source FormattedLogLine Declaration public string FormattedLogLine Field Value Type Description string | Edit this page View Source LogLevel Declaration public LogLevel LogLevel Field Value Type Description LogLevel Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.LoggingWidget.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.LoggingWidget.html",
    "title": "Class LoggingWidget",
    "keywords": "Class LoggingWidget Widget which shows log entries Inheritance object BaseWidget BoxWidget TextBoxWidget LoggingWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class LoggingWidget : TextBoxWidget, IWidget Remarks With this, the user could see the log entries on the screen. without saving them to a file or somewhere else. Constructors | Edit this page View Source LoggingWidget(Action) Declaration public LoggingWidget(Action refreshGraphics) Parameters Type Name Description Action refreshGraphics Properties | Edit this page View Source ErrorTextColor Color for errors Declaration public Color ErrorTextColor { get; set; } Property Value Type Description Color | Edit this page View Source InformationTextColor Color for information text Declaration public Color InformationTextColor { get; set; } Property Value Type Description Color | Edit this page View Source ListOfLogEntries Declaration public ConcurrentQueue<LoggingWidget.LogEntry> ListOfLogEntries { get; } Property Value Type Description ConcurrentQueue<LoggingWidget.LogEntry> | Edit this page View Source LogLevelFilter Filter for LogLevel Only this or higher levels are printed Declaration public LogLevel LogLevelFilter { get; set; } Property Value Type Description LogLevel | Edit this page View Source MaxNumberOfLogEntriesToKeep Declaration public int MaxNumberOfLogEntriesToKeep { get; set; } Property Value Type Description int | Edit this page View Source ShowLoggingInMap Global setting to control logging in the map. Note, that there will never be logging in the map if the Enabled field of the logging widget is false. Declaration public static ActiveMode ShowLoggingInMap { get; set; } Property Value Type Description ActiveMode | Edit this page View Source WarningTextColor Color for warnings Declaration public Color WarningTextColor { get; set; } Property Value Type Description Color Methods | Edit this page View Source Clear() Declaration public void Clear() | Edit this page View Source Log(LogLevel, string, Exception?) Event handler for logging Declaration public void Log(LogLevel level, string description, Exception? exception) Parameters Type Name Description LogLevel level string description Exception exception Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.MapInfoWidget.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.MapInfoWidget.html",
    "title": "Class MapInfoWidget",
    "keywords": "Class MapInfoWidget Inheritance object BaseWidget BoxWidget TextBoxWidget MapInfoWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class MapInfoWidget : TextBoxWidget, IWidget Constructors | Edit this page View Source MapInfoWidget(Map, IEnumerable<ILayer>) Widget displaying information about the feature at the current mouse position Declaration public MapInfoWidget(Map map, IEnumerable<ILayer> layers) Parameters Type Name Description Map map The map that is queried. IEnumerable<ILayer> layers The list of layers to filter. | Edit this page View Source MapInfoWidget(Map, Func<ILayer, bool>) Widget displaying information about the feature at the current mouse position Declaration public MapInfoWidget(Map map, Func<ILayer, bool> layersFilter) Parameters Type Name Description Map map The map that is queried. Func<ILayer, bool> layersFilter The filter to select the layers to query. The advantage of a filter is that it can handle changes to the layer list later on. | Edit this page View Source MapInfoWidget(Map, Func<IEnumerable<ILayer>>) Widget displaying information about the feature at the current mouse position Declaration public MapInfoWidget(Map map, Func<IEnumerable<ILayer>> getMapInfoLayers) Parameters Type Name Description Map map The map that is queried. Func<IEnumerable<ILayer>> getMapInfoLayers The method to retrieve the layers to query. Properties | Edit this page View Source FeatureToText Declaration public Func<IFeature?, string> FeatureToText { get; set; } Property Value Type Description Func<IFeature, string> Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.MouseCoordinatesWidget.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.MouseCoordinatesWidget.html",
    "title": "Class MouseCoordinatesWidget",
    "keywords": "Class MouseCoordinatesWidget Widget that shows actual mouse coordinates in a TextBox Inheritance object BaseWidget BoxWidget TextBoxWidget MouseCoordinatesWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class MouseCoordinatesWidget : TextBoxWidget, IWidget Constructors | Edit this page View Source MouseCoordinatesWidget() Declaration public MouseCoordinatesWidget() Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs) Function, which handles the widget pointer moved event Declaration public override void OnPointerMoved(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerMoved(WidgetEventArgs) Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.PerformanceWidget.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.PerformanceWidget.html",
    "title": "Class PerformanceWidget",
    "keywords": "Class PerformanceWidget Widget which shows the drawing performance Inheritance object BaseWidget BoxWidget TextBoxWidget ButtonWidget PerformanceWidget Implements IWidget Inherited Members TextBoxWidget.Padding TextBoxWidget.Text TextBoxWidget.TextSize TextBoxWidget.TextColor BoxWidget.CornerRadius BoxWidget.BackColor BoxWidget.Opacity BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class PerformanceWidget : ButtonWidget, IWidget Remarks With this, the user could see the drawing performance on the screen. It shows always the values for the last draw before this draw. Constructors | Edit this page View Source PerformanceWidget(Performance) Widget which shows the drawing performance Declaration public PerformanceWidget(Performance performance) Parameters Type Name Description Performance performance Remarks With this, the user could see the drawing performance on the screen. It shows always the values for the last draw before this draw. Properties | Edit this page View Source Performance Performance object which holds the values Declaration public Performance Performance { get; } Property Value Type Description Performance Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.RulerWidget.RulerWidgetUpdatedEventArgs.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.RulerWidget.RulerWidgetUpdatedEventArgs.html",
    "title": "Class RulerWidget.RulerWidgetUpdatedEventArgs",
    "keywords": "Class RulerWidget.RulerWidgetUpdatedEventArgs Inheritance object EventArgs RulerWidget.RulerWidgetUpdatedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class RulerWidget.RulerWidgetUpdatedEventArgs : EventArgs Constructors | Edit this page View Source RulerWidgetUpdatedEventArgs(GestureType) Declaration public RulerWidgetUpdatedEventArgs(GestureType gestureType) Parameters Type Name Description GestureType gestureType Properties | Edit this page View Source GestureType Declaration public GestureType GestureType { get; } Property Value Type Description GestureType Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.RulerWidget.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.RulerWidget.html",
    "title": "Class RulerWidget",
    "keywords": "Class RulerWidget Inheritance object BaseWidget RulerWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.InfoWidgets Assembly: Mapsui.dll Syntax public class RulerWidget : BaseWidget, IWidget Constructors | Edit this page View Source RulerWidget() Declaration public RulerWidget() Properties | Edit this page View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Edit this page View Source ColorOfBeginAndEndDots Declaration public Color ColorOfBeginAndEndDots { get; set; } Property Value Type Description Color | Edit this page View Source CurrentPosition Declaration public MPoint? CurrentPosition { get; } Property Value Type Description MPoint | Edit this page View Source DistanceInKilometers Declaration public double? DistanceInKilometers { get; } Property Value Type Description double? | Edit this page View Source InfoBox Declaration public TextBoxWidget InfoBox { get; set; } Property Value Type Description TextBoxWidget | Edit this page View Source IsActive Declaration public bool IsActive { get; set; } Property Value Type Description bool | Edit this page View Source ShowInfoNextToRuler Gets or sets a value indicating whether the info should be shown next to the ruler. When set to false you can use the RulerWidget.InfoBox fields to position it like any other widget. Declaration public bool ShowInfoNextToRuler { get; set; } Property Value Type Description bool | Edit this page View Source StartPosition Declaration public MPoint? StartPosition { get; } Property Value Type Description MPoint Methods | Edit this page View Source OnPointerMoved(WidgetEventArgs) Function, which handles the widget pointer moved event Declaration public override void OnPointerMoved(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerMoved(WidgetEventArgs) | Edit this page View Source OnPointerPressed(WidgetEventArgs) Function, which handles the widget pointer pressed event Declaration public override void OnPointerPressed(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerPressed(WidgetEventArgs) | Edit this page View Source OnPointerReleased(WidgetEventArgs) Function, which handles the widget pointer released event Declaration public override void OnPointerReleased(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnPointerReleased(WidgetEventArgs) | Edit this page View Source OnTapped(WidgetEventArgs) Function, which handles the widget tapped event Declaration public override void OnTapped(WidgetEventArgs e) Parameters Type Name Description WidgetEventArgs e Arguments for this widget touch Overrides BaseWidget.OnTapped(WidgetEventArgs) | Edit this page View Source Reset() Declaration public void Reset() | Edit this page View Source SnapToFeature(Func<MPoint?, IFeature?>) Declaration public (IFeature? startFeature, IFeature? currentFeature) SnapToFeature(Func<MPoint?, IFeature?> getFeaturesToSnapTo) Parameters Type Name Description Func<MPoint, IFeature> getFeaturesToSnapTo Returns Type Description (IFeature startFeature, IFeature currentFeature) Events | Edit this page View Source DistanceUpdated Declaration public event EventHandler<RulerWidget.RulerWidgetUpdatedEventArgs>? DistanceUpdated Event Type Type Description EventHandler<RulerWidget.RulerWidgetUpdatedEventArgs> Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.InfoWidgets.html": {
    "href": "pages/Mapsui.Widgets.InfoWidgets.html",
    "title": "Namespace Mapsui.Widgets.InfoWidgets",
    "keywords": "Namespace Mapsui.Widgets.InfoWidgets Classes LoggingWidget Widget which shows log entries MapInfoWidget MouseCoordinatesWidget Widget that shows actual mouse coordinates in a TextBox PerformanceWidget Widget which shows the drawing performance RulerWidget RulerWidget.RulerWidgetUpdatedEventArgs Structs LoggingWidget.LogEntry"
  },
  "pages/Mapsui.Widgets.InputAreaType.html": {
    "href": "pages/Mapsui.Widgets.InputAreaType.html",
    "title": "Enum InputAreaType",
    "keywords": "Enum InputAreaType Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum InputAreaType Fields Name Description Map Events Will be called for interactions over the entire map. Widget Events will be called for interactions within the widget area. Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.InputOnlyWidget.html": {
    "href": "pages/Mapsui.Widgets.InputOnlyWidget.html",
    "title": "Class InputOnlyWidget",
    "keywords": "Class InputOnlyWidget Inherit from this class to create a widget that only handles input and does not draw anything. Inheritance object BaseWidget InputOnlyWidget EditingWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public abstract class InputOnlyWidget : BaseWidget, IWidget Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.Orientation.html": {
    "href": "pages/Mapsui.Widgets.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum Orientation Fields Name Description Horizontal Vertical Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.ScaleBar.IUnitConverter.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.IUnitConverter.html",
    "title": "Interface IUnitConverter",
    "keywords": "Interface IUnitConverter Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public interface IUnitConverter Properties | Edit this page View Source MeterRatio Declaration double MeterRatio { get; } Property Value Type Description double | Edit this page View Source ScaleBarValues Declaration IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable<int> Methods | Edit this page View Source GetScaleText(int) Declaration string GetScaleText(int mapScaleValue) Parameters Type Name Description int mapScaleValue Returns Type Description string Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.ImperialUnitConverter.html",
    "title": "Class ImperialUnitConverter",
    "keywords": "Class ImperialUnitConverter Inheritance object ImperialUnitConverter Implements IUnitConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public class ImperialUnitConverter : IUnitConverter Fields | Edit this page View Source Instance Declaration public static readonly ImperialUnitConverter Instance Field Value Type Description ImperialUnitConverter Properties | Edit this page View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description double | Edit this page View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable<int> Methods | Edit this page View Source GetScaleText(int) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description int mapScaleValue Returns Type Description string Implements IUnitConverter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.MetricUnitConverter.html",
    "title": "Class MetricUnitConverter",
    "keywords": "Class MetricUnitConverter Inheritance object MetricUnitConverter Implements IUnitConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public class MetricUnitConverter : IUnitConverter Fields | Edit this page View Source Instance Declaration public static readonly MetricUnitConverter Instance Field Value Type Description MetricUnitConverter Properties | Edit this page View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description double | Edit this page View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable<int> Methods | Edit this page View Source GetScaleText(int) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description int mapScaleValue Returns Type Description string Implements IUnitConverter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.NauticalUnitConverter.html",
    "title": "Class NauticalUnitConverter",
    "keywords": "Class NauticalUnitConverter Inheritance object NauticalUnitConverter Implements IUnitConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public class NauticalUnitConverter : IUnitConverter Fields | Edit this page View Source Instance Declaration public static readonly NauticalUnitConverter Instance Field Value Type Description NauticalUnitConverter Properties | Edit this page View Source MeterRatio Declaration public double MeterRatio { get; } Property Value Type Description double | Edit this page View Source ScaleBarValues Declaration public IEnumerable<int> ScaleBarValues { get; } Property Value Type Description IEnumerable<int> Methods | Edit this page View Source GetScaleText(int) Declaration public string GetScaleText(int mapScaleValue) Parameters Type Name Description int mapScaleValue Returns Type Description string Implements IUnitConverter Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ScaleBar.ScaleBarMode.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.ScaleBarMode.html",
    "title": "Enum ScaleBarMode",
    "keywords": "Enum ScaleBarMode Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public enum ScaleBarMode Fields Name Description Both Single Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.ScaleBarWidget.html",
    "title": "Class ScaleBarWidget",
    "keywords": "Class ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Inheritance object BaseWidget ScaleBarWidget Implements IWidget Inherited Members BaseWidget.InputAreaType BaseWidget.HorizontalAlignment BaseWidget.VerticalAlignment BaseWidget.Margin BaseWidget.Position BaseWidget.Width BaseWidget.Height BaseWidget.Envelope BaseWidget.Enabled BaseWidget.InputTransparent BaseWidget.WithTappedEvent BaseWidget.WithPointerPressedEvent BaseWidget.WithPointerMovedEvent BaseWidget.WithPointerReleased BaseWidget.Tapped BaseWidget.PointerPressed BaseWidget.PointerMoved BaseWidget.PointerReleased BaseWidget.UpdateEnvelope(double, double, double, double) BaseWidget.OnTapped(WidgetEventArgs) BaseWidget.OnPointerPressed(WidgetEventArgs) BaseWidget.OnPointerMoved(WidgetEventArgs) BaseWidget.OnPointerReleased(WidgetEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets.ScaleBar Assembly: Mapsui.dll Syntax public class ScaleBarWidget : BaseWidget, IWidget Constructors | Edit this page View Source ScaleBarWidget(Map, IProjection?) Declaration public ScaleBarWidget(Map map, IProjection? projection = null) Parameters Type Name Description Map map IProjection projection Properties | Edit this page View Source Font Font to use for drawing text Declaration public Font? Font { get; set; } Property Value Type Description Font | Edit this page View Source Halo Halo color of scalebar and text, so that it is better visible Declaration public Color Halo { get; set; } Property Value Type Description Color | Edit this page View Source MaxWidth Maximum usable width for scalebar. The real used width could be less, because we want only integers as text. Declaration public double MaxWidth { get; set; } Property Value Type Description double | Edit this page View Source Scale Declaration public double Scale { get; } Property Value Type Description double | Edit this page View Source ScaleBarMode ScaleBarMode of scalebar. Could be Single to show only one or Both for showing two units. Declaration public ScaleBarMode ScaleBarMode { get; set; } Property Value Type Description ScaleBarMode | Edit this page View Source SecondaryUnitConverter Secondary unit converter for lower text if ScaleBarMode is Both. Default is ImperialUnitConverter. Declaration public IUnitConverter? SecondaryUnitConverter { get; set; } Property Value Type Description IUnitConverter | Edit this page View Source ShowEnvelop Draw a rectangle around the scale bar for testing Declaration public bool ShowEnvelop { get; set; } Property Value Type Description bool | Edit this page View Source StrokeWidth Stroke width for lines Declaration public double StrokeWidth { get; set; } Property Value Type Description double | Edit this page View Source StrokeWidthHalo Stroke width for halo of lines Declaration public double StrokeWidthHalo { get; set; } Property Value Type Description double | Edit this page View Source TextAlignment Alignment of text of scalebar Declaration public Alignment TextAlignment { get; set; } Property Value Type Description Alignment | Edit this page View Source TextColor Foreground color of scalebar and text Declaration public Color TextColor { get; set; } Property Value Type Description Color | Edit this page View Source TextMargin Margin between end of tick and text Declaration public static double TextMargin { get; } Property Value Type Description double | Edit this page View Source TickLength Length of the ticks Declaration public double TickLength { get; set; } Property Value Type Description double | Edit this page View Source UnitConverter Normal unit converter for upper text. Default is MetricUnitConverter. Declaration public IUnitConverter UnitConverter { get; set; } Property Value Type Description IUnitConverter Methods | Edit this page View Source CanProject() Declaration public bool CanProject() Returns Type Description bool | Edit this page View Source GetScaleBarLengthAndText(Viewport) Calculates the length and text for both scalebars Declaration public (double scaleBarLength1, string? scaleBarText1, double scaleBarLength2, string? scaleBarText2) GetScaleBarLengthAndText(Viewport viewport) Parameters Type Name Description Viewport viewport Returns Type Description (double scaleBarLength1, string scaleBarText1, double scaleBarLength2, string scaleBarText2) Length of upper scalebar Text of upper scalebar Length of lower scalebar Text of lower scalebar | Edit this page View Source GetScaleBarLinePositions(Viewport, double, double, double) Get pairs of points, which determine start and stop of the lines used to draw the scalebar Declaration public IReadOnlyList<MPoint> GetScaleBarLinePositions(Viewport viewport, double scaleBarLength1, double scaleBarLength2, double stroke) Parameters Type Name Description Viewport viewport The viewport of the map double scaleBarLength1 Length of upper scalebar double scaleBarLength2 Length of lower scalebar double stroke Width of line Returns Type Description IReadOnlyList<MPoint> Array with pairs of Points. First is always the start point, the second is the end point. | Edit this page View Source GetScaleBarTextPositions(Viewport, MRect, MRect, double) Calculates the top-left-position of upper and lower text Declaration public (double posX1, double posY1, double posX2, double posY2) GetScaleBarTextPositions(Viewport viewport, MRect textSize1, MRect textSize2, double stroke) Parameters Type Name Description Viewport viewport The viewport MRect textSize1 Size of upper text of scalebar MRect textSize2 Size of lower text of scalebar double stroke Width of line Returns Type Description (double posX1, double posY1, double posX2, double posY2) posX1 as left position of upper scalebar text posY1 as top position of upper scalebar text posX2 as left position of lower scalebar text posY2 as top position of lower scalebar text Implements IWidget Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.ScaleBar.html": {
    "href": "pages/Mapsui.Widgets.ScaleBar.html",
    "title": "Namespace Mapsui.Widgets.ScaleBar",
    "keywords": "Namespace Mapsui.Widgets.ScaleBar Classes ImperialUnitConverter MetricUnitConverter NauticalUnitConverter ScaleBarWidget A ScaleBarWidget displays the ratio of a distance on the map to the corresponding distance on the ground. It uses always the center of a given Viewport to calc this ratio. Usage To show a ScaleBarWidget, add a instance of the ScaleBarWidget to Map.Widgets by map.Widgets.Add(new ScaleBarWidget(map)); Customize ScaleBarMode: Determines, how much scalebars are shown. Could be Single or Both. SecondaryUnitConverter: First UnitConverter for upper scalebar. There are UnitConverters for metric, imperial and nautical units. SecondaryUnitConverter = NauticalUnitConverter.Instance }); MaxWidth: Maximal width of the scalebar. Real width could be smaller. HorizontalAlignment: Where the ScaleBarWidget is shown. Could be Left, Right, Center or Position. VerticalAlignment: Where the ScaleBarWidget is shown. Could be Top, Bottom, Center or Position. PositionX: If HorizontalAlignment is Position, this value determines the distance to the left PositionY: If VerticalAlignment is Position, this value determines the distance to the top TextColor: Color for text and lines Halo: Color used around text and lines, so the scalebar is better visible TextAlignment: Alignment of scalebar text to the lines. Could be Left, Right or Center TextMargin: Space between text and lines of scalebar Font: Font which is used to draw text TickLength: Length of the ticks at scalebar Interfaces IUnitConverter Enums ScaleBarMode"
  },
  "pages/Mapsui.Widgets.VerticalAlignment.html": {
    "href": "pages/Mapsui.Widgets.VerticalAlignment.html",
    "title": "Enum VerticalAlignment",
    "keywords": "Enum VerticalAlignment Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public enum VerticalAlignment Fields Name Description Absolute Bottom Center Stretch Top Extension Methods DisposableExtension.DisposeIfDisposable(object)"
  },
  "pages/Mapsui.Widgets.WidgetEventArgs.html": {
    "href": "pages/Mapsui.Widgets.WidgetEventArgs.html",
    "title": "Class WidgetEventArgs",
    "keywords": "Class WidgetEventArgs Arguments for a touched event of a widget Inheritance object EventArgs HandledEventArgs BaseEventArgs WidgetEventArgs Inherited Members BaseEventArgs.ScreenPosition BaseEventArgs.WorldPosition BaseEventArgs.GestureType BaseEventArgs.Map BaseEventArgs.GetMapInfo BaseEventArgs.GetRemoteMapInfoAsync HandledEventArgs.Handled EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public class WidgetEventArgs : BaseEventArgs Constructors | Edit this page View Source WidgetEventArgs(ScreenPosition, MPoint, GestureType, Map, bool, GetMapInfoDelegate, GetRemoteMapInfoAsyncDelegate) Arguments for a touched event of a widget Declaration public WidgetEventArgs(ScreenPosition screenPosition, MPoint worldPosition, GestureType gestureType, Map map, bool shiftPressed, GetMapInfoDelegate getMapInfo, GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync) Parameters Type Name Description ScreenPosition screenPosition MPoint worldPosition GestureType gestureType Map map bool shiftPressed GetMapInfoDelegate getMapInfo GetRemoteMapInfoAsyncDelegate getRemoteMapInfoAsync Properties | Edit this page View Source ShiftPressed Shift key pressed while touching Declaration public bool ShiftPressed { get; } Property Value Type Description bool Extension Methods DisposableExtension.DisposeIfDisposable(object?)"
  },
  "pages/Mapsui.Widgets.WidgetInput.html": {
    "href": "pages/Mapsui.Widgets.WidgetInput.html",
    "title": "Class WidgetInput",
    "keywords": "Class WidgetInput Inheritance object WidgetInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mapsui.Widgets Assembly: Mapsui.dll Syntax public static class WidgetInput Methods | Edit this page View Source GetWidgetsAtPosition(ScreenPosition, Map) Gets the widgets selected by a touched positions Declaration public static IEnumerable<IWidget> GetWidgetsAtPosition(ScreenPosition position, Map map) Parameters Type Name Description ScreenPosition position The screen position in device independent units (or DIP or DP) Map map The map to get the widgets from. Returns Type Description IEnumerable<IWidget> Returns the Widgets in the list that contain the screenPosition within it's Envelope. Returns null if there are none."
  },
  "pages/Mapsui.Widgets.html": {
    "href": "pages/Mapsui.Widgets.html",
    "title": "Namespace Mapsui.Widgets",
    "keywords": "Namespace Mapsui.Widgets Classes BaseWidget InputOnlyWidget Inherit from this class to create a widget that only handles input and does not draw anything. WidgetEventArgs Arguments for a touched event of a widget WidgetInput Interfaces IWidget IWidgetRenderer Enums ActiveMode Alignment HorizontalAlignment InputAreaType Orientation VerticalAlignment"
  },
  "pages/Mapsui.html": {
    "href": "pages/Mapsui.html",
    "title": "Namespace Mapsui",
    "keywords": "Namespace Mapsui Classes BaseEventArgs FeatureInfoEventArgs MMinMax MPoint Class for a point in Mapsui MQuad Double precision polygon with 4 explicit vertices. This is useful to represent a MRect that has been rotated. MRaster MRect MSection MSection represents a part of the map defined by the extent and the resolution to indicate the level of detail. It's main purpose is to define which data should be fetched. Map Map class MapBuilder MapEventArgs MapInfo MapInfoEventArgs Navigator RemoteMapInfoFetcher RotationSnapper ViewportChangedEventArgs Structs Viewport Interfaces IFeature Interface for a feature which could be displayed on the map. Enums ChangeType MBoxFit Delegates CoordinateSetter GetMapInfoDelegate GetRemoteMapInfoAsyncDelegate MapBuilder.AddLayer MapBuilder.AddWidget MapBuilder.ConfigureLayer MapBuilder.ConfigureMap MapBuilder.ConfigureWidget MapBuilder.TapFeature Navigator.ViewportChangedEventHandler"
  }
}